<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Yii2 自定义省市区三级联动挂件</title>
      <link href="2021/11/26/Yii2-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E6%8C%82%E4%BB%B6/"/>
      <url>2021/11/26/Yii2-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E6%8C%82%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>废话不多说直接上车</p><ol><li>创建地区表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`region`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`region`</span>  (</span><br><span class="line">  <span class="string">`region_id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'地区ID号'</span>,</span><br><span class="line">  <span class="string">`parent_id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="keyword">COMMENT</span> <span class="string">'地区父级ID'</span>,</span><br><span class="line">  <span class="string">`region_name`</span> <span class="built_in">varchar</span>(<span class="number">120</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'地区名称'</span>,</span><br><span class="line">  <span class="string">`region_type`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">2</span> <span class="keyword">COMMENT</span> <span class="string">'地区级别'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`region_id`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`parent_id`</span>(<span class="string">`parent_id`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`region_name`</span>(<span class="string">`region_name`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`region_type`</span>(<span class="string">`region_type`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`agency_id`</span>(<span class="string">`agency_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> AUTO_INCREMENT = <span class="number">659009509</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8mb4 <span class="keyword">COLLATE</span> = utf8mb4_unicode_ci <span class="keyword">COMMENT</span> = <span class="string">'地区'</span> ROW_FORMAT = Dynamic;</span><br></pre></td></tr></table></figure><ol start="2"><li>创建 Region Model 文件</li></ol><p><code>/common/models/Region.php</code></p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">ArrayHelper</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Region</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;&#123;%region&#125;&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [[<span class="string">'region_name'</span>], <span class="string">'required'</span>],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'region_id'</span> =&gt; <span class="string">'地区ID'</span>,</span><br><span class="line">            <span class="string">'parent_id'</span> =&gt; <span class="string">'地区父级ID'</span>,</span><br><span class="line">            <span class="string">'region_name'</span> =&gt; <span class="string">'地区名称'</span>,</span><br><span class="line">            <span class="string">'region_type'</span> =&gt; <span class="string">'地区级别'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $parent_id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getRegion</span><span class="params">($parent_id=<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $regions = <span class="keyword">static</span>::find()-&gt;where([<span class="string">'parent_id'</span>=&gt;$parent_id])-&gt;asArray()-&gt;all();</span><br><span class="line">        <span class="keyword">return</span> ArrayHelper::map($regions, <span class="string">'region_id'</span>, <span class="string">'region_name'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>创建ajax异步获取地区数据链接方法</li></ol><p><code>/backend/controllers/common/AjaxController.php</code>，这个自行定义，只要可以调用就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">backend</span>\<span class="title">controllers</span>\<span class="title">common</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">backend</span>\<span class="title">controllers</span>\<span class="title">BaseController</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Region</span> <span class="title">as</span> <span class="title">RegionModel</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">Html</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Response</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ajax联动接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AjaxController</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//免认证方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">allowAction</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 地区联动查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionGetRegion</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $parent_id = Yii::$app-&gt;request-&gt;get(<span class="string">'parent_id'</span>, <span class="number">0</span>);</span><br><span class="line">        $regions = RegionModel::getRegion($parent_id);</span><br><span class="line"></span><br><span class="line">        $result = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">foreach</span>($regions <span class="keyword">as</span> $key =&gt; $val)&#123;</span><br><span class="line">            $result .= Html::tag(<span class="string">'option'</span>, $val, [<span class="string">'value'</span> =&gt; $key]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>创建地区三级联动挂件</li></ol><p><code>/common/widgets/Region.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">widgets</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">InvalidParamException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Widget</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">ArrayHelper</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">Html</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Region</span> <span class="keyword">extends</span> <span class="title">Widget</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $model = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 此属性不用处理</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $attribute;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 外层属性配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $options = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 省份配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $province = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 城市配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $city = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 县/区配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $district = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> mixed 数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $url;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;model) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InvalidParamException(<span class="string">'model不能为null!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;province) || <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;city)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InvalidParamException(<span class="string">'province和city不能为空！'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $cityId = Html::getInputId(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;city[<span class="string">'attribute'</span>]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>][<span class="string">'prompt'</span>])) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>][<span class="string">'prompt'</span>] = <span class="string">'选择城市'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $cityDefault = Html::renderSelectOptions(<span class="string">'city'</span>, [<span class="string">''</span> =&gt; <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>][<span class="string">'prompt'</span>]]);</span><br><span class="line"></span><br><span class="line">        $joinChar = strripos(<span class="keyword">$this</span>-&gt;url, <span class="string">'?'</span>) ? <span class="string">'&amp;'</span> : <span class="string">'?'</span>;</span><br><span class="line">        $url = <span class="keyword">$this</span>-&gt;url . $joinChar;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;district)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>][<span class="string">'prompt'</span>])) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>][<span class="string">'prompt'</span>] = <span class="string">'选择县/区'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $districtId = Html::getInputId(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;district[<span class="string">'attribute'</span>]);</span><br><span class="line">            $districtDefault = Html::renderSelectOptions(<span class="string">'district'</span>, [<span class="string">''</span> =&gt; <span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>][<span class="string">'prompt'</span>]]);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>] = ArrayHelper::merge(<span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>], [</span><br><span class="line">                <span class="string">'onchange'</span> =&gt; <span class="string">"</span></span><br><span class="line"><span class="string">                    if($(this).val() != '')&#123;</span></span><br><span class="line"><span class="string">                        $.get('&#123;$url&#125;parent_id='+$(this).val(), function(data) &#123;</span></span><br><span class="line"><span class="string">                            $('#&#123;$districtId&#125;').html('&#123;$districtDefault&#125;'+data);</span></span><br><span class="line"><span class="string">                        &#125;)</span></span><br><span class="line"><span class="string">                    &#125;else&#123;</span></span><br><span class="line"><span class="string">                        $('#&#123;$districtId&#125;').html('&#123;$districtDefault&#125;');</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                "</span></span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $provinceOnchangeHtml = <span class="string">"</span></span><br><span class="line"><span class="string">                if($(this).val()!='')&#123;</span></span><br><span class="line"><span class="string">                    $.get('&#123;$url&#125;parent_id='+$(this).val(), function(data) &#123;</span></span><br><span class="line"><span class="string">                        $('#&#123;$cityId&#125;').html('&#123;$cityDefault&#125;'+data);</span></span><br><span class="line"><span class="string">                    &#125;)</span></span><br><span class="line"><span class="string">                &#125;else&#123;</span></span><br><span class="line"><span class="string">                    $('#&#123;$cityId&#125;').html('&#123;$cityDefault&#125;');</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            "</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($districtId)) &#123;</span><br><span class="line">            $provinceOnchangeHtml .= <span class="string">"$('#&#123;$districtId&#125;').html('&#123;$districtDefault&#125;');"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;province[<span class="string">'options'</span>] = ArrayHelper::merge(<span class="keyword">$this</span>-&gt;province[<span class="string">'options'</span>], [</span><br><span class="line">            <span class="string">'onchange'</span> =&gt; $provinceOnchangeHtml</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $output[] = Html::activeDropDownList(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;province[<span class="string">'attribute'</span>], <span class="keyword">$this</span>-&gt;province[<span class="string">'items'</span>],</span><br><span class="line">            <span class="keyword">$this</span>-&gt;province[<span class="string">'options'</span>]);</span><br><span class="line">        $output[] = Html::activeDropDownList(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;city[<span class="string">'attribute'</span>], <span class="keyword">$this</span>-&gt;city[<span class="string">'items'</span>],</span><br><span class="line">            <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;district)) &#123;</span><br><span class="line">            $output[] = Html::activeDropDownList(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;district[<span class="string">'attribute'</span>], <span class="keyword">$this</span>-&gt;district[<span class="string">'items'</span>],</span><br><span class="line">                <span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Html::tag(<span class="string">'div'</span>, @implode(<span class="string">"\n"</span>, $output), <span class="keyword">$this</span>-&gt;options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>视图文件添加地区挂件</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Region</span> <span class="title">as</span> <span class="title">RegionModel</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">widgets</span>\<span class="title">Region</span> <span class="title">as</span> <span class="title">RegionWidget</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?</span>=$form-&gt;field($model, <span class="string">'city'</span>)-&gt;widget(RegionWidget::className(), [</span><br><span class="line">        <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'c-md-4'</span>],</span><br><span class="line">        <span class="string">'model'</span> =&gt; $model,</span><br><span class="line">        <span class="string">'url'</span> =&gt; Url::toRoute([<span class="string">'/common/ajax/get-region'</span>]),</span><br><span class="line">        <span class="string">'province'</span> =&gt; [</span><br><span class="line">            <span class="string">'attribute'</span> =&gt; <span class="string">'province'</span>,</span><br><span class="line">            <span class="string">'items'</span> =&gt; RegionModel::getRegion(),</span><br><span class="line">            <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'form-control c-md-3 inline'</span>, <span class="string">'prompt'</span>=&gt;<span class="string">'选择省份'</span>]</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">'city'</span> =&gt; [</span><br><span class="line">            <span class="string">'attribute'</span> =&gt; <span class="string">'city'</span>,</span><br><span class="line">            <span class="string">'items'</span> =&gt; RegionModel::getRegion($model[<span class="string">'province'</span>]),</span><br><span class="line">            <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'form-control c-md-3 inline'</span>, <span class="string">'prompt'</span>=&gt;<span class="string">'选择城市'</span>]</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">'district'</span> =&gt; [</span><br><span class="line">            <span class="string">'attribute'</span> =&gt; <span class="string">'district'</span>,</span><br><span class="line">            <span class="string">'items'</span> =&gt; RegionModel::getRegion($model[<span class="string">'city'</span>]),</span><br><span class="line">            <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'form-control c-md-3 inline'</span>, <span class="string">'prompt'</span>=&gt;<span class="string">'选择县/区'</span>]</span><br><span class="line">        ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Tip： </p><ol><li><code>Url::toRoute([&#39;/common/ajax/get-region&#39;])</code>生成的链接，调用是第3步的方法</li><li><code>&#39;attribute&#39; =&gt; &#39;province&#39;</code> 在<code>$model</code>模型添加 <code>province</code>字段</li><li><code>&#39;attribute&#39; =&gt; &#39;city&#39;</code> 在<code>$model</code>模型添加 <code>city</code>字段</li><li><code>&#39;attribute&#39; =&gt; &#39;district&#39;</code> 在<code>$model</code>模型添加 <code>district</code>字段</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Yii </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Yii技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yii2 ActiveRecord多表关联和多表关联搜索的实现</title>
      <link href="2021/11/23/Yii2-ActiveRecord%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E5%92%8C%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E6%90%9C%E7%B4%A2%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
      <url>2021/11/23/Yii2-ActiveRecord%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E5%92%8C%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E6%90%9C%E7%B4%A2%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>需求：假设我们有一张商品表goods和一张商品分类表categories，通过商品分类简称搜索商品列表</p><p>goods表AR</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Goods</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;&#123;%goods&#125;&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'id'</span> =&gt; <span class="string">'商品ID'</span>,</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="string">'商品标题'</span>,</span><br><span class="line">            <span class="string">'cid'</span> =&gt; <span class="string">'商品分类ID'</span>,</span><br><span class="line">            <span class="string">'created_at'</span> =&gt; <span class="string">'添加时间'</span>,</span><br><span class="line">            <span class="string">'updated_at'</span> =&gt; <span class="string">'修改时间'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 与商品分类表关联</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCategory</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(Category::className(), [<span class="string">'id'</span>=&gt;<span class="string">'cid'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>categories表AR</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Category</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;&#123;%categories&#125;&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'id'</span> =&gt; <span class="string">'商品分类ID'</span>,</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="string">'商品分类标题'</span>,</span><br><span class="line">            <span class="string">'short_title'</span> =&gt; <span class="string">'商品分类简称'</span>,</span><br><span class="line">            <span class="string">'created_at'</span> =&gt; <span class="string">'添加时间'</span>,</span><br><span class="line">            <span class="string">'updated_at'</span> =&gt; <span class="string">'修改时间'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>商品搜索模型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">search</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">data</span>\<span class="title">ActiveDataProvider</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Goods</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsSearch</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $title;<span class="comment">// 商品标题</span></span><br><span class="line">    <span class="keyword">public</span> $short_title;<span class="comment">// 商品分类简称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//检索规则</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [[<span class="string">'title'</span>, <span class="string">'short_title'</span>], <span class="string">'string'</span>],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//搜索函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span><span class="params">($params)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $query = Goods::find()-&gt;joinWith([<span class="string">'category'</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;load($params) &amp;&amp; <span class="keyword">$this</span>-&gt;validate()) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;title)) $query-&gt;andFilterWhere([<span class="string">'goods.title'</span> =&gt; <span class="keyword">$this</span>-&gt;title]);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;short_title)) $query-&gt;andFilterWhere([<span class="string">'category.short_title'</span> =&gt; <span class="keyword">$this</span>-&gt;status]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $dataProvider = <span class="keyword">new</span> ActiveDataProvider([</span><br><span class="line">            <span class="string">'query'</span> =&gt; $query,</span><br><span class="line">            <span class="string">'sort'</span> =&gt; [</span><br><span class="line">                <span class="string">'defaultOrder'</span> =&gt; [</span><br><span class="line">                    <span class="string">'id'</span> =&gt; SORT_DESC,</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">'pagination'</span> =&gt; [</span><br><span class="line">                <span class="string">'pageSize'</span> =&gt; <span class="number">15</span>,</span><br><span class="line">            ],</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $dataProvider;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Yii </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Yii技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yii2 GridView 表格用法</title>
      <link href="2021/11/16/Yii2-GridView-%E8%A1%A8%E6%A0%BC%E7%94%A8%E6%B3%95/"/>
      <url>2021/11/16/Yii2-GridView-%E8%A1%A8%E6%A0%BC%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Yii2框架下展示列表数据通常用<code>Gridview</code>来实现，这里整理常用的小技巧，方便以后查询使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="string">'dataProvider'</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">'layout'</span> =&gt; <span class="string">"&#123;items&#125;\n&#123;summary&#125;\n&#123;pager&#125;"</span>,</span><br><span class="line">    <span class="string">'tableOptions'</span> =&gt; [<span class="string">'class'</span> =&gt; <span class="string">'table table-striped table-bordered table-hover'</span>],</span><br><span class="line">    <span class="string">'columns'</span> =&gt; [</span><br><span class="line">        </span><br><span class="line">    ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格整体配置"><a href="#表格整体配置" class="headerlink" title="表格整体配置"></a>表格整体配置</h2><h3 id="自定义行样式"><a href="#自定义行样式" class="headerlink" title="自定义行样式"></a>自定义行样式</h3><p>单数行为绿色背景，偶数行为红色背景</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="string">"dataProvider"</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">"rowOptions"</span> =&gt; <span class="function"><span class="keyword">function</span><span class="params">($model, $key, $index, $grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">"class"</span> =&gt; $index % <span class="number">2</span> == <span class="number">0</span> ? <span class="string">"red"</span> : <span class="string">"green"</span>];</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>red</code>和<code>green</code>需要有对应的样式实现</p><a id="more"></a><h3 id="禁止表头排序"><a href="#禁止表头排序" class="headerlink" title="禁止表头排序"></a>禁止表头排序</h3><p>需要<code>ActiveDataProvider</code>的设置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$dataProvider = <span class="keyword">new</span> ActiveDataProvider([ <span class="string">"query"</span> =&gt; $query, ]); </span><br><span class="line">$dataProvider-&gt;setSort(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure><h3 id="表格加表头"><a href="#表格加表头" class="headerlink" title="表格加表头"></a>表格加表头</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="string">"dataProvider"</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">'caption'</span> =&gt; <span class="string">'订单管理'</span>,</span><br><span class="line">    <span class="string">'captionOptions'</span> =&gt; [<span class="string">'style'</span> =&gt; <span class="string">'font-size: 18px; font-weight: bold; color: #000; text-align: center;'</span>],</span><br><span class="line">    </span><br><span class="line">    <span class="string">"rowOptions"</span> =&gt; <span class="function"><span class="keyword">function</span><span class="params">($model, $key, $index, $grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">"class"</span> =&gt; $index % <span class="number">2</span> == <span class="number">0</span> ? <span class="string">"red"</span> : <span class="string">"green"</span>];</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格列的配置"><a href="#表格列的配置" class="headerlink" title="表格列的配置"></a>表格列的配置</h2><p>列的展示放在 <code>columns</code> 数组中</p><h3 id="设定宽度"><a href="#设定宽度" class="headerlink" title="设定宽度"></a>设定宽度</h3><p>设置<code>title</code>列的宽度为100，通过配置项<code>headerOptions</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"title"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="string">"title"</span>,</span><br><span class="line">    <span class="string">"headerOptions"</span> =&gt; [<span class="string">"width"</span> =&gt; <span class="string">"100"</span>],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="html渲染"><a href="#html渲染" class="headerlink" title="html渲染"></a>html渲染</h3><p>输出的字符串还有html标签，例如<code>&lt;p&gt;Hello World&lt;/p</code>，我们想以<code>p</code>标签的形式展示<code>Hello World</code>，需要指定<code>format</code>为<code>raw</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"title"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">return</span> Html::encode($model-&gt;title); </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"format"</span> =&gt; <span class="string">"raw"</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="标题内容样式"><a href="#标题内容样式" class="headerlink" title="标题内容样式"></a>标题内容样式</h3><p>内容居中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">'attribute'</span> =&gt; <span class="string">'replay_url'</span>,</span><br><span class="line">    <span class="string">'headerOptions'</span> =&gt; [<span class="string">'style'</span> =&gt; <span class="string">'text-align:center;'</span>, <span class="string">'width'</span> =&gt; <span class="string">'200'</span>],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="字段内容样式"><a href="#字段内容样式" class="headerlink" title="字段内容样式"></a>字段内容样式</h3><p>内容换行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">'attribute'</span> =&gt; <span class="string">'replay_url'</span>,</span><br><span class="line">    <span class="string">'contentOptions'</span> =&gt; [<span class="string">'style'</span> =&gt; <span class="string">'white-space: normal;'</span>, <span class="string">'width'</span> =&gt; <span class="string">'200'</span>],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="字段不允许点击排序"><a href="#字段不允许点击排序" class="headerlink" title="字段不允许点击排序"></a>字段不允许点击排序</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">'attribute'</span> =&gt; <span class="string">'id'</span>,</span><br><span class="line">    <span class="string">'enableSorting'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="是否显示指定列"><a href="#是否显示指定列" class="headerlink" title="是否显示指定列"></a>是否显示指定列</h3><p>当<code>type</code>的值等于<code>1</code>的时候，<code>name</code>列才显示，否则该列不显示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"name"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; $model-&gt;name,</span><br><span class="line">    <span class="string">"visible"</span> =&gt; intval(Yii::$app-&gt;request-&gt;get(<span class="string">"type"</span>)) == <span class="number">1</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="链接可点击跳转"><a href="#链接可点击跳转" class="headerlink" title="链接可点击跳转"></a>链接可点击跳转</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"order_id"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Html::a($model-&gt;order_id, <span class="string">"/order/detail?id=&#123;$model-&gt;order_id&#125;"</span>, [<span class="string">"target"</span> =&gt; <span class="string">"_blank"</span>]);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"format"</span> =&gt; <span class="string">"raw"</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="显示图片"><a href="#显示图片" class="headerlink" title="显示图片"></a>显示图片</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"label"</span> =&gt; <span class="string">"商品图片"</span>,</span><br><span class="line">    <span class="string">"format"</span> =&gt; [</span><br><span class="line">        <span class="string">"image"</span>, </span><br><span class="line">        [</span><br><span class="line">            <span class="string">"width"</span>=&gt;<span class="string">"200"</span>,</span><br><span class="line">            <span class="string">"height"</span>=&gt;<span class="string">"200"</span></span><br><span class="line">        ]</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">return</span> $model-&gt;image; </span><br><span class="line">    &#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="自定义操作按钮"><a href="#自定义操作按钮" class="headerlink" title="自定义操作按钮"></a>自定义操作按钮</h3><p>通过设置<code>ActionColumn</code>类，修改配置项<code>template</code>，在buttons项增加<code>template</code>里增加的<code>log</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"class"</span> =&gt; <span class="string">"yii\grid\ActionColumn"</span>,</span><br><span class="line">    <span class="string">"template"</span> =&gt; <span class="string">"&#123;log&#125; &#123;view&#125; &#123;update&#125;"</span>,</span><br><span class="line">    <span class="string">"header"</span> =&gt; <span class="string">"操作"</span>,</span><br><span class="line">    <span class="string">"buttons"</span> =&gt; [</span><br><span class="line">        <span class="string">"log"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($url, $model, $key)</span> </span>&#123; </span><br><span class="line">            <span class="keyword">return</span> Html::a(<span class="string">"日志"</span>, $url, [<span class="string">"title"</span> =&gt; <span class="string">"查看日志"</span>] ); </span><br><span class="line">        &#125;,</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="操作按钮调用JS"><a href="#操作按钮调用JS" class="headerlink" title="操作按钮调用JS"></a>操作按钮调用JS</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"class"</span> =&gt; <span class="string">"yii\grid\ActionColumn"</span>,</span><br><span class="line">    <span class="string">"header"</span> =&gt; <span class="string">"操作"</span>,</span><br><span class="line">    <span class="string">"template"</span> =&gt; <span class="string">"&#123;view&#125; &#123;update&#125; &#123;update-status&#125;"</span>,</span><br><span class="line">    <span class="string">"buttons"</span> =&gt; [</span><br><span class="line">        <span class="string">"update-status"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($url, $model, $key)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Html::a(<span class="string">"更新状态"</span>, <span class="string">"javascript:;"</span>, [<span class="string">"onclick"</span>=&gt;<span class="string">"update_status(this, "</span>.$model-&gt;id.<span class="string">");"</span>]); &#125;,</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>需要在页面写js实现<code>update_status</code>方法</p><h3 id="自定义字段"><a href="#自定义字段" class="headerlink" title="自定义字段"></a>自定义字段</h3><p>在表格里增加一列且数据库中不存在对应的列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"消费金额"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 这里可以根据该表的其他字段进行关联获取</span></span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h2 id="实现批量删除"><a href="#实现批量删除" class="headerlink" title="实现批量删除"></a>实现批量删除</h2><ol><li><code>GridView</code>设置<code>options</code>时增加一个<code>id</code> 这里我们命名<code>grid</code></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="string">'dataProvider'</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">"options"</span> =&gt; [</span><br><span class="line">        <span class="comment">// ...其他设置项</span></span><br><span class="line">        <span class="string">"id"</span> =&gt; <span class="string">"grid"</span></span><br><span class="line">    ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>批量删除需要用到复选框，在<code>columns</code>增加选项复选框，<code>name</code>值设定为<code>id</code>方便对数据操作</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="string">'dataProvider'</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">"options"</span> =&gt; [</span><br><span class="line">        <span class="string">"id"</span> =&gt; <span class="string">"grid"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"columns"</span> =&gt; [</span><br><span class="line">        <span class="comment">// ......</span></span><br><span class="line">        [</span><br><span class="line">            <span class="string">"class"</span> =&gt; <span class="string">"yii\grid\CheckboxColumn"</span>,</span><br><span class="line">            <span class="string">"name"</span> =&gt; <span class="string">"id"</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment">// ......</span></span><br><span class="line">    ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>页面上增加一个批量删除按钮，这里增加了一个class<code>batch-del</code>,方便后面js实现点击效果</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= Html::a(<span class="string">"批量删除"</span>, <span class="string">"javascript:;"</span>, [<span class="string">"class"</span> =&gt; <span class="string">"btn btn-success batch-del"</span>]) <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>js实现按钮操作</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;registerJs(<span class="string">'</span></span><br><span class="line"><span class="string">$(".batch-del").on("click", function () &#123;</span></span><br><span class="line"><span class="string">    //注意这里的$("#grid")，要跟我们第一步设定的options id一致</span></span><br><span class="line"><span class="string">    var keys = $("#grid").yiiGridView("getSelectedRows");</span></span><br><span class="line"><span class="string">    console.log(keys);</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="format格式"><a href="#format格式" class="headerlink" title="format格式"></a><code>format</code>格式</h2><h3 id="视图中"><a href="#视图中" class="headerlink" title="视图中"></a>视图中</h3><ul><li>处理html标签</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'format'</span> =&gt; <span class="string">'raw'</span></span><br></pre></td></tr></table></figure><ul><li>处理时间</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'format'</span> =&gt; [<span class="string">'date'</span>, <span class="string">'php:Y-m-d H:i'</span>]</span><br></pre></td></tr></table></figure><ul><li>处理图片</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"format"</span> =&gt; [</span><br><span class="line">    <span class="string">"image"</span>, </span><br><span class="line">    [</span><br><span class="line">        <span class="string">"width"</span>=&gt;<span class="string">"200"</span>,</span><br><span class="line">        <span class="string">"height"</span>=&gt;<span class="string">"200"</span></span><br><span class="line">    ]</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="控制器中"><a href="#控制器中" class="headerlink" title="控制器中"></a>控制器中</h3><p><code>yii\i18n\Formatter</code></p><h4 id="常用的属性"><a href="#常用的属性" class="headerlink" title="常用的属性"></a>常用的属性</h4><ol><li><code>$dateFormat</code><br>日期格式：yyyy-MM-dd,或者 “short”, “medium”, “long”, or “full”</li><li><code>$datetimeFormat</code><br>具体时间格式：yyyy-MM-dd HH:mm:ss</li><li><code>$locale</code><br>区域位置，如果没有设置，将使用 yii\base\Application::$language,按照这一区域的习惯显示格式</li><li><code>$defaultTimeZone</code><br>时区，默认UTC</li><li>要使用formatter需要在config中的配置</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'formatter'</span> =&gt; [</span><br><span class="line">    <span class="string">'dateFormat'</span> =&gt; <span class="string">'yyyy-MM-dd'</span>,</span><br><span class="line">    <span class="string">'datetimeFormat'</span> =&gt; <span class="string">'yyyy-MM-dd HH:mm:ss'</span>,</span><br><span class="line">    <span class="string">'decimalSeparator'</span> =&gt; <span class="string">','</span>,</span><br><span class="line">    <span class="string">'thousandSeparator'</span> =&gt; <span class="string">' '</span>,</span><br><span class="line">    <span class="string">'currencyCode'</span> =&gt; <span class="string">'CNY'</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h4 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asRelativeTime(<span class="number">1463632983</span>).<span class="string">'&lt;br/&gt;'</span>; <span class="comment">// 几天前 几小时前</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asDatetime(<span class="number">1463606983</span>).<span class="string">'&lt;br&gt;'</span>;  <span class="comment">// 2015-6-16 11:51:43</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asDatetime(<span class="string">'now'</span>).<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="comment">// 也可处理null值的输出显示:</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asDate(<span class="keyword">null</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 输出: (未设置)  </span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asPercent(<span class="number">0.125</span>, <span class="number">2</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 输出: 12.50%</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTimestamp(<span class="string">'now'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//输出时间戳</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTime(<span class="number">1412599260</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 14:41:00</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTime(<span class="string">'2014-10-06 12:41:00'</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 14:41:00</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTime(<span class="string">'2014-10-06 14:41:00 CEST'</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 14:41:00</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asRaw(<span class="number">1463606983</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//简单输出输入值</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asText(<span class="string">'&lt;h3&gt;hello&lt;/h3&gt;'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//将字符串中html标签当做字符串输出</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asHtml(<span class="string">'&lt;h3&gt;hello&lt;/h3&gt;'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//作为Html的文档输出</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asNtext(<span class="string">"&lt;h3&gt;hello.\nword&lt;/h3&gt;"</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//在字符串中遇到\n可以将它作为换行符实现</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asEmail(<span class="string">'cebe@example.com'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">// 输出: &lt;a href="mailto:cebe@example.com"&gt;cebe@example.com&lt;/a&gt;</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asParagraphs(<span class="string">'hello'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">// 值会转换成HTML编码的文本段落，用&lt;p&gt;标签包裹；</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asUrl(<span class="string">'www.baidu.com'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//值会格式化成url的连接</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asImage(<span class="string">'my2.jpeg'</span>,[<span class="string">'alt'</span>=&gt;<span class="string">'图片无法显示'</span>]).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//图片的链接会转化成&lt;img src='my.jpg'/&gt;</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asBoolean(<span class="keyword">true</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//输出yes</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Yii </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Yii技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yii2如何在View中加入JS代码</title>
      <link href="2021/11/12/Yii2%E5%A6%82%E4%BD%95%E5%9C%A8View%E4%B8%AD%E5%8A%A0%E5%85%A5JS%E4%BB%A3%E7%A0%81/"/>
      <url>2021/11/12/Yii2%E5%A6%82%E4%BD%95%E5%9C%A8View%E4%B8%AD%E5%8A%A0%E5%85%A5JS%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>如果在view中直接添加js代码，如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">'js code'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>会提示没有<code>$ is not defined</code>错误，这是因为view中添加js代码的前面没有引用juqery.js，默认全局的jquery则是在文件尾添加。</p><p>解决方法：</p><a id="more"></a><ol><li>在js代码前引入js库</li></ol><p><strong>1.1 引入方式1</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>=Html::jsFile(<span class="string">'@web/jquery.js'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>1.2 引入方式2</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">$this</span>-&gt;registerJsFile(<span class="string">'@web/js/jquery.js'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>使用全局的js库</li></ol><p><strong>方法一</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$js = <span class="string">&lt;&lt;&lt;JS</span></span><br><span class="line"><span class="string">$(function()&#123;</span></span><br><span class="line"><span class="string">    alert('js code');</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">JS;</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;registerJs($js);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>方法二</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;registerJs(<span class="string">"</span></span><br><span class="line"><span class="string">$(function () &#123;</span></span><br><span class="line"><span class="string">// 想要写的js代码吧</span></span><br><span class="line"><span class="string">$......</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">"</span>, \yii\web\View::POS_END);</span><br></pre></td></tr></table></figure><p><code>$this</code>指<code>yii\web\View</code>对象,用于管理和渲染视图</p><ul><li>第一个参数：就是我们要写的js代码块</li><li>第二个参数：指定代码块插入在页面的具体位置<br><code>\yii\web\View::POS_END</code>意思就是页面底部<code>&lt;/body&gt;</code>之前插入</li><li>第三个参数：js代码块的一个id标示，不指定会默认生成</li></ul>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Yii </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Yii技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS实现复制到剪贴板功能</title>
      <link href="2021/11/12/JS%E5%AE%9E%E7%8E%B0%E5%A4%8D%E5%88%B6%E5%88%B0%E5%89%AA%E8%B4%B4%E6%9D%BF%E5%8A%9F%E8%83%BD/"/>
      <url>2021/11/12/JS%E5%AE%9E%E7%8E%B0%E5%A4%8D%E5%88%B6%E5%88%B0%E5%89%AA%E8%B4%B4%E6%9D%BF%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="原生JS实现"><a href="#原生JS实现" class="headerlink" title="原生JS实现"></a>原生JS实现</h2><p>原生JS，先使用 <code>select()</code> 选中<em>输入框</em>文本，然后使用 <code>document.execCommand(&quot;Copy&quot;)</code>复制到剪贴板</p><p><strong>前提条件</strong></p><ul><li><code>select()</code> 方法只对 <code>&lt;input&gt;</code> 和 <code>&lt;textarea&gt;</code> 有效</li><li>输入框不能有<code>disabled</code>属性</li><li>输入框不能有<code>hidden</code>属性</li><li>输入框的 <code>width</code> 和 <code>height</code> 不能为0</li></ul><p><strong>实现代码</strong></p><a id="more"></a><p>HTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"copyInput"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"需要复制的文本"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JS</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementById(<span class="string">"copyInput"</span>);</span><br><span class="line">ele.select();</span><br><span class="line"><span class="keyword">let</span> c = <span class="built_in">document</span>.execCommand(<span class="string">"Copy"</span>);</span><br><span class="line"><span class="keyword">if</span> (c) &#123;</span><br><span class="line">    alert(<span class="string">"复制链接成功！"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    alert(<span class="string">"复制失败！当前浏览器不支持此功能，请手动复制。"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS方法 </tag>
            
            <tag> JS技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yii2模型通过中间表关联</title>
      <link href="2021/10/18/Yii2%E6%A8%A1%E5%9E%8B%E9%80%9A%E8%BF%87%E4%B8%AD%E9%97%B4%E8%A1%A8%E5%85%B3%E8%81%94/"/>
      <url>2021/10/18/Yii2%E6%A8%A1%E5%9E%8B%E9%80%9A%E8%BF%87%E4%B8%AD%E9%97%B4%E8%A1%A8%E5%85%B3%E8%81%94/</url>
      
        <content type="html"><![CDATA[<p><code>Order</code> 模型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">extends</span> \<span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getItems</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(Item::className(), [<span class="string">'id'</span> =&gt; <span class="string">'item_id'</span>])</span><br><span class="line">            -&gt;viaTable(OrderItem::tableName(), [<span class="string">'order_id'</span> =&gt; <span class="string">'id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>OrderItem</code> 模型是 <code>Order</code> 与 <code>Item</code> 的中间表</p><p><code>order</code> 表的主键 <code>id</code> 与 <code>order-item</code> 表 <code>order_id</code> 关联</p><p><code>item</code> 表的主键 <code>id</code> 与 <code>order-item</code> 表 <code>order_id</code> 关联</p><p>通过Order模型获取关联的Item表数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$order = Order::find()-&gt;all();</span><br><span class="line">$order-&gt;items-&gt;item表的字段</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Yii </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Yii技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yii2模型自动生成新增和修改时间</title>
      <link href="2021/10/18/Yii2%E6%A8%A1%E5%9E%8B%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%96%B0%E5%A2%9E%E5%92%8C%E4%BF%AE%E6%94%B9%E6%97%B6%E9%97%B4/"/>
      <url>2021/10/18/Yii2%E6%A8%A1%E5%9E%8B%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%96%B0%E5%A2%9E%E5%92%8C%E4%BF%AE%E6%94%B9%E6%97%B6%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<p>使用 <code>timeStampBehavior</code></p><p>这个行为支持在 <code>Active Record</code> 存储时自动更新它的时间戳属性</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">models</span>\<span class="title">User</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">behaviors</span>\<span class="title">TimestampBehavior</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">behaviors</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [</span><br><span class="line">                <span class="string">'class'</span> =&gt; TimestampBehavior::className(),</span><br><span class="line">                <span class="string">'attributes'</span> =&gt; [</span><br><span class="line">                    ActiveRecord::EVENT_BEFORE_INSERT =&gt; [<span class="string">'created_at'</span>, <span class="string">'updated_at'</span>],</span><br><span class="line">                    ActiveRecord::EVENT_BEFORE_UPDATE =&gt; [<span class="string">'updated_at'</span>],</span><br><span class="line">                ],</span><br><span class="line">                <span class="comment">// if you're using datetime instead of UNIX timestamp:</span></span><br><span class="line">                <span class="comment">// 'value' =&gt; new Expression('NOW()'),</span></span><br><span class="line">            ],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上指定的行为数组：</p><p>当记录插入时，行为将当前时间戳赋值给 <code>created_at</code> 和 <code>updated_at</code> 属性；<br>当记录更新时，行为将当前时间戳赋值给 <code>updated_at</code> 属性。</p><p><code>TimestampBehavior</code> 行为还提供了一个有用的方法 <code>touch()</code>， 这个方法能将当前时间戳赋值给指定属性并保存到数据库：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$user-&gt;touch(<span class="string">'login_time'</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Yii </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Yii技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yii2.0框架数据库查询总结</title>
      <link href="2021/10/09/Yii2-0%E6%A1%86%E6%9E%B6%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E6%80%BB%E7%BB%93/"/>
      <url>2021/10/09/Yii2-0%E6%A1%86%E6%9E%B6%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">User::find()-&gt;all();    <span class="comment">// 返回所有数据；</span></span><br><span class="line"> </span><br><span class="line">User::findOne($id);   <span class="comment">// 返回 主键 id 为定值 的一条数据；</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;select([<span class="string">'id'</span>, <span class="string">'name'</span>])-&gt;one();      <span class="comment">// 返回 字段为id和name 的一条数据；</span></span><br><span class="line">User::find()-&gt;select(<span class="string">'id,name'</span>)-&gt;one();      <span class="comment">// 返回 字段为id和name 的一条数据；</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;select([<span class="string">'id'</span>, <span class="string">'name'</span>])-&gt;all();      <span class="comment">// 返回 字段为id和name 的所有数据；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;where([<span class="string">'age'</span> =&gt; <span class="string">'18'</span>])-&gt;one();      <span class="comment">// 返回 ['age' =&gt; '18'] 的一条数据；</span></span><br><span class="line">User::find()-&gt;where([<span class="string">'='</span>, <span class="string">'age'</span>, <span class="string">'18'</span>])-&gt;one();   <span class="comment">// 返回 ['age' =&gt; '18'] 的一条数据；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;where([<span class="string">'age'</span> =&gt; <span class="string">'18'</span>])-&gt;all();   <span class="comment">// 返回 ['age' =&gt; '18'] 的所有数据；</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;where([<span class="string">'in'</span>, <span class="string">'age'</span>, [<span class="string">'18'</span>, <span class="string">'19'</span>]])-&gt;all();   <span class="comment">// 返回 age 在18和19 的所有数据；</span></span><br><span class="line">User::find()-&gt;where([<span class="string">'age'</span>=&gt;[<span class="string">'18'</span>, <span class="string">'19'</span>]])-&gt;all();   <span class="comment">// 返回 age 在18和19 的所有数据；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;orderBy(<span class="string">'id DESC'</span>)-&gt;all();   <span class="comment">// 排序查询, DESC:降序,ASC:升序；</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;groupBy(<span class="string">'type'</span>)-&gt;all();   <span class="comment">// 根据 type 分组查询 的所有数据；</span></span><br><span class="line"> </span><br><span class="line">User::findBySql(<span class="string">'SELECT * FROM user'</span>)-&gt;all();  <span class="comment">// 用 sql 语句查询 user 表里面的所有数据；</span></span><br><span class="line"> </span><br><span class="line">User::findBySql(<span class="string">'SELECT * FROM user'</span>)-&gt;one();  <span class="comment">// 用 sql  语句查询 user 表里面的一条数据；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;andWhere([<span class="string">'sex'</span> =&gt; <span class="string">'男'</span>, <span class="string">'age'</span> =&gt; <span class="string">'24'</span>])-&gt;count(<span class="string">'id'</span>);   <span class="comment">// 统计符合条件的总条数；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;andFilterWhere([<span class="string">'like'</span>, <span class="string">'name'</span>, <span class="string">'腾哥'</span>])-&gt;all(); <span class="comment">// 用 like 查询数据，生成 name LIKE '%腾哥%'</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;andFilterWhere([<span class="string">'like'</span>, <span class="string">'name'</span>, <span class="string">'%腾哥'</span>, <span class="keyword">false</span>])-&gt;all(); <span class="comment">// 用 like 查询数据，生成 name LIKE '%腾哥'</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;andFilterWhere([<span class="string">'like'</span>, <span class="string">'name'</span>, <span class="string">'腾哥%'</span>, <span class="keyword">false</span>])-&gt;all(); <span class="comment">// 用 like 查询数据，生成 name LIKE '腾哥%'</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;one();    <span class="comment">// 返回一条数据；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;count();    <span class="comment">// 返回记录的数量；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;average();    <span class="comment">// 返回指定列的平均值；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;min();    <span class="comment">// 返回指定列的最小值 ；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;max();    <span class="comment">// 返回指定列的最大值 ；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;scalar();    <span class="comment">// 返回值的第一行第一列的查询结果；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;column();    <span class="comment">// 返回查询结果中的第一列的值；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;exists();    <span class="comment">// 返回一个值指示是否包含查询结果的数据行；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;batch(<span class="number">10</span>);  <span class="comment">// 每次取 10 条数据</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;each(<span class="number">10</span>);  <span class="comment">// 每次取 10 条数据， 迭代查询</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;indexBy(<span class="string">'id'</span>)-&gt;asArray()-&gt;all();    <span class="comment">// 返回所有数据数组并以ID字段为数组索引，其中ID必须是所查询的字段；</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="直接查询"><a href="#直接查询" class="headerlink" title="直接查询"></a>直接查询</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*createCommand(执行原生的SQL语句) */</span></span><br><span class="line">$sql = <span class="string">"SELECT u.account,i.* FROM user as u left join user_info as i on u.id=i.user_id"</span>; </span><br><span class="line">$rows = Yii::$app-&gt;db-&gt;createCommand($sql)-&gt;query(); </span><br><span class="line"><span class="comment">// 查询返回多行：</span></span><br><span class="line">$command = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT * FROM post'</span>); </span><br><span class="line">$posts = $command-&gt;queryAll();</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 返回单行</span></span><br><span class="line">$command = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT * FROM post WHERE id=1'</span>); </span><br><span class="line">$post = $command-&gt;queryOne();</span><br><span class="line">   </span><br><span class="line"><span class="comment">// 查询多行单值： </span></span><br><span class="line">$command = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT title FROM post'</span>); </span><br><span class="line">$titles = $command-&gt;queryColumn();</span><br><span class="line">   </span><br><span class="line"><span class="comment">// 查询标量值/计算值： </span></span><br><span class="line">$command = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT COUNT(*) FROM post'</span>); </span><br><span class="line">$postCount = $command-&gt;queryScalar();</span><br></pre></td></tr></table></figure><h2 id="参数绑定"><a href="#参数绑定" class="headerlink" title="参数绑定"></a>参数绑定</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$post = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT * FROM post WHERE id=:id AND status=:status'</span>)</span><br><span class="line">           -&gt;bindValue(<span class="string">':id'</span>, $_GET[<span class="string">'id'</span>])</span><br><span class="line">           -&gt;bindValue(<span class="string">':status'</span>, <span class="number">1</span>)</span><br><span class="line">           -&gt;queryOne();</span><br><span class="line"> </span><br><span class="line">$params = [<span class="string">':id'</span> =&gt; $_GET[<span class="string">'id'</span>], <span class="string">':status'</span> =&gt; <span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line">$post = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT * FROM post WHERE id=:id AND status=:status'</span>)</span><br><span class="line">           -&gt;bindValues($params)</span><br><span class="line">           -&gt;queryOne();</span><br><span class="line">            </span><br><span class="line">$post = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT * FROM post WHERE id=:id AND status=:status'</span>, $params)</span><br></pre></td></tr></table></figure><h2 id="执行非查询语句"><a href="#执行非查询语句" class="headerlink" title="执行非查询语句"></a>执行非查询语句</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// INSERT (table name, column values)</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;insert(<span class="string">'user'</span>, [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'Sam'</span>,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="number">30</span>,</span><br><span class="line">])-&gt;execute();</span><br><span class="line"> </span><br><span class="line"><span class="comment">// UPDATE (table name, column values, condition)</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;update(<span class="string">'user'</span>, [<span class="string">'status'</span> =&gt; <span class="number">1</span>], <span class="string">'age &gt; 30'</span>)-&gt;execute();</span><br><span class="line"> </span><br><span class="line"><span class="comment">// DELETE (table name, condition)</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;delete(<span class="string">'user'</span>, <span class="string">'status = 0'</span>)-&gt;execute();</span><br><span class="line"> </span><br><span class="line"><span class="comment">// table name, column names, column values</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;batchInsert(<span class="string">'user'</span>, [<span class="string">'name'</span>, <span class="string">'age'</span>], [</span><br><span class="line">    [<span class="string">'Tom'</span>, <span class="number">30</span>],</span><br><span class="line">    [<span class="string">'Jane'</span>, <span class="number">20</span>],</span><br><span class="line">    [<span class="string">'Linda'</span>, <span class="number">25</span>],</span><br><span class="line">])-&gt;execute();</span><br></pre></td></tr></table></figure><h2 id="执行事务"><a href="#执行事务" class="headerlink" title="执行事务"></a>执行事务</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$db = Yii::$app-&gt;db;</span><br><span class="line">$transaction = $db-&gt;beginTransaction();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    $db-&gt;createCommand($sql1)-&gt;execute();</span><br><span class="line">    $db-&gt;createCommand($sql2)-&gt;execute();</span><br><span class="line">    <span class="comment">// ... executing other SQL statements ...</span></span><br><span class="line">     </span><br><span class="line">    $transaction-&gt;commit();</span><br><span class="line">     </span><br><span class="line">&#125; <span class="keyword">catch</span>(\<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line"> </span><br><span class="line">    $transaction-&gt;rollBack();</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">throw</span> $e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关联查询"><a href="#关联查询" class="headerlink" title="关联查询"></a>关联查询</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 客户表Model：CustomerModel</span></span><br><span class="line"><span class="comment"> * 订单表Model：OrdersModel</span></span><br><span class="line"><span class="comment"> * 国家表Model：CountrysModel</span></span><br><span class="line"><span class="comment"> * 首先要建立表与表之间的关系</span></span><br><span class="line"><span class="comment"> * 在CustomerModel中添加与订单的关系</span></span><br><span class="line"><span class="comment"> */</span>    </span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">CustomerModel</span> <span class="keyword">extends</span> \<span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">//客户和订单是一对多的关系所以用hasMany</span></span><br><span class="line">    <span class="comment">//此处OrdersModel在CustomerModel顶部别忘了加对应的命名空间</span></span><br><span class="line">    <span class="comment">//id对应的是OrdersModel的id字段，order_id对应CustomerModel的order_id字段</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getOrders</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(OrdersModel::className(), [<span class="string">'id'</span>=&gt;<span class="string">'order_id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">//客户和国家是一对一的关系所以用hasOne</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCountry</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(CountrysModel::className(), [<span class="string">'id'</span>=&gt;<span class="string">'Country_id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">// 查询客户与他们的订单和国家</span></span><br><span class="line">CustomerModel::find()-&gt;with(<span class="string">'orders'</span>, <span class="string">'country'</span>)-&gt;all();</span><br><span class="line"><span class="comment">// 查询客户与他们的订单和订单的发货地址（注：orders 与 address都是关联关系）</span></span><br><span class="line">CustomerModel::find()-&gt;with(<span class="string">'orders.address'</span>)-&gt;all();</span><br><span class="line"><span class="comment">// 查询客户与他们的国家和状态为1的订单</span></span><br><span class="line">CustomerModel::find()-&gt;with([</span><br><span class="line">    <span class="string">'orders'</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($query)</span> </span>&#123;</span><br><span class="line">        $query-&gt;andWhere(<span class="string">'status = 1'</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'country'</span>,</span><br><span class="line">])-&gt;all();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Yii </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Yii技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Git替代由FTP上传更新代码</title>
      <link href="2021/09/30/%E4%BD%BF%E7%94%A8Git%E6%9B%BF%E4%BB%A3%E7%94%B1FTP%E4%B8%8A%E4%BC%A0%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81/"/>
      <url>2021/09/30/%E4%BD%BF%E7%94%A8Git%E6%9B%BF%E4%BB%A3%E7%94%B1FTP%E4%B8%8A%E4%BC%A0%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>单位以前服务器代码更新使用的是FTP上传，这样无法保证服务器代码和仓库代码保持一致，忍不了了，果断改成git拉取</p><p>第一步，有代码的管理仓库</p><p>第二步，拉取服务器的代码到本地，然后再提交到代码仓库，保持当前服务器和代码库文件和文件内容一致</p><p>第三步，在服务器上安装git，并生成公钥</p><p>第四步，把服务器的公钥配置到代码库的部署公钥管理中</p><p>第五步，在服务器上代码根目录初始化git</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost project]<span class="comment"># git init</span></span><br><span class="line">Initialized empty Git repository <span class="keyword">in</span> /data/www/html/project/.git/</span><br></pre></td></tr></table></figure><p>第六步，添加远程代码库地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost project]<span class="comment"># git remote add origin git@gitee.com:xxxxx/project.git</span></span><br></pre></td></tr></table></figure><p>第七步，拉取代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost project]<span class="comment"># git pull</span></span><br><span class="line">remote: Enumerating objects: 894, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (894/894), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (824/824), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 4211 (delta 380), reused 370 (delta 55), pack-reused 3317</span><br><span class="line">Receiving objects: 100% (4211/4211), 42.83 MiB | 9.86 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (1953/1953), <span class="keyword">done</span>.</span><br><span class="line">From gitee.com:xxxxx/project</span><br><span class="line"> * [new branch]      master     -&gt; origin/master</span><br><span class="line">You asked me to pull without telling me <span class="built_in">which</span> branch you</span><br><span class="line">want to merge with, and <span class="string">'branch.master.merge'</span> <span class="keyword">in</span></span><br><span class="line">your configuration file does not tell me, either. Please</span><br><span class="line">specify <span class="built_in">which</span> branch you want to use on the <span class="built_in">command</span> line and</span><br><span class="line">try again (e.g. <span class="string">'git pull &lt;repository&gt; &lt;refspec&gt;'</span>).</span><br><span class="line">See git-pull(1) <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">If you often merge with the same branch, you may want to</span><br><span class="line">use something like the following <span class="keyword">in</span> your configuration file:</span><br><span class="line"></span><br><span class="line">    [branch <span class="string">"master"</span>]</span><br><span class="line">    remote = &lt;nickname&gt;</span><br><span class="line">    merge = &lt;remote-ref&gt;</span><br><span class="line"></span><br><span class="line">    [remote <span class="string">"&lt;nickname&gt;"</span>]</span><br><span class="line">    url = &lt;url&gt;</span><br><span class="line">    fetch = &lt;refspec&gt;</span><br><span class="line"></span><br><span class="line">See git-config(1) <span class="keyword">for</span> details.</span><br><span class="line">You have new mail <span class="keyword">in</span> /var/spool/mail/root</span><br></pre></td></tr></table></figure><p>第八步，本地关联远程分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost project]<span class="comment"># git branch --set-upstream master origin/master</span></span><br><span class="line">Branch master <span class="built_in">set</span> up to track remote branch master from origin.</span><br></pre></td></tr></table></figure><p>这样就可以了，然后在执行 <code>git pull</code> 看一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost project]<span class="comment"># git pull</span></span><br><span class="line">Already up-to-date.</span><br></pre></td></tr></table></figure><p>更新已完成，这样更新代码是不是很爽呢O(∩_∩)O哈哈~</p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> FTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yii2.0框架模型添加/修改/删除数据操作示例</title>
      <link href="2021/09/15/Yii2-0%E6%A1%86%E6%9E%B6%E6%A8%A1%E5%9E%8B%E6%B7%BB%E5%8A%A0-%E4%BF%AE%E6%94%B9-%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B/"/>
      <url>2021/09/15/Yii2-0%E6%A1%86%E6%9E%B6%E6%A8%A1%E5%9E%8B%E6%B7%BB%E5%8A%A0-%E4%BF%AE%E6%94%B9-%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇文章主要介绍了Yii2.0框架模型添加/修改/删除数据操作,结合实例形式分析了Yii2.0使用模型操作数据的添加、修改、删除相关实现技巧,需要的朋友可以参考下</p></blockquote><p>以下实例以模型 User 为例：</p><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><ol><li>new一个模型</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$user = <span class="keyword">new</span> User();</span><br></pre></td></tr></table></figure><a id="more"></a><ol start="2"><li>模型属性赋值</li></ol><p>方式一</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$user-&gt;name = <span class="string">'Peak'</span>;</span><br><span class="line">$user-&gt;age = <span class="string">'18'</span>;</span><br></pre></td></tr></table></figure><p>方式二</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$data = [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'Peak'</span>,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="number">18</span></span><br><span class="line">];</span><br><span class="line">$user-&gt;attributes = $data;</span><br></pre></td></tr></table></figure><p>方式三</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$data = [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'Peak'</span>,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="number">18</span></span><br><span class="line">];</span><br><span class="line">$user-&gt;setAttributes($data);</span><br></pre></td></tr></table></figure><p>方式四</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$data = [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'Peak'</span>,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="number">18</span></span><br><span class="line">];</span><br><span class="line">$user-&gt;load($data, <span class="string">''</span>);</span><br><span class="line"><span class="keyword">if</span> ($user-&gt;validate()) &#123;<span class="comment">// 数据校验</span></span><br><span class="line">    $user-&gt;save();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>数据保存</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$user-&gt;save();<span class="comment">// 添加数据</span></span><br><span class="line">$user-&gt;insert();<span class="comment">// 添加数据</span></span><br><span class="line">$id = $user-&gt;attributes[<span class="string">'id'</span>];<span class="comment">// 获取当前添加数据后的自增id</span></span><br></pre></td></tr></table></figure><p><strong>Tip</strong></p><p>对<code>load()</code>方法解读：</p><p>通过查看<code>load()</code>方法可知，<code>load()</code>方法有两个参数，第一个参数 <code>$data</code> 是要填充的数据，第二个参数 <code>$formName</code> 是选择指定的模型</p><p>如果第二个参数不传，<code>$formName</code> 会默认为<code>null</code>，会默认取当前模型<code>$this-&gt;formName()</code></p><p>如果指定了模型，会将模型名称作为<code>key</code>值，通过 <code>$data[$formName]</code> 取值，也就是这时候应该传的 <code>$data</code> 格式是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$data = [</span><br><span class="line">    <span class="string">'User'</span> =&gt; [</span><br><span class="line">        <span class="string">'name'</span> =&gt; <span class="string">'Peak'</span>,</span><br><span class="line">        <span class="string">'age'</span> =&gt; <span class="number">18</span></span><br><span class="line">    ]</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>如果 $formName 传空字符串，则 $data 传递参数格式为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$data = [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'Peak'</span>,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="number">18</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$user = $User::findOne($id);</span><br><span class="line">$user-&gt;name = <span class="string">'Peak2'</span>;</span><br><span class="line">$data = $user-&gt;update();<span class="comment">// 修改</span></span><br><span class="line">$data = $user-&gt;save();<span class="comment">// 修改</span></span><br><span class="line"><span class="comment">//修改单个字段</span></span><br><span class="line">$data = Uesr::updateAllCounters([<span class="string">'name'</span> =&gt; <span class="string">'Peak3'</span>], [<span class="string">'id'</span> =&gt; $id]);<span class="comment">// 参数1为要修改的字段，参数2为修改条件</span></span><br></pre></td></tr></table></figure><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p>方法一</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除数据</span></span><br><span class="line">$user = User::find()-&gt;where([<span class="string">'id'</span> =&gt; <span class="number">1</span>])-&gt;one();<span class="comment">// 获取id为1的数据</span></span><br><span class="line">$user-&gt;delete();<span class="comment">//删除数据</span></span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$uer = User::find()-&gt;where([<span class="string">'id'</span> =&gt; <span class="number">2</span>])-&gt;all();<span class="comment">// 获取id为2的数据</span></span><br><span class="line">$data = $user[<span class="number">0</span>]-&gt;delete();<span class="comment">//删除数据</span></span><br></pre></td></tr></table></figure><p>方法三</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$user = User::deleteAll(<span class="string">'id=2'</span>);<span class="comment">//删除id为2的数据</span></span><br></pre></td></tr></table></figure><p>方法四</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多个条件删除</span></span><br><span class="line">$data = User::deleteAll(<span class="string">'id&gt;:id AND num&lt;:num'</span>, [<span class="string">':id'</span> =&gt; <span class="number">2</span>,<span class="string">':num'</span> =&gt; <span class="number">100</span>]);</span><br></pre></td></tr></table></figure><p>方法五</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除所有数据</span></span><br><span class="line">$user = User::deleteAll();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Yii </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Yii技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021-08-13之后 Github新安全提交措施处理</title>
      <link href="2021/09/01/2021-08-13%E4%B9%8B%E5%90%8E-Github%E6%96%B0%E5%AE%89%E5%85%A8%E6%8F%90%E4%BA%A4%E6%8E%AA%E6%96%BD%E5%A4%84%E7%90%86/"/>
      <url>2021/09/01/2021-08-13%E4%B9%8B%E5%90%8E-Github%E6%96%B0%E5%AE%89%E5%85%A8%E6%8F%90%E4%BA%A4%E6%8E%AA%E6%96%BD%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>往GitHub仓库 <code>push</code> 代码时，一直报如下错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.</span><br><span class="line">remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.</span><br><span class="line">fatal: unable to access &apos;https://github.com/&lt;user&gt;/&lt;repo&gt;/&apos;: The requested URL returned error: 403</span><br></pre></td></tr></table></figure><p>原来在2021年8月13日之后，如果你还用账户密码来操作 Github 上的仓库，就会收到以上警告</p><p>现在提交GitHub仓库代码必须使用个人访问令牌（personal access token），就是把你的密码替换成token</p><p>至于为什么要改成使用token，肯定是为了安全角度考虑，具体说明参考官网文档<a href="https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations" target="_blank" rel="noopener">https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations</a></p><a id="more"></a><p>获取Token步骤</p><ol><li><p>在个人设置页面找到<a href="https://github.com/settings/profile" target="_blank" rel="noopener">Settings</a></p></li><li><p>选择开发者设置<a href="https://github.com/settings/apps" target="_blank" rel="noopener">Developer setting</a></p></li><li><p>选择个人访问令牌<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">Personal access tokens</a>，然后选中生成令牌「Generate new token」</p></li><li><p>设置<code>token</code>的有效期，访问权限等</p><ul><li>选择要授予此令牌<code>token</code>的范围或权限</li><li>要使用<code>token</code>从命令行访问仓库，请选择repo</li><li>要使用<code>token</code>从命令行删除仓库，请选择<code>delete_repo</code></li><li>其他根据需要进行勾选</li></ul></li><li><p>生成令牌 「Generate token」</p></li></ol><blockquote><p>注意：记得把你的<code>token</code>保存下来，因为你再次刷新网页的时候，你已经没有办法看到它了。</p></blockquote><ol start="6"><li>之后用自己生成的<code>token</code>登录，把上面生成的<code>token</code>粘贴到输入密码的位置，然后成功<code>push</code>代码</li></ol><p>也可以 把<code>token</code>直接添加远程仓库链接中，这样就可以避免同一个仓库每次提交代码都要输入<code>token</code>了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin https://&lt;your_token&gt;@github.com/&lt;USERNAME&gt;/&lt;REPO&gt;.git</span><br></pre></td></tr></table></figure><p><code>&lt;your_token&gt;</code>：换成你自己得到的token<br><code>&lt;USERNAME&gt;</code>：是你自己github的用户名<br><code>&lt;REPO&gt;</code>：是你的仓库名称 </p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin https://ghp_xxxxxxx@github.com/username/pero.git</span><br></pre></td></tr></table></figure><p>这样再使用终端 <code>git push</code> 就成功啦</p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视频地址加密——blob:http 地址的原理及生成方法</title>
      <link href="2021/09/01/%E8%A7%86%E9%A2%91%E5%9C%B0%E5%9D%80%E5%8A%A0%E5%AF%86%E2%80%94%E2%80%94blob-http-%E5%9C%B0%E5%9D%80%E7%9A%84%E5%8E%9F%E7%90%86%E5%8F%8A%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/"/>
      <url>2021/09/01/%E8%A7%86%E9%A2%91%E5%9C%B0%E5%9D%80%E5%8A%A0%E5%AF%86%E2%80%94%E2%80%94blob-http-%E5%9C%B0%E5%9D%80%E7%9A%84%E5%8E%9F%E7%90%86%E5%8F%8A%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>我们观看视频网站的时候，发现<code>video</code>标签中的<code>src</code>属性值为<code>blob:http</code>，并不是视频的链接地址。</p><p><code>blob</code>是H5的<code>Blob</code>对象数据，具体请看<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Blob" target="_blank" rel="noopener">文档</a>，我们可以使用<code>Blob</code>对象隐藏真实的资源路径，在一定程度上可以起数据的加密作用，更多的是为了干扰爬虫。</p><p>比如日常使用的一些音频，视频，图片，我们都可以使用其 <code>Blob</code> 二进制数据流来表征数据，而非使用 <code>uri</code>，就像经常用到的 <code>image</code> <code>src</code> 的 <code>dataUrl</code>。</p><p><strong>要使用 blob 来表征数据资源，需做到以下两点：</strong></p><a id="more"></a><ol><li>服务端返回的为资源的二进制数据</li><li>前端接收到二进制数据后，使用 URL.createObjectURL(blobData) 方法将服务端返回的二进制数据转换为 <code>blob</code> 的 <code>url</code> 资源挂载到相应的资源对象</li></ol><p><strong>实例：</strong></p><p>对 <code>video.mp4</code> 资源加密，不使用静态 <code>url</code> 进行加载，使用 <code>blob</code> <code>url</code> 进行加密。</p><p>服务端 blob.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回二进制流数据</span></span><br><span class="line">$file_path = <span class="string">'D://video.mp4'</span>;<span class="comment">// 文件地址</span></span><br><span class="line">$file_size = filesize($file_path);<span class="comment">// 文件大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*建议使用 file_get_contents() 读取文件内容，性能比 fread() 好*/</span></span><br><span class="line"><span class="comment">//$oct_data = fread(fopen($file_path, "r"), $file_size);// 读取文件内容</span></span><br><span class="line">$oct_data = file_get_contents($file_path);<span class="comment">// 读取文件内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line">header(<span class="string">"Content-type: video/mpeg4;charset=UTF-8"</span>);</span><br><span class="line">header(<span class="string">"Content-Length: "</span> . $file_size);</span><br><span class="line"><span class="keyword">echo</span> $oct_data;</span><br></pre></td></tr></table></figure><p>前端 video.html</p><p>源生写法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Blob Url<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"video"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//创建XMLHttpRequest对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">    <span class="comment">//配置请求方式、请求地址以及是否同步</span></span></span><br><span class="line"><span class="javascript">    xhr.open(<span class="string">'POST'</span>, <span class="string">'/blob.php'</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置请求结果类型为blob</span></span></span><br><span class="line"><span class="javascript">    xhr.responseType = <span class="string">'blob'</span>;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//请求成功回调函数</span></span></span><br><span class="line"><span class="javascript">    xhr.onload = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="keyword">this</span>.status == <span class="number">200</span>) &#123;<span class="comment">//请求成功</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//获取blob对象</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> blob = <span class="keyword">this</span>.response;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//获取blob对象地址，并把值赋给容器</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"video"</span>).src = URL.createObjectURL(blob);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">    xhr.send();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JQuery ajax写法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Blob Url<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"video"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcdn.net/ajax/libs/jquery/3.1.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">        type: <span class="string">"POST"</span>,</span></span><br><span class="line"><span class="javascript">        url: <span class="string">'/blob.php'</span>,</span></span><br><span class="line"><span class="javascript">        xhr: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">          xhr.responseType = <span class="string">'blob'</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> xhr;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#video'</span>).attr(<span class="string">'src'</span>, URL.createObjectURL(data));</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">'error'</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"video"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">src</span>=<span class="string">"blob:http://localhost/a55765bd-d3e8-4a05-a424-aea7b4ff6cc7"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样真是的视频资源静态地址就可以被隐藏掉了。</p><p>我们只是实例讲解下如何生成 blob 资源地址，生产中是很少会将一个资源以二进制流的方式返回给前端进行 Blob “加密”的，因为服务端需要将相应的资源打开读取，会消耗对应的内存，比如一个视频如果50M，那我们服务端返回其二进制数据时，就要消耗 50M 的服务器内存将文件载入，然后返回给前端，这代价略大，而且网络传输相应速度也不允许，如果返回个 500M 的二进制数据，估计就会有很大的卡顿了。</p><p>生产场景往往是对切片格式的视频 m3u8 地址进行 blob 格式处理，其实并不是为了加密，因为浏览器还是会解析 blob 并去 get 请求对应的 m3u8 地址，使用 blob uri 的好处在于可以在一定层度上干扰爬虫。</p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blob </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 数据库保留最近7天数据备份</title>
      <link href="2021/08/05/MySQL-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%9D%E7%95%99%E6%9C%80%E8%BF%917%E5%A4%A9%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/"/>
      <url>2021/08/05/MySQL-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%9D%E7%95%99%E6%9C%80%E8%BF%917%E5%A4%A9%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<p>为了防止数据丢失，我们会对数据库进行备份，下面介绍在Linux系统下如何定时备份数据库并保留最近7天的数据备份</p><p>参数准备：</p><ul><li>host:<code>127.0.0.1</code></li><li>数据库用户名:<code>root</code></li><li>数据库密码:<code>123456</code></li><li>数据库名称:<code>test</code></li><li>数据库备份目录：<code>/sqlbackup</code></li><li>数据库备份格式：<code>test_年月日_时分秒.sql</code></li></ul><p>首先写一个命令脚本 <code>data_backup.sh</code></p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"><span class="comment"># 数据库备份</span></span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除七天前的数据备份</span></span><br><span class="line">find /sqlbackup -mtime +7 -name <span class="string">"test*.sql"</span> -<span class="built_in">exec</span> rm &#123;&#125; \;</span><br><span class="line"><span class="comment"># 数据库备份</span></span><br><span class="line">/usr/<span class="built_in">local</span>/mysql/bin/mysqldump  -h127.0.0.1 -uroot -p123456 <span class="built_in">test</span>  &gt; /sqlbackup/test_$(date +%Y%m%d_%H%M%S).sql</span><br></pre></td></tr></table></figure><p>脚步我们暂时放在<code>/</code>目录</p><p>然后写定时任务</p><p>如果是用root用户执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br></pre></td></tr></table></figure><p>如果是用www用户执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -uwww -e</span></span><br></pre></td></tr></table></figure><p>每天凌晨0点执行一次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 * * * /data_backup.sh &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux服务器性能查看常用命令</title>
      <link href="2021/08/03/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E6%9F%A5%E7%9C%8B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2021/08/03/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E6%9F%A5%E7%9C%8B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="实时显示系统中各个进程的资源占用状况"><a href="#实时显示系统中各个进程的资源占用状况" class="headerlink" title="实时显示系统中各个进程的资源占用状况"></a>实时显示系统中各个进程的资源占用状况</h2><p>top命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器</p><p><a href="https://www.runoob.com/linux/linux-comm-top.html" target="_blank" rel="noopener">详情</a></p><a id="more"></a><h2 id="显示系统内存的使用情况"><a href="#显示系统内存的使用情况" class="headerlink" title="显示系统内存的使用情况"></a>显示系统内存的使用情况</h2><p>free 命令显示系统内存的使用情况，包括物理内存、交换内存(swap)和内核缓冲区内存</p><p><a href="https://www.runoob.com/linux/linux-comm-free.html" target="_blank" rel="noopener">详情</a></p><h2 id="显示目前文件系统磁盘使用情况统计"><a href="#显示目前文件系统磁盘使用情况统计" class="headerlink" title="显示目前文件系统磁盘使用情况统计"></a>显示目前文件系统磁盘使用情况统计</h2><p>Linux df（英文全拼：disk free） 命令用于显示目前在 Linux 系统上的文件系统磁盘使用情况统计。</p><p><a href="https://www.runoob.com/linux/linux-comm-df.html" target="_blank" rel="noopener">详情</a></p><h2 id="展现给定时间间隔的服务器的状态值"><a href="#展现给定时间间隔的服务器的状态值" class="headerlink" title="展现给定时间间隔的服务器的状态值"></a>展现给定时间间隔的服务器的状态值</h2><p>vmstat命令是最常见的Linux/Unix监控工具，可以展现给定时间间隔的服务器的状态值,包括服务器的CPU使用率，内存使用，虚拟内存交换情况,IO读写情况。</p><h2 id="获取主机运行时间和查询系统负载信息"><a href="#获取主机运行时间和查询系统负载信息" class="headerlink" title="获取主机运行时间和查询系统负载信息"></a>获取主机运行时间和查询系统负载信息</h2><p>uptime命令主要用于获取主机运行时间和查询linux系统负载等信息</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP 数据库无法连接 Could not connect: No such file or directory</title>
      <link href="2021/08/03/ThinkPHP-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5-Could-not-connect-No-such-file-or-directory/"/>
      <url>2021/08/03/ThinkPHP-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5-Could-not-connect-No-such-file-or-directory/</url>
      
        <content type="html"><![CDATA[<p>使用ThinkPHP框架数据库无法连接，报错<code>Could not connect: No such file or directory</code>，原因是<code>/tmp/</code>目录下没有<code>mysql.sock</code>文件。</p><p>解决方法：</p><p>先找到mysql的<code>mysql.sock</code>文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find / -name mysql.sock</span></span><br><span class="line">/var/lib/mysql/mysql.sock</span><br></pre></td></tr></table></figure></p><p>创建软连接<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决PHP报错 cURL error 60: SSL certificate problem: unable to get local issuer certifica</title>
      <link href="2021/07/29/%E8%A7%A3%E5%86%B3PHP%E6%8A%A5%E9%94%99-cURL-error-60-SSL-certificate-problem-unable-to-get-local-issuer-certifica/"/>
      <url>2021/07/29/%E8%A7%A3%E5%86%B3PHP%E6%8A%A5%E9%94%99-cURL-error-60-SSL-certificate-problem-unable-to-get-local-issuer-certifica/</url>
      
        <content type="html"><![CDATA[<p>PHP程序在调用<code>https</code>链接时报错”cURL error 60: SSL certificate problem: unable to get local issuer<br>  certifica”，这是因为没有配置信任的服务器HTTPS验证。默认情况下，cURL被设为不信任任何CAS，因此浏览器无法通过HTTPS访问你服务器</p><p>解决方法：</p><a id="more"></a><p>下载cacert.pem文件</p><p><a href="https://curl.se/docs/caextract.html" target="_blank" rel="noopener">https://curl.se/docs/caextract.html</a></p><p>下载后的文件放到php的<code>extras/ssl</code>目录下</p><p>我这里是Windows系统PHPStudy集成工具</p><p><code>D:\phpstudy_pro\Extensions\php\php7.2.9nts\extras\ssl</code></p><p>修改php.ini</p><p><code>D:\phpstudy_pro\Extensions\php\php7.2.9nts\php.ini</code></p><p>添加或修改</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"><span class="comment">; php.ini Options  ;</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">curl.cainfo</span> = <span class="string">"D:\phpstudy_pro\Extensions\php\php7.2.9nts\extras\ssl\cacert.pem"</span></span><br></pre></td></tr></table></figure><p>且需要打开<code>php_openssl</code>扩展</p><p>重启环境</p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yii2 form 表单用法</title>
      <link href="2021/06/23/Yii2-form-%E8%A1%A8%E5%8D%95%E7%94%A8%E6%B3%95/"/>
      <url>2021/06/23/Yii2-form-%E8%A1%A8%E5%8D%95%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="表单的创建"><a href="#表单的创建" class="headerlink" title="表单的创建"></a>表单的创建</h2><ul><li>在Yii中主要通过 <code>yii\widgets\ActiveForm</code>类来创建表单</li><li><code>ActiveForm::begin()</code>不仅创建了一个表单实例，同时也标志着表单的开始</li><li>放在 <code>ActiveForm::begin()</code> 和 <code>ActiveForm::end()</code> 之间的所有内容都被包裹在 <code>html</code> 的 <code>form</code> 标签中</li><li>中间是通过调用 <code>ActiveForm::field()</code> 方法来创建一个 <code>ActiveForm</code> 实例，这个实例会创建表单元素与元素的标签，以及对应的 <code>js</code> 验证</li><li><code>ActiveField</code> 有一个对应的模型和属性， <code>input</code> 输入框的 <code>name</code> 属性会自动的根据属性名来创建，同时，还会用属性的验证规则来验证用户输入的数据</li></ul><p><strong>e.g.</strong></p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $form = ActiveForm::begin(); <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'name'</span>)-&gt;textInput([<span class="string">'autofocus'</span> =&gt; <span class="keyword">true</span>]) <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> ActiveForm::end(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解析后的标签为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"w0"</span> <span class="attr">action</span>=<span class="string">"/xx/xx/xx"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"contactform-name"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"ContactForm[name]"</span> <span class="attr">autofocus</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>还会自动添加 <code>js</code> 验证，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">jQuery(<span class="string">'#contactform-name'</span>).yiiActiveForm([&#123;</span><br><span class="line">　　<span class="string">"id"</span> : <span class="string">"contactform-name"</span>,</span><br><span class="line">　　<span class="string">"name"</span> : <span class="string">"name"</span>,</span><br><span class="line">　　<span class="string">"container"</span> : <span class="string">".field-contactform-name"</span>,</span><br><span class="line">　　<span class="string">"input"</span> : <span class="string">"#contactform-name"</span>,</span><br><span class="line">　　<span class="string">"error"</span> : <span class="string">".help-block.help-block-error"</span>,</span><br><span class="line">　　<span class="string">"validate"</span> : <span class="function"><span class="keyword">function</span>(<span class="params">attribute,value,messages,deferred,$form</span>)</span>&#123;</span><br><span class="line">　　yii.validation.required(value,messages,&#123;</span><br><span class="line">　　　　<span class="string">"messages"</span> : <span class="string">"Name 不能为空"</span>,</span><br><span class="line">　　&#125;);</span><br><span class="line">&#125;])</span><br></pre></td></tr></table></figure><h2 id="ActiveField-对象的使用"><a href="#ActiveField-对象的使用" class="headerlink" title="ActiveField 对象的使用"></a>ActiveField 对象的使用</h2><blockquote><p>参考类参考手册 <code>yii\widgets\ActiveField</code> 中的方法</p></blockquote><h3 id="自定义表单action链接和method"><a href="#自定义表单action链接和method" class="headerlink" title="自定义表单action链接和method"></a>自定义表单<code>action</code>链接和<code>method</code></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $form = ActiveForm::begin([<span class="string">'action'</span>=&gt;[<span class="string">'test/getpost'</span>], <span class="string">'method'</span>=&gt;<span class="string">'post'</span>,]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本输入框"><a href="#文本输入框" class="headerlink" title="文本输入框"></a>文本输入框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'password'</span>)-&gt;textInput(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>限制输入长度</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'username'</span>)-&gt;textInput([<span class="string">'maxlength'</span>=&gt;<span class="number">20</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>关闭输入自动完成功能</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'username'</span>)-&gt;textInput([<span class="string">'autocomplete'</span>=&gt;<span class="string">'off'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>输入框只读</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'username'</span>)-&gt;textInput([<span class="string">'readonly'</span>=&gt;<span class="keyword">true</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="密码输入框"><a href="#密码输入框" class="headerlink" title="密码输入框"></a>密码输入框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'password'</span>)-&gt;passwordInput(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'sex'</span>)-&gt;radioList([<span class="string">'1'</span>=&gt;<span class="string">'男'</span>, <span class="string">'0'</span>=&gt;<span class="string">'女'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'hobby'</span>)-&gt;checkboxList([<span class="string">'0'</span>=&gt;<span class="string">'篮球'</span>,<span class="string">'1'</span>=&gt;<span class="string">'足球'</span>,<span class="string">'2'</span>=&gt;<span class="string">'羽毛球'</span>,<span class="string">'3'</span>=&gt;<span class="string">'乒乓球'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="下拉框"><a href="#下拉框" class="headerlink" title="下拉框"></a>下拉框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'edu'</span>)-&gt;dropDownList([<span class="string">'1'</span>=&gt;<span class="string">'大学'</span>,<span class="string">'2'</span>=&gt;<span class="string">'高中'</span>,<span class="string">'3'</span>=&gt;<span class="string">'初中'</span>], [<span class="string">'prompt'</span>=&gt;<span class="string">'请选择'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="隐藏域"><a href="#隐藏域" class="headerlink" title="隐藏域"></a>隐藏域</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'userid'</span>)-&gt;hiddenInput([<span class="string">'value'</span>=&gt;<span class="number">3</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'info'</span>)-&gt;textarea([<span class="string">'rows'</span>=&gt;<span class="number">3</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'file'</span>)-&gt;fileInput(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="提示文字"><a href="#提示文字" class="headerlink" title="提示文字"></a>提示文字</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'username'</span>)-&gt;textInput()-&gt;hint(<span class="string">'Please enter your name'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>设置文字样式</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'username'</span>)-&gt;textInput()-&gt;hint(<span class="string">'Please enter your name'</span>, [<span class="string">'style'</span>=&gt;<span class="string">'color:red;'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="html5的邮箱输入框"><a href="#html5的邮箱输入框" class="headerlink" title="html5的邮箱输入框"></a>html5的邮箱输入框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'email'</span>)-&gt;input(<span class="string">'email'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="自定义输入框的显示标签名"><a href="#自定义输入框的显示标签名" class="headerlink" title="自定义输入框的显示标签名"></a>自定义输入框的显示标签名</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'name'</span>)-&gt;label(<span class="string">'姓名'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="额外标签的处理-即与模型对象没有关系的额外-HTML-标签"><a href="#额外标签的处理-即与模型对象没有关系的额外-HTML-标签" class="headerlink" title="额外标签的处理,即与模型对象没有关系的额外 HTML 标签"></a>额外标签的处理,即与模型对象没有关系的额外 HTML 标签</h2><blockquote><p>e.g.<code>submit</code>，<code>button</code>, <code>p</code> 等</p></blockquote><p>使用 <code>yii\helpers\Html</code> 帮助类中的方法来添加到表单中</p><h3 id="纯文本-："><a href="#纯文本-：" class="headerlink" title="纯文本 ："></a>纯文本 ：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= <span class="string">'&lt;p class="username"&gt;'</span>.$user-&gt;name.<span class="string">'&lt;/p&gt;'</span> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Html-帮助类"><a href="#Html-帮助类" class="headerlink" title="Html 帮助类"></a>Html 帮助类</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= Html::tag(<span class="string">'p'</span>,Html::encode($user-&gt;name),[<span class="string">'class'</span>=&gt;<span class="string">'username'</span>]) <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="提交按钮"><a href="#提交按钮" class="headerlink" title="提交按钮"></a>提交按钮</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= Html::submitButton(<span class="string">'提交'</span>, [<span class="string">'class'</span>=&gt;<span class="string">'btn btn-primary'</span>, <span class="string">'name'</span> =&gt;<span class="string">'submit-button'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="重置按钮"><a href="#重置按钮" class="headerlink" title="重置按钮"></a>重置按钮</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= Html::resetButton(<span class="string">'重置'</span>, [<span class="string">'class'</span>=&gt;<span class="string">'btn btn-primary'</span>,<span class="string">'name'</span> =&gt;<span class="string">'submit-button'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="块儿赋值"><a href="#块儿赋值" class="headerlink" title="块儿赋值"></a>块儿赋值</h2><ul><li><code>input</code> 中的 <code>name</code> ,实际是以对象名来命名的一个数组，数组的键对应模型的属性 （e.g. <code>name=&quot;ContactForm[name]&quot;</code>）</li><li><code>model</code> 执行 <code>load()</code> 方法，就是对每个属性执行这样一句赋值：<code>$model-&gt;name = isset($ContactForm[&#39;name&#39;]) ? $ContactForm[name] : null;</code></li><li>块赋值就是用这一句代码将用户所有的输入数据填充到模型中去</li></ul><h2 id="dropDownList-的高级用法"><a href="#dropDownList-的高级用法" class="headerlink" title="dropDownList 的高级用法"></a>dropDownList 的高级用法</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'status'</span>)-&gt;dropDownList($allStatus,[<span class="string">'options'</span> =&gt; [$needSelected =&gt; [<span class="string">'selected'</span> =&gt; <span class="string">'selected'</span>]],[<span class="string">'prompt'</span>=&gt;<span class="string">'请选择状态'</span>]) <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>$allStatus</code> 是一个 <code>[1=&gt;&#39;已发布&#39;]</code> 形式的关联数组</li><li><code>$needSelected</code> 为需要默认选中的值，其值满足 <code>$allStatus</code> 中 <code>key</code> 值中的一个</li></ul>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Yii </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Yii技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何关闭MySQL日志，删除mysql-bin.0000*日志文件</title>
      <link href="2021/06/02/%E5%A6%82%E4%BD%95%E5%85%B3%E9%97%ADMySQL%E6%97%A5%E5%BF%97%EF%BC%8C%E5%88%A0%E9%99%A4mysql-bin-0000-%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6/"/>
      <url>2021/06/02/%E5%A6%82%E4%BD%95%E5%85%B3%E9%97%ADMySQL%E6%97%A5%E5%BF%97%EF%BC%8C%E5%88%A0%E9%99%A4mysql-bin-0000-%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>LNMP一键安装包安装的MySQL默认是开启了二进制日志文件的，如果数据操作比较频繁就会产生大量的日志，在<code>/usr/local/mysql/var/</code>下面产生<code>mysql-bin.0000*</code> 类似的文件，而且一般都在几十MB到几个GB，更甚会吃掉整个硬盘空间，从来导致mysql无法启动或报错。</p><p>如何关闭MySQL的日志功能：</p><a id="more"></a><ol><li>删除日志：</li></ol><p>执行：<code>/usr/local/mysql/bin/mysql -u root -p</code></p><p>输入密码登录后再执行：<code>reset master;</code></p><p>注意别漏了后面的分号; 回车后会显示<code>&quot;Query OK, 234 rows affected (12.3 sec)&quot;</code>，说明已经成功，再输入：<code>quit</code> 退出mysql命令模式。</p><ol start="2"><li>彻底禁用MySQL日志：</li></ol><p>修改<code>/etc/my.cnf</code> 文件，找到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog_format=mixed</span><br></pre></td></tr></table></figure></p><p>再这两行前面加上<code>#</code>，将其注释掉，再执行<code>/etc/init.d/mysql restart</code>即可。</p><p>如果实在想保留日志，可以在<code>/etc/my.cnf</code>里<code>[mysqld]</code>部分中加入<code>expire_logs_days = 10</code> 然后重启mysql，这样10天就会自动清理日志。</p><p>本文以LNMP一件安装包安装的环境为例除MySQL重启命令和配置文件路径可能略有不同，其他一样。</p><p>如果VPS或服务器上一点空间都没有启动不了的话可以<code>mysql-bin.0000*</code>删除，然后清空<code>mysql-bin.index</code>文件里的内容，再重启mysql，这样虽然也可以清理日志，但是有一定的分析，如采用此方法建议先备份日志及数据库文件。</p><p>本文链接地址：<a href="https://www.vpser.net/manage/delete-mysql-mysql-bin-0000-logs.html" target="_blank" rel="noopener">https://www.vpser.net/manage/delete-mysql-mysql-bin-0000-logs.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LNMP环境 Nginx 502 Bad Gateway错误可能原因及解决方法</title>
      <link href="2021/06/02/LNMP%E7%8E%AF%E5%A2%83-Nginx-502-Bad-Gateway%E9%94%99%E8%AF%AF%E5%8F%AF%E8%83%BD%E5%8E%9F%E5%9B%A0%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>2021/06/02/LNMP%E7%8E%AF%E5%A2%83-Nginx-502-Bad-Gateway%E9%94%99%E8%AF%AF%E5%8F%AF%E8%83%BD%E5%8E%9F%E5%9B%A0%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>在使用lnmp环境时，偶尔会遇到nginx返回502错误，这里我以lnmp一键安装进行说明</p><p><strong>原因一：安装时php没有安装成功</strong></p><p>查看一下是否存在<code>/usr/local/php/sbin/php-fpm</code>，如果没有肯定没安装成功。</p><p><strong>原因二：eaccelerator配置项</strong></p><p>在<code>php.ini</code>里，<code>eaccelerator</code>配置项一定要放在<code>Zend Optimizer</code>配置之前，否则也可能引起502 Bad Gateway。php一些模块之间也可能会造成502，如Zend GuardLoader与Opcache，ioncube与Zend GuardLoader等，一般可以通过注释掉一个然后重启php-fpm，然后看是否还502进行排除。</p><p><strong>原因三：php-cgi进程</strong></p><p>在安装好使用过程中出现502问题，一般是因为默认<code>php-cgi</code>进程是<code>5</code>个，可能因为<code>phpcgi</code>进程不够用而造成502，需要修改<code>/usr/local/php/etc/php-fpm.conf</code> 将其中的<code>max_children</code>值适当增加，如果php已升级到<code>5.3.*</code>以上且使用的是<code>dynamic</code>模式，需要调整<code>pm.min_spare_servers</code>和<code>pm.max_spare_servers</code>的值适当增加。<br><a id="more"></a><br>最大值可以按<code>内存xxMB/2/20</code> 的整数来算（内存以MB为单位进行计算，/ 为除，取整数），最小值可以按<code>内存/2/40</code> 的整数来算，可以少点或多大，可以自己调整运行看看，同时<code>pm.max_children</code>也调整为和<code>pm.max_spare_servers</code>的值一样。</p><p>也有可能是<code>max_requests</code>值不够用。</p><p><strong>原因四：php执行超时</strong></p><p>php执行超时，修改<code>/usr/local/php/etc/php.ini</code> 将<code>max_execution_time</code> 改为<code>300</code> 或直接改成<code>0</code> 不限制，同时还需要修改<code>/usr/local/php/etc/php-fpm.conf</code> 调整<code>request_terminate_timeout</code>的值，再<code>/etc/init.d/php-fpm restart</code>重启使其生效。</p><p><strong>原因五：磁盘空间不足</strong></p><p>使用命令<code>df -h</code>查看一下磁盘空间，磁盘空间不足，如mysql日志占用大量空间清理一下磁盘上的文件，有部分剩余空间，重启即可恢复。</p><p><strong>原因六：查看php-cgi或php-fpm进程是否在运行</strong></p><p>查看php-fpm是否开启，命令：<code>ps -ef|grep php</code></p><p>查看php-fpm的位置，命令：<code>whereis php-fpm</code></p><p><strong>原因七：nginx.conf配置</strong></p><p>将nginx.conf里的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_connect_timeout</span><br><span class="line">fastcgi_send_timeout</span><br><span class="line">fastcgi_read_timeout</span><br></pre></td></tr></table></figure><p>都调大一点。</p><p><strong>原因八：</strong></p><p><a href="https://bbs.vpser.net/thread-1654-1-1.html" target="_blank" rel="noopener">https://bbs.vpser.net/thread-1654-1-1.html</a></p><p><strong>原因九：</strong></p><p>不要按网上找到的教程随便修改配置，网上找到的可能会路径不一样，也可能会导致502或有相关的错误产生，例如网上其他的教程可以使用的是<code>9000</code>端口，而lnmp默认使用<code>socket</code>，你如果按网上的教程设置的端口或<code>socket</code>路径不一样那肯定100% 502无疑。</p><p>LNMP默认使用<code>unix</code>套接字，虚拟主机配置文件里 <code>fastcgi_pass</code>参数为<code>unix:/tmp/php-cgi.sock;</code> 需要确保<code>/usr/local/php/etc/php-fpm.cnf</code> 里的设置，php 5.2为<code>/tmp/php-cgi.sock</code> php 5.3及以上版本为<code>listen = /tmp/php-cgi.sock</code> ，同时<code>/usr/local/nginx/conf/nginx.conf</code> 及其<code>/usr/local/nginx/conf/vhost/</code> 下面的虚拟主机配置里的<code>fastcgi_pass  unix:/tmp/php-cgi.sock;</code> 不一致就必定502。</p><p>有时候<code>unix</code>套接字模式下可能会502，可以尝试改成<code>tcp/ip</code>的方式 php 5.2下<code>/tmp/php-cgi.sock</code>替换为<code>127.0.0.1:9000</code>  php 5.3及以上版本<code>listen = /tmp/php-cgi.sock</code>替换为<code>listen = 127.0.0.1:9000</code>，nginx配置文件及虚拟主机配置文件里<code>fastcgi_pass  unix:/tmp/php-cgi.sock;</code>替换为<code>fastcgi_pass  127.0.0.1:9000;</code>  之后重启试试。</p><p>十、如果虚拟主机的日志文件过大也可能会造成502问题。<br>建议定期清空一下虚拟主机的日志文件。</p><p>十一、有些程序或者程序的主题有死循环或其他非常占用资源的代码也可能会引起502，可以尝试暂时注释掉可能的主机的配置文件，重启看看是否还会502。</p><p>十二、如果以上方法都试过，但还有时会出现502错，可以尝试添加502自动重启脚本：<a href="https://bbs.vpser.net/thread-1913-1-1.html" target="_blank" rel="noopener">https://bbs.vpser.net/thread-1913-1-1.html</a></p><p>十三、实在找不到原因可以开启slowlog看看慢日志是否有相关有用的信息：<a href="https://bbs.vpser.net/viewthread.php?tid=10251&amp;page=1&amp;fromuid=3#pid30582" target="_blank" rel="noopener">https://bbs.vpser.net/viewthread.php?tid=10251&amp;page=1&amp;fromuid=3#pid30582</a></p><p>十四、升级PHP后出现502，可能php没升级成功。<br>如果是1.0之前的版本升级PHP到5.4或5.5后，可能是因为这个原因：<a href="https://bbs.vpser.net/thread-10763-1-1.html" target="_blank" rel="noopener">https://bbs.vpser.net/thread-10763-1-1.html</a></p><p>十五、CentOS 6 下，wordpress访问后台、安装wp、安装插件报502错误的解决方法：<a href="https://bbs.vpser.net/thread-10767-1-1.html" target="_blank" rel="noopener">https://bbs.vpser.net/thread-10767-1-1.html</a></p><p>参考地址：<a href="https://bbs.vpser.net/thread-1144-1-1.html" target="_blank" rel="noopener">https://bbs.vpser.net/thread-1144-1-1.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LNMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS6.5配置阿里云yum源后报错 http://mirrors.aliyun.com/centos/6/os/x86_64/repodata/repomd.xml The requested URL returned error: 404 Not Found</title>
      <link href="2021/05/25/CentOS6-5%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91yum%E6%BA%90%E5%90%8E%E6%8A%A5%E9%94%99-http-mirrors-aliyun-com-centos-6-os-x86-64-repodata-repomd-xml-The-requested-URL-returned-error-404-Not-Found/"/>
      <url>2021/05/25/CentOS6-5%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91yum%E6%BA%90%E5%90%8E%E6%8A%A5%E9%94%99-http-mirrors-aliyun-com-centos-6-os-x86-64-repodata-repomd-xml-The-requested-URL-returned-error-404-Not-Found/</url>
      
        <content type="html"><![CDATA[<p>CentOS6.5在配置阿里云yum源后，更新缓存发生报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost yum.repos.d]<span class="comment"># yum makecache</span></span><br><span class="line">Loaded plugins: fastestmirror, refresh-packagekit, security</span><br><span class="line">Determining fastest mirrors</span><br><span class="line"> * base: mirrors.aliyun.com</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.aliyun.com</span><br><span class="line">http://mirrors.aliyun.com/centos/6/os/x86_64/repodata/repomd.xml: [Errno 14] PYCURL ERROR 22 - <span class="string">"The requested URL returned error: 404 Not Found"</span></span><br><span class="line">Trying other mirror.</span><br><span class="line">http://mirrors.aliyuncs.com/centos/6/os/x86_64/repodata/repomd.xml: [Errno 12] Timeout on http://mirrors.aliyuncs.com/centos/6/os/x86_64/repodata/repomd.xml: (28, <span class="string">'connect() timed out!'</span>)</span><br><span class="line">Trying other mirror.</span><br><span class="line">http://mirrors.cloud.aliyuncs.com/centos/6/os/x86_64/repodata/repomd.xml: [Errno 14] PYCURL ERROR 6 - <span class="string">"Couldn't resolve host 'mirrors.cloud.aliyuncs.com'"</span></span><br><span class="line">Trying other mirror.</span><br><span class="line">Error: Cannot retrieve repository metadata (repomd.xml) <span class="keyword">for</span> repository: base. Please verify its path and try again</span><br></pre></td></tr></table></figure><a id="more"></a><p>原因是 <code>http://mirrors.aliyun.com/centos/6/</code> 下已经没有相关的文件，找不到自然报404</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">../</span><br><span class="line">readme                                             02-Dec-2020 09:00                 357</span><br></pre></td></tr></table></figure><p>解决方法是改成7即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d</span><br><span class="line">vi CentOS-Base.repo</span><br><span class="line">:%s/<span class="variable">$releasever</span>/7/g <span class="comment">#将文件中$releasever全部改成7</span></span><br><span class="line">yum clean all &amp;&amp; yum makecache <span class="comment"># 清除和缓存</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Git冲突：Please commit your changes or stash them before you can merge</title>
      <link href="2021/05/21/%E8%A7%A3%E5%86%B3Git%E5%86%B2%E7%AA%81%EF%BC%9APlease-commit-your-changes-or-stash-them-before-you-can-merge/"/>
      <url>2021/05/21/%E8%A7%A3%E5%86%B3Git%E5%86%B2%E7%AA%81%EF%BC%9APlease-commit-your-changes-or-stash-them-before-you-can-merge/</url>
      
        <content type="html"><![CDATA[<p>服务器更新代码<code>git pull</code>的时候有冲突</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Updating 6517e7c..d208dd9</span><br><span class="line">error: Your <span class="built_in">local</span> changes to the following files would be overwritten by merge:</span><br><span class="line">api/common.php</span><br><span class="line">app/portal/model/ReservationModel.php</span><br><span class="line">composer.lock</span><br><span class="line">Please, commit your changes or stash them before you can merge.</span><br><span class="line">Aborting</span><br></pre></td></tr></table></figure><p>出现这个问题的原因是版本库提交了新代码，而你服务器也修改了对应文件的代码，<br>这时候你进行<code>git pull</code>操作就好出现冲突了，解决方法，在上面的提示中也说的很明确了。</p><a id="more"></a><h2 id="保留本地的修改的改法"><a href="#保留本地的修改的改法" class="headerlink" title="保留本地的修改的改法"></a>保留本地的修改的改法</h2><h3 id="直接commit本地的修改"><a href="#直接commit本地的修改" class="headerlink" title="直接commit本地的修改"></a>直接commit本地的修改</h3><blockquote><p>一般不用这种方法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"****"</span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h3 id="通过git-stash"><a href="#通过git-stash" class="headerlink" title="通过git stash"></a>通过git stash</h3><blockquote><p>通常用这种方法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git pull</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>通过<code>git stash</code>将工作区恢复到上次提交的内容，同时备份本地所做的修改，之后就可以正常<code>git pull</code>了，<code>git pull</code>完成后，执行<code>git stash pop</code>将之前本地做的修改应用到当前工作区。</p><p><code>git stash</code>: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。</p><p><code>git stash pop</code>: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。</p><p><code>git stash list</code>: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。</p><p><code>git stash clear</code>: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。</p><h2 id="放弃本地修改-的改法"><a href="#放弃本地修改-的改法" class="headerlink" title="放弃本地修改 的改法"></a>放弃本地修改 的改法</h2><blockquote><p>这种方法会丢弃本地修改的代码，而且不可找回</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装 closurecompiler@1.6.1 失败</title>
      <link href="2021/04/13/%E5%AE%89%E8%A3%85-closurecompiler-1-6-1-%E5%A4%B1%E8%B4%A5/"/>
      <url>2021/04/13/%E5%AE%89%E8%A3%85-closurecompiler-1-6-1-%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<p>在安装<code>grunt</code>的时候，提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm i</span><br><span class="line">√ Installed 8 packages</span><br><span class="line">√ Linked 53 latest versions</span><br><span class="line">[1/1] scripts.install grunt-closurecompiler@0.9.9 ? closurecompiler@&gt;=1.2 run <span class="string">"npm run-script configure"</span>, root: <span class="string">"D:\\phpStudy\\PHPTutorial\\WWW\\gdfront\\ueditor_old\\node_modules\\_closurecompiler@1.6.1@closurecompiler"</span></span><br><span class="line"></span><br><span class="line">&gt; closurecompiler@1.6.1 configure D:\phpStudy\PHPTutorial\WWW\gdfront\ueditor_old\node_modules\_closurecompiler@1.6.1@closurecompiler</span><br><span class="line">&gt; node scripts/configure.js</span><br><span class="line"></span><br><span class="line">Configuring ClosureCompiler.js 1.6.1 ...</span><br><span class="line"></span><br><span class="line">  Downloading https://dl.google.com/closure-compiler/compiler-latest.tar.gz ...</span><br><span class="line">  ? Download failed: Error: Download failed: HTTP status code 404</span><br><span class="line"></span><br><span class="line">  ? Unfortunately, ClosureCompiler.js could not be configured.</span><br><span class="line">    See: https://github.com/dcodeIO/ClosureCompiler.js (create an issue maybe)</span><br><span class="line"></span><br><span class="line">npm ERR! code ELIFECYCLE</span><br><span class="line">npm ERR! errno 1</span><br><span class="line">npm ERR! closurecompiler@1.6.1 configure: `node scripts/configure.js`</span><br><span class="line">npm ERR! Exit status 1</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! Failed at the closurecompiler@1.6.1 configure script.</span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span><br><span class="line"></span><br><span class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR!     C:\Users\Caffrey\.npminstall_tarball\_logs\2021-04-13T06_53_17_040Z-debug.log</span><br><span class="line">[npminstall:runscript:error] grunt-closurecompiler@0.9.9 ? closurecompiler@&gt;=1.2 scripts.install run <span class="string">"npm run-script configure"</span> error: Error [RunScriptError]: Run <span class="string">"C:\Windows\system32\cmd.exe /d /s /c npm run-script configure"</span> error, <span class="built_in">exit</span> code 1</span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (D:\nvm\v12.18.0\node_modules\cnpm\node_modules\runscript\index.js:96:21)</span><br><span class="line">    at ChildProcess.emit (events.js:315:20)</span><br><span class="line">    at maybeClose (internal/child_process.js:1021:16)</span><br><span class="line">    at Process.ChildProcess._handle.onexit (internal/child_process.js:286:5) &#123;</span><br><span class="line">  stdio: [Object],</span><br><span class="line">  exitcode: 1</span><br><span class="line">&#125;</span><br><span class="line">× Install fail! RunScriptError: post install error, please remove node_modules before retry!</span><br><span class="line">Run <span class="string">"C:\Windows\system32\cmd.exe /d /s /c npm run-script configure"</span> error, <span class="built_in">exit</span> code 1</span><br><span class="line">RunScriptError: Run <span class="string">"C:\Windows\system32\cmd.exe /d /s /c npm run-script configure"</span> error, <span class="built_in">exit</span> code 1</span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (D:\nvm\v12.18.0\node_modules\cnpm\node_modules\runscript\index.js:96:21)</span><br><span class="line">    at ChildProcess.emit (events.js:315:20)</span><br><span class="line">    at maybeClose (internal/child_process.js:1021:16)</span><br><span class="line">    at Process.ChildProcess._handle.onexit (internal/child_process.js:286:5)</span><br><span class="line">npminstall version: 3.28.0</span><br><span class="line">npminstall args: D:\Program Files\nodejs\node.exe D:\nvm\v12.18.0\node_modules\cnpm\node_modules\npminstall\bin\install.js --fix-bug-versions --china --userconfig=C:\Users\Caffrey\.cnpmrc --disturl=https://npm.taobao.org/mirrors/node --registry=https://r.npm.taobao.org</span><br></pre></td></tr></table></figure><a id="more"></a><p>首选全局安装 <code>closurecompiler</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g closurecompiler</span><br></pre></td></tr></table></figure><p>或<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g closurecompiler</span><br></pre></td></tr></table></figure></p><p>然后在安装<code>grunt</code>，我这里是有<code>package.json</code>，所以直接<code>cnpm i</code></p>]]></content>
      
      
      <categories>
          
          <category> Nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> cnpm </tag>
            
            <tag> grunt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS点击空白处关闭弹窗方法</title>
      <link href="2021/03/11/JS%E7%82%B9%E5%87%BB%E7%A9%BA%E7%99%BD%E5%A4%84%E5%85%B3%E9%97%AD%E5%BC%B9%E7%AA%97%E6%96%B9%E6%B3%95/"/>
      <url>2021/03/11/JS%E7%82%B9%E5%87%BB%E7%A9%BA%E7%99%BD%E5%A4%84%E5%85%B3%E9%97%AD%E5%BC%B9%E7%AA%97%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="第一种-jQuery-写法"><a href="#第一种-jQuery-写法" class="headerlink" title="第一种  jQuery 写法"></a>第一种  jQuery 写法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">style</span>=<span class="string">"width: 100%;height: 100%;"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">html,</span></span><br><span class="line"><span class="undefined">body &#123;</span></span><br><span class="line"><span class="undefined">width: 100%;</span></span><br><span class="line"><span class="undefined">height: 100%;</span></span><br><span class="line"><span class="undefined">border: 0;</span></span><br><span class="line"><span class="undefined">margin: 0;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.dialog</span> &#123;</span></span><br><span class="line"><span class="undefined">width: 100%;</span></span><br><span class="line"><span class="undefined">height: 100%;</span></span><br><span class="line"><span class="undefined">position: relative;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.1</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.dialog</span> <span class="selector-class">.dialog-content</span> &#123;</span></span><br><span class="line"><span class="undefined">width: 200px;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#eeeeee</span>;</span></span><br><span class="line"><span class="undefined">position: absolute;</span></span><br><span class="line"><span class="undefined">top: 50%;</span></span><br><span class="line"><span class="undefined">left: 50%;</span></span><br><span class="line"><span class="undefined">transform: translate(-50%, -50%);</span></span><br><span class="line"><span class="css"><span class="selector-tag">background</span>: <span class="selector-id">#FFF</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">box-shadow</span>: 1<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> <span class="selector-id">#888888</span>;</span></span><br><span class="line"><span class="undefined">text-align: center;</span></span><br><span class="line"><span class="undefined">line-height: 100px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"width: 100%;height: 100%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dialog"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dialog-content"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是弹窗<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/1.11.3/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">$(<span class="built_in">document</span>).mouseup(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> dc = $(<span class="string">'.dialog-content'</span>); <span class="comment">// 目标区域,弹窗内容区域</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// 如果点击的 不是目标区域 并且 不是目标区域的子元素</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (!dc.is(e.target) &amp;&amp; dc.has(e.target).length === <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// some code... </span></span></span><br><span class="line"><span class="javascript">$(<span class="string">'.dialog'</span>).hide();</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>判断点击事件发生在区域外的条件是：</strong></p><ul><li>点击事件的对象不是目标区域本身</li><li>事件对象同时也不是目标区域的子元素</li></ul><a id="more"></a><h2 id="第二种-源生JS写法"><a href="#第二种-源生JS写法" class="headerlink" title="第二种 源生JS写法"></a>第二种 源生JS写法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">style</span>=<span class="string">"width: 100%;height: 100%;"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">html,</span></span><br><span class="line"><span class="undefined">body &#123;</span></span><br><span class="line"><span class="undefined">width: 100%;</span></span><br><span class="line"><span class="undefined">height: 100%;</span></span><br><span class="line"><span class="undefined">border: 0;</span></span><br><span class="line"><span class="undefined">margin: 0;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.dialog</span> &#123;</span></span><br><span class="line"><span class="undefined">width: 100%;</span></span><br><span class="line"><span class="undefined">height: 100%;</span></span><br><span class="line"><span class="undefined">position: relative;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.1</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.dialog</span> <span class="selector-class">.dialog-content</span> &#123;</span></span><br><span class="line"><span class="undefined">width: 200px;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#eeeeee</span>;</span></span><br><span class="line"><span class="undefined">position: absolute;</span></span><br><span class="line"><span class="undefined">top: 50%;</span></span><br><span class="line"><span class="undefined">left: 50%;</span></span><br><span class="line"><span class="undefined">transform: translate(-50%, -50%);</span></span><br><span class="line"><span class="css"><span class="selector-tag">background</span>: <span class="selector-id">#FFF</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">box-shadow</span>: 1<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> <span class="selector-id">#888888</span>;</span></span><br><span class="line"><span class="undefined">text-align: center;</span></span><br><span class="line"><span class="undefined">line-height: 100px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"width: 100%;height: 100%;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dialog"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dialog-content"</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是弹窗<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/1.11.3/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.addEventListener(<span class="string">'mouseup'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> dc = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'dialog-content'</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (dc &amp;&amp; !dc.contains(e.target)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">// some code...</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">'.dialog'</span>).hide();</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度编辑器UEditor去除复制样式实现无格式粘贴</title>
      <link href="2021/02/19/%E7%99%BE%E5%BA%A6%E7%BC%96%E8%BE%91%E5%99%A8UEditor%E5%8E%BB%E9%99%A4%E5%A4%8D%E5%88%B6%E6%A0%B7%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%97%A0%E6%A0%BC%E5%BC%8F%E7%B2%98%E8%B4%B4/"/>
      <url>2021/02/19/%E7%99%BE%E5%BA%A6%E7%BC%96%E8%BE%91%E5%99%A8UEditor%E5%8E%BB%E9%99%A4%E5%A4%8D%E5%88%B6%E6%A0%B7%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%97%A0%E6%A0%BC%E5%BC%8F%E7%B2%98%E8%B4%B4/</url>
      
        <content type="html"><![CDATA[<p>百度编辑器UEditor内置了无格式粘贴功能，只需要对<code>ueditor/ueditor.config.js</code>文件简单的配置即可。</p><ol><li>开启<code>retainOnlyLabelPasted</code>，设置为<code>true</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//粘贴只保留标签，去除标签所有属性</span></span><br><span class="line">,<span class="attr">retainOnlyLabelPasted</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure><ol start="2"><li>开启<code>pasteplain</code>，设置为<code>true</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">,<span class="attr">pasteplain</span>:<span class="literal">true</span>  <span class="comment">//是否默认为纯文本粘贴。false为不使用纯文本粘贴，true为使用纯文本粘贴</span></span><br></pre></td></tr></table></figure><a id="more"></a><ol start="3"><li>修改<code>filterTxtRules</code>过滤规则</li></ol><p><code>filterTxtRules</code>过滤规则默认只过滤<code>p</code>、<code>div</code>、<code>li</code>这几个标签。如果<code>h1</code>~<code>h6</code>这类标签，只是将标签体替换为<code>p</code>标签，并没有将标签体的样式去除。</p><p>如果需要将所有标签的样式都去掉，修改过滤规则为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//纯文本粘贴模式下的过滤规则</span></span><br><span class="line">,<span class="string">'filterTxtRules'</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">transP</span>(<span class="params">node</span>)</span>&#123;</span><br><span class="line">        node.tagName = <span class="string">'p'</span>;</span><br><span class="line">        node.setStyle();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="comment">//直接删除及其字节点内容</span></span><br><span class="line">        <span class="string">'-'</span> : <span class="string">'script style object iframe embed input select'</span>,</span><br><span class="line">        <span class="string">'p'</span>: &#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'br'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'div'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'li'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'caption'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'th'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'tr'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'h1'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,<span class="string">'h2'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,<span class="string">'h3'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,<span class="string">'h4'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,<span class="string">'h5'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,<span class="string">'h6'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'td'</span>:<span class="function"><span class="keyword">function</span>(<span class="params">node</span>)</span>&#123;</span><br><span class="line">            <span class="comment">//没有内容的td直接删掉</span></span><br><span class="line">            <span class="keyword">var</span> txt = !!node.innerText();</span><br><span class="line">            <span class="keyword">if</span>(txt)&#123;</span><br><span class="line">                node.parentNode.insertAfter(UE.uNode.createText(<span class="string">' &amp;nbsp; &amp;nbsp;'</span>),node);</span><br><span class="line">            &#125;</span><br><span class="line">            node.parentNode.removeChild(node,node.innerText())</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><p>如果<code>h1</code>~<code>h6</code>这类标签，只是将标签体替换为<code>p</code>标签，并将样式都去掉，修改过滤规则为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//纯文本粘贴模式下的过滤规则</span></span><br><span class="line">,<span class="string">'filterTxtRules'</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">transP</span>(<span class="params">node</span>)</span>&#123;</span><br><span class="line">        node.tagName = <span class="string">'p'</span>;</span><br><span class="line">        node.setStyle();</span><br><span class="line">        <span class="keyword">delete</span> node.attrs.style;<span class="comment">// 删除样式</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="comment">//直接删除及其字节点内容</span></span><br><span class="line">        <span class="string">'-'</span> : <span class="string">'script style object iframe embed input select'</span>,</span><br><span class="line">        <span class="string">'p'</span>: &#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'br'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'div'</span>:&#123;<span class="string">'$'</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'li'</span>:&#123;<span class="string">'$'</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'caption'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'th'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'tr'</span>:&#123;<span class="attr">$</span>:&#123;&#125;&#125;,</span><br><span class="line">        <span class="string">'h1'</span>:transP,<span class="string">'h2'</span>:transP,<span class="string">'h3'</span>:transP,<span class="string">'h4'</span>:transP,<span class="string">'h5'</span>:transP,<span class="string">'h6'</span>:transP,</span><br><span class="line">        <span class="string">'td'</span>:<span class="function"><span class="keyword">function</span>(<span class="params">node</span>)</span>&#123;</span><br><span class="line">            <span class="comment">//没有内容的td直接删掉</span></span><br><span class="line">            <span class="keyword">var</span> txt = !!node.innerText();</span><br><span class="line">            <span class="keyword">if</span>(txt)&#123;</span><br><span class="line">                node.parentNode.insertAfter(UE.uNode.createText(<span class="string">' &amp;nbsp; &amp;nbsp;'</span>),node);</span><br><span class="line">            &#125;</span><br><span class="line">            node.parentNode.removeChild(node,node.innerText())</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> 编辑器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UEditor </tag>
            
            <tag> 编辑器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度编辑器UEditor增加字间距工具按钮</title>
      <link href="2021/02/19/%E7%99%BE%E5%BA%A6%E7%BC%96%E8%BE%91%E5%99%A8UEditor%E5%A2%9E%E5%8A%A0%E5%AD%97%E9%97%B4%E8%B7%9D%E5%B7%A5%E5%85%B7%E6%8C%89%E9%92%AE/"/>
      <url>2021/02/19/%E7%99%BE%E5%BA%A6%E7%BC%96%E8%BE%91%E5%99%A8UEditor%E5%A2%9E%E5%8A%A0%E5%AD%97%E9%97%B4%E8%B7%9D%E5%B7%A5%E5%85%B7%E6%8C%89%E9%92%AE/</url>
      
        <content type="html"><![CDATA[<p>百度编辑器工具栏中没有字间距工具，在编辑富文本的时候可能会用到字间距设置，这里我们来扩展一个字间距工具。</p><p>使用的百度编辑器UEditor版本为<code>ueditor-1.4.3.3</code></p><h2 id="修改语言包"><a href="#修改语言包" class="headerlink" title="修改语言包"></a>修改语言包</h2><p><strong>中文</strong></p><p>文件<code>ueditor/lang/zh-cn/zh-cn.js</code>在<code>labelMap</code>里面添加<code>&#39;letterspacing&#39;:&#39;字间距&#39;,</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'lineheight'</span>:<span class="string">'行间距'</span>,<span class="string">'letterspacing'</span>:<span class="string">'字间距'</span>,<span class="string">'edittip'</span> :<span class="string">'编辑提示'</span>,<span class="string">'customstyle'</span>:<span class="string">'自定义标题'</span>, <span class="string">'autotypeset'</span>:<span class="string">'自动排版'</span>,</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>英文</strong></p><p>文件<code>ueditor/lang/en/en.js</code>在<code>labelMap</code>里面添加<code>&#39;letterspacing&#39;:&#39;LineHeight&#39;,</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'lineheight'</span>:<span class="string">'LineHeight'</span>,<span class="string">'letterspacing'</span>:<span class="string">'LetterSpacing'</span>,<span class="string">'edittip'</span>:<span class="string">'EditTip'</span>,<span class="string">'customstyle'</span>:<span class="string">'CustomStyle'</span>, <span class="string">'scrawl'</span>:<span class="string">'Scrawl'</span>, <span class="string">'autotypeset'</span>:<span class="string">'AutoTypeset'</span>,</span><br></pre></td></tr></table></figure><h2 id="工具栏添加字间距按钮"><a href="#工具栏添加字间距按钮" class="headerlink" title="工具栏添加字间距按钮"></a>工具栏添加字间距按钮</h2><p>文件<code>ueditor/ueditor.config.js</code>里面<code>toolbars</code>时增加<code>letterspacing</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//工具栏上的所有的功能按钮和下拉框，可以在new编辑器的实例时选择自己需要的重新定义</span></span><br><span class="line">, <span class="attr">toolbars</span>: [[</span><br><span class="line">    <span class="string">'fullscreen'</span>, <span class="string">'source'</span>, <span class="string">'|'</span>, <span class="string">'undo'</span>, <span class="string">'redo'</span>, <span class="string">'|'</span>,</span><br><span class="line">    <span class="string">'bold'</span>, <span class="string">'italic'</span>, <span class="string">'underline'</span>, <span class="string">'fontborder'</span>, <span class="string">'strikethrough'</span>, <span class="string">'superscript'</span>, <span class="string">'subscript'</span>, <span class="string">'removeformat'</span>, <span class="string">'formatmatch'</span>, <span class="string">'autotypeset'</span>, <span class="string">'blockquote'</span>, <span class="string">'pasteplain'</span>, <span class="string">'|'</span>, <span class="string">'forecolor'</span>, <span class="string">'backcolor'</span>, <span class="string">'insertorderedlist'</span>, <span class="string">'insertunorderedlist'</span>, <span class="string">'selectall'</span>, <span class="string">'cleardoc'</span>, <span class="string">'|'</span>,</span><br><span class="line">    <span class="string">'rowspacingtop'</span>, <span class="string">'rowspacingbottom'</span>, <span class="string">'lineheight'</span>, <span class="string">'letterspacing'</span>,<span class="string">'|'</span>,</span><br><span class="line">    <span class="string">'customstyle'</span>, <span class="string">'paragraph'</span>, <span class="string">'fontfamily'</span>, <span class="string">'fontsize'</span>, <span class="string">'|'</span>,</span><br><span class="line">    <span class="string">'directionalityltr'</span>, <span class="string">'directionalityrtl'</span>, <span class="string">'indent'</span>, <span class="string">'|'</span>,</span><br><span class="line">    <span class="string">'justifyleft'</span>, <span class="string">'justifycenter'</span>, <span class="string">'justifyright'</span>, <span class="string">'justifyjustify'</span>, <span class="string">'|'</span>, <span class="string">'touppercase'</span>, <span class="string">'tolowercase'</span>, <span class="string">'|'</span>,</span><br><span class="line">    <span class="string">'link'</span>, <span class="string">'unlink'</span>, <span class="string">'anchor'</span>, <span class="string">'|'</span>, <span class="string">'imagenone'</span>, <span class="string">'imageleft'</span>, <span class="string">'imageright'</span>, <span class="string">'imagecenter'</span>, <span class="string">'|'</span>,</span><br><span class="line">    <span class="string">'simpleupload'</span>, <span class="string">'insertimage'</span>, <span class="string">'emotion'</span>, <span class="string">'scrawl'</span>, <span class="string">'insertvideo'</span>, <span class="string">'music'</span>, <span class="string">'attachment'</span>, <span class="string">'map'</span>, <span class="string">'gmap'</span>, <span class="string">'insertframe'</span>, <span class="string">'insertcode'</span>, <span class="string">'webapp'</span>, <span class="string">'pagebreak'</span>, <span class="string">'template'</span>, <span class="string">'background'</span>, <span class="string">'|'</span>,</span><br><span class="line">    <span class="string">'horizontal'</span>, <span class="string">'date'</span>, <span class="string">'time'</span>, <span class="string">'spechars'</span>, <span class="string">'snapscreen'</span>, <span class="string">'wordimage'</span>, <span class="string">'|'</span>,</span><br><span class="line">    <span class="string">'inserttable'</span>, <span class="string">'deletetable'</span>, <span class="string">'insertparagraphbeforetable'</span>, <span class="string">'insertrow'</span>, <span class="string">'deleterow'</span>, <span class="string">'insertcol'</span>, <span class="string">'deletecol'</span>, <span class="string">'mergecells'</span>, <span class="string">'mergeright'</span>, <span class="string">'mergedown'</span>, <span class="string">'splittocells'</span>, <span class="string">'splittorows'</span>, <span class="string">'splittocols'</span>, <span class="string">'charts'</span>, <span class="string">'|'</span>,</span><br><span class="line">    <span class="string">'print'</span>, <span class="string">'preview'</span>, <span class="string">'searchreplace'</span>, <span class="string">'drafts'</span>, <span class="string">'help'</span></span><br><span class="line">]]</span><br></pre></td></tr></table></figure><h2 id="添加样式"><a href="#添加样式" class="headerlink" title="添加样式"></a>添加样式</h2><p><strong>不含有ueditor.all.js</strong></p><p>文件<code>ueditor/themes/default/_css/buttonicon.css</code>里面加上图标，因为有下拉框而且是自定义图标，不能单纯的修改.<code>edui-default .edui-for-letterspacing .edui-icon</code>，中间要加上.edui-button-body</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.edui-default</span>  <span class="selector-class">.edui-for-lineheight</span> <span class="selector-class">.edui-icon</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: -<span class="number">725px</span> -<span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 字间距样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-class">.edui-default</span> <span class="selector-class">.edui-for-letterspacing</span> <span class="selector-class">.edui-button-body</span> <span class="selector-class">.edui-icon</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/letterspacing.png) center no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>含有ueditor.all.js</strong></p><p>文件<code>ueditor/themes/default/css/ueditor.css</code>里面添加如上代码</p><blockquote><p>tip: letterspacing.png图片自行找一个吧</p></blockquote><h2 id="添加plugins"><a href="#添加plugins" class="headerlink" title="添加plugins"></a>添加plugins</h2><p><strong>不含有ueditor.all.js</strong></p><p>在<code>ueditor/_src/plugins/</code>目录下添加<code>letterspacing.js</code>文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置字间距</span></span><br><span class="line"><span class="comment"> * @file</span></span><br><span class="line"><span class="comment"> * @since 1.2.6.1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">UE.plugins[<span class="string">'letterspacing'</span>] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> me = <span class="keyword">this</span>;</span><br><span class="line">    me.setOpt(&#123;</span><br><span class="line">        <span class="string">'letterspacing'</span>: [<span class="string">'0'</span>, <span class="string">'0.25'</span>, <span class="string">'0.5'</span>, <span class="string">'1'</span>, <span class="string">'1.5'</span>, <span class="string">'2'</span>, <span class="string">'2.5'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>]</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字间距</span></span><br><span class="line"><span class="comment">     * @command letterspacing</span></span><br><span class="line"><span class="comment">     * @method execCommand</span></span><br><span class="line"><span class="comment">     * @param &#123; String &#125; cmdName 命令字符串</span></span><br><span class="line"><span class="comment">     * @param &#123; String &#125; value 传入的行高值， 该值是当前字体的倍数， 例如： 1.5, 2.5</span></span><br><span class="line"><span class="comment">     * @example</span></span><br><span class="line"><span class="comment">     * ` ``javascript</span></span><br><span class="line"><span class="comment">     * editor.execCommand( 'letterspacing', 1.5);</span></span><br><span class="line"><span class="comment">     * ` ``</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询当前选区内容的行高大小</span></span><br><span class="line"><span class="comment">     * @command letterspacing</span></span><br><span class="line"><span class="comment">     * @method queryCommandValue</span></span><br><span class="line"><span class="comment">     * @param &#123; String &#125; cmd 命令字符串</span></span><br><span class="line"><span class="comment">     * @return &#123; String &#125; 返回当前行高大小</span></span><br><span class="line"><span class="comment">     * @example</span></span><br><span class="line"><span class="comment">     * ` ``javascript</span></span><br><span class="line"><span class="comment">     * editor.queryCommandValue( 'letterspacing' );</span></span><br><span class="line"><span class="comment">     * ` ``</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    me.commands[<span class="string">'letterspacing'</span>] = &#123;</span><br><span class="line">        execCommand: <span class="function"><span class="keyword">function</span>(<span class="params">cmdName, value</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.execCommand(<span class="string">'paragraph'</span>, <span class="string">'p'</span>, &#123;</span><br><span class="line">                style: <span class="string">'letter-spacing:'</span> + (value == <span class="string">"1"</span> ? <span class="string">"normal"</span> : value + <span class="string">'em'</span>)</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        queryCommandValue: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> pN = domUtils.filterNodeList(<span class="keyword">this</span>.selection.getStartElementPath(), <span class="function"><span class="keyword">function</span>(<span class="params">node</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> domUtils.isBlockElm(node)</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">if</span> (pN) &#123;</span><br><span class="line">                <span class="keyword">var</span> value = domUtils.getComputedStyle(pN, <span class="string">'letter-spacing'</span>);</span><br><span class="line">                <span class="keyword">return</span> value == <span class="string">'normal'</span> ? <span class="number">1</span> : value.replace(<span class="regexp">/[^\d.]*/ig</span>, <span class="string">""</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后在文件<code>ueditor/_examples/editor_api.js</code>里面加入<code>letterspacing</code>plugins路径</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'plugins/lineheight.js'</span>,</span><br><span class="line"><span class="string">'plugins/letterspacing.js'</span>,</span><br><span class="line"><span class="string">'plugins/insertcode.js'</span>,</span><br></pre></td></tr></table></figure><p><strong>含有ueditor.all.js</strong></p><p>在<code>ueditor/ueditor.all.js</code>里面添加如上代码</p><h2 id="ui跟编辑器的适配层"><a href="#ui跟编辑器的适配层" class="headerlink" title="ui跟编辑器的适配层"></a>ui跟编辑器的适配层</h2><p><strong>不含有ueditor.all.js</strong></p><p>在<code>ueditor/_src/adapter/editorui.js</code>文件里面<code>editorui.lineheight</code>方法后添加<code>editorui.letterspacing</code>方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">editorui.letterspacing = <span class="function"><span class="keyword">function</span> (<span class="params">editor</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> val = editor.options.letterspacing || [];</span><br><span class="line">  <span class="keyword">if</span> (!val.length)<span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, ci, items = []; ci = val[i++];) &#123;</span><br><span class="line">      items.push(&#123;</span><br><span class="line">          <span class="comment">//todo:写死了</span></span><br><span class="line">          label:ci,</span><br><span class="line">          value:ci,</span><br><span class="line">          theme:editor.options.theme,</span><br><span class="line">          onclick:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              editor.execCommand(<span class="string">"letterspacing"</span>, <span class="keyword">this</span>.value);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> ui = <span class="keyword">new</span> editorui.MenuButton(&#123;</span><br><span class="line">      editor:editor,</span><br><span class="line">      className:<span class="string">'edui-for-letterspacing'</span>,</span><br><span class="line">      title:editor.options.labelMap[<span class="string">'letterspacing'</span>] || editor.getLang(<span class="string">"labelMap.letterspacing"</span>) || <span class="string">''</span>,</span><br><span class="line">      items:items,</span><br><span class="line">      onbuttonclick:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> value = editor.queryCommandValue(<span class="string">'LetterSpacing'</span>) || <span class="keyword">this</span>.value;</span><br><span class="line">          editor.execCommand(<span class="string">"LetterSpacing"</span>, value);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  editorui.buttons[<span class="string">'letterspacing'</span>] = ui;</span><br><span class="line">  editor.addListener(<span class="string">'selectionchange'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> state = editor.queryCommandState(<span class="string">'LetterSpacing'</span>);</span><br><span class="line">      <span class="keyword">if</span> (state == <span class="number">-1</span>) &#123;</span><br><span class="line">          ui.setDisabled(<span class="literal">true</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          ui.setDisabled(<span class="literal">false</span>);</span><br><span class="line">          <span class="keyword">var</span> value = editor.queryCommandValue(<span class="string">'LetterSpacing'</span>);</span><br><span class="line">          value &amp;&amp; ui.setValue((value + <span class="string">''</span>).replace(<span class="regexp">/cm/</span>, <span class="string">''</span>));</span><br><span class="line">          ui.setChecked(state)</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> ui;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>含有ueditor.all.js</strong></p><p>在<code>ueditor/ueditor.all.js</code>里面添加如上代码</p><blockquote><p>tip:如果按钮有处理展示下拉框，无需在当前文件中<code>btnCmds</code>上添加按钮标识<code>letterspacing</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> 编辑器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UEditor </tag>
            
            <tag> 编辑器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5直播实现方案</title>
      <link href="2021/01/26/H5%E7%9B%B4%E6%92%AD%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/"/>
      <url>2021/01/26/H5%E7%9B%B4%E6%92%AD%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p><a href="https://gitee.com/peakxin/h5-live" target="_blank" rel="noopener">Demo地址</a></p><h2 id="视频编码格式"><a href="#视频编码格式" class="headerlink" title="视频编码格式"></a>视频编码格式</h2><ul><li>视频文件格式（容器格式）</li><li>视频编解码器（视频编码格式）</li><li>视频一开始由两个端采集，视频输入口、音频输入口。采集的数据会分别进行相关处理，简而言之就是：将视频/音频流通过一定的手段转换为比特流并且压缩，最终，这里将比特流以一定顺序放到一个盒子里进行存放，从而声称我们最终所看到的音视频格式。如：mp3/mp4/flv</li></ul><a id="more"></a><h2 id="常用直播协议"><a href="#常用直播协议" class="headerlink" title="常用直播协议"></a>常用直播协议</h2><table><thead><tr><th>协议</th><th>原理</th><th>传输协议</th><th>播放器</th><th>延时</th><th>兼容</th></tr></thead><tbody><tr><td>RTMP</td><td>每个时刻的数据收到后立即转发</td><td>TCP</td><td>flash</td><td>1-3s</td><td>需要flash播放器，H5上依赖第三方插件(如：video.js )</td></tr><tr><td>HLS</td><td>集合一段时间的数据m3u8，生成ts切片文件，播放完一个列表，在更新下一个列表</td><td>HTTP</td><td><code>video</code></td><td>5-20s</td><td>H5上直接可播放</td></tr><tr><td>HTTP-FLV</td><td>同RTMP</td><td>HTTP</td><td><code>video</code></td><td>1-3s</td><td>依赖第三方插件，IOS无法播放</td></tr></tbody></table><h3 id="RTMP"><a href="#RTMP" class="headerlink" title="RTMP"></a>RTMP</h3><p>RTMP，全称 <strong>Real Time Messaging Protocol</strong>，即<strong>实时消息传送协议</strong>，基于TCP。是 Macromedia 开发的一套视频直播协议，现在属于 Adobe，可用于拉流和推流。基于TCP。协议中的基本数据单元成为消息（Message），传输的过程中消息会被拆分为更小的消息块（Chunk）单元。最后将分割后的消息块通过 TCP 协议传输，接收端再反解接收的消息块恢复成流媒体数据</p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p>使用第三方插件<a href="https://videojs.com/" target="_blank" rel="noopener">video.js</a>，因为video.js把flash的兼容去掉了，还需使用<a href="https://github.com/videojs/videojs-flash" target="_blank" rel="noopener">videojs-flash</a></p><h4 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h4><ul><li>RTMP是专为流媒体开发的协议，对底层优化比其他协议更加优秀，同时他Adobe flash支持好，基本上所有的编码器（摄像头之类）都支持RTMP输出</li><li>RTMP由TCP长连接协议，所以客户端向服务端推流这些操作而言，延时性很低。</li><li>pc 主要是 windows ，windows的浏览器基本都支持flash，另外 RTMP适合长时间播放</li><li>最后RTMP的延迟相对较低，一般延时1-3s</li></ul><h4 id="劣势"><a href="#劣势" class="headerlink" title="劣势"></a>劣势</h4><ul><li>使用Flash播放，现在各大浏览器厂商已经默认禁用Flash</li><li>基于TCP协议，非公共端口，可能会被防火墙阻拦</li></ul><h3 id="HLS"><a href="#HLS" class="headerlink" title="HLS"></a>HLS</h3><p>HLS全称<strong>HTTP Live Streaming</strong>，是一个基于http的流媒体通信协议，由Apple公司实现，<strong>只能用于拉流</strong>，在移动端上的兼容性非常好，是移动端的主流直播解决方案。</p><p>HLS的工作原理简单来说就是把一段视频流，分成一个个小的基于HTTP的文件来下载。当媒体流正在播放时，客户端可以根据当前网络环境，方便地在不同的码率流中做切换，以实现更好的观影体验。</p><h4 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h4><p>直接使用标签播放</p><p>为更好的兼容性，也可以使用videoJS，但是还需要多引入一个插件 <a href="https://github.com/videojs/http-streaming" target="_blank" rel="noopener">videojs-http-streaming</a></p><p>HLS协议拉到的视频格式是 .m3u8（无法用浏览器直接打开，可以下载VLC这个工具来播放），下图是一个m3u8的文件在浏览器中播放，浏览器获取m3u8的文件后，会再去下载一个.m3u8的文件，注意此时的文件类型是m3u，浏览器会根据这个文件的playlist去下载ts文件，也就是视频切片（这个地址可以直接复制到浏览器打开），然后按顺序播放ts文件。当一个playlist的ts文件播放完后，浏览器会再去下载m3u8文件，获取新的playlist，周而复始。</p><p><strong>m3u8 文件信息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#EXTM3U                            # m3u文件头</span><br><span class="line">#EXT-X-VERSION:3 </span><br><span class="line">#EXT-X-MEDIA-SEQUENCE:2133         # 第一个TS分片的序列号</span><br><span class="line">#EXT-X-TARGETDURATION:6            # 每个分片TS的最大时长</span><br><span class="line">#EXTINF:6.375,                     # 指定每个媒体段(ts)的持续时间，仅对后面的 URI 有效</span><br><span class="line">huputv-ali-live.arenacdn.com_SFlDeHJTSU51NTdV_pbk550-1587696415663.ts?auth_key=1587706605-0-0-10fedd520ec472c1a5dc39d0dcf2984f</span><br><span class="line">#EXTINF:6.375,</span><br><span class="line">huputv-ali-live.arenacdn.com_SFlDeHJTSU51NTdV_pbk550-1587696421958.ts?auth_key=1587706605-0-0-c8d8918ccba170a99f518b55aa2ea290</span><br><span class="line">#EXTINF:6.375,</span><br><span class="line">huputv-ali-live.arenacdn.com_SFlDeHJTSU51NTdV_pbk550-1587696428405.ts?auth_key=1587706605-0-0-f00ab35ac2c77091ac1e7ef693cde112</span><br><span class="line">#EXTINF:6.375,</span><br><span class="line">huputv-ali-live.arenacdn.com_SFlDeHJTSU51NTdV_pbk550-1587696434822.ts?auth_key=1587706605-0-0-08051ceb940b5d0a52292ab9c6e510dd</span><br><span class="line">#EXTINF:6.375,</span><br><span class="line">huputv-ali-live.arenacdn.com_SFlDeHJTSU51NTdV_pbk550-1587696441198.ts?auth_key=1587706605-0-0-fba4c6b281980017fa08a6139fc74a9d</span><br><span class="line">#EXTINF:6.375,</span><br><span class="line">huputv-ali-live.arenacdn.com_SFlDeHJTSU51NTdV_pbk550-1587696447480.ts?auth_key=1587706605-0-0-c3b335be3abe37b37af3339875610851</span><br></pre></td></tr></table></figure><p>HLS的延时高的原因之一是，要生成切片才能推送数据，如果每个 ts 按照 5 秒来切分，一个 m3u8 放 6 个 ts 索引，那么至少就会带来 30 秒的延迟。如果减少每个 ts 的长度，减少 m3u8 中的索引数，延时确实会减少，但会带来更频繁的缓冲，对服务端的请求压力也会成倍增加。所以只能根据实际情况找到一个折中的点。</p><h4 id="项目中的一个小问题"><a href="#项目中的一个小问题" class="headerlink" title="项目中的一个小问题"></a>项目中的一个小问题</h4><p>在项目中，这个m3u8的地址是由前端通过接口请求后端得到的，而我们后端也是需要去像厂家拉流，这就存在一个问题，有可能后端把地址推送给我们了，但是ts文件还未生成，也就是没有playlist，这时候就会导致视频播放错误，可以通过video的onerror事件监听，把m3u8的地址重新赋值给video的src属性。</p><h4 id="优势-1"><a href="#优势-1" class="headerlink" title="优势"></a>优势</h4><ul><li>使用H5标签即可播放</li><li>穿透防火墙。基于 HTTP/80 传输，有效避免防火墙拦截</li><li>性能高。通过 HTTP 传输， 支持网络分发，CDN 支持良好，且自带多码率自适应，Apple 在提出 HLS 时，就已经考虑了码流自适应的问题</li></ul><h4 id="劣势-1"><a href="#劣势-1" class="headerlink" title="劣势"></a>劣势</h4><ul><li>延时较高，HLS 的延迟基本在 10s+ 以上</li><li>会下载非常多的ts文件</li></ul><h3 id="HTTP-FLV"><a href="#HTTP-FLV" class="headerlink" title="HTTP-FLV"></a>HTTP-FLV</h3><p>FLV (Flash Video) 是 Adobe 公司推出的另一种视频格式，文件后缀.flv，是一种在网络上传输的流媒体数据存储容器格式。HttpFlv 就是 http+flv，将音视频数据封装成FLV格式，然后通过 HTTP 协议传输给客户端。</p><h4 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h4><p>使用B站的开源方案<a href="https://github.com/Bilibili/flv.js" target="_blank" rel="noopener">flv.js</a>插件，该插件依赖于<a href="https://w3c.github.io/media-source/" target="_blank" rel="noopener">Media Source Extensions</a>，而Media Source Extensions在IOS上兼容性很差，但在ipadOS13以上全支持（这个大家可以持续关注下）</p><h4 id="优势-2"><a href="#优势-2" class="headerlink" title="优势"></a>优势</h4><ul><li>延时低</li><li>基于http协议，可穿透防火墙</li><li>不依赖Flash</li></ul><h4 id="劣势-2"><a href="#劣势-2" class="headerlink" title="劣势"></a>劣势</h4><ul><li>移动端IOS设备兼容性差</li></ul><h3 id="DASH"><a href="#DASH" class="headerlink" title="DASH"></a>DASH</h3><p>DASH的全称是Dynamic Adaptive Streaming over HTTP，是HLS的一种可替代方案。youtube用的是DASH。DASH会通过media presentation description (MPD)将视频内容切片成一个很短的文件片段，每个切片都有多个不同的码率，DASH Client可以根据网络的情况选择一个码率进行播放，支持在不同码率之间无缝切换。</p><p>可使用插件<a href="https://github.com/Dash-Industry-Forum/dash.js" target="_blank" rel="noopener">dash.js</a>来播放</p><h2 id="第三方插件"><a href="#第三方插件" class="headerlink" title="第三方插件"></a>第三方插件</h2><p><a href="https://github.com/surmon-china/vue-video-player" target="_blank" rel="noopener">适用于 Vue 的 video.js播放器组件</a></p><h2 id="参考文章和资料"><a href="#参考文章和资料" class="headerlink" title="参考文章和资料"></a>参考文章和资料</h2><p><a href="https://developer.apple.com/streaming/" target="_blank" rel="noopener">Apple官方的HLS文档</a><br><a href="https://zhuanlan.zhihu.com/p/48100533" target="_blank" rel="noopener">RTMP、HTTP-FLV、HLS，你了解常见的三大直播协议吗</a><br><a href="https://www.jianshu.com/p/32417d8ee5b6" target="_blank" rel="noopener">理解RTMP、HttpFlv和HLS的正确姿势</a><br><a href="https://imququ.com/post/html5-live-player-1.html" target="_blank" rel="noopener">HTML5 视频直播（一）</a><br><a href="https://tools.ietf.org/html/rfc8216" target="_blank" rel="noopener">HTTP Live Streaming</a><br><a href="https://www.bilibili.com/read/cv855111/" target="_blank" rel="noopener">我们为什么使用DASH</a><br><a href="https://github.com/gwuhaolin/blog/issues/3" target="_blank" rel="noopener">使用flv.js做直播</a></p><p><strong>参考地址：</strong><br><a href="https://github.com/Tiramisupxl/blog/issues/1" target="_blank" rel="noopener">https://github.com/Tiramisupxl/blog/issues/1</a><br><a href="https://segmentfault.com/a/1190000037750253" target="_blank" rel="noopener">https://segmentfault.com/a/1190000037750253</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 直播 </tag>
            
            <tag> H5直播 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务商分账和电商收付通的区别</title>
      <link href="2021/01/06/%E6%9C%8D%E5%8A%A1%E5%95%86%E5%88%86%E8%B4%A6%E5%92%8C%E7%94%B5%E5%95%86%E6%94%B6%E4%BB%98%E9%80%9A%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>2021/01/06/%E6%9C%8D%E5%8A%A1%E5%95%86%E5%88%86%E8%B4%A6%E5%92%8C%E7%94%B5%E5%95%86%E6%94%B6%E4%BB%98%E9%80%9A%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>服务商分账和电商收付通的区别：</p><ol><li>多个店铺商品合并支付</li><li>分账可以到个人微信支付</li></ol><p><a href="https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter3_3_0.shtml" target="_blank" rel="noopener">电商收付通</a></p>]]></content>
      
      
      <categories>
          
          <category> 微信开发 </category>
          
          <category> 微信支付 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 支付 </tag>
            
            <tag> 微信支付 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Error during WebSocket handshake: Unexpected response code: 301 或 302</title>
      <link href="2020/12/30/Error-during-WebSocket-handshake-Unexpected-response-code-301-%E6%88%96-302/"/>
      <url>2020/12/30/Error-during-WebSocket-handshake-Unexpected-response-code-301-%E6%88%96-302/</url>
      
        <content type="html"><![CDATA[<p>如果服务端<strong>没有使用SSL</strong>，使用WebSocket</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">websocket = new WebSocket(&quot;ws://域名/path&quot;);</span><br></pre></td></tr></table></figure><p>如果服务端<strong>使用SSL</strong>，使用WebSocket</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">websocket = new WebSocket(&quot;wss://域名/path&quot;);</span><br></pre></td></tr></table></figure><p>可以理解wss高级了一些，否则会报错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error during WebSocket handshake: Unexpected response code: 301</span><br></pre></td></tr></table></figure><p>或<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error during WebSocket handshake: Unexpected response code: 302</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
          <category> 网络通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebSocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下PHP安装Redis扩展</title>
      <link href="2020/11/06/Windows%E4%B8%8BPHP%E5%AE%89%E8%A3%85Redis%E6%89%A9%E5%B1%95/"/>
      <url>2020/11/06/Windows%E4%B8%8BPHP%E5%AE%89%E8%A3%85Redis%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h2 id="查看phpinfo信息"><a href="#查看phpinfo信息" class="headerlink" title="查看phpinfo信息"></a>查看phpinfo信息</h2><p>查看phpinfo信息，注意红框信息，来选择对应的redis扩展版本。</p><p><a href="/2020/11/06/Windows下PHP安装Redis扩展/20201106171548.png"><img src="/2020/11/06/Windows下PHP安装Redis扩展/20201106171548.png" alt></a></p><a id="more"></a><h2 id="下载redis-dll"><a href="#下载redis-dll" class="headerlink" title="下载redis.dll"></a>下载redis.dll</h2><p><a href="https://windows.php.net/downloads/pecl/releases/redis/" target="_blank" rel="noopener">https://windows.php.net/downloads/pecl/releases/redis/</a></p><p><a href="/2020/11/06/Windows下PHP安装Redis扩展/20201110170808.png"><img src="/2020/11/06/Windows下PHP安装Redis扩展/20201110170808.png" alt></a></p><h2 id="下载igbinary-dll"><a href="#下载igbinary-dll" class="headerlink" title="下载igbinary.dll"></a>下载igbinary.dll</h2><p><a href="https://windows.php.net/downloads/pecl/releases/igbinary/" target="_blank" rel="noopener">https://windows.php.net/downloads/pecl/releases/igbinary/</a></p><p>参照redis.dll下载对应的版本</p><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>解压缩后，将 php_redis.dll 和 php_igbinary.dll 拷贝至php的 ext 目录下</p><p>修改php.ini，在该文件中加入：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">; php_redis</span></span><br><span class="line"><span class="attr">extension</span>=php_igbinary.dll</span><br><span class="line"><span class="attr">extension</span>=php_redis.dll</span><br></pre></td></tr></table></figure><p>重启后，使用phpinfo查看扩展是否成功安装</p><p><a href="/2020/11/06/Windows下PHP安装Redis扩展/20201110171508.png"><img src="/2020/11/06/Windows下PHP安装Redis扩展/20201110171508.png" alt></a></p><p>打开redis服务后，可以用如下测试是否能够调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//连接本地的 Redis 服务</span></span><br><span class="line">$redis = <span class="keyword">new</span> Redis();</span><br><span class="line">$redis-&gt;connect(<span class="string">'127.0.0.1'</span>, <span class="number">6379</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Connection to server sucessfully"</span>;</span><br><span class="line"><span class="comment">//设置 redis 字符串数据</span></span><br><span class="line">$redis-&gt;set(<span class="string">"test-name"</span>, <span class="string">"Redis Test"</span>);</span><br><span class="line"><span class="comment">// 获取存储的数据并输出</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Stored string in redis:: "</span> . $redis-&gt;get(<span class="string">"test-name"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决小程序请求PHP链接无法传递SESSION问题</title>
      <link href="2020/11/06/%E8%A7%A3%E5%86%B3%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%AF%B7%E6%B1%82PHP%E9%93%BE%E6%8E%A5%E6%97%A0%E6%B3%95%E4%BC%A0%E9%80%92SESSION%E9%97%AE%E9%A2%98/"/>
      <url>2020/11/06/%E8%A7%A3%E5%86%B3%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%AF%B7%E6%B1%82PHP%E9%93%BE%E6%8E%A5%E6%97%A0%E6%B3%95%E4%BC%A0%E9%80%92SESSION%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>小程序是通过微信服务器触发我们服务器，所以每次请求获取到的session_id都不同，导致小程序中无法获取和使用session,小程序的<code>wx.request</code>发起网络请求中有一个header参数，我们可以通过header传递一个固定参数到后台，作为session_id，这样sesion_id不发生变化，微信小程序中就可以使用或触发session了。</p><h2 id="第一次发起网络请求的地方将服务器返回set-cookie当全局变量存储起来"><a href="#第一次发起网络请求的地方将服务器返回set-cookie当全局变量存储起来" class="headerlink" title="第一次发起网络请求的地方将服务器返回set-cookie当全局变量存储起来"></a>第一次发起网络请求的地方将服务器返回<code>set-cookie</code>当全局变量存储起来</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wx.request(&#123;</span><br><span class="line">  ......</span><br><span class="line">  success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res.header);</span><br><span class="line">    <span class="comment">//set-cookie:PHPSESSID=pR3vj84acgvqgb655k82etiHu0; path=/; domain=.127.0.0.1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 登录成功，获取第一次的sessionid,存储起来</span></span><br><span class="line">    <span class="comment">// 注意：Set-Cookie（开发者工具中调试全部小写）（远程调试和线上首字母大写）</span></span><br><span class="line">    wx.setStorageSync(<span class="string">"sessionid"</span>, res.header[<span class="string">"Set-Cookie"</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Tip：也可以在小程序刚加载时生成随机生成字符串当做<code>sessionid</code>使用，在小程序使用过程中不发生变化。</p><a id="more"></a><h2 id="请求时把sessionid放入request的header头中传到服务器，服务器端可直接在cookie中获取"><a href="#请求时把sessionid放入request的header头中传到服务器，服务器端可直接在cookie中获取" class="headerlink" title="请求时把sessionid放入request的header头中传到服务器，服务器端可直接在cookie中获取"></a>请求时把<code>sessionid</code>放入request的<code>header</code>头中传到服务器，服务器端可直接在cookie中获取</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wx.request(&#123;</span><br><span class="line">  ......</span><br><span class="line">  header: &#123;</span><br><span class="line">    <span class="string">'cookie'</span>: wx.getStorageSync(<span class="string">"sessionid"</span>)</span><br><span class="line">    <span class="comment">//读取sessionid,当作cookie传入后台将PHPSESSID做session_id使用</span></span><br><span class="line">  &#125;,</span><br><span class="line">  success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="PHP后台获取cookie中的PHPSESSID，将PHPSESSID当作session-id使用"><a href="#PHP后台获取cookie中的PHPSESSID，将PHPSESSID当作session-id使用" class="headerlink" title="PHP后台获取cookie中的PHPSESSID，将PHPSESSID当作session_id使用"></a>PHP后台获取cookie中的<code>PHPSESSID</code>，将<code>PHPSESSID</code>当作<code>session_id</code>使用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 判断$_COOKIE['PHPSESSID']是否存在，存在则作session_id使用</span></span><br><span class="line"><span class="keyword">if</span> ($_COOKIE[<span class="string">'PHPSESSID'</span>]) &#123;</span><br><span class="line">    session_id($_COOKIE[<span class="string">'PHPSESSID'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">echo</span> session_id();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 微信开发 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux统计文件夹下的文件个数</title>
      <link href="2020/11/03/Linux%E7%BB%9F%E8%AE%A1%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%AA%E6%95%B0/"/>
      <url>2020/11/03/Linux%E7%BB%9F%E8%AE%A1%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%AA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="查看当前文件或目录的详细信息"><a href="#查看当前文件或目录的详细信息" class="headerlink" title="查看当前文件或目录的详细信息"></a>查看当前文件或目录的详细信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# ls -l</span><br><span class="line">总用量 88</span><br><span class="line">-rwxr-xr-x. 1 root root  233 8月   4 14:48 enable-php.conf</span><br><span class="line">-rwxr-xr-x. 1 root root  209 8月   4 14:48 enable-php-pathinfo.conf</span><br><span class="line">drwxr-xr-x. 2 root root 4096 8月   4 14:22 example</span><br><span class="line">-rw-r--r--. 1 root root 1155 8月   4 14:48 fastcgi.conf</span><br><span class="line">-rw-r--r--. 1 root root 1077 8月   4 14:48 fastcgi.conf.default</span><br><span class="line">-rw-r--r--. 1 root root 1007 8月   4 14:48 fastcgi_params</span><br><span class="line">-rw-r--r--. 1 root root 1007 8月   4 14:48 fastcgi_params.default</span><br><span class="line">-rw-r--r--. 1 root root 2837 8月   4 14:48 koi-utf</span><br><span class="line">-rw-r--r--. 1 root root 2223 8月   4 14:48 koi-win</span><br><span class="line">-rw-r--r--. 1 root root 5231 8月   4 14:48 mime.types</span><br><span class="line">-rw-r--r--. 1 root root 5231 8月   4 14:48 mime.types.default</span><br><span class="line">-rwxr-xr-x  1 root root 2591 10月 14 15:45 nginx.conf</span><br><span class="line">-rw-r--r--. 1 root root 2656 8月   4 14:48 nginx.conf.default</span><br><span class="line">-rwxr-xr-x. 1 root root  156 8月   4 14:48 pathinfo.conf</span><br><span class="line">drwxr-xr-x. 2 root root 4096 8月   5 11:59 rewrite</span><br><span class="line">-rw-r--r--. 1 root root  636 8月   4 14:48 scgi_params</span><br><span class="line">-rw-r--r--. 1 root root  636 8月   4 14:48 scgi_params.default</span><br><span class="line">-rw-r--r--. 1 root root  664 8月   4 14:48 uwsgi_params</span><br><span class="line">-rw-r--r--. 1 root root  664 8月   4 14:48 uwsgi_params.default</span><br><span class="line">drwxr-xr-x. 2 root root   70 10月 27 09:16 vhost</span><br><span class="line">-rw-r--r--. 1 root root 3610 8月   4 14:48 win-utf</span><br></pre></td></tr></table></figure><ul><li>第一个字符显示的是<code>-</code>代表是文件</li><li>第一个字符显示的是<code>d</code>代表是文件夹</li></ul><a id="more"></a><h2 id="显示目录中的文件"><a href="#显示目录中的文件" class="headerlink" title="显示目录中的文件"></a>显示目录中的文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l | grep &quot;^-&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# ls -l | grep &quot;^-&quot;</span><br><span class="line">-rwxr-xr-x. 1 root root  233 8月   4 14:48 enable-php.conf</span><br><span class="line">-rwxr-xr-x. 1 root root  209 8月   4 14:48 enable-php-pathinfo.conf</span><br><span class="line">-rw-r--r--. 1 root root 1155 8月   4 14:48 fastcgi.conf</span><br><span class="line">-rw-r--r--. 1 root root 1077 8月   4 14:48 fastcgi.conf.default</span><br><span class="line">-rw-r--r--. 1 root root 1007 8月   4 14:48 fastcgi_params</span><br><span class="line">-rw-r--r--. 1 root root 1007 8月   4 14:48 fastcgi_params.default</span><br><span class="line">-rw-r--r--. 1 root root 2837 8月   4 14:48 koi-utf</span><br><span class="line">-rw-r--r--. 1 root root 2223 8月   4 14:48 koi-win</span><br><span class="line">-rw-r--r--. 1 root root 5231 8月   4 14:48 mime.types</span><br><span class="line">-rw-r--r--. 1 root root 5231 8月   4 14:48 mime.types.default</span><br><span class="line">-rwxr-xr-x  1 root root 2591 10月 14 15:45 nginx.conf</span><br><span class="line">-rw-r--r--. 1 root root 2656 8月   4 14:48 nginx.conf.default</span><br><span class="line">-rwxr-xr-x. 1 root root  156 8月   4 14:48 pathinfo.conf</span><br><span class="line">-rw-r--r--. 1 root root  636 8月   4 14:48 scgi_params</span><br><span class="line">-rw-r--r--. 1 root root  636 8月   4 14:48 scgi_params.default</span><br><span class="line">-rw-r--r--. 1 root root  664 8月   4 14:48 uwsgi_params</span><br><span class="line">-rw-r--r--. 1 root root  664 8月   4 14:48 uwsgi_params.default</span><br><span class="line">-rw-r--r--. 1 root root 3610 8月   4 14:48 win-utf</span><br></pre></td></tr></table></figure><h2 id="统计文件夹中文件个数"><a href="#统计文件夹中文件个数" class="headerlink" title="统计文件夹中文件个数"></a>统计文件夹中文件个数</h2><p>我们可以用<code>wc</code>命令进行统计:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wc [-lwm]</span><br></pre></td></tr></table></figure><p>参数:</p><ul><li><code>-l</code> 仅列出行数;</li><li><code>-w</code> 仅列出多少字(英文单字)；</li><li><code>-m</code> 多少字符；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l | grep &quot;^-&quot; | wc -l</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# ls -l | grep &quot;^-&quot; | wc -l</span><br><span class="line">18</span><br></pre></td></tr></table></figure><h2 id="统计文件夹中目录个数"><a href="#统计文件夹中目录个数" class="headerlink" title="统计文件夹中目录个数"></a>统计文件夹中目录个数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l | grep &quot;^d&quot; | wc -l</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# ls -l | grep &quot;^d&quot; | wc -l</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="统计文件夹下文件个数，包括子文件"><a href="#统计文件夹下文件个数，包括子文件" class="headerlink" title="统计文件夹下文件个数，包括子文件"></a>统计文件夹下文件个数，包括子文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lR | grep &quot;^-&quot; | wc -l</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# ls -lR | grep &quot;^-&quot; | wc -l</span><br><span class="line">50</span><br></pre></td></tr></table></figure><h2 id="统计文件夹下目录个数，包括子目录"><a href="#统计文件夹下目录个数，包括子目录" class="headerlink" title="统计文件夹下目录个数，包括子目录"></a>统计文件夹下目录个数，包括子目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# ls -lR | grep &quot;^d&quot; | wc -l</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# ls -lR | grep &quot;^d&quot; | wc -l</span><br><span class="line">3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux查找指定大小范围内的文件</title>
      <link href="2020/10/28/Linux%E6%9F%A5%E6%89%BE%E6%8C%87%E5%AE%9A%E5%A4%A7%E5%B0%8F%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E6%96%87%E4%BB%B6/"/>
      <url>2020/10/28/Linux%E6%9F%A5%E6%89%BE%E6%8C%87%E5%AE%9A%E5%A4%A7%E5%B0%8F%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>查找大小在某个范围内的文件使用<code>-size</code>参数，<code>-size +n</code>表示大于n单位的范围，<code>-size –n</code>表示小于n单位的范围。例如，查找大于1m且小于10mk的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -type f -size +1M -size -10M</span><br></pre></td></tr></table></figure><p><strong>说明：</strong></p><p><code>-type f</code> 表示只查找文件，过滤掉文件夹，块文件等。</p><p>将查出来的文件以详细列表形式显示出来</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -type f -size +1M -size -10M | xargs ls -lh</span><br></pre></td></tr></table></figure><p><strong>-size参数说明：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-sizen[cwbkMG]</span><br><span class="line"></span><br><span class="line">              File uses n units of space,rounding up.  The following suffixes</span><br><span class="line"></span><br><span class="line">              can be used:</span><br><span class="line"></span><br><span class="line">              `b&apos;    for 512-byte blocks (this is the default if no suffix is</span><br><span class="line"></span><br><span class="line">                     used)</span><br><span class="line"></span><br><span class="line">              `c&apos;    for bytes</span><br><span class="line"></span><br><span class="line">              `w&apos;    for two-byte words</span><br><span class="line"></span><br><span class="line">              `k&apos;    for Kilobytes (units of 1024 bytes)</span><br><span class="line"></span><br><span class="line">              `M&apos;    for Megabytes (units of 1048576 bytes)</span><br><span class="line"></span><br><span class="line">              `G&apos;    for Gigabytes (units of 1073741824 bytes)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 日志文件 **-bin.** 文件的来源和清理方法</title>
      <link href="2020/10/28/MySQL-%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6-bin-%E6%96%87%E4%BB%B6%E7%9A%84%E6%9D%A5%E6%BA%90%E5%92%8C%E6%B8%85%E7%90%86%E6%96%B9%E6%B3%95/"/>
      <url>2020/10/28/MySQL-%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6-bin-%E6%96%87%E4%BB%B6%E7%9A%84%E6%9D%A5%E6%BA%90%E5%92%8C%E6%B8%85%E7%90%86%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>由于某种原因，查看磁盘使用情况，居然写满了，查询大文件 <code>find / -type f -size +10M  | xargs ls -lh</code>，发现有几个 iZ2zeas5yzkwntw819wx2mZ-bin.000013、iZ2zeas5yzkwntw819wx2mZ-bin.000014等类似数据库文件，每个文件大小都在1.1G，那么些文件是干吗的？这是数据库的操作日志，例如UPDATE一个表，或者DELETE一些数据，即使该语句没有匹配的数据，这个命令也会存储到日志文件中，还包括每个语句执行的时间，也会记录进去的。</p><p><strong>这样文件做主要有以下两个作用：</strong></p><a id="more"></a><ol><li><p>数据恢复</p><p> 如果你的数据库出问题了，而你之前有过备份，那么可以看日志文件，找出是哪个命令导致你的数据库出问题了，想办法挽回损失。</p></li><li><p>主从服务器之间同步数据</p><p> 主服务器上所有的操作都在记录日志中，从服务器可以根据该日志来进行，以确保两个同步。</p></li></ol><p><strong>处理此类文件方法：</strong></p><ol><li>如果只有一个mysql服务器，那么在<code>my.cnf</code>配置文件中把<code>log-bin</code>这一行注释掉即可</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#log-bin</span><br></pre></td></tr></table></figure><p>然后重启mysql <code>service mysqld restart</code> （重启的方法其中一种）</p><ol start="2"><li>如果需要mysql主从服务器，最好控制一下这些日志文件保留的天数，在<code>my.cnf</code>修改</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expire_logs_days = 7</span><br></pre></td></tr></table></figure><p>表示保留7天的日志，这样老日志会自动被清理掉。然后重启mysql</p><p><strong>清理日志方法为：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PURGE MASTER LOGS TO &apos;iZ2zeas5yzkwntw819wx2mZ-bin.000013&apos;;</span><br><span class="line">PURGE MASTER LOGS BEFORE &apos;2020-10-28 22:00:00&apos;;</span><br></pre></td></tr></table></figure><p>如果你确定从服务器已经同步过了，跟主服务器一样了，那么可以直接<code>RESET MASTER</code>将这些文件删除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; reset master;</span><br><span class="line">Query OK, 0 rows affected</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>好了,我们再来查看下mysql文件夹占用多少空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@iZm5eae8wzyq0xrh8j2i1eZ ~]# du -h --max-depth=1 /data/mysql/3306/</span><br><span class="line">4.0K/data/mysql/3306/test</span><br><span class="line">41M/data/mysql/3306/powermedia</span><br><span class="line">16M/data/mysql/3306/dlcm</span><br><span class="line">51M/data/mysql/3306/weizan_jiawo</span><br><span class="line">51M/data/mysql/3306/weizan112</span><br><span class="line">636K/data/mysql/3306/performance_schema</span><br><span class="line">25M/data/mysql/3306/mysql</span><br><span class="line">3G/data/mysql/3306/</span><br></pre></td></tr></table></figure><p>整个数据库目录占用3G左右，加上跑了很久和有不少项目的数据库，也差不多了。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置HTTP请求自动跳转HTTPS</title>
      <link href="2020/10/27/%E8%AE%BE%E7%BD%AEHTTP%E8%AF%B7%E6%B1%82%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%ACHTTPS/"/>
      <url>2020/10/27/%E8%AE%BE%E7%BD%AEHTTP%E8%AF%B7%E6%B1%82%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%ACHTTPS/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><p>在需要跳转的HTTP站点下添加以下rewrite语句，实现HTTP访问自动跳转到HTTPS页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.certificatestests.com; #将www.certificatestests.com修改为您证书绑定的域名，例如：www.example.com。</span><br><span class="line">    rewrite ^(.*)$ https://$host$1 permanent; #将所有HTTP请求通过rewrite重定向到HTTPS。</span><br><span class="line">    location / &#123;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><p>在httpd.conf文件中的<virtualhost *:80> </virtualhost>中间，添加以下重定向代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RewriteEngine on</span><br><span class="line">RewriteCond %&#123;SERVER_PORT&#125; !^443$</span><br><span class="line">RewriteRule ^(.*)$ https://%&#123;SERVER_NAME&#125;$1 [L,R]</span><br></pre></td></tr></table></figure><h2 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h2><p>在Web目录下打开.htaccess文件（如没有，需新建该文件），添加以下rewrite语句，实现HTTP访问自动跳转到HTTPS页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond %&#123;HTTP:From-Https&#125; !^on$ [NC]</span><br><span class="line">RewriteCond %&#123;HTTP_HOST&#125; ^(www.)?yourdomain.com$ [NC]                # 将yourdomain.com修改为您证书绑定的域名，例如：example.com。</span><br><span class="line">RewriteRule ^(.*)$ https://www.yourdomain.com/$1 [R=301,L]           # 将yourdomain.com修改为您证书绑定的域名，例如：example.com。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP高并发情况下防止商品库存超卖</title>
      <link href="2020/10/24/PHP%E9%AB%98%E5%B9%B6%E5%8F%91%E6%83%85%E5%86%B5%E4%B8%8B%E9%98%B2%E6%AD%A2%E5%95%86%E5%93%81%E5%BA%93%E5%AD%98%E8%B6%85%E5%8D%96/"/>
      <url>2020/10/24/PHP%E9%AB%98%E5%B9%B6%E5%8F%91%E6%83%85%E5%86%B5%E4%B8%8B%E9%98%B2%E6%AD%A2%E5%95%86%E5%93%81%E5%BA%93%E5%AD%98%E8%B6%85%E5%8D%96/</url>
      
        <content type="html"><![CDATA[<p>商城系统中，抢购和秒杀是很常见的营销场景，在一定时间内有大量的用户访问商场下单，主要需要解决的问题有两个：</p><ol><li>高并发对数据库产生的压力；</li><li>竞争状态下如何解决商品库存超卖；</li></ol><h2 id="高并发对数据库产生的压力"><a href="#高并发对数据库产生的压力" class="headerlink" title="高并发对数据库产生的压力"></a>高并发对数据库产生的压力</h2><p>对于第一个问题，使用缓存来处理，避免直接操作数据库，例如使用Redis。</p><a id="more"></a><h2 id="竞争状态下如何解决商品库存超卖"><a href="#竞争状态下如何解决商品库存超卖" class="headerlink" title="竞争状态下如何解决商品库存超卖"></a>竞争状态下如何解决商品库存超卖</h2><p>对于第二个问题，需要重点说明。</p><p>常规写法：查询出对应商品的库存，判断库存数量否大于0，然后执行生成订单等操作，但是在判断库存是否大于0处，如果在高并发下就会有问题，导致库存量出现负数。</p><p><strong>测试表 sql</strong></p><p>把如下表数据导入到数据库中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Navicat MySQL Data Transfer</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Source Server         : 01 本地localhost</span></span><br><span class="line"><span class="comment">Source Server Version : 50553</span></span><br><span class="line"><span class="comment">Source Host           : localhost:3306</span></span><br><span class="line"><span class="comment">Source Database       : test</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Target Server Type    : MYSQL</span></span><br><span class="line"><span class="comment">Target Server Version : 50553</span></span><br><span class="line"><span class="comment">File Encoding         : 65001</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Date: 2020-11-06 14:31:35</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for products</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`products`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`products`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'ID'</span>,</span><br><span class="line">  <span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'货品名称'</span>,</span><br><span class="line">  <span class="string">`store`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'货品库存'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">2</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'货品表'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of products</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`products`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'稻花香大米'</span>, <span class="string">'20'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for order_log</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`order_log`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`order_log`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`content`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'日志内容'</span>,</span><br><span class="line">  <span class="string">`c_time`</span> <span class="built_in">timestamp</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=MyISAM <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=latin1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for order</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`order`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`order`</span> (</span><br><span class="line">  <span class="string">`oid`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'订单号'</span>,</span><br><span class="line">  <span class="string">`product_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'商品ID'</span>,</span><br><span class="line">  <span class="string">`number`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'购买数量'</span>,</span><br><span class="line">  <span class="string">`c_time`</span> <span class="built_in">timestamp</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`oid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=MyISAM <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=latin1 <span class="keyword">COMMENT</span>=<span class="string">'订单表'</span>;</span><br></pre></td></tr></table></figure><p><strong>下单处理代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">db();</span><br><span class="line"><span class="keyword">global</span> $con;</span><br><span class="line"></span><br><span class="line"><span class="comment">//step1 接收下单参数</span></span><br><span class="line">$product_id = <span class="number">1</span>;<span class="comment">// 商品ID</span></span><br><span class="line">$buy_num = <span class="number">1</span>;<span class="comment">// 购买数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//step2 查询商品信息</span></span><br><span class="line">$sql = <span class="string">"select * from products where id=&#123;$product_id&#125;"</span>;</span><br><span class="line">$result = mysqli_query($con, $sql);</span><br><span class="line">$row = mysqli_fetch_assoc($result);</span><br><span class="line"></span><br><span class="line"><span class="comment">//step3 判断商品下单数量是否大于商品库存数量</span></span><br><span class="line"><span class="comment">//此处在高并发下，可能出现上一个下单后还没来得及更新库存，下一个下单判断库存数不是最新的库存</span></span><br><span class="line"><span class="keyword">if</span> ($row[<span class="string">'store'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">//step4 更新商品库存数量（减去下单数量）</span></span><br><span class="line">    $sql = <span class="string">"update products set store=store-&#123;$buy_num&#125; where id=&#123;$product_id&#125;"</span>;</span><br><span class="line">    <span class="keyword">if</span> (mysqli_query($con, $sql)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"更新成功"</span>;</span><br><span class="line">        <span class="comment">//step5 生成订单号创建订单</span></span><br><span class="line">        $oid = build_order_no();</span><br><span class="line">        create_order($oid, $product_id, $buy_num);</span><br><span class="line">        insertLog(<span class="string">'库存减少成功，下单成功'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"更新失败"</span>;</span><br><span class="line">        insertLog(<span class="string">'库存减少失败'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"没有库存"</span>;</span><br><span class="line">    insertLog(<span class="string">'库存不够'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">db</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">    $con = <span class="keyword">new</span> mysqli(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>,<span class="string">'test'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$con) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"数据库连接失败"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成唯一订单号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_order_no</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> date(<span class="string">'Ymd'</span>) . str_pad(mt_rand(<span class="number">1</span>, <span class="number">99999</span>), <span class="number">5</span>, <span class="string">'0'</span>, STR_PAD_LEFT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_order</span><span class="params">($oid, $product_id, $number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order` (oid, product_id, number) values('$oid', '$product_id', '$number')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 记录日志</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertLog</span><span class="params">($content)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order_log` (content) values('$content')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="将库存字段字段设为unsigned"><a href="#将库存字段字段设为unsigned" class="headerlink" title="将库存字段字段设为unsigned"></a>将库存字段字段设为<code>unsigned</code></h3><p>因为库存字段不能为负数，在下单后更新商品库存时，如果出现负数将返回false</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">db();</span><br><span class="line"><span class="keyword">global</span> $con;</span><br><span class="line"></span><br><span class="line"><span class="comment">//step1 接收下单参数</span></span><br><span class="line">$product_id = <span class="number">1</span>;<span class="comment">// 商品ID</span></span><br><span class="line">$buy_num = <span class="number">1</span>;<span class="comment">// 购买数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//step2 查询商品信息</span></span><br><span class="line">$sql = <span class="string">"select * from products where id=&#123;$product_id&#125; for UPDATE"</span>;<span class="comment">//利用for update 开启行锁</span></span><br><span class="line">$result = mysqli_query($con, $sql);</span><br><span class="line">$row = mysqli_fetch_assoc($result);</span><br><span class="line"></span><br><span class="line"><span class="comment">//step3 判断商品下单数量是否大于商品库存数量</span></span><br><span class="line"><span class="keyword">if</span> ($row[<span class="string">'store'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    </span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">//step4 更新商品库存数量（减去下单数量）</span></span><br><span class="line">    $sql = <span class="string">"update products set store=store-&#123;$buy_num&#125; where id=&#123;$product_id&#125;"</span>;</span><br><span class="line">    <span class="keyword">if</span> (mysqli_query($con, $sql)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"更新成功"</span>;</span><br><span class="line">        <span class="comment">//step5 生成订单号创建订单</span></span><br><span class="line">        $oid = build_order_no();</span><br><span class="line">        create_order($oid, $product_id, $buy_num);</span><br><span class="line">        insertLog(<span class="string">'库存减少成功，下单成功'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 如果出现负数将返回false</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"更新失败"</span>;</span><br><span class="line">        insertLog(<span class="string">'库存减少失败'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//商品已经抢购完</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"没有库存"</span>;</span><br><span class="line">    insertLog(<span class="string">'库存不够'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">db</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">    $con = <span class="keyword">new</span> mysqli(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>,<span class="string">'test'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$con) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"数据库连接失败"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成唯一订单号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_order_no</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> date(<span class="string">'Ymd'</span>) . str_pad(mt_rand(<span class="number">1</span>, <span class="number">99999</span>), <span class="number">5</span>, <span class="string">'0'</span>, STR_PAD_LEFT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_order</span><span class="params">($oid, $product_id, $number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order` (oid, product_id, number) values('$oid', '$product_id', '$number')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 记录日志</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertLog</span><span class="params">($content)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order_log` (content) values('$content')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用mysql的事务，锁住操作的行"><a href="#使用mysql的事务，锁住操作的行" class="headerlink" title="使用mysql的事务，锁住操作的行"></a>使用mysql的事务，锁住操作的行</h3><p>在下单处理过程中，使用mysql的事务将正在下单商品行数据锁定</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">db();</span><br><span class="line"><span class="keyword">global</span> $con;</span><br><span class="line"></span><br><span class="line"><span class="comment">//step1 接收下单参数</span></span><br><span class="line">$product_id = <span class="number">1</span>;<span class="comment">// 商品ID</span></span><br><span class="line">$buy_num = <span class="number">1</span>;<span class="comment">// 购买数量</span></span><br><span class="line"></span><br><span class="line">mysqli_query($con, <span class="string">"BEGIN"</span>); <span class="comment">//开始事务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//step2 查询商品信息</span></span><br><span class="line">$sql = <span class="string">"select * from products where id=&#123;$product_id&#125; for UPDATE"</span>;<span class="comment">//利用for update 开启行锁</span></span><br><span class="line">$result = mysqli_query($con, $sql);</span><br><span class="line">$row = mysqli_fetch_assoc($result);</span><br><span class="line"></span><br><span class="line"><span class="comment">//step3 判断商品下单数量是否大于商品库存数量</span></span><br><span class="line"><span class="keyword">if</span> ($row[<span class="string">'store'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    </span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">//step4 更新商品库存数量（减去下单数量）</span></span><br><span class="line">    $sql = <span class="string">"update products set store=store-&#123;$buy_num&#125; where id=&#123;$product_id&#125;"</span>;</span><br><span class="line">    <span class="keyword">if</span> (mysqli_query($con, $sql)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"更新成功"</span>;</span><br><span class="line">        <span class="comment">//step5 生成订单号创建订单</span></span><br><span class="line">        $oid = build_order_no();</span><br><span class="line">        create_order($oid, $product_id, $buy_num);</span><br><span class="line">        insertLog(<span class="string">'库存减少成功，下单成功'</span>);</span><br><span class="line">        mysqli_query($con, <span class="string">"COMMIT"</span>);<span class="comment">//事务提交即解锁</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"更新失败"</span>;</span><br><span class="line">        insertLog(<span class="string">'库存减少失败'</span>);</span><br><span class="line">        mysqli_query($con, <span class="string">"ROLLBACK"</span>);<span class="comment">//事务回滚即解锁</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//商品已经抢购完</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"没有库存"</span>;</span><br><span class="line">    insertLog(<span class="string">'库存不够'</span>);</span><br><span class="line">    mysqli_query($con, <span class="string">"ROLLBACK"</span>);<span class="comment">//事务回滚即解锁</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">db</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">    $con = <span class="keyword">new</span> mysqli(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>,<span class="string">'test'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$con) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"数据库连接失败"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成唯一订单号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_order_no</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> date(<span class="string">'Ymd'</span>) . str_pad(mt_rand(<span class="number">1</span>, <span class="number">99999</span>), <span class="number">5</span>, <span class="string">'0'</span>, STR_PAD_LEFT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_order</span><span class="params">($oid, $product_id, $number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order` (oid, product_id, number) values('$oid', '$product_id', '$number')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 记录日志</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertLog</span><span class="params">($content)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order_log` (content) values('$content')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用非阻塞的文件排他锁"><a href="#使用非阻塞的文件排他锁" class="headerlink" title="使用非阻塞的文件排他锁"></a>使用非阻塞的文件排他锁</h3><p>在处理下单请求的时候，用flock锁定一个文件，如果锁定失败说明有其他订单正在处理，此时要么等待要么直接提示用户”服务器繁忙”，计数器存储抢购的商品数量，避免查询数据库。</p><p>阻塞(等待)模式：并发时，当有第二个用户请求时，会等待第一个用户请求完成、释放锁，获得文件锁之后，程序才会继续运行下去。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">db();</span><br><span class="line"><span class="keyword">global</span> $con;</span><br><span class="line"></span><br><span class="line"><span class="comment">//step1 接收下单参数</span></span><br><span class="line">$product_id = <span class="number">1</span>;<span class="comment">// 商品ID</span></span><br><span class="line">$buy_num = <span class="number">1</span>;<span class="comment">// 购买数量</span></span><br><span class="line"></span><br><span class="line">$fp = fopen(<span class="string">'lock.txt'</span>, <span class="string">'w'</span>);</span><br><span class="line"><span class="keyword">if</span> (flock($fp, LOCK_EX)) &#123;   <span class="comment">//文件独占锁,阻塞</span></span><br><span class="line">    <span class="comment">//step2 查询商品信息</span></span><br><span class="line">    $sql = <span class="string">"select * from products where id=&#123;$product_id&#125;"</span>;</span><br><span class="line">    $result = mysqli_query($con, $sql);</span><br><span class="line">    $row = mysqli_fetch_assoc($result);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//step3 判断商品下单数量是否大于商品库存数量</span></span><br><span class="line">    <span class="keyword">if</span> ($row[<span class="string">'store'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//处理订单</span></span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//step4 更新商品库存数量（减去下单数量）</span></span><br><span class="line">        $sql = <span class="string">"update products set store=store-&#123;$buy_num&#125; where id=&#123;$product_id&#125;"</span>;</span><br><span class="line">        <span class="keyword">if</span> (mysqli_query($con, $sql)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"更新成功"</span>;</span><br><span class="line">            <span class="comment">//step5 生成订单号创建订单</span></span><br><span class="line">            $oid = build_order_no();</span><br><span class="line">            create_order($oid, $product_id, $buy_num);</span><br><span class="line">            insertLog(<span class="string">'库存减少成功，下单成功'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"更新失败"</span>;</span><br><span class="line">            insertLog(<span class="string">'库存减少失败'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//商品已经抢购完</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"没有库存"</span>;</span><br><span class="line">        insertLog(<span class="string">'库存不够'</span>);</span><br><span class="line">&#125;</span><br><span class="line">flock($fp, LOCK_UN); <span class="comment">//释放锁</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">db</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">    $con = <span class="keyword">new</span> mysqli(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>,<span class="string">'test'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$con) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"数据库连接失败"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成唯一订单号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_order_no</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> date(<span class="string">'Ymd'</span>) . str_pad(mt_rand(<span class="number">1</span>, <span class="number">99999</span>), <span class="number">5</span>, <span class="string">'0'</span>, STR_PAD_LEFT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_order</span><span class="params">($oid, $product_id, $number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order` (oid, product_id, number) values('$oid', '$product_id', '$number')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 记录日志</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertLog</span><span class="params">($content)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order_log` (content) values('$content')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>非阻塞模式：并发时，第一个用户请求，拿得文件锁之后。后面请求的用户直接返回系统繁忙，请稍后再试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">db();</span><br><span class="line"><span class="keyword">global</span> $con;</span><br><span class="line"></span><br><span class="line"><span class="comment">//step1 接收下单参数</span></span><br><span class="line">$product_id = <span class="number">1</span>;<span class="comment">// 商品ID</span></span><br><span class="line">$buy_num = <span class="number">1</span>;<span class="comment">// 购买数量</span></span><br><span class="line"></span><br><span class="line">$fp = fopen(<span class="string">'lock.txt'</span>, <span class="string">'w'</span>);</span><br><span class="line"><span class="keyword">if</span> (flock($fp, LOCK_EX|LOCK_NB)) &#123;   <span class="comment">//文件独占锁,非阻塞</span></span><br><span class="line">    <span class="comment">//step2 查询商品信息</span></span><br><span class="line">    $sql = <span class="string">"select * from products where id=&#123;$product_id&#125;"</span>;</span><br><span class="line">    $result = mysqli_query($con, $sql);</span><br><span class="line">    $row = mysqli_fetch_assoc($result);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//step3 判断商品下单数量是否大于商品库存数量</span></span><br><span class="line">    <span class="keyword">if</span> ($row[<span class="string">'store'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//处理订单</span></span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//step4 更新商品库存数量（减去下单数量）</span></span><br><span class="line">        $sql = <span class="string">"update products set store=store-&#123;$buy_num&#125; where id=&#123;$product_id&#125;"</span>;</span><br><span class="line">        <span class="keyword">if</span> (mysqli_query($con, $sql)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"更新成功"</span>;</span><br><span class="line">            <span class="comment">//step5 生成订单号创建订单</span></span><br><span class="line">            $oid = build_order_no();</span><br><span class="line">            create_order($oid, $product_id, $buy_num);</span><br><span class="line">            insertLog(<span class="string">'库存减少成功，下单成功'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"更新失败"</span>;</span><br><span class="line">            insertLog(<span class="string">'库存减少失败'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//商品已经抢购完</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"没有库存"</span>;</span><br><span class="line">        insertLog(<span class="string">'库存不够'</span>);</span><br><span class="line">&#125;</span><br><span class="line">flock($fp, LOCK_UN); <span class="comment">//释放锁</span></span><br><span class="line"> </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//系统繁忙，请稍后再试</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"系统繁忙，请稍后再试"</span>;</span><br><span class="line">    insertLog(<span class="string">'系统繁忙，请稍后再试'</span>);</span><br><span class="line">&#125;</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">db</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">    $con = <span class="keyword">new</span> mysqli(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>,<span class="string">'test'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$con) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"数据库连接失败"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成唯一订单号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_order_no</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> date(<span class="string">'Ymd'</span>) . str_pad(mt_rand(<span class="number">1</span>, <span class="number">99999</span>), <span class="number">5</span>, <span class="string">'0'</span>, STR_PAD_LEFT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_order</span><span class="params">($oid, $product_id, $number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order` (oid, product_id, number) values('$oid', '$product_id', '$number')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 记录日志</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertLog</span><span class="params">($content)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order_log` (content) values('$content')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用redis队列"><a href="#使用redis队列" class="headerlink" title="使用redis队列"></a>使用redis队列</h3><ul><li>因为pop操作是原子的，即使有很多用户同时到达，也是依次执行，推荐使用</li><li>mysql事务在高并发下性能下降很厉害，文件锁的方式也是</li></ul><ol><li>先将商品库存到redis队列</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">db();</span><br><span class="line"><span class="keyword">global</span> $con;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询商品信息</span></span><br><span class="line">$product_id = <span class="number">1</span>;</span><br><span class="line">$sql = <span class="string">"select * from products where id=&#123;$product_id&#125;"</span>;</span><br><span class="line">$result = mysqli_query($con, $sql);</span><br><span class="line">$row = mysqli_fetch_assoc($result);</span><br><span class="line">$store = $row[<span class="string">'store'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取商品在redis缓存的库存</span></span><br><span class="line">$redis = <span class="keyword">new</span> Redis();</span><br><span class="line">$result = $redis-&gt;connect(<span class="string">'127.0.0.1'</span>, <span class="number">6379</span>);</span><br><span class="line">$key = <span class="string">'goods_store_'</span> . $product_id;</span><br><span class="line">$res = $redis-&gt;llen($key);</span><br><span class="line">$count = $store - $res;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;$count; $i++) &#123;</span><br><span class="line">$redis-&gt;lpush($key, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $redis-&gt;llen($key);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">db</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">    $con = <span class="keyword">new</span> mysqli(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>,<span class="string">'test'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$con) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"数据库连接失败"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>抢购、秒杀逻辑</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">db();</span><br><span class="line"><span class="keyword">global</span> $con;</span><br><span class="line"></span><br><span class="line"><span class="comment">//step1 接收下单参数</span></span><br><span class="line">$product_id = <span class="number">1</span>;<span class="comment">// 商品ID</span></span><br><span class="line">$buy_num = <span class="number">1</span>;<span class="comment">// 购买数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//step2 下单前判断redis队列库存量</span></span><br><span class="line">$redis = <span class="keyword">new</span> Redis();</span><br><span class="line">$result = $redis-&gt;connect(<span class="string">'127.0.0.1'</span>,<span class="number">6379</span>);</span><br><span class="line">$count = $redis-&gt;lpop(<span class="string">'goods_store_'</span> . $product_id);</span><br><span class="line"><span class="keyword">if</span> (!$count) &#123;</span><br><span class="line">insertLog(<span class="string">'error:no store redis'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">'秒杀结束，没有商品库存了'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sleep(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//step3 更新商品库存数量（减去下单数量）</span></span><br><span class="line">$sql = <span class="string">"update products set store=store-&#123;$buy_num&#125; where id=&#123;$product_id&#125;"</span>;</span><br><span class="line"><span class="keyword">if</span> (mysqli_query($con, $sql)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"更新成功"</span>;</span><br><span class="line">    <span class="comment">//step4 生成订单号创建订单</span></span><br><span class="line">    $oid = build_order_no();</span><br><span class="line">    create_order($oid, $product_id, $buy_num);</span><br><span class="line">    insertLog(<span class="string">'库存减少成功，下单成功'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"更新失败"</span>;</span><br><span class="line">    insertLog(<span class="string">'库存减少失败'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">db</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">    $con = <span class="keyword">new</span> mysqli(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>,<span class="string">'test'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$con) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"数据库连接失败"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成唯一订单号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_order_no</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> date(<span class="string">'Ymd'</span>) . str_pad(mt_rand(<span class="number">1</span>, <span class="number">99999</span>), <span class="number">5</span>, <span class="string">'0'</span>, STR_PAD_LEFT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_order</span><span class="params">($oid, $product_id, $number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order` (oid, product_id, number) values('$oid', '$product_id', '$number')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 记录日志</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertLog</span><span class="params">($content)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $con;</span><br><span class="line">$sql = <span class="string">"INSERT INTO `order_log` (content) values('$content')"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="redis乐观锁防止超卖"><a href="#redis乐观锁防止超卖" class="headerlink" title="redis乐观锁防止超卖"></a>redis乐观锁防止超卖</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$redis =<span class="keyword">new</span> Redis(); </span><br><span class="line">$redis-&gt;connect(<span class="string">"127.0.0.1"</span>, <span class="number">6379</span>);</span><br><span class="line">$redis-&gt;watch(<span class="string">'sales'</span>);<span class="comment">//乐观锁 监视作用 set()  初始值0</span></span><br><span class="line">$sales = $redis-&gt;get(<span class="string">'sales'</span>);</span><br><span class="line"></span><br><span class="line">$n = <span class="number">20</span>;<span class="comment">// 库存</span></span><br><span class="line"><span class="keyword">if</span> ($sales &gt;= $n) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'秒杀结束'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//redis开启事务</span></span><br><span class="line">$redis-&gt;multi();</span><br><span class="line">$redis-&gt;incr(<span class="string">'sales'</span>); <span class="comment">//将 key 中储存的数字值增一 ,如果 key 不存在，那么 key 的值会先被初始化为 0 ，然后再执行 INCR 操作。</span></span><br><span class="line">$res = $redis-&gt;exec(); <span class="comment">//成功1 失败0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($res) &#123;</span><br><span class="line">    <span class="comment">//秒杀成功</span></span><br><span class="line">    $con = <span class="keyword">new</span> mysqli(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>,<span class="string">'test'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$con) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"数据库连接失败"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $product_id = <span class="number">1</span>;<span class="comment">// 商品ID</span></span><br><span class="line">    $buy_num = <span class="number">1</span>;<span class="comment">// 购买数量</span></span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    $sql = <span class="string">"update products set store=store-&#123;$buy_num&#125; where id=&#123;$product_id&#125;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mysqli_query($con, $sql)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"秒杀完成"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'抢购失败'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高并发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决php-fpm进程不释放内存问题</title>
      <link href="2020/10/21/%E8%A7%A3%E5%86%B3php-fpm%E8%BF%9B%E7%A8%8B%E4%B8%8D%E9%87%8A%E6%94%BE%E5%86%85%E5%AD%98%E9%97%AE%E9%A2%98/"/>
      <url>2020/10/21/%E8%A7%A3%E5%86%B3php-fpm%E8%BF%9B%E7%A8%8B%E4%B8%8D%E9%87%8A%E6%94%BE%E5%86%85%E5%AD%98%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>最近遇到网站打不开了，报502，重启php-fpm就好了，然而过段时间又报502，查找了一些资料，应该是PHP-FPM进程不释放内存造成的。</p><blockquote><p>LNMP架构中PHP是运行在FastCGI模式下，按照官方的说法，php-cgi会在每个请求结束的时候会回收脚本使用的全部内存，但是并不会释放给操作系统，而是继续持有以应对下一次PHP请求。而PHP-FPM是FastCGI进程管理器，用于控制php的内存和进程等</p></blockquote><p>解决的办法就是通过优化PHP-FPM的总进程数和单个进程占用的内存，从而解决PHP-FPM进程占用内存大和不释放内存的问题。</p><a id="more"></a><h2 id="分析判断PHP-FPM内存占用情况"><a href="#分析判断PHP-FPM内存占用情况" class="headerlink" title="分析判断PHP-FPM内存占用情况"></a>分析判断PHP-FPM内存占用情况</h2><p>如果你发现服务器出现了卡顿的情况，首先查看一下内存的占用情况，常用的命令就是top、free、glances等。</p><p>参考一下链接：</p><p><a href="https://www.binbinbiji.com/php/2120.html" target="_blank" rel="noopener">https://www.binbinbiji.com/php/2120.html</a></p><p><a href="https://wzfou.com/php-fpm/" target="_blank" rel="noopener">https://wzfou.com/php-fpm/</a></p><p><a href="https://www.php.cn/php-ask-430799.html" target="_blank" rel="noopener">https://www.php.cn/php-ask-430799.html</a></p><p><a href="https://blog.csdn.net/qq_32352565/article/details/79255765" target="_blank" rel="noopener">https://blog.csdn.net/qq_32352565/article/details/79255765</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LNMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux查看进程命令`ps -ef`和`ps aux`的区别</title>
      <link href="2020/10/21/Linux%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E5%91%BD%E4%BB%A4-ps-ef-%E5%92%8C-ps-aux-%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>2020/10/21/Linux%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E5%91%BD%E4%BB%A4-ps-ef-%E5%92%8C-ps-aux-%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>Linux查看系统进程的命令<code>ps</code>，常用的有<code>ps -ef</code>和<code>ps aux</code>，这两条命令没有太大区别，是Unix系统中的两种风格，System Ｖ风格和BSD 风格，<code>ps aux</code>最初用到Unix Style中，而<code>ps -ef</code>被用在System V Style中，两者输出略有不同。现在的大部分Linux系统都是可以同时使用这两种方式的。</p><h2 id="ps-ef-是用标准的格式显示进程的"><a href="#ps-ef-是用标准的格式显示进程的" class="headerlink" title="ps -ef 是用标准的格式显示进程的"></a><code>ps -ef</code> 是用标准的格式显示进程的</h2><p><strong>其格式如下</strong></p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@iZm5eae8wzyq0xrh8j2i1eZ ~]<span class="comment"># ps -ef</span></span><br><span class="line">UID        PID  PPID  C STIME TTY          TIME CMD</span><br><span class="line">root         1     0  0  2019 ?        00:00:02 /sbin/init</span><br><span class="line">root         2     0  0  2019 ?        00:00:00 [kthreadd]</span><br><span class="line">root         3     2  0  2019 ?        00:00:05 [migration/0]</span><br><span class="line">root         4     2  0  2019 ?        00:01:41 [ksoftirqd/0]</span><br><span class="line">root         5     2  0  2019 ?        00:00:00 [stopper/0]</span><br><span class="line">root         6     2  0  2019 ?        00:00:26 [watchdog/0]</span><br><span class="line">root         7     2  0  2019 ?        00:00:02 [migration/1]</span><br></pre></td></tr></table></figure><p><strong>其中各列的具体含义如下</strong></p><table><thead><tr><th>列名</th><th>含义</th></tr></thead><tbody><tr><td>UID</td><td>该进程的用户</td></tr><tr><td>PID</td><td>该程序的ID</td></tr><tr><td>PPID</td><td>该程序父级程序的ID</td></tr><tr><td>C</td><td>该进程占用的CPU百分比</td></tr><tr><td>STIME</td><td>程序的启动时间</td></tr><tr><td>TTY</td><td>该进程在哪个终端上运行（登陆者的终端位置），若与终端无关，则显示（？）。若为pts/0等，则表示由网络连接主机进程</td></tr><tr><td>TIME</td><td>该进程实际使用CPU运行的时间</td></tr><tr><td>CMD</td><td>命令的名称和参数</td></tr></tbody></table><h2 id="ps-aux-是用BSD的格式来显示"><a href="#ps-aux-是用BSD的格式来显示" class="headerlink" title="ps aux 是用BSD的格式来显示"></a>ps aux 是用BSD的格式来显示</h2><p><strong>其格式如下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@iZm5eae8wzyq0xrh8j2i1eZ ~]<span class="comment"># ps aux</span></span><br><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root         1  0.0  0.0  21276   760 ?        Ss    2019   0:02 /sbin/init</span><br><span class="line">root         2  0.0  0.0      0     0 ?        S     2019   0:00 [kthreadd]</span><br><span class="line">root         3  0.0  0.0      0     0 ?        S     2019   0:05 [migration/0]</span><br><span class="line">root         4  0.0  0.0      0     0 ?        S     2019   1:41 [ksoftirqd/0]</span><br></pre></td></tr></table></figure><p><strong>其中各列的具体含义如下</strong></p><table><thead><tr><th>列名</th><th>含义</th></tr></thead><tbody><tr><td>USER</td><td>该进程的用户</td></tr><tr><td>PID</td><td>该程序的ID</td></tr><tr><td>%CPU</td><td>该进程占用的CPU百分比</td></tr><tr><td>%MEM</td><td>该占用内存的百分比</td></tr><tr><td>VSZ</td><td>该进程使用的虚拟内存量（KB）</td></tr><tr><td>RSS</td><td>该进程占用的固定内存量（KB）（驻留中页的数量）</td></tr><tr><td>TTY</td><td>该进程在哪个终端上运行（登陆者的终端位置），若与终端无关，则显示（？）。若为pts/0等，则表示由网络连接主机进程</td></tr><tr><td>STAT</td><td>进程的状态</td></tr><tr><td>START</td><td>该进程被触发启动时间</td></tr><tr><td>TIME</td><td>该进程实际使用CPU运行的时间</td></tr><tr><td>COMMAND</td><td>命令的名称和参数</td></tr></tbody></table><p>其中STAT状态位常见的状态字符有</p><table><thead><tr><th>状态字符</th><th>含义</th></tr></thead><tbody><tr><td><code>D</code></td><td>无法中断的休眠状态（通常 IO 的进程）</td></tr><tr><td><code>R</code></td><td>正在运行可中在队列中可过行的</td></tr><tr><td><code>S</code></td><td>处于休眠状态</td></tr><tr><td><code>T</code></td><td>停止或被追踪</td></tr><tr><td><code>W</code></td><td>进入内存交换 （从内核2.6开始无效）</td></tr><tr><td><code>X</code></td><td>死掉的进程  （基本很少见）</td></tr><tr><td><code>Z</code></td><td>僵尸进程</td></tr><tr><td><code>&lt;</code></td><td>优先级高的进程</td></tr><tr><td><code>N</code></td><td>优先级较低的进程</td></tr><tr><td><code>L</code></td><td>有些页被锁进内存</td></tr><tr><td><code>s</code></td><td>进程的领导者（在它之下有子进程）</td></tr><tr><td><code>l</code></td><td>多进程的（使用 CLONE_THREAD, 类似 NPTL pthreads）</td></tr><tr><td><code>+</code></td><td>位于后台的进程组</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lnmp1.7 安装 redis 扩展</title>
      <link href="2020/10/04/lnmp1-7-%E5%AE%89%E8%A3%85-redis-%E6%89%A9%E5%B1%95/"/>
      <url>2020/10/04/lnmp1-7-%E5%AE%89%E8%A3%85-redis-%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<p>我们使用lnmp <code>addons.sh</code> 脚本安装 redis服务，最后提示php没有redis扩展</p><p>打开lnmp安装包的src目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src/lnmp1.7/src</span><br></pre></td></tr></table></figure><p>进入 <code>redis-5.3.1</code> 目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd redis-5.3.1</span><br></pre></td></tr></table></figure><a id="more"></a><p>配置安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/php/bin/phpize</span><br><span class="line">./configure --with-php-config=/usr/local/php/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>完成后提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Build complete.</span><br><span class="line">Don&apos;t forget to run &apos;make test&apos;.</span><br><span class="line"></span><br><span class="line">Installing shared extensions:     /usr/local/php/lib/php/extensions/no-debug-non-zts-20180731/</span><br></pre></td></tr></table></figure><p>fileinfo扩展文件生成目录为/usr/local/php/lib/php/extensions/no-debug-non-zts-20180731/</p><p>编辑php配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/php/etc/php.ini</span><br></pre></td></tr></table></figure><p>修添加如下代码</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">extension</span>=/usr/local/php/lib/php/extensions/<span class="literal">no</span>-debug-non-zts-<span class="number">20180731</span>/redis.so</span><br></pre></td></tr></table></figure><p>重启lnmp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp restart</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS6.5下autoconf源码安装升级到autoconf2.68版本</title>
      <link href="2020/10/04/CentOS6-5%E4%B8%8Bautoconf%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85%E5%8D%87%E7%BA%A7%E5%88%B0autoconf2-68%E7%89%88%E6%9C%AC/"/>
      <url>2020/10/04/CentOS6-5%E4%B8%8Bautoconf%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85%E5%8D%87%E7%BA%A7%E5%88%B0autoconf2-68%E7%89%88%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>在安装 PHP7.3.21 Redis 扩展时，提示当前autoconf版本是2.63要升级到2.68及以上版本</p><p><strong>查询当前版本：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# rpm -qa | grep autoconf</span><br><span class="line">autoconf-2.63-5.1.el6.noarch</span><br></pre></td></tr></table></figure></p><p>或<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# rpm -qf /usr/bin/autoconf</span><br></pre></td></tr></table></figure></p><a id="more"></a><p><strong>卸载当前版本：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# rpm -e --nodeps autoconf-2.63</span><br></pre></td></tr></table></figure><p><strong>安装最新版本：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cd /usr/local/src</span><br><span class="line">[root@localhost src]# wget ftp://ftp.gnu.org/gnu/autoconf/autoconf-2.68.tar.gz </span><br><span class="line">[root@localhost src]# tar -zxvf autoconf-2.68.tar.gz </span><br><span class="line">[root@localhost src]# cd autoconf-2.68 </span><br><span class="line">[root@localhost autoconf-2.68]# ./configure --prefix=/usr/ </span><br><span class="line">[root@localhost autoconf-2.68]# make &amp;&amp; make install</span><br></pre></td></tr></table></figure></p><p><strong>查看当前版本：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost autoconf-2.68]# /usr/bin/autoconf -V</span><br><span class="line">autoconf (GNU Autoconf) 2.68</span><br><span class="line">Copyright (C) 2010 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+/Autoconf: GNU GPL version 3 or later</span><br><span class="line">&lt;http://gnu.org/licenses/gpl.html&gt;, &lt;http://gnu.org/licenses/exceptions.html&gt;</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line"></span><br><span class="line">Written by David J. MacKenzie and Akim Demaille.</span><br></pre></td></tr></table></figure></p><p>autoconf已升级到2.68了(<em>^▽^</em>)！</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决CentOS7网卡连不上网且重启报错</title>
      <link href="2020/09/28/%E8%A7%A3%E5%86%B3CentOS7%E7%BD%91%E5%8D%A1%E8%BF%9E%E4%B8%8D%E4%B8%8A%E7%BD%91%E4%B8%94%E9%87%8D%E5%90%AF%E6%8A%A5%E9%94%99/"/>
      <url>2020/09/28/%E8%A7%A3%E5%86%B3CentOS7%E7%BD%91%E5%8D%A1%E8%BF%9E%E4%B8%8D%E4%B8%8A%E7%BD%91%E4%B8%94%E9%87%8D%E5%90%AF%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<p>VMWare虚拟机安装了CentOS7 ，突然发现连接不上，进入系统使用<code>ifconfig</code>命令查看网络设备，发现无外网网卡。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ifconfig</span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 12  bytes 1068 (1.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 12  bytes 1068 (1.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">virbr0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255</span><br><span class="line">        ether 52:54:00:f6:af:41  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>那重启网卡试试看吧，what? 报错了！</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl status network</span><br><span class="line">● network.service - LSB: Bring up/down networking</span><br><span class="line">   Loaded: loaded (/etc/rc.d/init.d/network; bad; vendor preset: disabled)</span><br><span class="line">   Active: failed (Result: exit-code) since Mon 2020-09-28 09:59:00 CST; 9s ago</span><br><span class="line">     Docs: man:systemd-sysv-generator(8)</span><br><span class="line">  Process: 13344 ExecStart=/etc/rc.d/init.d/network start (code=exited, status=1/FAILURE)</span><br><span class="line"></span><br><span class="line">Sep 28 09:59:00 localhost.localdomain network[13344]: RTNETLINK answers: File...</span><br><span class="line">Sep 28 09:59:00 localhost.localdomain network[13344]: RTNETLINK answers: File...</span><br><span class="line">Sep 28 09:59:00 localhost.localdomain network[13344]: RTNETLINK answers: File...</span><br><span class="line">Sep 28 09:59:00 localhost.localdomain network[13344]: RTNETLINK answers: File...</span><br><span class="line">Sep 28 09:59:00 localhost.localdomain network[13344]: RTNETLINK answers: File...</span><br><span class="line">Sep 28 09:59:00 localhost.localdomain network[13344]: RTNETLINK answers: File...</span><br><span class="line">Sep 28 09:59:00 localhost.localdomain systemd[1]: network.service: control pr...</span><br><span class="line">Sep 28 09:59:00 localhost.localdomain systemd[1]: Failed to start LSB: Bring ...</span><br><span class="line">Sep 28 09:59:00 localhost.localdomain systemd[1]: Unit network.service entere...</span><br><span class="line">Sep 28 09:59:00 localhost.localdomain systemd[1]: network.service failed.</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show in full.</span><br></pre></td></tr></table></figure><p>出现此现象的原因一般是系统的 <strong>NetworkManager</strong> 管理套件出现了问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sep 28 09:59:00 localhost.localdomain systemd[1]: Failed to start LSB: Bring ...</span><br></pre></td></tr></table></figure><p>所以我们要停止这个套件的服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl stop NetworkManager</span><br></pre></td></tr></table></figure><p>然后重启网卡试试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl restart network.service</span><br></pre></td></tr></table></figure><p>没有报错，是不是可以了呢？我们查看网络设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ifconfig</span><br><span class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.100.15  netmask 255.255.255.0  broadcast 192.168.100.255</span><br><span class="line">        inet6 fe80::20c:29ff:fe35:e8d7  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:35:e8:d7  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 9  bytes 626 (626.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 32  bytes 4309 (4.2 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 12  bytes 1068 (1.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 12  bytes 1068 (1.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">virbr0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255</span><br><span class="line">        ether 52:54:00:f6:af:41  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>OK，出现外网网卡了，为了防止重启后 NetworkManager 再次开启，我们这是不让它开机启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable NetworkManager</span><br></pre></td></tr></table></figure><p>over!</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客添加搜索功能</title>
      <link href="2020/09/25/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
      <url>2020/09/25/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>当文件慢慢变多的时候，分类和标签已经不能快速找到所需要的文章，我们需要添加本站的搜索功能。</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>在博客根目录执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>Hexo的搜索功能依赖于 <a href="https://github.com/theme-next/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search 插件</a></p><a id="more"></a><h2 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h2><p>修改根目录下的<code>_config.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br><span class="line"><span class="attr">  content:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><p>我的路径：./themes/next下的<code>_config.yml</code>文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS查看是否安装了某个软件</title>
      <link href="2020/09/25/CentOS%E6%9F%A5%E7%9C%8B%E6%98%AF%E5%90%A6%E5%AE%89%E8%A3%85%E4%BA%86%E6%9F%90%E4%B8%AA%E8%BD%AF%E4%BB%B6/"/>
      <url>2020/09/25/CentOS%E6%9F%A5%E7%9C%8B%E6%98%AF%E5%90%A6%E5%AE%89%E8%A3%85%E4%BA%86%E6%9F%90%E4%B8%AA%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="rpm包安装的"><a href="#rpm包安装的" class="headerlink" title="rpm包安装的"></a>rpm包安装的</h2><p>可以使用<code>rpm -qa</code> 查看，如果要查看指定的软件包是否安装用<code>rpm -qa | grep 软件或者包名</code></p><h2 id="deb包安装的"><a href="#deb包安装的" class="headerlink" title="deb包安装的"></a>deb包安装的</h2><p>可以使用<code>dpkg -l</code> 查看，如果要查看指定的软件包是否安装用<code>dpkg -l | grep 软件或者包名</code></p><h2 id="yum安装的"><a href="#yum安装的" class="headerlink" title="yum安装的"></a>yum安装的</h2><p>可以使用<code>yum list installed</code> 查看，如果要查看指定的软件包是否安装用<code>yum list installed | grep 软件或者包名</code></p><h2 id="源码包编译安装的"><a href="#源码包编译安装的" class="headerlink" title="源码包编译安装的"></a>源码包编译安装的</h2><p>以源码包自己编译安装的，例如.tar.gz或者tar.bz2形式的，这个只能看可执行文件是否存在了</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置CentOS7时间与网络时间同步</title>
      <link href="2020/09/25/%E8%AE%BE%E7%BD%AECentOS7%E6%97%B6%E9%97%B4%E4%B8%8E%E7%BD%91%E7%BB%9C%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/"/>
      <url>2020/09/25/%E8%AE%BE%E7%BD%AECentOS7%E6%97%B6%E9%97%B4%E4%B8%8E%E7%BD%91%E7%BB%9C%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<p>我们在安装CentOS系统时，如果没有配置好系统时间，可能就与本地时间不一致，如果是分布式集群部署的情况，时间不一致会出现很多问题，下面来分享把如何设置系统时间与网络时间同步，这样各个系统时间都能保持一致了。</p><h2 id="安装ntp服务"><a href="#安装ntp服务" class="headerlink" title="安装ntp服务"></a>安装ntp服务</h2><blockquote><p>如果已安装，跳过即可</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum -y install ntp ntpdate</span><br></pre></td></tr></table></figure><h2 id="设置系统时间与网络时间同步"><a href="#设置系统时间与网络时间同步" class="headerlink" title="设置系统时间与网络时间同步"></a>设置系统时间与网络时间同步</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ntpdate 0.asia.pool.ntp.org</span><br><span class="line">25 Sep 09:34:16 ntpdate[20301]: step time server 118.27.37.52 offset -280.143801 sec</span><br></pre></td></tr></table></figure><p>这里主要就是通过时间服务器对系统时间进行同步，所以<code>0.asia.pool.ntp.org</code>并不是固定的，大家可以选择<br><code>time.nist.gov</code>、<br><code>time.nuri.net</code>、<br><code>0.asia.pool.ntp.org</code>、<br><code>1.asia.pool.ntp.org</code>、<br><code>2.asia.pool.ntp.org</code>、<br><code>3.asia.pool.ntp.org</code><br>中任意一个，只要保证可用就可以。</p><h2 id="将系统时间写入硬件时间"><a href="#将系统时间写入硬件时间" class="headerlink" title="将系统时间写入硬件时间"></a>将系统时间写入硬件时间</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# hwclock --systohc</span><br></pre></td></tr></table></figure><p>这里是为了防止系统重启后时间被还原，因此需要写到硬件设备中去。</p><h2 id="查看系统的当前时间和日期"><a href="#查看系统的当前时间和日期" class="headerlink" title="查看系统的当前时间和日期"></a>查看系统的当前时间和日期</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# timedatectl</span><br><span class="line">      Local time: 五 2020-09-25 10:06:42 CST</span><br><span class="line">  Universal time: 五 2020-09-25 02:06:42 UTC</span><br><span class="line">        RTC time: 五 2020-09-25 02:06:42</span><br><span class="line">       Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">     NTP enabled: no</span><br><span class="line">NTP synchronized: no</span><br><span class="line"> RTC in local TZ: no</span><br><span class="line">      DST active: n/a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 监控命令整理</title>
      <link href="2020/09/11/Linux-%E7%9B%91%E6%8E%A7%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"/>
      <url>2020/09/11/Linux-%E7%9B%91%E6%8E%A7%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux系统监控命令速查手册"><a href="#Linux系统监控命令速查手册" class="headerlink" title="Linux系统监控命令速查手册"></a>Linux系统监控命令速查手册</h2><table><thead><tr><th>命令</th><th>功能作用</th><th>用法举例</th></tr></thead><tbody><tr><td><code>free</code></td><td>查看内存使用情况，包括物理内存和虚拟内存</td><td><code>free -h</code>或<code>free -m</code></td></tr><tr><td><code>vmstat</code></td><td>对系统的整体情况进行统计，包括内核进程、虚拟内存、磁盘、陷阱和 CPU 活动的统计信息</td><td><code>vmstat 2 100</code></td></tr><tr><td><code>top</code></td><td>实时显示系统中各个进程的资源占用状况及总体状况</td><td><code>top</code></td></tr><tr><td><code>mpstat</code></td><td>实时系统监控工具，它会报告与CPU相关的统计信息</td><td><code>mpstat</code></td></tr><tr><td><code>sar</code></td><td>收集、报告和保存CPU、内存、输入输出端口使用情况</td><td><code>sar -n DEV 3 100</code></td></tr><tr><td><code>netstat</code></td><td>检验本机各端口的网络连接情况，用于显示与IP、TCP、UDP和ICMP协议相关的统计数据</td><td><code>netstat -a</code></td></tr><tr><td><code>tcpdump</code></td><td>用于捕捉或者过滤网络上指定接口上接收或者传输的TCP/IP包</td><td><code>tcpdump -i eth0 -c 3</code></td></tr><tr><td><code>IPTraf</code></td><td>用来生成包括TCP信息、UDP计数、ICMP和OSPF信息、以太网负载信息、节点状态信息、IP校验和错误等等统计数据</td><td><code>iptraf</code></td></tr><tr><td><code>df</code></td><td>检查linux的文件系统的磁盘空间占用情况</td><td><code>df -h</code></td></tr><tr><td><code>iostat</code></td><td>收集显示系统存储设备输入和输出状态统计</td><td><code>iostat -x -k 2 100</code></td></tr><tr><td><code>iotop</code></td><td>用来监视磁盘I/O使用状况的top类工具</td><td><code>iotop</code></td></tr><tr><td><code>lsof</code></td><td>用于以列表的形式显示所有打开的文件和进程</td><td><code>lsof</code></td></tr><tr><td><code>atop</code></td><td>显示的是各种系统资源（CPU, memory, network, I/O, kernel）的综合，并且在高负载的情况下进行了彩色标注</td><td><code>atop</code></td></tr><tr><td><code>htop</code></td><td>它和top命令十分相似，高级的交互式的实时linux进程监控工具</td><td><code>htop</code></td></tr><tr><td><code>ps</code></td><td>最基本同时也是非常强大的进程查看命令</td><td><code>ps aux</code></td></tr><tr><td><code>glances</code></td><td>监视 CPU，平均负载，内存，网络流量，磁盘 I/O，其他处理器 和 文件系统 空间的利用情况</td><td><code>glances</code></td></tr><tr><td><code>dstat</code></td><td>全能系统信息统计工具，可用于替换vmstat、iostat、netstat、nfsstat和ifstat这些命令的工具</td><td><code>dstat</code></td></tr><tr><td><code>uptime</code></td><td>用于查看服务器运行了多长时间以及有多少个用户登录，快速获知服务器的负荷情况</td><td><code>uptime</code></td></tr><tr><td><code>dmesg</code></td><td>主要用来显示内核信息。使用dmesg可以有效诊断机器硬件故障或者添加硬件出现的问题。</td><td><code>dmesg</code></td></tr><tr><td><code>mpstat</code></td><td>用于报告多路CPU主机的每颗CPU活动情况，以及整个主机的CPU情况。</td><td><code>mpstat 2 3</code></td></tr><tr><td><code>nmon</code></td><td>监控CPU、内存、I/O、文件系统及网络资源。对于内存的使用，它可以实时的显示 总/剩余内存、交换空间等信息。</td><td><code>nmon</code></td></tr><tr><td><code>mytop</code></td><td>用于监控 mysql 的线程和性能。它能让你实时查看数据库以及正在处理哪些查询。</td><td><code>mytop</code></td></tr><tr><td><code>iftop</code></td><td>用来监控网卡的实时流量（可以指定网段）、反向解析IP、显示端口信息等</td><td><code>iftop</code></td></tr><tr><td><code>jnettop</code></td><td>以相同的方式来监测网络流量但比 iftop 更形象。它还支持自定义的文本输出，并能以友好的交互方式来深度分析日志。</td><td><code>jnettop</code></td></tr><tr><td><code>ngrep</code></td><td>网络层的 grep。它使用 pcap ，允许通过指定扩展正则表达式或十六进制表达式来匹配数据包。</td><td><code>ngrep</code></td></tr><tr><td><code>nmap</code></td><td>可以扫描你服务器开放的端口并且可以检测正在使用哪个操作系统</td><td><code>nmap</code></td></tr><tr><td><code>du</code></td><td>查看Linux系统中某目录的大小</td><td><code>du -sh 目录名</code></td></tr><tr><td><code>fdisk</code></td><td>查看硬盘及分区信息</td><td><code>fdisk -l</code></td></tr></tbody></table><a id="more"></a><h2 id="内存监控"><a href="#内存监控" class="headerlink" title="内存监控"></a>内存监控</h2><h3 id="free命令"><a href="#free命令" class="headerlink" title="free命令"></a>free命令</h3><p><code>free</code>可以用来快速查看VPS主机的内存使用情况，包括了物理内存和虚拟内存。后面可以加上参数：<code>-h</code>和<code>-m</code>，否则默认会以kb为单位显示。运行命令结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@iZm5eae8wzyq0xrh8j2i1eZ ~]<span class="comment"># free -h</span></span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          7.8G       7.6G       196M        23M       223M       3.4G</span><br><span class="line">-/+ buffers/cache:       4.0G       3.8G</span><br><span class="line">Swap:           0B         0B         0B</span><br><span class="line">[root@iZm5eae8wzyq0xrh8j2i1eZ ~]<span class="comment"># free -m</span></span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          8001       7805        195         23        223       3478</span><br><span class="line">-/+ buffers/cache:       4102       3898</span><br><span class="line">Swap:            0          0          0</span><br><span class="line">[root@iZm5eae8wzyq0xrh8j2i1eZ ~]<span class="comment"># free</span></span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:       8193180    7992848     200332      24056     229300    3562332</span><br><span class="line">-/+ buffers/cache:    4201216    3991964</span><br><span class="line">Swap:            0          0          0</span><br></pre></td></tr></table></figure><p><strong>相关参数说明：</strong></p><blockquote><ul><li>total：物理内存大小，就是机器实际的内存  </li><li>used：已使用的内存大小，这个值包括了 cached 和 应用程序实际使用的内存  </li><li>free：未被使用的内存大小  </li><li>shared：共享内存大小，是进程间通信的一种方式  </li><li>buffers：被缓冲区占用的内存大小  </li><li>cached：被缓存占用的内存大小  </li></ul></blockquote><h3 id="vmstat命令"><a href="#vmstat命令" class="headerlink" title="vmstat命令"></a>vmstat命令</h3><p><code>vmstat</code>（Virtual Meomory Statistics，虚拟内存统计）是对系统的整体情况进行统计，包括内核进程、虚拟内存、磁盘、陷阱和 CPU 活动的统计信息。命令格式：<code>vmstat 2 100</code>，其中2表示刷新间隔，100表示输出次数。运行命令结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@iZm5eae8wzyq0xrh8j2i1eZ ~]<span class="comment"># vmstat 2 100</span></span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy id wa st</span><br><span class="line"> 0  1      0 186124 230100 3575140    0    0     8     6    0    0  0  0 100  0  0</span><br><span class="line"> 0  0      0 186092 230128 3575176    0    0    14    30 1484 2683  0  0 99  0  0</span><br><span class="line"> 0  0      0 186100 230132 3575332    0    0    78     0 1433 2678  0  0 100  0  0</span><br><span class="line"> 0  0      0 185976 230140 3575344    0    0     6    36 1417 2676  0  0 100  0  0</span><br><span class="line"> 0  0      0 185992 230160 3575400    0    0    40     0 1434 2658  0  0 100  0  0</span><br><span class="line"> 0  0      0 185868 230160 3575424    0    0    10     0 1440 2659  0  0 99  1  0</span><br></pre></td></tr></table></figure><p><strong>相关参数说明：</strong></p><ol><li><p>procs</p><ul><li>r列表示运行和等待CPU时间片的进程数，这个值如果长期大于系统CPU个数，就说明CPU资源不足，可以考虑增加CPU；</li><li>b列表示在等待资源的进程数，比如正在等待I/O或者内存交换等。</li></ul></li><li><p>memory</p><ul><li>swpd列表示切换到内存交换区的内存数量（以KB为单位）。如果swpd的值不为0或者比较大，而且si、so的值长期为0，那么这种情况一般不用担心，不会影响系统性能；</li><li>free列表示当前空闲的物理内存数量（以KB为单位）；</li><li>buff列表示buffers cache的内存数量，一般对块设备的读写才需要缓冲；</li><li>cache列表示page cached的内存数量，一般作文件系统的cached，频繁访问的文件都会被cached。如果cached值较大，就说明cached文件数较多。如果此时IO中的bi比较小，就说明文件系统效率比较好。</li></ul></li><li><p>swap</p><ul><li>si列表示由磁盘调入内存，也就是内存进入内存交换区的数量；</li><li><p>so列表示由内存调入磁盘，也就是内存交换区进入内存的数量</p><p>一般情况下，si、so的值都为0，如果si、so的值长期不为0，则表示系统内存不足，需要考虑是否增加系统内存。</p></li></ul></li><li><p>IO</p><ul><li>bi列表示从块设备读入的数据总量（即读磁盘，单位KB/秒）</li><li><p>bo列表示写入到块设备的数据总量（即写磁盘，单位KB/秒）</p><p>这里设置的bi+bo参考值为1000，如果超过1000，而且wa值比较大，则表示系统磁盘IO性能瓶颈。</p></li></ul></li><li><p>system</p><ul><li>in列表示在某一时间间隔中观察到的每秒设备中断数；</li><li><p>cs列表示每秒产生的上下文切换次数。</p><p>上面这两个值越大，会看到内核消耗的CPU时间就越多。</p></li></ul></li><li><p>CPU</p><ul><li>us列显示了用户进程消耗CPU的时间百分比。us的值比较高时，说明用户进程消耗的CPU时间多，如果长期大于50%，需要考虑优化程序啥的。</li><li>sy列显示了内核进程消耗CPU的时间百分比。sy的值比较高时，说明内核消耗的CPU时间多；如果us+sy超过80%，就说明CPU的资源存在不足。</li><li>id列显示了CPU处在空闲状态的时间百分比；</li><li>wa列表示IO等待所占的CPU时间百分比。wa值越高，说明IO等待越严重。如果wa值超过20%，说明IO等待严重。</li><li>st列一般不关注，虚拟机占用的时间百分比。</li></ul></li></ol><h2 id="CPU监控"><a href="#CPU监控" class="headerlink" title="CPU监控"></a>CPU监控</h2><h3 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a>top命令</h3><p>top命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况及总体状况。运行结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# top</span><br><span class="line">top - 16:50:45 up 32 days,  7:08,  3 users,  load average: 0.00, 0.03, 0.05</span><br><span class="line">Tasks: 231 total,   2 running, 229 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  8011564 total,  3276644 free,  3041664 used,  1693256 buff/cache</span><br><span class="line">KiB Swap:  4063228 total,  4063228 free,        0 used.  4655796 avail Mem </span><br><span class="line"></span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                                                             </span><br><span class="line"> 4605 root      20   0  148468   2180   1448 R   7.7  0.0   0:02.86 top                                                                 </span><br><span class="line">    1 root      20   0   41436   3748   2456 S   0.0  0.0   0:09.37 systemd                                                             </span><br><span class="line">    2 root      20   0       0      0      0 S   0.0  0.0   0:00.08 kthreadd                                                            </span><br><span class="line">    3 root      20   0       0      0      0 S   0.0  0.0   0:00.12 ksoftirqd/0                                                         </span><br><span class="line">    5 root       0 -20       0      0      0 S   0.0  0.0   0:00.00 kworker/0:0H                                                        </span><br><span class="line">    7 root      rt   0       0      0      0 S   0.0  0.0   0:00.06 migration/0                                                         </span><br><span class="line">    8 root      20   0       0      0      0 S   0.0  0.0   0:00.00 rcu_bh                                                              </span><br><span class="line">    9 root      20   0       0      0      0 S   0.0  0.0   0:00.00 rcuob/0                                                             </span><br><span class="line">   10 root      20   0       0      0      0 S   0.0  0.0   0:00.00 rcuob/1                                                             </span><br><span class="line">   11 root      20   0       0      0      0 S   0.0  0.0   0:00.00 rcuob/2                                                             </span><br><span class="line">   12 root      20   0       0      0      0 S   0.0  0.0   0:00.00 rcuob/3</span><br></pre></td></tr></table></figure><p><strong>相关的参数说明：</strong></p><ul><li><p>第一行：</p><ul><li>16:50:45： 这是wzfou.com测试时系统时间</li><li>up xxx days, 7:08：系统运行时间，系统已经运行了xx天7小时8分钟了。</li><li>2 users：当前登录用户数</li><li>load average：系统负载，即任务队列的平均长度。三个数值分别为最近1分钟、最近5分钟、最近15分钟的平均负载 —— <strong>超过N（CPU核数）说明系统满负荷运行</strong>。也可以通过<code>$w</code>或<code>$uptime</code>命令查看load average。</li></ul></li><li><p>第二行：</p><ul><li>显示进程总数、正在运行的进程数、休眠的进程数、停止的进程数、僵尸进程数</li></ul></li><li><p>第三行：</p><ul><li>%us：用户进程消耗的CPU百分比</li><li>%sy：内核进程消耗的CPU百分比</li><li>%ni：改变过优先级的进程占用CPU的百分比</li><li>%id：空闲CPU的百分比</li><li>%wa：IO等待消耗的CPU百分比</li></ul></li></ul><p><strong>排序</strong></p><p>进程的CPU使用率排序：运行top命令后，键入大写P<br>内存使用率排序：运行top命令后，键入大写M</p><h3 id="mpstat命令"><a href="#mpstat命令" class="headerlink" title="mpstat命令"></a>mpstat命令</h3><p>mpstat（Multiprocessor Statistics，多处理器统计）是实时系统监控工具，它会报告与CPU相关的统计信息，这些信息存放在/proc/stat文件中。格式：<code>mpstat -P ALL 2</code> # ALL表示显示所有CPUs，也可以指定某个CPU；2表示刷新间隔。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@iZm5eae8wzyq0xrh8j2i1eZ ~]<span class="comment"># mpstat -P ALL 2</span></span><br><span class="line">Linux 2.6.32-696.3.2.el6.x86_64 (iZm5eae8wzyq0xrh8j2i1eZ) 10/21/2020 _x86_64_(4 CPU)</span><br><span class="line"></span><br><span class="line">12:27:45 PM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest   %idle</span><br><span class="line">12:27:47 PM  all    0.13    0.00    0.25    0.38    0.00    0.00    0.00    0.00   99.25</span><br><span class="line">12:27:47 PM    0    0.50    0.00    1.00    1.50    0.00    0.00    0.00    0.00   97.00</span><br><span class="line">12:27:47 PM    1    0.50    0.00    0.00    0.00    0.00    0.00    0.00    0.00   99.50</span><br><span class="line">12:27:47 PM    2    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00  100.00</span><br><span class="line">12:27:47 PM    3    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00  100.00</span><br><span class="line"></span><br><span class="line">12:27:47 PM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest   %idle</span><br><span class="line">12:27:49 PM  all    0.13    0.00    0.25    0.13    0.00    0.00    0.00    0.00   99.50</span><br><span class="line">12:27:49 PM    0    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00  100.00</span><br><span class="line">12:27:49 PM    1    0.00    0.00    0.50    0.00    0.00    0.00    0.00    0.00   99.50</span><br><span class="line">12:27:49 PM    2    0.00    0.00    0.50    0.00    0.00    0.00    0.00    0.00   99.50</span><br><span class="line">12:27:49 PM    3    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00  100.00</span><br></pre></td></tr></table></figure><h2 id="网络监控"><a href="#网络监控" class="headerlink" title="网络监控"></a>网络监控</h2><h3 id="sar命令"><a href="#sar命令" class="headerlink" title="sar命令"></a>sar命令</h3><p>SAR是一个在Unix和Linux操作系统中用来收集、报告和保存CPU、内存、输入输出端口使用情况的命令。SAR命令可以动态产生报告，也可以把报告保存在日志文件中。命令格式：<code>sar -n DEV 3 100</code>。效果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@iZm5eae8wzyq0xrh8j2i1eZ ~]<span class="comment"># sar -n DEV 3 100</span></span><br><span class="line">Linux 2.6.32-696.3.2.el6.x86_64 (iZm5eae8wzyq0xrh8j2i1eZ) 10/21/2020 _x86_64_(4 CPU)</span><br><span class="line"></span><br><span class="line">12:30:28 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s</span><br><span class="line">12:30:31 PM        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">12:30:31 PM      eth0     10.33     10.33      2.11      6.36      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">12:30:31 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s</span><br><span class="line">12:30:34 PM        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">12:30:34 PM      eth0      6.00      5.00      3.20      2.90      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">12:30:34 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s</span><br><span class="line">12:30:37 PM        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">12:30:37 PM      eth0      4.35      4.01      2.02      1.71      0.00      0.00      0.00</span><br></pre></td></tr></table></figure><p><strong>相关参数说明如下：</strong></p><ul><li>IFACE：网络设备的名称</li><li>rxpck/s：每秒钟接收到的包数目</li><li>txpck/s：每秒钟发送出去的包数目</li><li>rxkB/s：每秒钟接收到的字节数</li><li>txkB/s：每秒钟发送出去的字节数</li></ul><h3 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h3><p><code>netstat</code>命令一般用于检验本机各端口的网络连接情况，用于显示与IP、TCP、UDP和ICMP协议相关的统计数据。</p><p>选取部分选项说明如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-a, --all, --listening     显示所有连接中的Socket。</span><br><span class="line">-n, --numeric              以数字形式显示地址和端口号。</span><br><span class="line">-t, -–tcp                  显示TCP传输协议的连线状况。</span><br><span class="line">-u, -–udp                  显示UDP传输协议的连线状况。</span><br><span class="line">-p, --programs             显示正在使用socket的程序名/进程ID</span><br><span class="line">-l, --listening            显示监控中的服务器的Socket。</span><br><span class="line">-o, --timers               显示计时器。</span><br><span class="line">-s, --statistics           显示每个网络协议的统计信息(比如SNMP)</span><br><span class="line">-i, --interfaces           显示网络界面信息表单（网卡列表）</span><br><span class="line">-r, --route                显示路由表</span><br></pre></td></tr></table></figure><p>常用的几种：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ netstat -aup        # 输出所有UDP连接状况</span><br><span class="line">$ netstat -atp        # 输出所有TCP连接状况</span><br><span class="line">$ netstat -s          # 显示各个协议的网络统计信息</span><br><span class="line">$ netstat -i          # 显示网卡列表</span><br><span class="line">$ netstat -r          # 显示路由表信息</span><br></pre></td></tr></table></figure><h2 id="df"><a href="#df" class="headerlink" title="df"></a>df</h2><p>查看硬盘</p><h2 id="uptime"><a href="#uptime" class="headerlink" title="uptime"></a>uptime</h2><p>系统启动时间也可以看负载</p><p>参考链接：<a href="https://wzfou.com/linux-jiankong/" target="_blank" rel="noopener">https://wzfou.com/linux-jiankong/</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 配置location和rewrite规则写法总结</title>
      <link href="2020/09/01/Nginx-%E9%85%8D%E7%BD%AElocation%E5%92%8Crewrite%E8%A7%84%E5%88%99%E5%86%99%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>2020/09/01/Nginx-%E9%85%8D%E7%BD%AElocation%E5%92%8Crewrite%E8%A7%84%E5%88%99%E5%86%99%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>location 块的基本语法是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location [=|~|~*|^~|@] pattern &#123;....&#125;</span><br></pre></td></tr></table></figure><p><code>[=|~|~*|^~|@]</code> 被称作 location modifier ，这会定义 Nginx 如何去匹配其后的 <code>pattern</code> ，以及该 <code>pattern</code> 的最基本的属性（简单字符串或正则表达式）。</p><a id="more"></a><h2 id="location正则写法"><a href="#location正则写法" class="headerlink" title="location正则写法"></a>location正则写法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">location = / &#123;</span><br><span class="line">  # 精确匹配 / ，主机名后面不能带任何字符串</span><br><span class="line">  [ configuration A ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">  # 因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求</span><br><span class="line">  # 但是正则和最长字符串会优先匹配</span><br><span class="line">  [ configuration B ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /documents/ &#123;</span><br><span class="line">  # 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索</span><br><span class="line">  # 只有后面的正则表达式没有匹配到时，这一条才会采用这一条</span><br><span class="line">  [ configuration C ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ /documents/Abc &#123;</span><br><span class="line">  # 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索</span><br><span class="line">  # 只有后面的正则表达式没有匹配到时，这一条才会采用这一条</span><br><span class="line">  [ configuration CC ] </span><br><span class="line">&#125;</span><br><span class="line">location ^~ /images/ &#123;</span><br><span class="line">  # 匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条。</span><br><span class="line">  [ configuration D ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~* \.(gif|jpg|jpeg)$ &#123;</span><br><span class="line">  # 匹配所有以 gif,jpg或jpeg 结尾的请求</span><br><span class="line">  # 然而，所有请求 /images/ 下的图片会被 config D 处理，因为 ^~ 到达不了这一条正则</span><br><span class="line">  [ configuration E ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /images/ &#123;</span><br><span class="line">  # 字符匹配到 /images/，继续往下，会发现 ^~ 存在</span><br><span class="line">  [ configuration F ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /images/abc &#123;</span><br><span class="line">  # 最长字符匹配到 /images/abc，继续往下，会发现 ^~ 存在</span><br><span class="line">  # F与G的放置顺序是没有关系的</span><br><span class="line">  [ configuration G ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ /images/abc/ &#123;</span><br><span class="line">  # 只有去掉 config D 才有效：先最长匹配 config G 开头的地址，继续往下搜索，匹配到这一条正则，采用</span><br><span class="line">  [ configuration H ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~* /js/.*/\.js</span><br></pre></td></tr></table></figure><ul><li><code>=</code> 开头表示精确匹配，如 A 中只匹配根目录结尾的请求，后面不能带任何字符串。</li><li><code>^~</code> 开头表示uri以某个常规字符串开头，不是正则匹配</li><li><code>~</code> 开头表示区分大小写的正则匹配;</li><li><code>~*</code> 开头表示不区分大小写的正则匹配</li><li><code>/</code> 通用匹配, 如果没有其它匹配,任何请求都会匹配到</li></ul><p><strong>顺序不等于优先级：</strong></p><p><code>(location =) &gt; (location 完整路径) &gt; (location ^~ 路径) &gt; (location ~,~* 正则顺序) &gt; (location 部分起始路径) &gt; (/)</code></p><p>上面的匹配结果。按照上面的location写法，以下的匹配示例成立：</p><ul><li>/ -&gt; config A 精确完全匹配，即使/index.html也匹配不了</li><li>/downloads/download.html -&gt; config B 匹配B以后，往下没有任何匹配，采用B</li><li>/images/1.gif -&gt; configuration D 匹配到F，往下匹配到D，停止往下</li><li>/images/abc/def -&gt; config D 最长匹配到G，往下匹配D，停止往下</li></ul><p>你可以看到 任何以/images/开头的都会匹配到D并停止，FG写在这里是没有任何意义的，H是永远轮不到的，这里只是为了说明匹配顺序</p><ul><li>/documents/document.html -&gt; config C 匹配到C，往下没有任何匹配，采用C</li><li>/documents/1.jpg -&gt; configuration E 匹配到C，往下正则匹配到E</li><li>/documents/Abc.jpg -&gt; config CC 最长匹配到C，往下正则顺序匹配到CC，不会往下到E</li></ul><h3 id="实际使用建议"><a href="#实际使用建议" class="headerlink" title="实际使用建议"></a>实际使用建议</h3><p>所以实际使用中，个人觉得至少有三个匹配规则定义，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，官网如是说。</span><br><span class="line">#这里是直接转发给后端应用服务器了，也可以是一个静态首页</span><br><span class="line"># 第一个必选规则</span><br><span class="line">location = / &#123;</span><br><span class="line">    proxy_pass http://tomcat:8080/index</span><br><span class="line">&#125;</span><br><span class="line"># 第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项</span><br><span class="line"># 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用</span><br><span class="line">location ^~ /static/ &#123;</span><br><span class="line">    root /webroot/static/;</span><br><span class="line">&#125;</span><br><span class="line">location ~* \.(gif|jpg|jpeg|png|css|js|ico)$ &#123;</span><br><span class="line">    root /webroot/res/;</span><br><span class="line">&#125;</span><br><span class="line"># 第三个规则就是通用规则，用来转发动态请求到后端应用服务器</span><br><span class="line"># 非静态文件请求就默认是动态请求，自己根据实际把握</span><br><span class="line"># 毕竟目前的一些框架的流行，带.php,.jsp后缀的情况很少了</span><br><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://tomcat:8080/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Rewrite规则"><a href="#Rewrite规则" class="headerlink" title="Rewrite规则"></a>Rewrite规则</h2><p>rewrite功能就是，使用nginx提供的全局变量或自己设置的变量，结合正则表达式和标志位实现url重写以及重定向。rewrite只能放在<code>server{}</code>,<code>location{}</code>,<code>if{}</code>中，并且只能对域名后边的除去传递的参数外的字符串起作用，例如<code>http://seanlook.com/a/we/index.php?id=1&amp;u=str</code> 只对<code>/a/we/index.php</code>重写。语法<code>rewrite regex replacement [flag]</code>;</p><p>如果相对域名或参数字符串起作用，可以使用全局变量匹配，也可以使用proxy_pass反向代理。</p><p>表明看rewrite和location功能有点像，都能实现跳转，主要区别在于rewrite是在同一域名内更改获取资源的路径，而location是对一类路径做控制访问或反向代理，可以proxy_pass到其他机器。很多情况下rewrite也会写在location里，它们的执行顺序是：</p><ol><li>执行server块的rewrite指令</li><li>执行location匹配</li><li>执行选定的location中的rewrite指令</li></ol><p>如果其中某步URI被重写，则重新循环执行1-3，直到找到真实存在的文件；循环超过10次，则返回<code>500 Internal Server Error</code>错误。</p><h3 id="flag标志位"><a href="#flag标志位" class="headerlink" title="flag标志位"></a>flag标志位</h3><ul><li>last : 相当于Apache的[L]标记，表示完成rewrite</li><li>break : 停止执行当前虚拟主机的后续rewrite指令集</li><li>redirect : 返回302临时重定向，地址栏会显示跳转后的地址</li><li>permanent : 返回301永久重定向，地址栏会显示跳转后的地址</li></ul><p>因为301和302不能简单的只返回状态码，还必须有重定向的URL，这就是return指令无法返回301,302的原因了。这里 last 和 break 区别有点难以理解：</p><ol><li>last一般写在server和if中，而break一般使用在location中</li><li>last不终止重写后的url匹配，即新的url会再从server走一遍匹配流程，而break终止重写后的匹配</li><li>break和last都能组织继续执行后面的rewrite指令</li></ol><h3 id="if指令与全局变量"><a href="#if指令与全局变量" class="headerlink" title="if指令与全局变量"></a>if指令与全局变量</h3><p><strong>if判断指令</strong></p><p>语法为<code>if(condition){...}</code>，对给定的条件condition进行判断。如果为真，大括号内的rewrite指令将被执行，if条件(conditon)可以是如下任何内容：</p><ul><li>当表达式只是一个变量时，如果值为空或任何以0开头的字符串都会当做false</li><li>直接比较变量和内容时，使用=或!=</li><li>~正则表达式匹配，~*不区分大小写的匹配，!~区分大小写的不匹配</li></ul><blockquote><p><code>-f</code>和<code>!-f</code>用来判断是否存在文件<br><code>-d</code>和<code>!-d</code>用来判断是否存在目录<br><code>-e</code>和<code>!-e</code>用来判断是否存在文件或目录<br><code>-x</code>和<code>!-x</code>用来判断文件是否可执行</p></blockquote><p><strong>例如：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">if ($http_user_agent ~ MSIE) &#123;</span><br><span class="line">    rewrite ^(.*)$ /msie/$1 break;</span><br><span class="line">&#125; //如果UA包含&quot;MSIE&quot;，rewrite请求到/msid/目录下</span><br><span class="line">if ($http_cookie ~* &quot;id=([^;]+)(?:;|$)&quot;) &#123;</span><br><span class="line">    set $id $1;</span><br><span class="line"> &#125; //如果cookie匹配正则，设置变量$id等于正则引用部分</span><br><span class="line">if ($request_method = POST) &#123;</span><br><span class="line">    return 405;</span><br><span class="line">&#125; //如果提交方法为POST，则返回状态405（Method not allowed）。return不能返回301,302</span><br><span class="line">if ($slow) &#123;</span><br><span class="line">    limit_rate 10k;</span><br><span class="line">&#125; //限速，$slow可以通过 set 指令设置</span><br><span class="line">if (!-f $request_filename)&#123;</span><br><span class="line">    break;</span><br><span class="line">    proxy_pass  http://127.0.0.1; </span><br><span class="line">&#125; //如果请求的文件名不存在，则反向代理到localhost 。这里的break也是停止rewrite检查</span><br><span class="line">if ($args ~ post=140)&#123;</span><br><span class="line">    rewrite ^ http://example.com/ permanent;</span><br><span class="line">&#125; //如果query string中包含&quot;post=140&quot;，永久重定向到example.com</span><br><span class="line">location ~* \.(gif|jpg|png|swf|flv)$ &#123;</span><br><span class="line">    valid_referers none blocked www.jefflei.com www.leizhenfang.com;</span><br><span class="line">    if ($invalid_referer) &#123;</span><br><span class="line">        return 404;</span><br><span class="line">    &#125; //防盗链</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>全局变量</strong></p><p>下面是可以用作if判断的全局变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$args ： #这个变量等于请求行中的参数，同$query_string</span><br><span class="line">$content_length ： 请求头中的Content-length字段。</span><br><span class="line">$content_type ： 请求头中的Content-Type字段。</span><br><span class="line">$document_root ： 当前请求在root指令中指定的值。</span><br><span class="line">$host ： 请求主机头字段，否则为服务器名称。</span><br><span class="line">$http_user_agent ： 客户端agent信息</span><br><span class="line">$http_cookie ： 客户端cookie信息</span><br><span class="line">$limit_rate ： 这个变量可以限制连接速率。</span><br><span class="line">$request_method ： 客户端请求的动作，通常为GET或POST。</span><br><span class="line">$remote_addr ： 客户端的IP地址。</span><br><span class="line">$remote_port ： 客户端的端口。</span><br><span class="line">$remote_user ： 已经经过Auth Basic Module验证的用户名。</span><br><span class="line">$request_filename ： 当前请求的文件路径，由root或alias指令与URI请求生成。</span><br><span class="line">$scheme ： HTTP方法（如http，https）。</span><br><span class="line">$server_protocol ： 请求使用的协议，通常是HTTP/1.0或HTTP/1.1。</span><br><span class="line">$server_addr ： 服务器地址，在完成一次系统调用后可以确定这个值。</span><br><span class="line">$server_name ： 服务器名称。</span><br><span class="line">$server_port ： 请求到达服务器的端口号。</span><br><span class="line">$request_uri ： 包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。</span><br><span class="line">$uri ： 不带请求参数的当前URI，$uri不包含主机名，如”/foo/bar.html”。</span><br><span class="line">$document_uri ： 与$uri相同。</span><br></pre></td></tr></table></figure><p>例：<code>http://localhost:88/test1/test2/test.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$host：localhost</span><br><span class="line">$server_port：88</span><br><span class="line">$request_uri：http://localhost:88/test1/test2/test.php</span><br><span class="line">$document_uri：/test1/test2/test.php</span><br><span class="line">$document_root：/var/www/html</span><br><span class="line">$request_filename：/var/www/html/test1/test2/test.php</span><br></pre></td></tr></table></figure><h3 id="常用正则"><a href="#常用正则" class="headerlink" title="常用正则"></a>常用正则</h3><ul><li><code>.</code> ： 匹配除换行符以外的任意字符</li><li><code>?</code> ： 重复0次或1次</li><li><code>+</code> ： 重复1次或更多次</li><li><code>*</code> ： 重复0次或更多次</li><li><code>\d</code> ：匹配数字</li><li><code>^</code> ： 匹配字符串的开始</li><li><code>$</code> ： 匹配字符串的介绍</li><li><code>{n}</code> ： 重复n次</li><li><code>{n,}</code> ： 重复n次或更多次</li><li><code>[c]</code> ： 匹配单个字符c</li><li><code>[a-z]</code> ： 匹配a-z小写字母的任意一个</li></ul><p>小括号<code>()</code>之间匹配的内容，可以在后面通过<code>$1</code>来引用，<code>$2</code>表示的是前面第二个<code>()</code>里的内容。正则里面容易让人困惑的是<code>\</code>转义特殊字符。</p><h4 id="rewrite实例"><a href="#rewrite实例" class="headerlink" title="rewrite实例"></a>rewrite实例</h4><p><strong>例1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    # 定义image日志格式</span><br><span class="line">    log_format imagelog &apos;[$time_local] &apos; $image_file &apos; &apos; $image_type &apos; &apos; $body_bytes_sent &apos; &apos; $status;</span><br><span class="line">    # 开启重写日志</span><br><span class="line">    rewrite_log on;</span><br><span class="line"> </span><br><span class="line">    server &#123;</span><br><span class="line">        root /home/www;</span><br><span class="line"> </span><br><span class="line">        location / &#123;</span><br><span class="line">                # 重写规则信息</span><br><span class="line">                error_log logs/rewrite.log notice; </span><br><span class="line">                # 注意这里要用‘’单引号引起来，避免&#123;&#125;</span><br><span class="line">                rewrite &apos;^/images/([a-z]&#123;2&#125;)/([a-z0-9]&#123;5&#125;)/(.*)\.(png|jpg|gif)$&apos; /data?file=$3.$4;</span><br><span class="line">                # 注意不能在上面这条规则后面加上“last”参数，否则下面的set指令不会执行</span><br><span class="line">                set $image_file $3;</span><br><span class="line">                set $image_type $4;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        location /data &#123;</span><br><span class="line">                # 指定针对图片的日志格式，来分析图片类型和大小</span><br><span class="line">                access_log logs/images.log mian;</span><br><span class="line">                root /data/images;</span><br><span class="line">                # 应用前面定义的变量。判断首先文件在不在，不在再判断目录在不在，如果还不在就跳转到最后一个url里</span><br><span class="line">                try_files /$arg_file /image404.html;</span><br><span class="line">        &#125;</span><br><span class="line">        location = /image404.html &#123;</span><br><span class="line">                # 图片不存在返回特定的信息</span><br><span class="line">                return 404 &quot;image not found\n&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对形如<code>/images/ef/uh7b3/test.png</code>的请求，重写到<code>/data?file=test.png</code>，于是匹配到<code>location /data</code>，先看<code>/data/images/test.png</code>文件存不存在，如果存在则正常响应，如果不存在则重写<code>tryfiles</code>到新的<code>image404 location</code>，直接返回<code>404</code>状态码。</p><p><strong>例2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^/images/(.*)_(\d+)x(\d+)\.(png|jpg|gif)$ /resizer/$1.$4?width=$2&amp;height=$3? last;</span><br></pre></td></tr></table></figure><p>对形如<code>/images/bla_500x400.jpg</code>的文件请求，重写到<code>/resizer/bla.jpg?width=500&amp;height=400</code>地址，并会继续尝试匹配<code>location</code>。</p><blockquote><p>上述内容转载自【Sean’s Notes】博客文章：<a href="http://seanlook.com/2015/05/17/nginx-location-rewrite/" target="_blank" rel="noopener">http://seanlook.com/2015/05/17/nginx-location-rewrite/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 负载均衡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 负载均衡配置</title>
      <link href="2020/08/31/Nginx-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%85%8D%E7%BD%AE/"/>
      <url>2020/08/31/Nginx-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>现在有4台服务器，x.x.x.211、x.x.x.212、x.x.x.213、x.x.x.214，其中使用211做负载均衡，212和213为应用服务器，214为数据存储服务器，平台端、店铺端和接口上传文件走214服务器。</p><p>服务器统一用lnmp集成一键安装。</p><p>212、213和124的nginx配置文件内容为</p><p>nginx.conf 或 vhost/<strong>**</strong>.conf</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name _;</span><br><span class="line">    index index.html index.htm index.php;</span><br><span class="line">    root  /data/www/project/public;</span><br><span class="line"></span><br><span class="line">    include enable-php-pathinfo.conf;</span><br><span class="line"></span><br><span class="line">    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      30d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*\.(js|css)?$</span><br><span class="line">    &#123;</span><br><span class="line">        expires      12h;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ /.well-known &#123;</span><br><span class="line">        allow all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ /\.</span><br><span class="line">    &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    access_log  off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>211服务器nginx配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">http</span><br><span class="line">&#123;</span><br><span class="line">    upstream backend &#123;</span><br><span class="line">        ip_hash;</span><br><span class="line">        server 192.16.18.212;</span><br><span class="line">        server 192.16.18.213;</span><br><span class="line">    &#125;</span><br><span class="line">    upstream admin_seller &#123;</span><br><span class="line">        server 192.16.18.214;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 监听80端口，对所有域名进行https重定向</span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80; #监听端口</span><br><span class="line">    server_name peak.xin; #请求域名</span><br><span class="line">    client_max_body_size 1024M; #文件大小限制，默认1M</span><br><span class="line"></span><br><span class="line">    return 301 https://$host$request_uri; #重定向至https访问。</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 443 ssl; #监听端口</span><br><span class="line">    server_name peak.xin; #请求域名</span><br><span class="line">    #ssl on; #开启ssl(1.15之后的版本都是推荐listen … ssl)</span><br><span class="line">    client_max_body_size 1024M; #文件大小限制，默认1M</span><br><span class="line"></span><br><span class="line">    # 加强xss的过滤</span><br><span class="line">    add_header X-Frame-Options &quot;SAMEORIGIN&quot;;</span><br><span class="line">    add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class="line">    add_header X-Content-Type-Options &quot;nosniff&quot;;</span><br><span class="line">    </span><br><span class="line">    # 证书配置</span><br><span class="line">    ssl_certificate   ../cert/4322799_www.qtvnews.com.pem; #pem证书路径</span><br><span class="line">    ssl_certificate_key  ../cert/4322799_www.qtvnews.com.key; #pem证书key路径</span><br><span class="line">    ssl_session_timeout 5m; #会话超时时间</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; #加密算法</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #SSL协议</span><br><span class="line">    ssl_prefer_server_ciphers on; # 是否由服务器决定采用哪种加密算法</span><br><span class="line"></span><br><span class="line">    location ~ /(admin|seller|storage)/ &#123;</span><br><span class="line">        proxy_http_version 1.1; #代理使用的http协议</span><br><span class="line">        proxy_pass http://admin_seller; #代理转发</span><br><span class="line">        proxy_set_header Host $host; #header添加请求host信息</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr; #header增加请求来源IP信息</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; #增加代理记录</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;# 使用https协议时用到</span><br><span class="line"></span><br><span class="line">        # 响应头部添加实际响应服务器信息</span><br><span class="line">        add_header backendIP $upstream_addr;</span><br><span class="line">        add_header backendCode $upstream_status;</span><br><span class="line">        # 解决后端服务传输数据过多</span><br><span class="line">        proxy_buffer_size 64k;</span><br><span class="line">        proxy_buffers 32 32k;</span><br><span class="line">        proxy_busy_buffers_size 128k;</span><br><span class="line"></span><br><span class="line">        proxy_redirect off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /api/v4/user/material &#123;</span><br><span class="line">        proxy_pass http://admin_seller;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        #proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        add_header backendIP $upstream_addr;</span><br><span class="line">        add_header backendCode $upstream_status;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    # 拦截所有请求</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://backend;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        #proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        add_header backendIP $upstream_addr;</span><br><span class="line">        add_header backendCode $upstream_status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 拦截websocket请求</span><br><span class="line">    location /socket</span><br><span class="line">    &#123;</span><br><span class="line">        proxy_pass http://192.16.18.214:2347;</span><br><span class="line">        proxy_read_timeout 60;</span><br><span class="line">        proxy_connect_timeout 60;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line"></span><br><span class="line">        # Allow the use of websockets</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &apos;upgrade&apos;;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_cache_bypass $http_upgrade;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    access_log  /data/wwwlogs/peak.xin.access.log;</span><br><span class="line">    error_log  /data/wwwlogs/peak.xin.error.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 负载均衡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决lnmp安装失败</title>
      <link href="2020/08/06/%E8%A7%A3%E5%86%B3lnmp%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5/"/>
      <url>2020/08/06/%E8%A7%A3%E5%86%B3lnmp%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<p>我们在使用lnmp集成包搭建LNMP环境时，会因为各种各样的原因导致安装失败，接下来讲一下解决方法。</p><p>查看安装日志 <code>lnmp-install.log</code> </p><p>如果是因为软件依赖包下载过程，可能由于你网络原因无法正常下载</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">依赖关系解决</span><br><span class="line"></span><br><span class="line">================================================================================</span><br><span class="line">Package                    架构      版本                     源          大小</span><br><span class="line">================================================================================</span><br><span class="line">正在安装:</span><br><span class="line">openssl-devel              x86_64    1:1.0.2k-19.el7          base       1.5 M</span><br><span class="line">正在更新:</span><br><span class="line">selinux-policy-targeted    noarch    3.13.1-266.el7_8.1       updates    7.0 M</span><br><span class="line">为依赖而安装:</span><br><span class="line">keyutils-libs-devel        x86_64    1.5.8-3.el7              base        37 k</span><br><span class="line">krb5-devel                 x86_64    1.15.1-46.el7            base       272 k</span><br><span class="line">libkadm5                   x86_64    1.15.1-46.el7            base       179 k</span><br><span class="line">libselinux-devel           x86_64    2.5-15.el7               base       187 k</span><br><span class="line">libsepol-devel             x86_64    2.5-10.el7               base        77 k</span><br><span class="line">libverto-devel             x86_64    0.2.5-4.el7              base        12 k</span><br><span class="line">为依赖而更新:</span><br><span class="line">krb5-libs                  x86_64    1.15.1-46.el7            base       809 k</span><br><span class="line">libselinux                 x86_64    2.5-15.el7               base       162 k</span><br><span class="line">libselinux-python          x86_64    2.5-15.el7               base       236 k</span><br><span class="line">libselinux-utils           x86_64    2.5-15.el7               base       151 k</span><br><span class="line">libsemanage                x86_64    2.5-14.el7               base       151 k</span><br><span class="line">libsepol                   x86_64    2.5-10.el7               base       297 k</span><br><span class="line">policycoreutils            x86_64    2.5-34.el7               base       917 k</span><br><span class="line">selinux-policy             noarch    3.13.1-266.el7_8.1       updates    497 k</span><br><span class="line"></span><br><span class="line">事务概要</span><br><span class="line">================================================================================</span><br><span class="line">安装  1 软件包 (+6 依赖软件包)</span><br><span class="line">升级  1 软件包 (+8 依赖软件包)</span><br><span class="line"></span><br><span class="line">总计：12 M</span><br><span class="line">总下载量：8.5 M</span><br><span class="line">Downloading packages:</span><br><span class="line">Delta RPMs disabled because /usr/bin/applydeltarpm not installed.</span><br><span class="line">http://mirrors.tuna.tsinghua.edu ... el7_8.1.noarch.rpm: [Errno 14] curl#56 - &quot;Recv failure: Connection reset by peer&quot;</span><br><span class="line">正在尝试其它镜像。</span><br><span class="line">http://mirrors.ustc.edu.cn/cento ... el7_8.1.noarch.rpm: [Errno 14] curl#56 - &quot;Recv failure: Connection reset by peer&quot;</span><br><span class="line">正在尝试其它镜像。</span><br><span class="line">http://mirrors.aliyun.com/centos ... el7_8.1.noarch.rpm: [Errno 14] curl#56 - &quot;Recv failure: Connection reset by peer&quot;</span><br><span class="line">正在尝试其它镜像。</span><br><span class="line">http://mirror.bit.edu.cn/centos/ ... el7_8.1.noarch.rpm: [Errno 14] curl#56 - &quot;Recv failure: Connection reset by peer&quot;</span><br><span class="line">正在尝试其它镜像。</span><br><span class="line">http://ftp.sjtu.edu.cn/centos/7. ... el7_8.1.noarch.rpm: [Errno 14] curl#56 - &quot;Recv failure: Connection reset by peer&quot;</span><br><span class="line">正在尝试其它镜像。</span><br><span class="line">http://mirrors.163.com/centos/7. ... el7_8.1.noarch.rpm: [Errno 14] curl#56 - &quot;Recv failure: Connection reset by peer&quot;</span><br><span class="line">正在尝试其它镜像。</span><br><span class="line">http://mirrors.bfsu.edu.cn/cento ... el7_8.1.noarch.rpm: [Errno 14] curl#56 - &quot;Recv failure: Connection reset by peer&quot;</span><br><span class="line">正在尝试其它镜像。</span><br><span class="line">http://mirrors.cn99.com/centos/7 ... el7_8.1.noarch.rpm: [Errno 14] curl#56 - &quot;Recv failure: Connection reset by peer&quot;</span><br><span class="line">正在尝试其它镜像。</span><br><span class="line">http://mirrors.njupt.edu.cn/cent ... el7_8.1.noarch.rpm: [Errno 14] curl#56 - &quot;Recv failure: Connection reset by peer&quot;</span><br><span class="line">正在尝试其它镜像。</span><br><span class="line">http://mirrors.nju.edu.cn/centos ... el7_8.1.noarch.rpm: [Errno 14] curl#56 - &quot;Recv failure: Connection reset by peer&quot;</span><br><span class="line">正在尝试其它镜像。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Error downloading packages:</span><br><span class="line">  selinux-policy-targeted-3.13.1-266.el7_8.1.noarch: [Errno 256] No more mirrors to try.</span><br></pre></td></tr></table></figure><p>需要把你的服务器上镜像缓存阿里镜像，<a href="/2020/08/06/CentOS-配置阿里镜像源">CentOS 配置阿里镜像源</a></p><p>然后先卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost lnmp]<span class="comment"># ./uninstall.sh</span></span><br></pre></td></tr></table></figure><p>再次安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost lnmp]<span class="comment"># ./install.sh</span></span><br></pre></td></tr></table></figure><p>试试看吧</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lnmp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 配置阿里镜像源</title>
      <link href="2020/08/06/CentOS-%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E9%95%9C%E5%83%8F%E6%BA%90/"/>
      <url>2020/08/06/CentOS-%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E9%95%9C%E5%83%8F%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<blockquote><p>阿里镜像官方地址<a href="https://developer.aliyun.com/mirror/" target="_blank" rel="noopener">https://developer.aliyun.com/mirror/</a></p></blockquote><p><strong>1. 备份</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure><p><strong>2. 下载新的 CentOS-Base.repo 到 /etc/yum.repos.d/</strong></p><p>CentOS 6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-6.repo</span><br></pre></td></tr></table></figure><a id="more"></a><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-6.repo</span><br></pre></td></tr></table></figure><p>CentOS 7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><p>CentOS 8</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-8.repo</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-8.repo</span><br></pre></td></tr></table></figure><p><strong>3. 更新镜像源</strong></p><p>清除缓存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><p>生成缓存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p><strong>4. 更改配置文件</strong></p><p>打开 CentOS-Base.repo 文件，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure><p>或 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure><p>将文件中的所有<code>http</code>开头的地址更改为<code>https</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># CentOS-Base.repo</span><br><span class="line">#</span><br><span class="line"># The mirror system uses the connecting IP address of the client and the</span><br><span class="line"># update status of each mirror to pick mirrors that are updated to and</span><br><span class="line"># geographically close to the client.  You should use this for CentOS updates</span><br><span class="line"># unless you are manually picking other mirrors.</span><br><span class="line">#</span><br><span class="line"># If the mirrorlist= does not work for you, as a fall back you can try the </span><br><span class="line"># remarked out baseurl= line instead.</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"> </span><br><span class="line">[base]</span><br><span class="line">name=CentOS-$releasever - Base - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/os/$basearch/</span><br><span class="line">        https://mirrors.aliyuncs.com/centos/$releasever/os/$basearch/</span><br><span class="line">        https://mirrors.cloud.aliyuncs.com/centos/$releasever/os/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#released updates </span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-$releasever - Updates - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/updates/$basearch/</span><br><span class="line">        https://mirrors.aliyuncs.com/centos/$releasever/updates/$basearch/</span><br><span class="line">        https://mirrors.cloud.aliyuncs.com/centos/$releasever/updates/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#additional packages that may be useful</span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-$releasever - Extras - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/extras/$basearch/</span><br><span class="line">        https://mirrors.aliyuncs.com/centos/$releasever/extras/$basearch/</span><br><span class="line">        https://mirrors.cloud.aliyuncs.com/centos/$releasever/extras/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#additional packages that extend functionality of existing packages</span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-$releasever - Plus - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">        https://mirrors.aliyuncs.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">        https://mirrors.cloud.aliyuncs.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#contrib - packages by Centos Users</span><br><span class="line">[contrib]</span><br><span class="line">name=CentOS-$releasever - Contrib - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/contrib/$basearch/</span><br><span class="line">        https://mirrors.aliyuncs.com/centos/$releasever/contrib/$basearch/</span><br><span class="line">        https://mirrors.cloud.aliyuncs.com/centos/$releasever/contrib/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure><p><strong>5. 更新yum</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> 镜像 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 nvm 管理不同版本的 nodejs 与 npm</title>
      <link href="2020/07/21/%E4%BD%BF%E7%94%A8-nvm-%E7%AE%A1%E7%90%86%E4%B8%8D%E5%90%8C%E7%89%88%E6%9C%AC%E7%9A%84-nodejs-%E4%B8%8E-npm/"/>
      <url>2020/07/21/%E4%BD%BF%E7%94%A8-nvm-%E7%AE%A1%E7%90%86%E4%B8%8D%E5%90%8C%E7%89%88%E6%9C%AC%E7%9A%84-nodejs-%E4%B8%8E-npm/</url>
      
        <content type="html"><![CDATA[<p>在我们的日常开发中，手上有好几个项目，每个项目的需求不同，如果不同项目必须依赖不同版的 NodeJS 运行环境，这个问题将非常棘手，如果有个 NodeJS 版本管理工具就好了。</p><p>nvm 应运而生，nvm 是 Mac 下的 NodeJS 管理工具，有点类似管理 Ruby 的 rvm，如果需要管理 Windows 下的 node，官方推荐使用 nvmw 或 nvm-windows（是使用go语言编写的软件）。<em>不过，nvm-windows 并不是 nvm 的简单移植，他们也没有任何关系。</em>但下面介绍的所有命令，都可以在 nvm-windows 中运行。</p><a id="more"></a><h2 id="NVM-安装"><a href="#NVM-安装" class="headerlink" title="NVM 安装"></a>NVM 安装</h2><h3 id="Windows-安装"><a href="#Windows-安装" class="headerlink" title="Windows 安装"></a>Windows 安装</h3><p>下载地址：<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">https://github.com/coreybutler/nvm-windows/releases</a></p><p>文件说明：</p><ul><li>nvm-noinstall.zip： 这个是绿色免安装版本，但是使用之前需要配置</li><li>nvm-setup.zip：这是一个安装包，下载之后点击安装，无需配置就可以使用，方便。</li><li>Source code(zip)：zip压缩的源码</li><li>Sourc code(tar.gz)：tar.gz的源码，一般用于*nix系统</li></ul><p>我们直接选择nvm-set.zip文件下载即可。</p><p>解压nvm-set.zip，双击运行nvm-setup.exe，根据提示安装即可。</p><blockquote><p>提示：</p><ol><li>如果已经安装过 Nodejs，可以不用卸载，安装nvm的时候会提示让你选择的</li><li>建议关掉电脑上的安全软件，并使用管理员权限运行.exe文件</li></ol></blockquote><p>命令行输入 <code>nvm version</code>， 提示了版本信息说明安装成功了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ nvm version</span><br><span class="line">1.1.6</span><br></pre></td></tr></table></figure><h3 id="OS-X-Linux-安装"><a href="#OS-X-Linux-安装" class="headerlink" title="OS X/Linux 安装"></a>OS X/Linux 安装</h3><p>Ubuntu 都可以直接用 <code>build-essential</code> 套件，OS X 的话，可以用 <code>X-Code</code> 的命令行工具。运行这个命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure><p>在 Linux 中：（如果是 Debian 发行版）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential</span><br></pre></td></tr></table></figure><p>然后我们可以使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash</span><br></pre></td></tr></table></figure><p>从远程下载 <code>install.sh</code> 脚本并执行。注意这个版本年数字 <code>v0.33.0</code> 会随着项目开发而变化。随时通过<a href="https://github.com/creationix/nvm#install-script" target="_blank" rel="noopener">官方最新安装命令</a>来检查最新安装版本是有好处的。</p><h3 id="Linux-安装-最新"><a href="#Linux-安装-最新" class="headerlink" title="Linux 安装(最新)"></a>Linux 安装(最新)</h3><p><strong>1.nvm国内镜像设置</strong></p><p>bash中输入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export NVM_NODEJS_ORG_MIRROR=http://npm.taobao.org/mirrors/node</span><br><span class="line">export NVM_IOJS_ORG_MIRROR=http://npm.taobao.org/mirrors/iojs</span><br></pre></td></tr></table></figure><p><strong>2.下载nvm脚本</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">git clone https://github.com/nvm-sh/nvm.git /opt/nvm</span><br><span class="line">sh nvm/install.sh</span><br></pre></td></tr></table></figure><p><strong>3.给.bashrc 添加自启环境</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo vim .bashrc</span><br><span class="line">// .bashrc</span><br><span class="line">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class="line"></span><br><span class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm</span><br><span class="line"></span><br><span class="line">[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \. &quot;$NVM_DIR/bash_completion&quot; # This loads nvm bash_completion</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p><strong>4.安装node版本</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm install 14</span><br><span class="line">14表示版本是node14的</span><br></pre></td></tr></table></figure><p><strong>5.设置npm国内代理</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure><h2 id="安装多版本-node-npm"><a href="#安装多版本-node-npm" class="headerlink" title="安装多版本 node/npm"></a>安装多版本 node/npm</h2><p>例如，我们要安装4.2.2版本，可以用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 4.2.2</span><br></pre></td></tr></table></figure><p>nvm 遵守<a href="http://semver.org/lang/zh-CN/" target="_blank" rel="noopener">语义化版本</a>命名规则。例如，你想安装最新的 <code>4.2</code> 系列的最新的一个版本的话，可以运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 4.2</span><br></pre></td></tr></table></figure><p>nvm 会寻找 <code>4.2.x</code> 中最高的版本来安装。</p><p>你可以通过以下命令来列出远程服务器上所有的可用版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote</span><br></pre></td></tr></table></figure><p>Windows 的话，就是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls available</span><br></pre></td></tr></table></figure><h2 id="在不同版本间切换"><a href="#在不同版本间切换" class="headerlink" title="在不同版本间切换"></a>在不同版本间切换</h2><p>每当我们安装了一个新版本 Node 后，全局环境会自动把这个新版本设置为默认。</p><p>nvm 提供了 <code>nvm use</code> 命令。这个命令的使用方法和 <code>install</code> 命令类似。</p><p>例如，切换到 <code>4.2.2</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use 4.2.2</span><br></pre></td></tr></table></figure><p>切换到最新的 <code>4.2.x</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use 4.2</span><br></pre></td></tr></table></figure><p>切换到 iojs：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use iojs-v3.2.0</span><br></pre></td></tr></table></figure><p>切换到最新版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use node</span><br></pre></td></tr></table></figure><p>每次执行切换的时候，系统都会把 node 的可执行文件链接放到特定版本的文件上。</p><p>我们还可以用 nvm 给不同的版本号设置别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">alias</span> awesome-version 4.2.2</span><br></pre></td></tr></table></figure><p>我们给 <code>4.2.2</code> 这个版本号起了一个名字叫做 <code>awesome-version</code>，然后我们可以运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use awesome-version</span><br></pre></td></tr></table></figure><p>下面这个命令可以取消别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">unalias</span> awesome-version</span><br></pre></td></tr></table></figure><p>另外，你还可以设置 <code>default</code> 这个特殊别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">alias</span> default node</span><br></pre></td></tr></table></figure><h2 id="列出已安装实例"><a href="#列出已安装实例" class="headerlink" title="列出已安装实例"></a>列出已安装实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ nvm ls</span><br><span class="line"></span><br><span class="line">  * 12.18.0 (Currently using 64-bit executable)</span><br><span class="line">    12.0.0</span><br><span class="line">    8.11.2</span><br></pre></td></tr></table></figure><h2 id="在项目中使用不同版本的-Node"><a href="#在项目中使用不同版本的-Node" class="headerlink" title="在项目中使用不同版本的 Node"></a>在项目中使用不同版本的 Node</h2><p>我们可以通过创建项目目录中的 <code>.nvmrc</code> 文件来指定要使用的 Node 版本。之后在项目目录中执行 <code>nvm use</code> 即可。<code>.nvmrc</code> 文件内容只需要遵守上文提到的语义化版本规则即可。另外还有个工具叫做 <a href="https://github.com/wbyoung/avn" target="_blank" rel="noopener">avn</a>，可以自动化这个过程。</p><h2 id="在多环境中，npm该如何使用呢？"><a href="#在多环境中，npm该如何使用呢？" class="headerlink" title="在多环境中，npm该如何使用呢？"></a>在多环境中，npm该如何使用呢？</h2><p>每个版本的 Node 都会自带一个不同版本的 npm，可以用 <code>npm -v</code> 来查看 npm 的版本。全局安装的 npm 包并不会在不同的 Node 环境中共享，因为这会引起兼容问题。它们被放在了不同版本的目录下，例如 <code>~/.nvm/versions/node/&lt;version&gt;/lib/node_modules&lt;/version&gt;</code> 这样的目录。这刚好也省去我们在 Linux 中使用 <code>sudo</code> 的功夫了。因为这是用户的主文件夹，并不会引起权限问题。</p><p>但问题来了，我们安装过的 npm 包，都要重新再装一次？幸运的是，我们有个办法来解决我们的问题，运行下面这个命令，可以从特定版本导入到我们将要安装的新版本 Node：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install v5.0.0 --reinstall-packages-from=4.2</span><br></pre></td></tr></table></figure><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><p>直接运行特定版本的 Node</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm run 4.2.2 --version</span><br></pre></td></tr></table></figure><p>在当前终端的子进程中运行特定版本的 Node</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">exec</span> 4.2.2 node --version</span><br></pre></td></tr></table></figure><p>确认某个版本Node的路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">which</span> 4.2.2</span><br></pre></td></tr></table></figure><p>安装 Node 的其他实现，例如 iojs（一个基于 ES6 的 Node 实现，现在已经和 Node 合并）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install iojs-v3.2.0</span><br></pre></td></tr></table></figure><p>快捷命令：</p><ul><li>nvm install node 安装最新版 Node</li><li>nvm install iojs 安装最新版 iojs</li><li>nvm install unstable 安装最新不稳定版本的 Node</li></ul><h2 id="nvm-使用命令"><a href="#nvm-使用命令" class="headerlink" title="nvm 使用命令"></a>nvm 使用命令</h2><ul><li><code>nvm arch [32|64]</code> ： 显示node是运行在32位还是64位模式。指定32或64来覆盖默认体系结构。</li><li><code>nvm install &lt;version&gt; [arch]</code>： 该可以是node.js版本或最新稳定版本latest。（可选[arch]）指定安装32位或64位版本（默认为系统arch）。设置[arch]为all以安装32和64位版本。在命令后面添加–insecure ，可以绕过远端下载服务器的SSL验证。</li><li><code>nvm list [available]</code>： 列出已经安装的node.js版本。可选的available，显示可下载版本的部分列表。这个命令可以简写为nvm ls [available]。</li><li><code>nvm on</code>： 启用node.js版本管理。</li><li><code>nvm off</code>： 禁用node.js版本管理(不卸载任何东西)</li><li><code>nvm proxy [url]</code>： 设置用于下载的代理。留[url]空白，以查看当前的代理。设置[url]为none删除代理。</li><li><code>nvm node_mirror [url]</code>：设置node镜像，默认为<a href="https://nodejs.org/dist/.。我建议设置为淘宝的镜像https://npm.taobao.org/mirrors/node/" target="_blank" rel="noopener">https://nodejs.org/dist/.。我建议设置为淘宝的镜像https://npm.taobao.org/mirrors/node/</a></li><li><code>nvm npm_mirror [url]</code>：设置npm镜像，默认为<a href="https://github.com/npm/npm/archive/。我建议设置为淘宝的镜像https://npm.taobao.org/mirrors/npm/" target="_blank" rel="noopener">https://github.com/npm/npm/archive/。我建议设置为淘宝的镜像https://npm.taobao.org/mirrors/npm/</a></li><li><code>nvm uninstall &lt;version&gt;</code>： 卸载指定版本的nodejs。</li><li><code>nvm use [version] [arch]</code>： 切换到使用指定的nodejs版本。可以指定32/64位[arch]。nvm use <arch>将继续使用所选版本，但根据提供的值切换到32/64位模式的<arch></arch></arch></li><li><code>nvm root [path]</code>： 设置 nvm 存储node.js不同版本的目录 ,如果未设置，将使用当前目录。</li><li><code>nvm version</code>： 显示当前运行的nvm版本，可以简写为nvm v</li></ul><h2 id="解决-npm-command-not-found-问题"><a href="#解决-npm-command-not-found-问题" class="headerlink" title="解决 npm command not found 问题"></a>解决 npm command not found 问题</h2><p>经过一系列的研究，发现8.11以上版本的node版本对应的npm都没法自动安装，对应的版本目录下没有npm运行文件，这里需要我们手动下载。</p><ol><li>查看nodejs版本对应的npm版本<a href="https://nodejs.org/zh-cn/download/releases/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/releases/</a></li><li>登录npm淘宝官网<a href="https://npm.taobao.org/mirrors/npm/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/npm/</a></li><li>下载对应的npm版本</li><li>解压后的文件夹重命名为 <code>npm</code> 并复制到 node_modules 目录下</li><li>将 npm 中 bin 目录下的 npm、和npm.cmd 复制到 node_modules 目录同级目录下(如果有npx、和npx.cmd一块复制)</li></ol><p>最终的目录结构为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">─nvm</span><br><span class="line">├─vxx.xx.xx</span><br><span class="line">│  ├─node_modules</span><br><span class="line">│  │  ├─npm</span><br><span class="line">│  │  │  ├─bin</span><br><span class="line">│  │  │  ├─...其他文件</span><br><span class="line">│  ├─node.exe</span><br><span class="line">│  ├─npm</span><br><span class="line">│  ├─npm.cmd</span><br><span class="line">│  ├─npx(如果有的话)</span><br><span class="line">│  ├─npx.cmd(如果有的话)</span><br></pre></td></tr></table></figure><p>选择node版本执行<code>npm -v</code>试试看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm use xx.xx.xx</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nvm </tag>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx配置ssl证书实现https访问</title>
      <link href="2020/07/10/Nginx%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6%E5%AE%9E%E7%8E%B0https%E8%AE%BF%E9%97%AE/"/>
      <url>2020/07/10/Nginx%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6%E5%AE%9E%E7%8E%B0https%E8%AE%BF%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<p>服务器环境使用的是lnmp集成包搭建的，根据业务要求，我们需要使用https访问链接</p><ol><li><p>首先nginx必须安装了ssl模块，此处就不讲解如何安装ssl模块了</p></li><li><p>然后我们把证书文件放到服务器上的 <code>/usr/local/nginx/cert</code> 目录里</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">├─ /usr/local/nginx/cert</span><br><span class="line">│  ├─ 4023842_www.xxxxxx.com.pem</span><br><span class="line">│  ├─ 4023842_www.xxxxxx.com.key</span><br></pre></td></tr></table></figure><ol start="3"><li>然后修改 vhost nginx 配置文件 <code>www.xxxxxx.com.conf</code></li></ol><p>原始的配置为：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        #listen [::]:80;</span><br><span class="line">        server_name www.xxxxxx.com ;</span><br><span class="line">        index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        root  /data/www/www.xxxxxx.com/public;</span><br><span class="line"></span><br><span class="line">        include rewrite/thinkphp.conf;</span><br><span class="line">        #error_page   404   /404.html;</span><br><span class="line"></span><br><span class="line">        # Deny access to PHP files in specific directory</span><br><span class="line">        #location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span><br><span class="line"></span><br><span class="line">        include enable-php-pathinfo.conf;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /.well-known &#123;</span><br><span class="line">            allow all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /\.</span><br><span class="line">        &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        access_log  /home/wwwlogs/www.xxxxxx.com.log;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在此文件新增 server 配置信息，其实就是把原来的 server 配置再复制一份进行修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 443 ssl;#修改</span><br><span class="line">        server_name www.xxxxxx.com ;</span><br><span class="line">        index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        root  /data/www/www.xxxxxx.com/public;</span><br><span class="line">ssl_certificate   ../cert/4023842_www.xxxxxx.com.pem;#新增</span><br><span class="line">ssl_certificate_key  ../cert/4023842_www.xxxxxx.com.key;#新增</span><br><span class="line">ssl_session_timeout 5m;#新增</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;#新增</span><br><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;#新增</span><br><span class="line">ssl_prefer_server_ciphers on;#新增</span><br><span class="line"></span><br><span class="line">        include rewrite/thinkphp.conf;</span><br><span class="line">        #error_page   404   /404.html;</span><br><span class="line"></span><br><span class="line">        # Deny access to PHP files in specific directory</span><br><span class="line">        #location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span><br><span class="line"></span><br><span class="line">        include enable-php-pathinfo.conf;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /.well-known &#123;</span><br><span class="line">            allow all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /\.</span><br><span class="line">        &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        access_log  /home/wwwlogs/www.xxxxxx.com.log;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>那么最后的<code>www.xxxxxx.com.conf</code> 为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        #listen [::]:80;</span><br><span class="line">        server_name www.xxxxxx.com ;</span><br><span class="line">        index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        root  /data/www/www.xxxxxx.com/public;</span><br><span class="line"></span><br><span class="line">        include rewrite/thinkphp.conf;</span><br><span class="line">        #error_page   404   /404.html;</span><br><span class="line"></span><br><span class="line">        # Deny access to PHP files in specific directory</span><br><span class="line">        #location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span><br><span class="line"></span><br><span class="line">        include enable-php-pathinfo.conf;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /.well-known &#123;</span><br><span class="line">            allow all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /\.</span><br><span class="line">        &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        access_log  /home/wwwlogs/www.xxxxxx.com.log;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 443 ssl;#修改</span><br><span class="line">        server_name www.xxxxxx.com ;</span><br><span class="line">        index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        root  /data/www/www.xxxxxx.com/public;</span><br><span class="line">ssl_certificate   ../cert/4023842_www.xxxxxx.com.pem;#新增</span><br><span class="line">ssl_certificate_key  ../cert/4023842_www.xxxxxx.com.key;#新增</span><br><span class="line">ssl_session_timeout 5m;#新增</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;#新增</span><br><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;#新增</span><br><span class="line">ssl_prefer_server_ciphers on;#新增</span><br><span class="line"></span><br><span class="line">        include rewrite/thinkphp.conf;</span><br><span class="line">        #error_page   404   /404.html;</span><br><span class="line"></span><br><span class="line">        # Deny access to PHP files in specific directory</span><br><span class="line">        #location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span><br><span class="line"></span><br><span class="line">        include enable-php-pathinfo.conf;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /.well-known &#123;</span><br><span class="line">            allow all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /\.</span><br><span class="line">        &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        access_log  /home/wwwlogs/www.xxxxxx.com.log;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>最后重启nginx。</li></ol><blockquote><p>提示：有的 ssl <code>server</code>配置信息有<code>ssl on;</code>参数，重启nginx会提示错误，去掉此参数然后在 <code>listen 443</code> 追加 <code>ssl</code>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSL证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下PHP源码编译安装./configure配置</title>
      <link href="2020/06/12/Linux%E4%B8%8BPHP%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85-configure%E9%85%8D%E7%BD%AE/"/>
      <url>2020/06/12/Linux%E4%B8%8BPHP%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85-configure%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/php72 --<span class="built_in">enable</span>-fpm --with-mysql --with-config-file-path=/usr/<span class="built_in">local</span>/php72/etc</span><br></pre></td></tr></table></figure><p>内容整理中…</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LNMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下查看某个端口被谁占用</title>
      <link href="2020/06/12/Windows%E4%B8%8B%E6%9F%A5%E7%9C%8B%E6%9F%90%E4%B8%AA%E7%AB%AF%E5%8F%A3%E8%A2%AB%E8%B0%81%E5%8D%A0%E7%94%A8/"/>
      <url>2020/06/12/Windows%E4%B8%8B%E6%9F%A5%E7%9C%8B%E6%9F%90%E4%B8%AA%E7%AB%AF%E5%8F%A3%E8%A2%AB%E8%B0%81%E5%8D%A0%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>在开发过程中，我们经常会遇到端口被占用的情况，本文讲述在Windows系统下，查看端口以及结束占用端口的程序。</p><h2 id="1-用管理员身份打开命令窗口"><a href="#1-用管理员身份打开命令窗口" class="headerlink" title="1. 用管理员身份打开命令窗口"></a>1. 用管理员身份打开命令窗口</h2><p>开始—-&gt;运行 输入<code>cmd</code>，或者是 window+R 组合键 输入<code>cmd</code>，调出命令窗口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Windows [版本 6.3.9600]</span><br><span class="line">(c) 2013 Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">C:\Users\Peak&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-查找所有使用中的端口情况"><a href="#2-查找所有使用中的端口情况" class="headerlink" title="2. 查找所有使用中的端口情况"></a>2. 查找所有使用中的端口情况</h2><p>输入命令：<code>&gt;netstat -ano</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Windows [版本 6.3.9600]</span><br><span class="line">(c) 2013 Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">C:\Users\Peak&gt;netstat -ano</span><br><span class="line"></span><br><span class="line">活动连接</span><br><span class="line"></span><br><span class="line">  协议  本地地址          外部地址        状态           PID</span><br><span class="line">  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING       6012</span><br><span class="line">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       804</span><br><span class="line">  TCP    0.0.0.0:443            0.0.0.0:0              LISTENING       3716</span><br><span class="line">  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4</span><br><span class="line">  TCP    0.0.0.0:902            0.0.0.0:0              LISTENING       2612</span><br><span class="line">  TCP    0.0.0.0:912            0.0.0.0:0              LISTENING       2612</span><br><span class="line">  TCP    0.0.0.0:3306           0.0.0.0:0              LISTENING       4608</span><br><span class="line">  TCP    0.0.0.0:5826           0.0.0.0:0              LISTENING       15636</span><br><span class="line">  TCP    0.0.0.0:8000           0.0.0.0:0              LISTENING       1116</span><br><span class="line">  TCP    0.0.0.0:8801           0.0.0.0:0              LISTENING       6012</span><br><span class="line">  TCP    0.0.0.0:8802           0.0.0.0:0              LISTENING       6012</span><br><span class="line">  TCP    0.0.0.0:8803           0.0.0.0:0              LISTENING       6012</span><br><span class="line">  TCP    0.0.0.0:8804           0.0.0.0:0              LISTENING       6012</span><br><span class="line">  .................................</span><br></pre></td></tr></table></figure><h2 id="3-查找指定端口的使用中情况并找到对应的PID"><a href="#3-查找指定端口的使用中情况并找到对应的PID" class="headerlink" title="3. 查找指定端口的使用中情况并找到对应的PID"></a>3. 查找指定端口的使用中情况并找到对应的PID</h2><p>输入命令：<code>netstat -aon|findstr &quot;8000&quot;</code>（我这里需要使用8000端口，而8000被占用了）</p><blockquote><p>提示：findstr 后面 8000 或 “8000”， ‘8000’是不行的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Peak&gt;netstat -ano | findstr <span class="string">"8000"</span></span><br><span class="line">  TCP    0.0.0.0:8000           0.0.0.0:0              LISTENING       1116</span><br><span class="line">  TCP    0.0.0.0:18000          0.0.0.0:0              LISTENING       1116</span><br><span class="line">  TCP    192.168.0.73:51201     58.251.121.55:8000     SYN_SENT        2264</span><br></pre></td></tr></table></figure><p>最后一位数字就是 <code>PID</code>, 这里是 <code>1116</code></p><h2 id="4-查看指定-PID-的进程"><a href="#4-查看指定-PID-的进程" class="headerlink" title="4. 查看指定 PID 的进程"></a>4. 查看指定 PID 的进程</h2><p>输入命令：<code>tasklist|findstr &quot;1116&quot;</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Peak&gt;tasklist|findstr <span class="string">"1116"</span></span><br><span class="line">CLodopPrint32.exe             1116 Services                   0     13,376 K</span><br></pre></td></tr></table></figure><p>查看是哪个进程或者程序占用了 <code>8000</code> 端口，结果是：CLodopPrint32.exe。</p><h2 id="5-结束进程"><a href="#5-结束进程" class="headerlink" title="5. 结束进程"></a>5. 结束进程</h2><p>强制（<code>/F</code>参数）杀死 <code>pid</code> 为 <code>9088</code> 的所有进程包括子进程（<code>/T</code>参数）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskkill /T /F /PID 1116</span><br></pre></td></tr></table></figure><p>或者是我们打开任务管理器，切换到进程选项卡，在PID一列查看<code>9088</code>对应的进程是谁，如果看不到PID这一列,如下图：</p><p><img src="/2020/06/12/Windows下查看某个端口被谁占用/20200612093808.png" alt="图片"></p><p>之后就可以结束掉这个进程，释放该端口来使用了。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Terminal Error creating winpty: ConnectNamedPipe failed: Windows error 232</title>
      <link href="2020/06/09/Windows-Terminal-Error-creating-winpty-ConnectNamedPipe-failed-Windows-error-232/"/>
      <url>2020/06/09/Windows-Terminal-Error-creating-winpty-ConnectNamedPipe-failed-Windows-error-232/</url>
      
        <content type="html"><![CDATA[<p>Simply exclude the following file in your antivirus software if you are using Git Bash (inside Windows Terminal) on Windows and are seeing above error message.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\Program Files\Git\usr\bin\winpty-agent.exe</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js和canvas实现多张图片拼接成一张图片</title>
      <link href="2020/06/05/js%E5%92%8Ccanvas%E5%AE%9E%E7%8E%B0%E5%A4%9A%E5%BC%A0%E5%9B%BE%E7%89%87%E6%8B%BC%E6%8E%A5%E6%88%90%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87/"/>
      <url>2020/06/05/js%E5%92%8Ccanvas%E5%AE%9E%E7%8E%B0%E5%A4%9A%E5%BC%A0%E5%9B%BE%E7%89%87%E6%8B%BC%E6%8E%A5%E6%88%90%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h2 id="选择多张图片从上到下排列合成一张图片"><a href="#选择多张图片从上到下排列合成一张图片" class="headerlink" title="选择多张图片从上到下排列合成一张图片"></a>选择多张图片从上到下排列合成一张图片</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>拼长图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"uploadInput"</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">"image/*"</span> <span class="attr">multiple</span>=<span class="string">"multiple"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"uploadInput"</span> <span class="attr">style</span>=<span class="string">"border: 1px solid #333; cursor: pointer; padding: 5px 20px;"</span>&gt;</span></span><br><span class="line">        点击选择图片</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"imageBox"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/1.11.3/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 拼出来的图片的宽度</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> width = <span class="number">300</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 拼出来的图片的质量，0-1之间，越大质量越好</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> encoderOptions = <span class="number">0.5</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 图片选择输入框</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> uploadInput = <span class="built_in">document</span>.getElementById(<span class="string">'uploadInput'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 图片展示框</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> imageBox = <span class="built_in">document</span>.getElementById(<span class="string">'imageBox'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 给图片选择输入框添加change监听事件</span></span></span><br><span class="line"><span class="javascript">        uploadInput.addEventListener(<span class="string">'change'</span>, event =&gt; &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> files = <span class="built_in">Array</span>.from(event.target.files); <span class="comment">// 将图片文件对象转换为数组</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            filesToInstances(files, instances =&gt; &#123;</span></span><br><span class="line"><span class="undefined">                drawImages(instances, finalImageUrl =&gt; &#123;</span></span><br><span class="line"><span class="xml">                    imageBox.innerHTML = `<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">$&#123;finalImageUrl&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">download</span> <span class="attr">href</span>=<span class="string">$&#123;finalImageUrl&#125;</span>&gt;</span>点击下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span>`;</span></span><br><span class="line"><span class="undefined">                &#125;);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        /**</span></span><br><span class="line"><span class="undefined">         * 根据图片文件拿到图片实例</span></span><br><span class="line"><span class="undefined">         * @param files 图片文件对象数组</span></span><br><span class="line"><span class="undefined">         * @param callback</span></span><br><span class="line"><span class="undefined">         */</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> filesToInstances = <span class="function">(<span class="params">files, callback</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> length = files.length; <span class="comment">// 文件个数</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> instances = []; <span class="comment">// 文件实例数组</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> finished = <span class="number">0</span>; <span class="comment">// 转换成功个数</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 遍历图片文件数组</span></span></span><br><span class="line"><span class="javascript">            files.forEach(<span class="function">(<span class="params">file, index</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> reader = <span class="keyword">new</span> FileReader();</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 把文件读为 dataUrl</span></span></span><br><span class="line"><span class="undefined">                reader.readAsDataURL(file);</span></span><br><span class="line"><span class="javascript">                reader.onload = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">const</span> image = <span class="keyword">new</span> Image();</span></span><br><span class="line"><span class="javascript">                    image.src = e.target.result; <span class="comment">// 获取图片文件的base64数据</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 解决跨域</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// image.setAttribute('crossOrigin', 'anonymous');   </span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// image.src = e.target.result + '?time=' + new Date().valueOf();</span></span></span><br><span class="line"><span class="javascript">                    image.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 图片实例化成功后存起来</span></span></span><br><span class="line"><span class="undefined">                        instances[index] = image;</span></span><br><span class="line"><span class="undefined">                        finished++;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span> (finished === length) &#123; <span class="comment">// 如果全部完成转换，调用回调函数</span></span></span><br><span class="line"><span class="undefined">                            callback(instances);</span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        /**</span></span><br><span class="line"><span class="undefined">         * 拼图</span></span><br><span class="line"><span class="undefined">         * @param images 图片实例数组</span></span><br><span class="line"><span class="undefined">         * @param callback</span></span><br><span class="line"><span class="undefined">         */</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> drawImages = <span class="function">(<span class="params">images, callback</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> heights = images.map(<span class="function"><span class="params">item</span> =&gt;</span> width / item.width * item.height); <span class="comment">// 计算获取每个图片文件根据指定width后的高度</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>); <span class="comment">// 创建canvas元素</span></span></span><br><span class="line"><span class="javascript">            canvas.width = width; <span class="comment">// canvas宽度</span></span></span><br><span class="line"><span class="javascript">            canvas.height = heights.reduce(<span class="function">(<span class="params">total, current</span>) =&gt;</span> total + current); <span class="comment">// 计算heights数组元素相加后的总和为canvas的高度</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> context = canvas.getContext(<span class="string">'2d'</span>); <span class="comment">// 创建渲染</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> y = <span class="number">0</span>; <span class="comment">// canvas Y轴坐标</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 遍历图片实例数组</span></span></span><br><span class="line"><span class="javascript">            images.forEach(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> height = heights[index];</span></span><br><span class="line"><span class="undefined">                context.drawImage(item, 0, y, width, height);</span></span><br><span class="line"><span class="javascript">                y += height; <span class="comment">// Y轴坐标加上上一张图片高度</span></span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// canvas数据放到回调函数</span></span></span><br><span class="line"><span class="javascript">            callback(canvas.toDataURL(<span class="string">'image/jpeg'</span>, encoderOptions));</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>注意：如果是在线上运行，可能要处理图片跨域的问题</strong></p><p>解决方法：</p><blockquote><p>将<code>image.src = e.target.result;</code>改为以下代码即可。<br><code>image.setAttribute(&#39;crossOrigin&#39;, &#39;anonymous&#39;);</code><br><code>image.src = e.target.result + &#39;?time=&#39; + new Date().valueOf();</code></p></blockquote><h2 id="提供图片数组路径将图片从上往下排列合成一张图片"><a href="#提供图片数组路径将图片从上往下排列合成一张图片" class="headerlink" title="提供图片数组路径将图片从上往下排列合成一张图片"></a>提供图片数组路径将图片从上往下排列合成一张图片</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>拼长图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"uploadInput"</span> <span class="attr">style</span>=<span class="string">"border: 1px solid #333; cursor: pointer; padding: 5px 20px;"</span>&gt;</span></span><br><span class="line">        点击选择图片</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"imageBox"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/1.11.3/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> files = [<span class="string">'img/icon1.jpg'</span>, <span class="string">'img/icon2.jpg'</span>, <span class="string">'img/icon3.jpg'</span>]; <span class="comment">// 提供图片数组路径</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 拼出来的图片的宽度</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> width = <span class="number">300</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 拼出来的图片的质量，0-1之间，越大质量越好</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> encoderOptions = <span class="number">0.5</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 图片选择输入框</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> uploadInput = <span class="built_in">document</span>.getElementById(<span class="string">'uploadInput'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 图片展示框</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> imageBox = <span class="built_in">document</span>.getElementById(<span class="string">'imageBox'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 给图片选择输入框添加click监听事件</span></span></span><br><span class="line"><span class="javascript">        uploadInput.addEventListener(<span class="string">'click'</span>, event =&gt; &#123;</span></span><br><span class="line"><span class="undefined">            filesToInstances(files, instances =&gt; &#123;</span></span><br><span class="line"><span class="undefined">                drawImages(instances, finalImageUrl =&gt; &#123;</span></span><br><span class="line"><span class="xml">                    imageBox.innerHTML = `<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">$&#123;finalImageUrl&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">download</span> <span class="attr">href</span>=<span class="string">$&#123;finalImageUrl&#125;</span>&gt;</span>点击下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span>`;</span></span><br><span class="line"><span class="undefined">                &#125;);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        /**</span></span><br><span class="line"><span class="undefined">         * 根据图片路径拿到图片实例</span></span><br><span class="line"><span class="undefined">         * @param files 图片路径数组</span></span><br><span class="line"><span class="undefined">         * @param callback</span></span><br><span class="line"><span class="undefined">         */</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> filesToInstances = <span class="function">(<span class="params">files, callback</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> length = files.length; <span class="comment">// 图片路径个数</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> instances = []; <span class="comment">// 文件实例数组</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> finished = <span class="number">0</span>; <span class="comment">// 转换成功个数</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 遍历图片路径数组</span></span></span><br><span class="line"><span class="javascript">            files.forEach(<span class="function">(<span class="params">file, index</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> image = <span class="keyword">new</span> Image();</span></span><br><span class="line"><span class="javascript">                image.src = file; <span class="comment">// 赋值图片路径</span></span></span><br><span class="line"><span class="javascript">                image.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 图片实例化成功后存起来</span></span></span><br><span class="line"><span class="undefined">                    instances[index] = image;</span></span><br><span class="line"><span class="undefined">                    finished++;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (finished === length) &#123; <span class="comment">// 如果全部完成转换，调用回调函数</span></span></span><br><span class="line"><span class="undefined">                        callback(instances);</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        /**</span></span><br><span class="line"><span class="undefined">         * 拼图</span></span><br><span class="line"><span class="undefined">         * @param images 图片实例数组</span></span><br><span class="line"><span class="undefined">         * @param callback</span></span><br><span class="line"><span class="undefined">         */</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> drawImages = <span class="function">(<span class="params">images, callback</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> heights = images.map(<span class="function"><span class="params">item</span> =&gt;</span> width / item.width * item.height); <span class="comment">// 计算获取每个图片文件根据指定width后的高度</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>); <span class="comment">// 创建canvas元素</span></span></span><br><span class="line"><span class="javascript">            canvas.width = width; <span class="comment">// canvas宽度</span></span></span><br><span class="line"><span class="javascript">            canvas.height = heights.reduce(<span class="function">(<span class="params">total, current</span>) =&gt;</span> total + current); <span class="comment">// 计算heights数组元素相加后的总和为canvas的高度</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> context = canvas.getContext(<span class="string">'2d'</span>); <span class="comment">// 创建渲染</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> y = <span class="number">0</span>; <span class="comment">// canvas Y轴坐标</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 遍历图片实例数组</span></span></span><br><span class="line"><span class="javascript">            images.forEach(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> height = heights[index];</span></span><br><span class="line"><span class="undefined">                context.drawImage(item, 0, y, width, height);</span></span><br><span class="line"><span class="javascript">                y += height; <span class="comment">// Y轴坐标加上上一张图片高度</span></span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// canvas数据放到回调函数</span></span></span><br><span class="line"><span class="javascript">            callback(canvas.toDataURL(<span class="string">'image/jpeg'</span>, encoderOptions));</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：和上面一样，在线上时也需要解决图片跨域问题</strong></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>申请免费HTTPS证书方法</title>
      <link href="2020/06/05/%E7%94%B3%E8%AF%B7%E5%85%8D%E8%B4%B9HTTPS%E8%AF%81%E4%B9%A6%E6%96%B9%E6%B3%95/"/>
      <url>2020/06/05/%E7%94%B3%E8%AF%B7%E5%85%8D%E8%B4%B9HTTPS%E8%AF%81%E4%B9%A6%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h2><p>如果你仅需要一个单域名的证书，可以使用阿里云的免费证书，申请链接：<a href="https://common-buy.aliyun.com/?commodityCode=cas#/buy" target="_blank" rel="noopener">https://common-buy.aliyun.com/?commodityCode=cas#/buy</a></p><ol><li>选择域名类型：单域名</li><li>选择证书类型：DV SSL</li><li>选择加密等级：免费版</li><li>选择证书品牌：DigiCert</li></ol><a id="more"></a><p>点击购买即可</p><p><strong>不支持</strong></p><ul><li>不支持保护同根下的所有子域名</li><li>不支持域名含有.edu、.gov、.org、.jp（国家缩写）、.pay、.bank、.live、.nuclear等特殊词</li></ul><h2 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h2><p>如果你仅需要一个单域名的证书，可以使用腾讯云的免费证书，申请链接：<a href="https://buy.cloud.tencent.com/ssl?fromSource=ssl" target="_blank" rel="noopener">https://buy.cloud.tencent.com/ssl?fromSource=ssl</a></p><ol><li>证书种类：域名型免费版(DV)</li><li>证书品牌：TrustAsia</li><li>域名类型：单域名</li><li>证书年限：1年</li><li>所属项目：</li></ol><p>点击申请即可</p><p><strong>不支持</strong></p><ul><li>不支持保护同根下的所有子域名</li></ul><blockquote><p>具体详情请查看实际页面信息。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSL证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Using jQuery ajax and FormData to upload a file</title>
      <link href="2020/06/04/Using-jQuery-ajax-and-FormData-to-upload-a-file/"/>
      <url>2020/06/04/Using-jQuery-ajax-and-FormData-to-upload-a-file/</url>
      
        <content type="html"><![CDATA[<h2 id="使用form表单初始化FormData对象方式上传文件"><a href="#使用form表单初始化FormData对象方式上传文件" class="headerlink" title="使用form表单初始化FormData对象方式上传文件"></a>使用form表单初始化FormData对象方式上传文件</h2><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"uploadForm"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"upload"</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$(<span class="string">'#upload'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uploadSubmit();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uploadSubmit</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData($(<span class="string">'#uploadForm'</span>)[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">'/file/upload'</span>,</span><br><span class="line">        type: <span class="string">'POST'</span>,</span><br><span class="line">        data: formData,</span><br><span class="line">        dataType: <span class="string">'json'</span>,</span><br><span class="line">        cache: <span class="literal">false</span>,</span><br><span class="line">        processData: <span class="literal">false</span>,</span><br><span class="line">        contentType: <span class="literal">false</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(res);</span><br><span class="line">        &#125;,</span><br><span class="line">        error: <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上传后服务器端代码需要使用从查询参数名为<code>file</code>获取文件输入流对象，因为<code>input</code>中声明的是<code>name=&quot;file&quot;</code></p><p><strong>注意几点：</strong></p><ul><li><code>form</code> 标签添加 <code>enctype=&quot;multipart/form-data&quot;</code> 属性，用于文件上传</li><li><code>cache</code> 设置为 <code>false</code>，上传文件不需要缓存</li><li><code>processData</code> 设置为<code>false</code>，因为<code>data</code>值是<code>FormData</code>对象，不需要对数据做处理</li><li><code>contentType</code> 设置为<code>false</code>，因为由 <code>form</code> 表单构造的<code>FormData</code>对象，且已经声明了属性<code>enctype=&quot;multipart/form-data&quot;</code>，所以这里设置为false</li></ul><h3 id="上传多张图片"><a href="#上传多张图片" class="headerlink" title="上传多张图片"></a>上传多张图片</h3><p>在<code>&lt;input type=&quot;file&quot;&gt;</code>里添加<code>multiple</code>或<code>multiple=&quot;multiple&quot;</code>属性和<code>name=&quot;file[]&quot;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file[]"</span> <span class="attr">multiple</span>=<span class="string">"multiple"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用FormData对象添加字段方式上传文件"><a href="#使用FormData对象添加字段方式上传文件" class="headerlink" title="使用FormData对象添加字段方式上传文件"></a>使用FormData对象添加字段方式上传文件</h2><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"uploadForm"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"file"</span> <span class="attr">type</span>=<span class="string">"file"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"upload"</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$(<span class="string">'#upload'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uploadSubmit();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uploadSubmit</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">    formData.append(<span class="string">'file'</span>, $(<span class="string">'#file'</span>)[<span class="number">0</span>].files[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">'/file/upload'</span>,</span><br><span class="line">        type: <span class="string">'POST'</span>,</span><br><span class="line">        data: formData,</span><br><span class="line">        dataType: <span class="string">'json'</span>,</span><br><span class="line">        cache: <span class="literal">false</span>,</span><br><span class="line">        processData: <span class="literal">false</span>,</span><br><span class="line">        contentType: <span class="literal">false</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(res);</span><br><span class="line">        &#125;,</span><br><span class="line">        error: <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意几点：</strong></p><ul><li><code>append()</code>的第二个参数应是文件对象，即<code>$(&#39;#file&#39;)[0].files[0]</code></li><li><code>contentType</code>也要设置为<code>false</code></li></ul><h3 id="上传多张图片-1"><a href="#上传多张图片-1" class="headerlink" title="上传多张图片"></a>上传多张图片</h3><p>在<code>&lt;input type=&quot;file&quot;&gt;</code>里添加<code>multiple</code>或<code>multiple=&quot;multiple&quot;</code>属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"file"</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">multiple</span>=<span class="string">"multiple"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$(<span class="string">'#upload'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uploadSubmit();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uploadSubmit</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">    <span class="keyword">var</span> files = $(<span class="string">'#file'</span>)[<span class="number">0</span>].files;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; files.length; i++) &#123;</span><br><span class="line">        formData.append(<span class="string">'file[]'</span>, files[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">'/file/upload'</span>,</span><br><span class="line">        type: <span class="string">'POST'</span>,</span><br><span class="line">        data: formData,</span><br><span class="line">        dataType: <span class="string">'json'</span>,</span><br><span class="line">        cache: <span class="literal">false</span>,</span><br><span class="line">        processData: <span class="literal">false</span>,</span><br><span class="line">        contentType: <span class="literal">false</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(res);</span><br><span class="line">        &#125;,</span><br><span class="line">        error: <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel How to create a custom Log file</title>
      <link href="2020/06/01/Laravel-How-to-create-a-custom-Log-file/"/>
      <url>2020/06/01/Laravel-How-to-create-a-custom-Log-file/</url>
      
        <content type="html"><![CDATA[<p>On Laravel 5.8, you cannot use <code>Log::useFiles()</code> to create custom log files,after some digging around I found that I could add a channel to <code>config/logging.php</code> like this</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'customlog'</span> =&gt; [</span><br><span class="line">            <span class="string">'driver'</span> =&gt; <span class="string">'single'</span>,</span><br><span class="line">            <span class="string">'path'</span> =&gt; storage_path(<span class="string">'logs/custom.log'</span>),</span><br><span class="line">            <span class="string">'level'</span> =&gt; <span class="string">'info'</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><a id="more"></a><p>and write to it like this</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Log::channel(<span class="string">'customlog'</span>)-&gt;info(<span class="string">'Hello world!!'</span>);</span><br></pre></td></tr></table></figure><p>IF you want to create a log file using date format, modify in <code>config/logging.php</code> like this</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'customlog'</span> =&gt; [</span><br><span class="line">            <span class="string">'driver'</span> =&gt; <span class="string">'daily'</span>,</span><br><span class="line">            <span class="string">'path'</span> =&gt; storage_path(<span class="string">'logs/custom.log'</span>),</span><br><span class="line">            <span class="string">'level'</span> =&gt; <span class="string">'info'</span>,</span><br><span class="line">        ],</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Next主题 添加文章评论功能</title>
      <link href="2020/06/01/Hexo-Next%E4%B8%BB%E9%A2%98-%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"/>
      <url>2020/06/01/Hexo-Next%E4%B8%BB%E9%A2%98-%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>Hexo的Next主题集成了多种评论系统，在这里介绍两种个人感觉还不错的评论系统：Valine和Gitment。</p><h2 id="Valine-评论系统"><a href="#Valine-评论系统" class="headerlink" title="Valine 评论系统"></a>Valine 评论系统</h2><p>使用 Valine 评论系统，这款系统不需要登录便可以登录，没有后端，Next 主题最新已经支持安装</p><ul><li>基于 Leancloud 的系统</li><li>支持 MarkDown 语法</li><li>无后端实现，快速高效</li></ul><a id="more"></a><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="注册-LeanCloud"><a href="#注册-LeanCloud" class="headerlink" title="注册 LeanCloud"></a>注册 LeanCloud</h4><p>因为 Valine 是基于 LeanCloud 系统的，所以先在 LeanCloud 中注册账号</p><p><a href="https://leancloud.cn/dashboard/login.html#/signin" target="_blank" rel="noopener">LeanCloud官网登录入口</a></p><p>注册登陆后，访问控制台，创建应用，选择开发版，创建好之后就生成了 <code>App ID</code> 和 <code>App Key</code></p><h4 id="设置-Next-主题"><a href="#设置-Next-主题" class="headerlink" title="设置 Next 主题"></a>设置 Next 主题</h4><p>在主题的配置文件中，修改关于 valine 的配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine.</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># more info please open https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span> <span class="comment"># 是否开启</span></span><br><span class="line"><span class="attr">  appid:</span>   <span class="comment"># 上一步获取的 App ID</span></span><br><span class="line"><span class="attr">  appkey:</span>  <span class="comment"># 上一步获取的 App Key</span></span><br><span class="line"><span class="attr">  notify:</span> <span class="literal">false</span> <span class="comment"># 新留言是否需要通知 https://github.com/xCss/Valine/wiki</span></span><br><span class="line"><span class="attr">  verify:</span> <span class="literal">false</span> <span class="comment"># 是否需要验证，验证比较反人类建议false关闭</span></span><br><span class="line"><span class="attr">  placeholder:</span> <span class="string">请在此输入您的留言</span> <span class="comment"># 默认留言框内的文字</span></span><br><span class="line"><span class="attr">  avatar:</span> <span class="string">mm</span> <span class="comment"># 默认头像</span></span><br><span class="line"><span class="attr">  guest_info:</span> <span class="string">nick,mail</span> <span class="comment"># 默认留言框的头部需要访问者输入的信息</span></span><br><span class="line"><span class="attr">  pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size #默认单页的留言条数</span></span><br></pre></td></tr></table></figure><p>重新部署</p><h3 id="评论管理"><a href="#评论管理" class="headerlink" title="评论管理"></a>评论管理</h3><p>如果想要管理评论，进入 leancloud 官网，找到 控制台-&gt;存储-&gt;结构化数据-&gt;Commet 中进行管理</p><h2 id="Gitment-评论系统"><a href="#Gitment-评论系统" class="headerlink" title="Gitment 评论系统"></a>Gitment 评论系统</h2><p>gitment，它是基于 github 开发的，是依靠于 <code>GitHub Issues</code> 的评论系统，Next 主题最新已经支持安装</p><blockquote><p>前提：更新 Next 主题（5.1.2 主题）</p></blockquote><h3 id="注册OAuth-application"><a href="#注册OAuth-application" class="headerlink" title="注册OAuth application"></a>注册OAuth application</h3><ol><li>在 github 中进行注册，进入 <a href="https://github.com/settings/profile" target="_blank" rel="noopener">https://github.com/settings/profile</a></li><li>点击左侧 Developer settings</li><li>Register a new application</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Application name:#应用名称</span><br><span class="line">Homepage URL：  #网站URL(填自己的博客主页地址)</span><br><span class="line">Application description#描述</span><br><span class="line">Authorization callback URL:#网站URL(填自己的博客主页地址)</span><br></pre></td></tr></table></figure><ol start="4"><li>注册完成之后，会得到：<code>Client ID</code> 和 <code>Client Secret</code></li></ol><h3 id="新建存放博客评论仓库"><a href="#新建存放博客评论仓库" class="headerlink" title="新建存放博客评论仓库"></a>新建存放博客评论仓库</h3><p>可以在 github 中建一个项目，专门用来存储你的博客评论</p><h3 id="配置-next-主题文件"><a href="#配置-next-主题文件" class="headerlink" title="配置 next 主题文件"></a>配置 next 主题文件</h3><p>编辑主题配置文件：themes\next\ _config.yml，找到有关 gitment 的设置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitment:</span>   </span><br><span class="line"><span class="attr">  enable:</span>  <span class="literal">true</span></span><br><span class="line"><span class="attr">  mint:</span> <span class="literal">true</span>  </span><br><span class="line"><span class="attr">  count:</span> <span class="literal">true</span> </span><br><span class="line"><span class="attr">  lazy:</span> <span class="literal">false</span>  <span class="comment">#评论懒加载，如果true，则默认不展示评论，点击按钮查看评论</span></span><br><span class="line"><span class="attr">  cleanly:</span> <span class="literal">false</span>  </span><br><span class="line"><span class="attr">  language:</span> </span><br><span class="line"><span class="attr">  github_user:</span> <span class="comment">#github名称</span></span><br><span class="line"><span class="attr">  github_repo:</span> <span class="string">BlogComments</span><span class="comment">#上一步新建存放评论的仓库名</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="string">b8bad0exxxx</span><span class="comment">#上面注册 OAuth Application 的 Client ID</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="string">bcee560xxxxxx</span><span class="comment">#上面注册 OAuth Application 申请的 Client Secret</span></span><br><span class="line"><span class="attr">  proxy_gateway:</span> </span><br><span class="line"><span class="attr">  redirect_protocol:</span> <span class="comment"># Protocol of redirect_uri with force_redirect_protocol when mint</span></span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>在设置完成之后，hexo 重新部署</p><p>每篇文章都要点击初始化评论按钮</p><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p>评论显示在新建存放评论的仓库中的 <code>issue</code> 中</p><h2 id="关闭某个页面的评论"><a href="#关闭某个页面的评论" class="headerlink" title="关闭某个页面的评论"></a>关闭某个页面的评论</h2><p>在页面的 <code>Front-matter</code> 中添加 <code>comments</code> 字段，设为 <code>false</code></p><p>比如标签页不想要评论，则在标签页面中做以下设置</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2015-12-16 17:05:24</span><br><span class="line">type: "tags"</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>转载：<a href="https://yashuning.github.io/2018/06/29/hexo-Next-%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">https://yashuning.github.io/2018/06/29/hexo-Next 主题添加评论功能/</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Next主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel 输出执行的 SQL 日志</title>
      <link href="2020/05/29/Laravel-%E8%BE%93%E5%87%BA%E6%89%A7%E8%A1%8C%E7%9A%84-SQL-%E6%97%A5%E5%BF%97/"/>
      <url>2020/05/29/Laravel-%E8%BE%93%E5%87%BA%E6%89%A7%E8%A1%8C%E7%9A%84-SQL-%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<p>我们在使用Laravel框架时，免不了要打印一下程序中SQL的执行情况</p><h2 id="临时输出执行的-SQL-日志"><a href="#临时输出执行的-SQL-日志" class="headerlink" title="临时输出执行的 SQL 日志"></a>临时输出执行的 SQL 日志</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DB::enableQueryLog();<span class="comment">// 开启日志支持</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 程序中执行SQL的代码</span></span><br><span class="line"></span><br><span class="line">dd(DB::getQueryLog());<span class="comment">// 输出执行的 SQL 日志</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="SQL-日志存放到log文件中"><a href="#SQL-日志存放到log文件中" class="headerlink" title="SQL 日志存放到log文件中"></a>SQL 日志存放到log文件中</h2><ol><li>在 <code>app/Providers/EventServicePorvider.php</code> 文件中 添加要注册的事件</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The event listener mappings for the application.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $listen = [</span><br><span class="line">    <span class="comment">//........</span></span><br><span class="line">    <span class="string">'Illuminate\Database\Events\QueryExecuted'</span> =&gt; [</span><br><span class="line">        <span class="string">'App\Listeners\QueryListener'</span>,</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><ol start="2"><li>进入cmd，在项目根目录里执行命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan event:generate</span><br></pre></td></tr></table></figure><p>创建了 <code>app/Listeners/QueryListener.php</code></p><ol start="3"><li>编写<code>QueryListener.php</code>代码如下</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Listeners</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Events</span>\<span class="title">QueryExecuted</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Log</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueryListener</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create the event listener.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Handle the event.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  QueryExecuted  $event</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">(QueryExecuted $event)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($event-&gt;sql)</span><br><span class="line">        &#123;</span><br><span class="line">            $sql = str_replace(<span class="string">"?"</span>, <span class="string">"'%s'"</span>, $event-&gt;sql);</span><br><span class="line">            $log = vsprintf($sql, $event-&gt;bindings);</span><br><span class="line">            </span><br><span class="line">            Log::channel(<span class="string">'sqllog'</span>)-&gt;info($log);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果可以调用 <code>Log::useFiles</code></p><p>可以使用如下代码，也无需理会第四步</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Listeners</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Events</span>\<span class="title">QueryExecuted</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Log</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueryListener</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create the event listener.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Handle the event.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  illuminate.query  $event</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">(QueryExecuted $event)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($event-&gt;sql)&#123;</span><br><span class="line">                    <span class="comment">// 把sql  的日志独立分开</span></span><br><span class="line">            $fileName = storage_path(<span class="string">'logs/sql/'</span>.date(<span class="string">'Y-m-d'</span>).<span class="string">'.log'</span>); </span><br><span class="line">            Log::useFiles($fileName,<span class="string">'info'</span>);</span><br><span class="line">            $sql = str_replace(<span class="string">"?"</span>, <span class="string">"'%s'"</span>, $event-&gt;sql);</span><br><span class="line">            $log = vsprintf($sql, $event-&gt;bindings);</span><br><span class="line">            Log::info($log);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>在<code>config/logging.php</code>文件添加 <code>channel</code></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'channels'</span> =&gt; [</span><br><span class="line">        <span class="comment">//.....</span></span><br><span class="line"></span><br><span class="line">        <span class="string">'sqllog'</span> =&gt; [</span><br><span class="line">            <span class="string">'driver'</span> =&gt; <span class="string">'daily'</span>,</span><br><span class="line">            <span class="string">'path'</span> =&gt; storage_path(<span class="string">'logs/sqls/sql.log'</span>),</span><br><span class="line">            <span class="string">'level'</span> =&gt; <span class="string">'info'</span>,</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Laravel表单提交默认将空值转为null</title>
      <link href="2020/05/28/%E8%A7%A3%E5%86%B3Laravel%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4%E9%BB%98%E8%AE%A4%E5%B0%86%E7%A9%BA%E5%80%BC%E8%BD%AC%E4%B8%BAnull/"/>
      <url>2020/05/28/%E8%A7%A3%E5%86%B3Laravel%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4%E9%BB%98%E8%AE%A4%E5%B0%86%E7%A9%BA%E5%80%BC%E8%BD%AC%E4%B8%BAnull/</url>
      
        <content type="html"><![CDATA[<p>在Laravel中，使用<code>$request-&gt;inptu(&#39;field&#39;)</code>，获取参数值为空的时候，输出的值为<code>null</code></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name: peak</span><br><span class="line">province: 北京市</span><br><span class="line">city: 崇文区</span><br><span class="line">mobile: 18000000000</span><br><span class="line">address: 你猜猜看</span><br><span class="line">zip:</span><br></pre></td></tr></table></figure><p>获取 <code>zip</code> 的值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$zip = $request-&gt;input(<span class="string">'zip'</span>, <span class="string">''</span>);</span><br><span class="line">dd($zip);</span><br></pre></td></tr></table></figure><p>发现 <code>zip</code> 并没有输出 <code>&#39;&#39;</code>，而是输出 <code>null</code></p><p>原来，在 <code>Illuminate/Foundation/Http</code> 组件中有定义这个中间件</p><p><code>vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Http</span>\<span class="title">Middleware</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConvertEmptyStringsToNull</span> <span class="keyword">extends</span> <span class="title">TransformsRequest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Transform the given value.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string  $key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  mixed  $value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">transform</span><span class="params">($key, $value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> is_string($value) &amp;&amp; $value === <span class="string">''</span> ? <span class="keyword">null</span> : $value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决方法：</p><p>在 app/Http/Kernel.php 中注释掉 <code>\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class</code> 即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> $middleware = [</span><br><span class="line">        \App\Http\Middleware\TrustProxies::class,</span><br><span class="line">        \App\Http\Middleware\CheckForMaintenanceMode::class,</span><br><span class="line">        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,</span><br><span class="line">        \App\Http\Middleware\TrimStrings::class,</span><br><span class="line">        <span class="comment">//\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,</span></span><br><span class="line">    ];</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何关闭PHP缓存</title>
      <link href="2020/05/28/%E5%A6%82%E4%BD%95%E5%85%B3%E9%97%ADPHP%E7%BC%93%E5%AD%98/"/>
      <url>2020/05/28/%E5%A6%82%E4%BD%95%E5%85%B3%E9%97%ADPHP%E7%BC%93%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<p>最近使用 phpstudy_pro 集成环境，php 版本为 7.2.9，laravel 框架开发，发现一个问题，就是调试的时候，设置的打印数据得刷新好几次才能正常，开始以为是laravel 框架缓存导致的，清理laravel缓存之后，BUT，还是得刷新几次。</p><a id="more"></a><p>原来这是PHP OPCache 扩展开启了缓存，我们只需要在php.ini配置文件中 <code>opcache.enable</code>注释掉即可，然后重启服务</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[opcache]</span></span><br><span class="line"><span class="comment">; Determines if Zend OPCache is enabled</span></span><br><span class="line"><span class="comment">;opcache.enable=1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Next主题 配置</title>
      <link href="2020/05/25/Hexo-Next%E4%B8%BB%E9%A2%98-%E9%85%8D%E7%BD%AE/"/>
      <url>2020/05/25/Hexo-Next%E4%B8%BB%E9%A2%98-%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="增加侧边阅读百分比进度条"><a href="#增加侧边阅读百分比进度条" class="headerlink" title="增加侧边阅读百分比进度条"></a>增加侧边阅读百分比进度条</h2><p>打开位于 themes/next/_config.yml 文件，修改如下:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line"><span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h2><p>打开位于 themes/next/_config.yml 文件，修改如下:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Canvas-nest</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h2><p>打开位于 themes/next/_config.yml 文件，修改如下:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="attr">pace:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="在网站底部增加访问量"><a href="#在网站底部增加访问量" class="headerlink" title="在网站底部增加访问量"></a>在网站底部增加访问量</h2><p>打开位于 themes/next/_config.yml 文件，修改如下:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="comment"># count values only if the other configs are false</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># custom uv span for the whole site</span></span><br><span class="line"><span class="attr">  site_uv:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  site_uv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-user"&gt;&lt;/i&gt;</span> <span class="string">站点总访客数：</span></span><br><span class="line"><span class="attr">  site_uv_footer:</span></span><br><span class="line">  <span class="comment"># custom pv span for the whole site</span></span><br><span class="line"><span class="attr">  site_pv:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  site_pv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-eye"&gt;&lt;/i&gt;</span> <span class="string">站点总访问量：</span></span><br><span class="line"><span class="attr">  site_pv_footer:</span> </span><br><span class="line">  <span class="comment"># custom pv span for one page only</span></span><br><span class="line"><span class="attr">  page_pv:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  page_pv_header:</span> <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-file-o"&gt;&lt;/i&gt;</span> <span class="string">浏览</span></span><br><span class="line"><span class="attr">  page_pv_footer:</span> <span class="string">次</span></span><br></pre></td></tr></table></figure><p>查看文件 themes/next/layout/_third-party/analytics/busuanzi-counter.swig 中引入的js是否是最新的地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="侧边栏友情链接"><a href="#侧边栏友情链接" class="headerlink" title="侧边栏友情链接"></a>侧边栏友情链接</h2><p>打开位于 themes/next/_config.yml 文件，修改如下:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Blog rolls</span></span><br><span class="line"><span class="attr">links_icon:</span> <span class="string">link</span></span><br><span class="line"><span class="attr">links_title:</span> <span class="string">推荐网址</span></span><br><span class="line"><span class="attr">links_layout:</span> <span class="string">block</span></span><br><span class="line"><span class="comment">#links_layout: inline</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="string">阮一峰的个人网站:</span> <span class="attr">http://www.ruanyifeng.com/home.html</span></span><br><span class="line">  <span class="string">廖雪峰的官方网站:</span> <span class="attr">https://www.liaoxuefeng.com/</span></span><br><span class="line">  <span class="string">韩天峰(Rango)的博客:</span> <span class="attr">http://rango.swoole.com/</span></span><br></pre></td></tr></table></figure><h2 id="开启文章版权声明"><a href="#开启文章版权声明" class="headerlink" title="开启文章版权声明"></a>开启文章版权声明</h2><p>打开位于 themes/next/_config.yml 文件，修改如下:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Declare license on posts</span></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span></span><br><span class="line"><span class="attr">  license_url:</span> <span class="attr">https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br></pre></td></tr></table></figure><h2 id="修改头像边框为圆形框"><a href="#修改头像边框为圆形框" class="headerlink" title="修改头像边框为圆形框"></a>修改头像边框为圆形框</h2><p>打开位于 themes/next/source/css/_custom/custom.syl 文件,新增样式如下:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*设置头像*/</span></span><br><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</span><br><span class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</span><br><span class="line">  <span class="attribute">height</span>: $site-author-image-height;</span><br><span class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line">  // 修改头像边框</span><br><span class="line">  <span class="selector-tag">border-radius</span>: 50%;</span><br><span class="line">  <span class="selector-tag">-webkit-border-radius</span>: 50%;</span><br><span class="line">  <span class="selector-tag">-moz-border-radius</span>: 50%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="鼠标放置头像上旋转"><a href="#鼠标放置头像上旋转" class="headerlink" title="鼠标放置头像上旋转"></a>鼠标放置头像上旋转</h2><p>打开位于 themes/next/source/css/_custom/custom.syl 文件,新增样式如下:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*设置头像并设置动画效果*/</span></span><br><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">padding</span>: $site-author-image-padding;</span><br><span class="line">    <span class="attribute">max-width</span>: $site-author-image-width;</span><br><span class="line">    <span class="attribute">height</span>: $site-author-image-height;</span><br><span class="line">    <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line">    <span class="comment">/* 头像圆形 */</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">-moz-border-radius</span>: <span class="number">50%</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 设置旋转 */</span></span><br><span class="line">    <span class="comment">/* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ease-out)动画播放的速度曲线为以低速结束 </span></span><br><span class="line"><span class="comment">        (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span></span><br><span class="line">    <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">    <span class="attribute">-moz-transition</span>: -moz-transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(360deg);</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotate</span>(360deg);</span><br><span class="line">    <span class="attribute">-ms-transform</span>: <span class="built_in">rotate</span>(360deg);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改文章底部带-号的标签"><a href="#修改文章底部带-号的标签" class="headerlink" title="修改文章底部带#号的标签"></a>修改文章底部带#号的标签</h2><p>打开位于 themes/next/layout/_macro/post.swig 文件,搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for tag in post.tags %&#125;</span><br><span class="line">    &lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&lt;i class=&quot;fa fa-tag&quot;&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h2 id="添加字数统计、阅读时长的统计功能"><a href="#添加字数统计、阅读时长的统计功能" class="headerlink" title="添加字数统计、阅读时长的统计功能"></a>添加字数统计、阅读时长的统计功能</h2><p><a href="./2019/12/13/Hexo添加字数统计、阅读时长/">传送门</a></p><h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h2><p>打开位于 /scaffolds/post.md 文件，添加 top 字段，设置数值，数值越大文章越靠前：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title\: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">copyright: true</span><br><span class="line">comments: true</span><br><span class="line">password: password</span><br><span class="line">top: 100 //设置数值，数值越大文章越靠前</span><br></pre></td></tr></table></figure><blockquote><p>持续更新…</p></blockquote><p><a href="https://chentging.github.io/2018/05/14/hexo%EF%BC%9A%EF%BC%88%E4%B8%89%EF%BC%89hexo-Next-%E4%B8%BB%E9%A2%98%E4%B8%8B%E8%BD%BD%E5%92%8C%E9%85%8D%E7%BD%AE/" target="_blank" rel="noopener">https://chentging.github.io/2018/05/14/hexo%EF%BC%9A%EF%BC%88%E4%B8%89%EF%BC%89hexo-Next-%E4%B8%BB%E9%A2%98%E4%B8%8B%E8%BD%BD%E5%92%8C%E9%85%8D%E7%BD%AE/</a></p><p><a href="https://wylu.me/posts/e0424f3f/" target="_blank" rel="noopener">https://wylu.me/posts/e0424f3f/</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Next主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于PHP程序员技术职业生涯规划</title>
      <link href="2020/05/15/%E5%85%B3%E4%BA%8EPHP%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8A%80%E6%9C%AF%E8%81%8C%E4%B8%9A%E7%94%9F%E6%B6%AF%E8%A7%84%E5%88%92/"/>
      <url>2020/05/15/%E5%85%B3%E4%BA%8EPHP%E7%A8%8B%E5%BA%8F%E5%91%98%E6%8A%80%E6%9C%AF%E8%81%8C%E4%B8%9A%E7%94%9F%E6%B6%AF%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<p>转载地址：<a href="http://rango.swoole.com/" target="_blank" rel="noopener">http://rango.swoole.com/</a></p><p>看到很多PHP程序员职业规划的文章，都是直接上来就提Linux、PHP、MySQL、Nginx、Redis、Memcache、jQuery这些，然后就直接上手搭环境、做项目，中级就是学习各种PHP框架和类库，高级阶段就是MySQL优化、PHP内核与扩展、架构设计这些了。</p><a id="more"></a><p>这些文章都存在一个严重的缺陷，<strong>不重视基础</strong>。就好比练武功，只求速成，不修炼内功和心法，只练各种招式，这样能高到哪里去？我所见过的PHP大牛每一个都是具备非常扎实的基础，他们之所以能成为大牛，是因为基础足够好。基础不稳，面对技术复杂的系统，如同盲人摸象、管中窥豹，只得其门不得其法。而且如果基础不扎实，也没办法进入大公司。国外的Google、Facebook，国内的腾讯、阿里、百度、滴滴、京东、新浪等知名互联网企业，无论哪一家公司面试必然会考验应聘者的技术功底。无法进入一个拥有大规模并发请求的项目中得到历练，不坚持提升自己，那也只能在小公司混日子了。</p><p>我最开始工作也是在2家小公司，后来加入腾讯阿里，主要原因还是我坚持学习基础知识，从而得倒了这个机会。有几个方面的基础知识，我建议每一位PHP程序员都应该好好学习一下。我推荐几本书给大家，包括深入理解计算机系统、现代操作系统、C程序设计语言、C语言数据结构和算法、Unix环境高级编程、TCP/IP网络通信详解。另外我建议大家学习一下面向对象方面知识，PHP这方面的书不太多，建议看Java面向对象编程、Java编程思想、J2EE这些书。PHP语言基础方面，建议认真地把<strong>PHP5权威编程</strong>这本书好好读完。另外不光要读，还要照着书中的讲解动手去编程实践。</p><p>总之有一个好的基础，再去学LAMP、Redis、PHP框架、前端，这样取得的成就更大。这与年龄无关、与学历无关、与智力无关，与天赋也无关。只要肯努力学习，人人可以成为技术大牛。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 人生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Html固定头部后锚点定位偏移调整</title>
      <link href="2020/05/14/Html%E5%9B%BA%E5%AE%9A%E5%A4%B4%E9%83%A8%E5%90%8E%E9%94%9A%E7%82%B9%E5%AE%9A%E4%BD%8D%E5%81%8F%E7%A7%BB%E8%B0%83%E6%95%B4/"/>
      <url>2020/05/14/Html%E5%9B%BA%E5%AE%9A%E5%A4%B4%E9%83%A8%E5%90%8E%E9%94%9A%E7%82%B9%E5%AE%9A%E4%BD%8D%E5%81%8F%E7%A7%BB%E8%B0%83%E6%95%B4/</url>
      
        <content type="html"><![CDATA[<p>有时候在头部菜单，我们会使用锚点定位，如果此时头部菜单我们设置成固定到头部，那么我们在使用锚点定位的时候，定位到的页面位置向上偏移了。</p><p>解决方案：</p><p>假设固定头部的高度为50px</p><p>其中一个锚点为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"about"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们给锚点添加一个class</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"target-fix"</span> <span class="attr">id</span>=<span class="string">"about"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>target-fix</code>样式为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.target-fix &#123;// 暗锚，让它滚动上来的时候在实际位置的基础上向下偏移50px，和你设置的nav高度一致即可</span><br><span class="line">    <span class="selector-tag">position</span>: <span class="selector-tag">relative</span>;</span><br><span class="line">    top: -50px; // 偏移值</span><br><span class="line">    <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">    visibility: hidden; //不让它展示</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就可以解决偏移问题了，我们加这个这样一个class，学名叫 <strong>暗锚</strong> ，涨知识了吧！</p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap导航条如何跟踪锚点</title>
      <link href="2020/05/14/Bootstrap%E5%AF%BC%E8%88%AA%E6%9D%A1%E5%A6%82%E4%BD%95%E8%B7%9F%E8%B8%AA%E9%94%9A%E7%82%B9/"/>
      <url>2020/05/14/Bootstrap%E5%AF%BC%E8%88%AA%E6%9D%A1%E5%A6%82%E4%BD%95%E8%B7%9F%E8%B8%AA%E9%94%9A%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>通过 <code>data</code> 属性向想要监听的元素（通常是 <code>body</code>）添加 <code>data-spy=&quot;scroll&quot;</code>，然后添加带有 Bootstrap 标签为 <code>nav</code> 或者 <code>class=&quot;nav&quot;</code> 或 <code>id=&quot;nav&quot;</code> 组件的父元素的属性 <code>data-target</code>。为了它能正常工作，您必须确保页面主体中有匹配所要监听链接的 ID 的元素存在。</p><p>来看例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">data-spy</span>=<span class="string">"scroll"</span> <span class="attr">data-target</span>=<span class="string">".navbar-menu"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 导航条 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"home"</span> <span class="attr">class</span>=<span class="string">"target-fix"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default navbar-fixed-top navbar-menu"</span>&gt;</span></span><br><span class="line">        .....</span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    .....</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'body'</span>).scrollspy(&#123; <span class="attr">target</span>: <span class="string">'.navbar-menu'</span> &#125;);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitLab服务器搭建教程</title>
      <link href="2020/05/12/GitLab%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
      <url>2020/05/12/GitLab%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h2><ul><li>VMWare虚拟机</li><li>版本推荐CentOS7（我当前使用的版本是CentOS7）</li><li>配置好Linux的IP地址</li><li>保证Gitlab可用运行内存<strong>大于4G</strong>(否则虚拟机会变得非常消耗磁盘读写)</li><li>安装依赖软件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install policycoreutils openssh-server openssh-clients postfix</span><br></pre></td></tr></table></figure><p>设置postfix开机自启，并启动，postfix支持gitlab发信功能</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> postfix &amp;&amp; systemctl start postfix</span><br></pre></td></tr></table></figure><h2 id="安装GitLab"><a href="#安装GitLab" class="headerlink" title="安装GitLab"></a>安装GitLab</h2><h3 id="下载GitLab安装包"><a href="#下载GitLab安装包" class="headerlink" title="下载GitLab安装包"></a>下载GitLab安装包</h3><p>国内GitLab安装包地址：<a href="https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/</a></p><ul><li>/el6/ CentOS 6系统目录</li><li>/el7/ CentOS 7系统目录</li><li>/el8/ CentOS 8系统目录</li></ul><p>我下载的是 11.3.3 版本，大家可以根据自己需求选择下载。</p><p>进入<code>/usr/local/src/</code>目录下载GitLab安装包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-11.3.3-ce.0.el7.x86_64.rpm</span></span><br></pre></td></tr></table></figure><p>安装GitLab安装包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># rpm -i gitlab-ce-11.3.3-ce.0.el7.x86_64.rpm </span></span><br><span class="line">warning: gitlab-ce-11.3.3-ce.0.el7.x86_64.rpm: Header V4 RSA/SHA1 Signature, key ID f27eab47: NOKEY</span><br><span class="line">It looks like GitLab has not been configured yet; skipping the upgrade script.</span><br><span class="line"></span><br><span class="line">       *.                  *.</span><br><span class="line">      ***                 ***</span><br><span class="line">     *****               *****</span><br><span class="line">    .******             *******</span><br><span class="line">    ********            ********</span><br><span class="line">   ,,,,,,,,,***********,,,,,,,,,</span><br><span class="line">  ,,,,,,,,,,,*********,,,,,,,,,,,</span><br><span class="line">  .,,,,,,,,,,,*******,,,,,,,,,,,,</span><br><span class="line">      ,,,,,,,,,*****,,,,,,,,,.</span><br><span class="line">         ,,,,,,,****,,,,,,</span><br><span class="line">            .,,,***,,,,</span><br><span class="line">                ,*,.</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     _______ __  __          __</span><br><span class="line">    / ____(_) /_/ /   ____ _/ /_</span><br><span class="line">   / / __/ / __/ /   / __ `/ __ \</span><br><span class="line">  / /_/ / / /_/ /___/ /_/ / /_/ /</span><br><span class="line">  \____/_/\__/_____/\__,_/_.___/</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">Thank you <span class="keyword">for</span> installing GitLab!</span><br><span class="line">GitLab was unable to detect a valid hostname <span class="keyword">for</span> your instance.</span><br><span class="line">Please configure a URL <span class="keyword">for</span> your GitLab instance by setting `external_url`</span><br><span class="line">configuration <span class="keyword">in</span> /etc/gitlab/gitlab.rb file.</span><br><span class="line">Then, you can start your GitLab instance by running the following <span class="built_in">command</span>:</span><br><span class="line">  sudo gitlab-ctl reconfigure</span><br><span class="line"></span><br><span class="line">For a comprehensive list of configuration options please see the Omnibus GitLab readme</span><br><span class="line">https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md</span><br></pre></td></tr></table></figure><h3 id="修改GitLab配置文件"><a href="#修改GitLab配置文件" class="headerlink" title="修改GitLab配置文件"></a>修改GitLab配置文件</h3><ol><li>修改GitLab配置文件指定服务器ip和自定义端口</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/gitlab/gitlab.rb</span><br></pre></td></tr></table></figure><p>修改成如下(IP地址+端口号)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">external_url <span class="string">'http://192.168.100.14:8801'</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## GitLab configuration settings</span></span><br><span class="line"><span class="comment">##! This file is generated during initial installation and **is not** modified</span></span><br><span class="line"><span class="comment">##! during upgrades.</span></span><br><span class="line"><span class="comment">##! Check out the latest version of this file to know about the different</span></span><br><span class="line"><span class="comment">##! settings that can be configured by this file, which may be found at:</span></span><br><span class="line"><span class="comment">##! https://gitlab.com/gitlab-org/omnibus-gitlab/raw/master/files/gitlab-config-template/gitlab.rb.template</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## GitLab URL</span></span><br><span class="line"><span class="comment">##! URL on which GitLab will be reachable.</span></span><br><span class="line"><span class="comment">##! For more details on configuring external_url see:</span></span><br><span class="line"><span class="comment">##! https://docs.gitlab.com/omnibus/settings/configuration.html#configuring-the-external-url-for-gitlab</span></span><br><span class="line">external_url <span class="string">'http://192.168.100.14:8801'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Roles for multi-instance GitLab</span></span><br><span class="line"><span class="comment">##! The default is to have no roles enabled, which results in GitLab running as an all-in-one instance.</span></span><br><span class="line"><span class="comment">##! Options:</span></span><br><span class="line"><span class="comment">##!   redis_sentinel_role redis_master_role redis_slave_role geo_primary_role geo_secondary_role</span></span><br><span class="line"><span class="comment">##! For more deatils on each role, see:</span></span><br><span class="line"><span class="comment">##! https://docs.gitlab.com/omnibus/roles/README.html#roles</span></span><br><span class="line"><span class="comment">##!</span></span><br><span class="line"><span class="comment"># roles ['redis_sentinel_role', 'redis_master_role']</span></span><br></pre></td></tr></table></figure><ol start="2"><li>重置并重启GitLab</li></ol><p>重置</p><blockquote><p>注：第一次预计需要几分钟</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitlab-ctl reconfigure</span></span><br></pre></td></tr></table></figure><p>居然用了11分钟…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Running handlers:</span><br><span class="line">Running handlers complete</span><br><span class="line">Chef Client finished, 435/620 resources updated in 11 minutes 31 seconds</span><br><span class="line">gitlab Reconfigured!</span><br></pre></td></tr></table></figure><p>重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitlab-ctl restart</span></span><br></pre></td></tr></table></figure><h2 id="访问GitLab页面"><a href="#访问GitLab页面" class="headerlink" title="访问GitLab页面"></a>访问GitLab页面</h2><p>如果没有开启8801端口，是无法访问滴</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/iptables -I INPUT -p tcp --dport 8801 -j ACCEPT</span><br></pre></td></tr></table></figure><p>浏览器输入 <a href="http://192.168.100.14:8801" target="_blank" rel="noopener">http://192.168.100.14:8801</a></p><p>如果访问的时候报502错误，修改权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 755 /var/<span class="built_in">log</span>/gitlab</span><br></pre></td></tr></table></figure><h2 id="修改root密码"><a href="#修改root密码" class="headerlink" title="修改root密码"></a>修改root密码</h2><p>第一次访问时，会自动跳转到修改root密码的界面，填写好密码确认即可。愉快地开始管理你的项目吧！</p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitLab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 截取指定长度的字符串 超出部分用...替换</title>
      <link href="2020/05/12/PHP-%E6%88%AA%E5%8F%96%E6%8C%87%E5%AE%9A%E9%95%BF%E5%BA%A6%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2-%E8%B6%85%E5%87%BA%E9%83%A8%E5%88%86%E7%94%A8-%E6%9B%BF%E6%8D%A2/"/>
      <url>2020/05/12/PHP-%E6%88%AA%E5%8F%96%E6%8C%87%E5%AE%9A%E9%95%BF%E5%BA%A6%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2-%E8%B6%85%E5%87%BA%E9%83%A8%E5%88%86%E7%94%A8-%E6%9B%BF%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 截取字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $str 需要处理的字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $len 截取长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $suffix 后缀字符</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $encoding 字符串编码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cutStr</span><span class="params">($str, $len=<span class="number">20</span>, $suffix=<span class="string">'...'</span>, $encoding=<span class="string">'UTF-8'</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$str = trim($str);</span><br><span class="line"><span class="keyword">if</span> (mb_strlen($str, $encoding) &lt; $len) <span class="keyword">return</span> $str;</span><br><span class="line">$newStr = mb_substr($str, <span class="number">0</span>, $len, $encoding).$suffix;</span><br><span class="line"><span class="keyword">return</span> $newStr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(cutStr(<span class="string">'“三我”热线---买二十年办不了房产证问题'</span>));</span><br></pre></td></tr></table></figure><p>输出结果 string(57) ““三我”热线—买二十年办不了房产证问…”</p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP函数参考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jquery ajax 跨域设置 http header</title>
      <link href="2020/05/11/Jquery-ajax-%E8%B7%A8%E5%9F%9F%E8%AE%BE%E7%BD%AE-http-header/"/>
      <url>2020/05/11/Jquery-ajax-%E8%B7%A8%E5%9F%9F%E8%AE%BE%E7%BD%AE-http-header/</url>
      
        <content type="html"><![CDATA[<p>我们在写api和调用api的时候，经常会遇到跨域和设置 http header 头部参数问题。如果没有跨域是可以设置http header头部(例如authorization)，但是跨域是<strong>不可以设置http header头部</strong>的，查阅网上资料实测后，没有发现可行的方法。在寻找方法中…</p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统吞吐量、QPS(TPS)、用户并发量、性能测试概念和公式</title>
      <link href="2020/05/09/%E7%B3%BB%E7%BB%9F%E5%90%9E%E5%90%90%E9%87%8F%E3%80%81QPS-TPS-%E3%80%81%E7%94%A8%E6%88%B7%E5%B9%B6%E5%8F%91%E9%87%8F%E3%80%81%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%A6%82%E5%BF%B5%E5%92%8C%E5%85%AC%E5%BC%8F/"/>
      <url>2020/05/09/%E7%B3%BB%E7%BB%9F%E5%90%9E%E5%90%90%E9%87%8F%E3%80%81QPS-TPS-%E3%80%81%E7%94%A8%E6%88%B7%E5%B9%B6%E5%8F%91%E9%87%8F%E3%80%81%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%A6%82%E5%BF%B5%E5%92%8C%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="QPS-TPS"><a href="#QPS-TPS" class="headerlink" title="QPS(TPS)"></a>QPS(TPS)</h2><p><strong>QPS</strong>：Queries Per Second 意思是“每秒查询率”，是一台服务器<strong>每秒</strong>能够相应的查询次数，对一个特定的查询服务器在规定时间内所处理流量多少的衡量标准。</p><p><strong>TPS</strong>：Transactions Per Second 意思是“每秒传输的事物处理个数”，即服务器<strong>每秒</strong>处理的事务数，TPS包括一条消息入和一条消息出，加上一次用户数据库访问。（业务TPS = CAPS × 每个呼叫平均TPS）</p><a id="more"></a><p>TPS即每秒处理事务数，包括了</p><ol><li>用户请求服务器</li><li>服务器自己的内部处理</li><li>服务器返回给用户</li></ol><p>这三个过程，每秒能够完成N个这三个过程，TPS也就是N。</p><h3 id="QPS与TPS的区别"><a href="#QPS与TPS的区别" class="headerlink" title="QPS与TPS的区别"></a>QPS与TPS的区别</h3><p>QPS基本类似于TPS，但是不同的是，对于一个页面的一次访问，形成一个TPS；但一次页面请求，可能产生多次对服务器的请求，服务器对这些请求，就可计入“QPS”之中。</p><p>例如：访问一个页面会请求服务器3次，产生一个“T”，产生3个“Q”。</p><p>再举个例子：假如一个大胃王一秒能吃10个包子，一个女孩子0.1秒能吃1个包子，那么他们是不是一样的呢？答案是否定的，因为这个女孩子不一定能在一秒钟吃下10个包子，她可能要吃很久。这个时候这个大胃王就相当于<strong>TPS</strong>，而这个女孩子则是<strong>QPS</strong>。虽然很相似，但其实是不同的。</p><h2 id="系统吞吐量"><a href="#系统吞吐量" class="headerlink" title="系统吞吐量"></a>系统吞吐量</h2><p>一个系统的<strong>吞吐量</strong>（承压能力）与request(请求)对CPU的消耗、外部接口、IO等等紧密关联。单个reqeust 对CPU消耗越高，外部系统接口、IO影响速度越慢，系统吞吐能力越低，反之越高。</p><p>系统吞吐量几个重要参数：QPS（TPS）、并发数和响应时间</p><ul><li>QPS（TPS）：每秒钟request/事务数量</li><li>并发数：系统同时处理的request/事务数量</li><li>响应时间：一般取平均响应时间</li></ul><blockquote><p>tip: 很多人经常会把并发数和TPS理解混淆</p></blockquote><p>理解了上面三个要素的意义之后，就能推算出它们之间的关系：</p><p>QPS（TPS）= 并发数/平均响应时间(秒) </p><p>或者</p><p>并发数 = QPS*平均响应时间</p><p>一个典型的上班签到系统，早上8点上班，7点半到8点的30分钟的时间里用户会登录签到系统进行签到。公司员工为1000人，平均每个员上登录签到系统的时长为5分钟。可以用下面的方法计算。</p><p>QPS = 1000/(30*60) 事务/秒</p><p>平均响应时间为 = 5*60 秒</p><p>并发数 = QPS<em>平均响应时间 = 1000/(30</em>60) <em>(5</em>60)=166.7</p><p>待整理…</p><p>参考链接： <a href="http://www.ha97.com/5095.html" target="_blank" rel="noopener">http://www.ha97.com/5095.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装 Swoole 4.4x</title>
      <link href="2020/05/03/%E5%AE%89%E8%A3%85-Swoole-4-4x/"/>
      <url>2020/05/03/%E5%AE%89%E8%A3%85-Swoole-4-4x/</url>
      
        <content type="html"><![CDATA[<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><ul><li>CentOS 7</li><li>PHP 7.2.30</li></ul><p>可以提前安装如下软件，也可以根据安装PHP和Swoole中出现需要的软件再安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install gcc gcc-c++ autoconf automake make libxml2 libxml2-devel</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="源码安装PHP"><a href="#源码安装PHP" class="headerlink" title="源码安装PHP"></a>源码安装PHP</h2><p>使用Swoole扩展需要PHP7.1以上的版本，我在PHP官网下载的是PHP7.2.30版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/src</span></span><br><span class="line"><span class="comment"># wget https://www.php.net/distributions/php-7.2.30.tar.gz</span></span><br></pre></td></tr></table></figure><p>解压PHP并进入解压后的文件夹中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -zxvf php-7.2.30.tar.gz</span></span><br><span class="line"><span class="comment"># cd php-7.2.30</span></span><br></pre></td></tr></table></figure><p>配置、编译和安装PHP(我把PHP安装目录自定义了)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./configure --prefix=/usr/local/php72</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><p>编辑 <code>~/.bash_profile</code> 文件，把 <code>alias php=/usr/local/php72/bin/php</code> 添加到最后一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim ~/.bash_profile</span></span><br></pre></td></tr></table></figure><p>查看PHP的.ini文件有效位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># php -i | grep php.ini</span></span><br></pre></td></tr></table></figure><p>把解压文件夹中的 php.ini-development 复制到 PHP的.ini文件有效位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp /usr/local/src/php-7.2.30/php.ini-development /usr/local/php72/lib/php.ini</span></span><br></pre></td></tr></table></figure><h2 id="源码安装Swoole"><a href="#源码安装Swoole" class="headerlink" title="源码安装Swoole"></a>源码安装Swoole</h2><p>选择需要的Swoole版本进行下载，我是用的是<code>4.4.x</code>，可以使用git和下载zip，我是下载的zip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/src</span></span><br><span class="line"><span class="comment"># wget https://github.com/swoole/swoole-src/archive/v4.4.x.zip</span></span><br></pre></td></tr></table></figure><p>解压并进去解压后的文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unzip v4.4.x.zip</span></span><br><span class="line"><span class="comment"># cd swoole-src-4.4.x</span></span><br></pre></td></tr></table></figure><p>使用PHP的phpize进行处理，然后生成configure文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /usr/local/php72/bin/phpize</span></span><br></pre></td></tr></table></figure><p>配置Swoole</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./configure --with-php-config=/usr/local/php72/bin/php-config</span></span><br></pre></td></tr></table></figure><p>然后编译和安装Swoole</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><p>会提示Swoole扩展安装目录为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## /usr/local/php72/lib/php/extensions/no-debug-non-zts-****</span></span><br></pre></td></tr></table></figure><h2 id="开启Swoole扩展"><a href="#开启Swoole扩展" class="headerlink" title="开启Swoole扩展"></a>开启Swoole扩展</h2><p>打开php的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/php72/lib/php.ini</span></span><br></pre></td></tr></table></figure><p>添加如下信息，其中 <code>no-debug-non-zts-20170718</code>文件夹名称根据实际情况可能不同</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[swoole]</span><br><span class="line">extension=/usr/<span class="built_in">local</span>/php72/lib/php/extensions/no-debug-non-zts-20170718/swoole.so</span><br></pre></td></tr></table></figure><p>查看php的扩展中是否有Swoole</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># php -m</span></span><br><span class="line"></span><br><span class="line">[PHP Modules]</span><br><span class="line">Core</span><br><span class="line">ctype</span><br><span class="line">date</span><br><span class="line">dom</span><br><span class="line">fileinfo</span><br><span class="line">filter</span><br><span class="line"><span class="built_in">hash</span></span><br><span class="line">iconv</span><br><span class="line">json</span><br><span class="line">libxml</span><br><span class="line">pcre</span><br><span class="line">PDO</span><br><span class="line">pdo_sqlite</span><br><span class="line">Phar</span><br><span class="line">posix</span><br><span class="line">Reflection</span><br><span class="line">session</span><br><span class="line">SimpleXML</span><br><span class="line">SPL</span><br><span class="line">sqlite3</span><br><span class="line">standard</span><br><span class="line">swoole</span><br><span class="line">tokenizer</span><br><span class="line">xml</span><br><span class="line">xmlreader</span><br><span class="line">xmlwriter</span><br><span class="line"></span><br><span class="line">[Zend Modules]</span><br></pre></td></tr></table></figure><p>查看Swoole是否可用，打开Swoole解压文件夹，找到 <code>examples</code>中的<code>server</code>中的 <code>echo.php</code>，这个文件打开的是9501端口，执行这歌文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /usr/local/src/swoole-src-4.4.x/examples/server</span></span><br><span class="line"><span class="comment"># php echo.php</span></span><br></pre></td></tr></table></figure><p>另起一个终端，查看9501端口是否被使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netstat -anp | grep 9501</span></span><br><span class="line">tcp        0      0 0.0.0.0:9501            0.0.0.0:*               LISTEN      40389/php</span><br></pre></td></tr></table></figure><p><code>ctrl</code> + <code>c</code> 终止 <code>echo.php</code>文件，然后再查看9501端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netstat -anp | grep 9501</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swoole </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云服务器发送邮件报错 Connection could not be established with host smtp.xx.com [Connection timed out #110]</title>
      <link href="2020/04/26/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E6%8A%A5%E9%94%99-Connection-could-not-be-established-with-host-smtp-xx-com-Connection-timed-out-110/"/>
      <url>2020/04/26/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E6%8A%A5%E9%94%99-Connection-could-not-be-established-with-host-smtp-xx-com-Connection-timed-out-110/</url>
      
        <content type="html"><![CDATA[<p>开发了一个发送邮件服务，本地测试发送成功，but部署在阿里云服务器上发送报错，报错信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Connection could not be established with host smtp.xx.com</span><br><span class="line">  [Connection timed out <span class="comment">#110]</span></span><br></pre></td></tr></table></figure><p>本地发送邮件配置端口使用的是25，没有使用加密方式发送邮件，然而阿里云禁用了25端口，所以我们要使用加密方式发送邮件。</p><ul><li>端口号 25 改为 465</li><li>加密方式 encryption 改用 ssl</li></ul><p>试一下看看吧！</p>]]></content>
      
      
      <categories>
          
          <category> 云服务 </category>
          
          <category> 阿里云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 邮件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 composer install 报错 laravel/horizon v3.7.2 requires ext-pcntl * -&gt; the requested PHP extension pcntl is missing from your system</title>
      <link href="2020/04/26/%E8%A7%A3%E5%86%B3-composer-install-%E6%8A%A5%E9%94%99-laravel-horizon-v3-7-2-requires-ext-pcntl-the-requested-PHP-extension-pcntl-is-missing-from-your-system/"/>
      <url>2020/04/26/%E8%A7%A3%E5%86%B3-composer-install-%E6%8A%A5%E9%94%99-laravel-horizon-v3-7-2-requires-ext-pcntl-the-requested-PHP-extension-pcntl-is-missing-from-your-system/</url>
      
        <content type="html"><![CDATA[<p>当我们在命令行运行 <code>composer install</code> ，出现了如下错误信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ composer install</span><br><span class="line">Loading composer repositories with package information</span><br><span class="line">Installing dependencies (including require-dev) from lock file</span><br><span class="line">Your requirements could not be resolved to an installable <span class="built_in">set</span> of packages.</span><br><span class="line"></span><br><span class="line">  Problem 1</span><br><span class="line">    - Installation request <span class="keyword">for</span> laravel/horizon v3.7.2 -&gt; satisfiable by laravel/horizon[v3.7.2].</span><br><span class="line">    - laravel/horizon v3.7.2 requires ext-pcntl * -&gt; the requested PHP extension pcntl is missing from your system.</span><br><span class="line"></span><br><span class="line">  To <span class="built_in">enable</span> extensions, verify that they are enabled <span class="keyword">in</span> your .ini files:</span><br><span class="line">    - D:\phpStudy\PHPTutorial\php\php-7.2.1-nts\php.ini</span><br><span class="line">  You can also run `php --ini` inside terminal to see <span class="built_in">which</span> files are used by PHP <span class="keyword">in</span> CLI mode.</span><br></pre></td></tr></table></figure><a id="more"></a><p>解决方法：</p><p>使用 <code>--ignore-platform-reqs</code> 选项运行composer，并指定 <code>pcntl</code> 和 <code>posix</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer install --ignore-platform-reqs</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lnmp1.6 安装 imap 扩展</title>
      <link href="2020/04/23/lnmp1-6-%E5%AE%89%E8%A3%85-imap-%E6%89%A9%E5%B1%95/"/>
      <url>2020/04/23/lnmp1-6-%E5%AE%89%E8%A3%85-imap-%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<p>我们在使用PHP的邮件服务时，会用到PHP的IMAP扩展，本文讲述，在lnmp1.6版本下安装IMAP扩展，以及遇到的问题。</p><p>首先找到lnmp源码包解压后的文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd /usr/local/src/lnmp1.6</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>然后找php的源码包,在 <code>src</code> 目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost lnmp1.6]<span class="comment"># cd src</span></span><br></pre></td></tr></table></figure><p>解压php源码包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -xvf php-7.2.24.tar.bz2</span></span><br></pre></td></tr></table></figure><p>进入php源码包解压后的文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># cd php-7.2.24</span></span><br></pre></td></tr></table></figure><p>找到php扩展imap文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost php-7.2.24]<span class="comment"># cd ext/imap/</span></span><br></pre></td></tr></table></figure><p>开始执行如下命令，安装imap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost imap]<span class="comment"># /usr/local/php/bin/phpize</span></span><br><span class="line">Configuring <span class="keyword">for</span>:</span><br><span class="line">PHP Api Version:         20170718</span><br><span class="line">Zend Module Api No:      20170718</span><br><span class="line">Zend Extension Api No:   320170718</span><br></pre></td></tr></table></figure><p>执行配置命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost imap]<span class="comment"># ./configure --with-php-config=/usr/local/php/bin/php-config --with-kerberos --with-imap-ssl</span></span><br></pre></td></tr></table></figure><p>如果此处报错，报错内容是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configure: WARNING: You will need re2c 0.13.4 or later <span class="keyword">if</span> you want to regenerate PHP parsers.</span><br></pre></td></tr></table></figure><p>此报错是警告信息，可以忽略</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configure: error: utf8_mime2text() has new signature, but U8T_CANONICAL is missing. This should not happen. Check config.log <span class="keyword">for</span> additional information.</span><br></pre></td></tr></table></figure><p>此报错是因为没有 <code>libc-client-devel</code>，执行如下命令安装<code>libc-client-devel</code></p><p>先运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost imap]<span class="comment"># yum install -y libc-client-devel</span></span><br></pre></td></tr></table></figure><p>如果提示（如果Linux版本是7可能会出现的情况）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No package libc-client available.</span><br></pre></td></tr></table></figure><p>则运行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost imap]<span class="comment"># yum install -y epel-release perl</span></span><br><span class="line">[root@localhost imap]<span class="comment"># yum install -y libc-client-devel</span></span><br></pre></td></tr></table></figure><p>再次执行配置命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost imap]<span class="comment"># ./configure --with-php-config=/usr/local/php/bin/php-config --with-kerberos --with-imap-ssl</span></span><br></pre></td></tr></table></figure><p>如果报错，报错内容为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configure: error: Cannot find imap library (libc-client.a). Please check your c-client installation.</span><br></pre></td></tr></table></figure><p>执行如下命令解决</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 环境lnmp最新版本</span></span><br><span class="line">[root@localhost imap]<span class="comment"># updatedb</span></span><br><span class="line"><span class="comment"># 展示libc-client.so 位置</span></span><br><span class="line">[root@localhost imap]<span class="comment"># locate libc-client</span></span><br><span class="line"><span class="comment"># locate 找到libc-client.so 位置后用ln -s 命令做个软连接到/usr/lib/</span></span><br><span class="line">[root@localhost imap]<span class="comment"># ln -s /usr/lib64/libc-client.so /usr/lib/libc-client.a</span></span><br></pre></td></tr></table></figure><p>再次执行配置命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost imap]<span class="comment"># ./configure --with-php-config=/usr/local/php/bin/php-config --with-kerberos --with-imap-ssl</span></span><br></pre></td></tr></table></figure><p>没有报错的话，执行安装命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp;make install</span><br></pre></td></tr></table></figure><p>如果安装成功后，修改php配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/php/etc/php.ini</span></span><br></pre></td></tr></table></figure><p>把 <code>extension=imap</code> 前的 <code>;</code> 去掉，保存。</p><p>重启lnmp服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp restart</span><br></pre></td></tr></table></figure><p><img src="/2020/04/23/lnmp1-6-安装-imap-扩展/20200423003240.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Composer 扩展包安装方法</title>
      <link href="2020/04/15/Composer-%E6%89%A9%E5%B1%95%E5%8C%85%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/"/>
      <url>2020/04/15/Composer-%E6%89%A9%E5%B1%95%E5%8C%85%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>我们在开发项目中，会不定时的往项目中添加扩展包，如果在 <code>composer.json</code> 文件添加了扩展，而你本地没有，此时我们如何把这个扩展安装到本地呢？使用命令 <code>composer update</code> ？这个命令在我们现在的逻辑中，可能会对项目造成巨大伤害。</p><p><code>composer update</code> 命令的逻辑是按照 <code>composer.json</code> 指定的扩展包版本规则，把所有扩展包更新到<strong>最新版本</strong>，注意，是 <strong>所有扩展包</strong>，举个例子，你在项目一开始的时候使用了 <code>monolog</code>，当时的配置信息是</p><a id="more"></a><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"monolog/monolog": "1.*",</span><br></pre></td></tr></table></figure><p>当时安装的是 <code>monolog 1.1</code> 版本，而一个多月以后的现在，<code>monolog</code> 已经是 <code>1.2</code> 了，运行 <code>composer update</code> 命令后直接更新到 <code>1.2</code>，这时项目并没有针对 <code>1.2</code> 进行过测试，项目一下子变得很不稳定，情况有时候会比这个更糟糕，尤其是在一个庞大的项目中，你没有对项目写完整覆盖测试的情况，什么东西坏掉了你都不知道。</p><p>那应该使用哪个命令呢？<code>install</code>, <code>update</code> 还是 <code>require</code> ？</p><h2 id="Composer命令说明"><a href="#Composer命令说明" class="headerlink" title="Composer命令说明"></a>Composer命令说明</h2><ul><li><code>composer install</code> - 如有 <code>composer.lock</code> 文件，直接安装，否则从 <code>composer.json</code> 安装最新扩展包和依赖；</li><li><code>composer update</code> - 从 <code>composer.json</code> 安装最新扩展包和依赖；</li><li><code>composer update vendor/package</code> - 从 <code>composer.json</code> 或者对应包的配置，并更新到最新；</li><li><code>composer require new/package</code> - 添加安装 <code>new/package</code>, 可以指定版本，如： <code>composer require new/package ~2.5</code>.</li></ul><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>接下来介绍几个日常生产的流程，来方便加深大家的理解。</p><h3 id="流程一：新项目流程"><a href="#流程一：新项目流程" class="headerlink" title="流程一：新项目流程"></a>流程一：新项目流程</h3><ul><li>创建 <code>composer.json</code>，并添加依赖到的扩展包；</li><li>运行 <code>composer install</code>，安装扩展包并生成 <code>composer.lock</code>；</li><li>提交 <code>composer.lock</code> 到代码版本控制器中，如：<code>git</code>;</li></ul><h3 id="流程二：项目协作者安装现有项目"><a href="#流程二：项目协作者安装现有项目" class="headerlink" title="流程二：项目协作者安装现有项目"></a>流程二：项目协作者安装现有项目</h3><p>克隆项目后，根目录下直接运行 <code>composer install</code> 从 <code>composer.lock</code> 中安装 指定版本 的扩展包以及其依赖；</p><blockquote><p>此流程适用于生产环境代码的部署。</p></blockquote><h3 id="流程三：为项目添加新扩展包"><a href="#流程三：为项目添加新扩展包" class="headerlink" title="流程三：为项目添加新扩展包"></a>流程三：为项目添加新扩展包</h3><p>使用 <code>composer require vendor/package</code> 添加扩展包；<br>提交更新后的 <code>composer.json</code> 和 <code>composer.lock</code> 到代码版本控制器中，如：<code>git</code>;</p><h2 id="关于-composer-lock-文件"><a href="#关于-composer-lock-文件" class="headerlink" title="关于 composer.lock 文件"></a>关于 composer.lock 文件</h2><p><code>composer.lock</code> 文件里保存着对每一个代码依赖的版本记录（见下），提交到版本控制器中，并配合 <code>composer install</code> 使用，保证了团队所有协作者开发环境、线上生产环境中运行的代码版本的一致性。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">"content-hash": "8171f7ece88940ed2e0af5661d0fa680",</span><br><span class="line">    "packages": [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"dnoegel/php-xdg-base-dir"</span>,</span><br><span class="line">            <span class="attr">"version"</span>: <span class="string">"v0.1.1"</span>,</span><br><span class="line">            <span class="attr">"source"</span>: &#123;</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"git"</span>,</span><br><span class="line">                <span class="attr">"url"</span>: <span class="string">"https://github.com/dnoegel/php-xdg-base-dir.git"</span>,</span><br><span class="line">                <span class="attr">"reference"</span>: <span class="string">"8f8a6e48c5ecb0f991c2fdcf5f154a47d85f9ffd"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"dist"</span>: &#123;</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"zip"</span>,</span><br><span class="line">                <span class="attr">"url"</span>: <span class="string">"https://api.github.com/repos/dnoegel/php-xdg-base-dir/zipball/8f8a6e48c5ecb0f991c2fdcf5f154a47d85f9ffd"</span>,</span><br><span class="line">                <span class="attr">"reference"</span>: <span class="string">"8f8a6e48c5ecb0f991c2fdcf5f154a47d85f9ffd"</span>,</span><br><span class="line">                <span class="attr">"shasum"</span>: <span class="string">""</span>,</span><br><span class="line">                <span class="attr">"mirrors"</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">"url"</span>: <span class="string">"https://mirrors.aliyun.com/composer/dists/%package%/%reference%.%type%"</span>,</span><br><span class="line">                        <span class="attr">"preferred"</span>: <span class="literal">true</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"require"</span>: &#123;</span><br><span class="line">                <span class="attr">"php"</span>: <span class="string">"&gt;=5.3.2"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"require-dev"</span>: &#123;</span><br><span class="line">                <span class="attr">"phpunit/phpunit"</span>: <span class="string">"~7.0|~6.0|~5.0|~4.8.35"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"library"</span>,</span><br><span class="line">            <span class="attr">"autoload"</span>: &#123;</span><br><span class="line">                <span class="attr">"psr-4"</span>: &#123;</span><br><span class="line">                    <span class="attr">"XdgBaseDir\\"</span>: <span class="string">"src/"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"notification-url"</span>: <span class="string">"https://packagist.org/downloads/"</span>,</span><br><span class="line">            <span class="attr">"license"</span>: [</span><br><span class="line">                <span class="string">"MIT"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"description"</span>: <span class="string">"implementation of xdg base directory specification for php"</span>,</span><br><span class="line">            <span class="attr">"time"</span>: <span class="string">"2019-12-04T15:06:13+00:00"</span></span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure><h2 id="关于扩展包的安装方法"><a href="#关于扩展包的安装方法" class="headerlink" title="关于扩展包的安装方法"></a>关于扩展包的安装方法</h2><p>那么，准备添加一个扩展包，<code>install</code>, <code>update</code>, <code>require</code> 三个命令都可以用来安装扩展包，选择哪一个才是正确的呢？</p><p>答案是：使用 <code>composer require</code> 命令</p><p>另外，在手动修改 <code>composer.json</code> 添加扩展包后，<code>composer update new/package</code> 进行指定扩展包更新的方式，也可以正确的安装，不过不建议使用这种方法，因为，一旦你忘记敲定后面的扩展包名，就会进入万劫不复的状态，别给自己留坑呀。</p><p>上面的概念不论对新手或者老手来说，都比较混淆，主要记住这个概念：</p><blockquote><p>原有项目新添加扩展的，都使用 <code>composer require new/package</code> 这种方式来安装。</p></blockquote><p>需要加版本的话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require <span class="string">"foo/bar:1.0.0"</span></span><br></pre></td></tr></table></figure><h2 id="更新指定扩展到指定版本"><a href="#更新指定扩展到指定版本" class="headerlink" title="更新指定扩展到指定版本"></a>更新指定扩展到指定版本</h2><p>有时候你之前使用过的扩展包，加入了新功能，你想更新单独这个扩展包到指定版本，也可以使用 <code>require</code> 来操作。</p><p>如下面例子，需要更新 <code>&quot;sami/sami&quot;: &quot;3.0.&quot;</code>到<code>&quot;sami/sami&quot;:&quot;3.2.&quot;</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"require-dev": &#123;</span><br><span class="line">        "filp/whoops": "^2.0",</span><br><span class="line">        "fzaninotto/faker": "^1.4",</span><br><span class="line">        "mockery/mockery": "^1.0",</span><br><span class="line">        "nunomaduro/collision": "^3.0",</span><br><span class="line">        "phpunit/phpunit": "^8.0",</span><br><span class="line">        "sami/sami": "3.0.*"</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>命令行运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require <span class="string">"sami/sami:3.2.*"</span></span><br></pre></td></tr></table></figure><p>composer.json 已经被自动更新：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"require-dev": &#123;</span><br><span class="line">        "filp/whoops": "^2.0",</span><br><span class="line">        "fzaninotto/faker": "^1.4",</span><br><span class="line">        "mockery/mockery": "^1.0",</span><br><span class="line">        "nunomaduro/collision": "^3.0",</span><br><span class="line">        "phpunit/phpunit": "^8.0",</span><br><span class="line">        "sami/sami": "3.2.*"</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>参考链接： <a href="https://learnku.com/php/t/1901/correct-method-for-installing-composer-expansion-pack#ea8c47" target="_blank" rel="noopener">https://learnku.com/php/t/1901/correct-method-for-installing-composer-expansion-pack#ea8c47</a></p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHPStorm2016</title>
      <link href="2020/03/30/PHPStorm2016/"/>
      <url>2020/03/30/PHPStorm2016/</url>
      
        <content type="html"><![CDATA[<p>监听服务器地址：</p><p>License server</p><p><code>http://idea.qinxi1992.cn/</code></p><p>or</p><p><code>http://idea.imsxm.com</code></p><p>保存就OK了。</p><p>———– 更新线2019-05-05 ————</p><p>这两个监听地址貌似不好用了，推荐使用在线生成注册码<br>地址：<code>http://idea.lanyus.com/</code></p><p>———– 更新线2020-03-11 ————</p><p>注册码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6ZUMD7WWWU-eyJsaWNlbnNlSWQiOiI2WlVNRDdXV1dVIiwibGljZW5zZWVOYW1lIjoiSmV0cyBHcm91cCIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wOS0wMyIsInBhaWRVcFRvIjoiMjAyMC0wOS0wMiJ9LHsiY29kZSI6IkFDIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wOS0wMyIsInBhaWRVcFRvIjoiMjAyMC0wOS0wMiJ9LHsiY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDktMDMiLCJwYWlkVXBUbyI6IjIwMjAtMDktMDIifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDktMDMiLCJwYWlkVXBUbyI6IjIwMjAtMDktMDIifSx7ImNvZGUiOiJHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDktMDMiLCJwYWlkVXBUbyI6IjIwMjAtMDktMDIifSx7ImNvZGUiOiJETSIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDktMDMiLCJwYWlkVXBUbyI6IjIwMjAtMDktMDIifSx7ImNvZGUiOiJDTCIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDktMDMiLCJwYWlkVXBUbyI6IjIwMjAtMDktMDIifSx7ImNvZGUiOiJSUzAiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiUkMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiUkQiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiUEMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiUk0iLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiV1MiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA5LTAzIiwicGFpZFVwVG8iOiIyMDIwLTA5LTAyIn0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wOS0wMyIsInBhaWRVcFRvIjoiMjAyMC0wOS0wMiJ9XSwiaGFzaCI6IjE0Mjg5NzUwLzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-Gd8RATyTEnHcAydKuC7N1ZdeLaMP9IR+nlPyVxvLsczAUTGKxcuAYbfz/uVtepg8ey4NfJlPNS+AGcGz8x7ImkX9jEV9KElMxPu3tKSdF/WKo6JCONX7UtudYa/9EQum3banxci/qH7jejSrFZSN+YjWQiYTR0Q8gq4/a2RyQTgseZfpImY/nXkOWLwWArr/p+4ddp/bWQN4nLTW+Z4ZaQeLE96Z9viCdn62EKOcR02Hfr9Oju9VYQh1L8pGrTqNey5nUSv/LQUbVwo5qoYbBRos8l6ewkFNGsuC3vtOgGWSgkgChbDjWhW4Nkm4vDM2NFAphMsS1dgyPw3eJ3C+6A==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHPStorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Next主题 字数统计和阅读时长失效的解决</title>
      <link href="2020/03/30/Hexo-Next%E4%B8%BB%E9%A2%98-%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%92%8C%E9%98%85%E8%AF%BB%E6%97%B6%E9%95%BF%E5%A4%B1%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
      <url>2020/03/30/Hexo-Next%E4%B8%BB%E9%A2%98-%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%92%8C%E9%98%85%E8%AF%BB%E6%97%B6%E9%95%BF%E5%A4%B1%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<p>在主题配置文件 <code>_config.yml</code> 中打开 <code>wordcount</code> 统计功能</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="attr">post_wordcount:</span></span><br><span class="line"><span class="attr">  item_text:</span> <span class="literal">true</span>       </span><br><span class="line"><span class="attr">  wordcount:</span> <span class="literal">true</span>       <span class="comment"># 单篇 字数统计</span></span><br><span class="line"><span class="attr">  min2read:</span> <span class="literal">true</span>        <span class="comment"># 单篇 阅读时长</span></span><br><span class="line"><span class="attr">  totalcount:</span> <span class="literal">false</span>     <span class="comment"># 网站 字数统计</span></span><br><span class="line"><span class="attr">  separated_meta:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>发布文章后，字数统计和阅读时长失效，一般是因为没有安装 <code>hexo-wordcount</code> 插件。</p><a id="more"></a><p>查看 Hexo 插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo --debug</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">03:32:23.077 DEBUG Writing database to D:\phpStudy\PHPTutorial\WWW\myproject\blog-hexo/db.json</span><br><span class="line">03:32:23.095 DEBUG Hexo version: 3.9.0</span><br><span class="line">...........</span><br><span class="line">03:32:23.562 DEBUG Plugin loaded: hexo-wordcount</span><br><span class="line">...........</span><br></pre></td></tr></table></figure><p>如果没有安装 <code>hexo-wordcount</code> 插件，在博客目录打开 git bash 然后执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>Node 版本 7.6.0 之前,请安装 2.x 版本 (Node.js v7.6.0 and previous) ，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount@2 --save</span><br></pre></td></tr></table></figure><p>安装完成后，重新发布就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel ORM Carbon 时间格式 created_at 转换</title>
      <link href="2020/03/29/Laravel-ORM-Carbon-%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F-created-at-%E8%BD%AC%E6%8D%A2/"/>
      <url>2020/03/29/Laravel-ORM-Carbon-%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F-created-at-%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<p>转换成 <code>Y-m-d H:i:s</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$obj-&gt;created_at-&gt;format(&apos;Y-m-d H:i:s&apos;);</span><br></pre></td></tr></table></figure><p>转换成时间戳</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$obj-&gt;created_at-&gt;timestamp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel 路由实现API版本控制</title>
      <link href="2020/03/27/Laravel-%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0API%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
      <url>2020/03/27/Laravel-%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0API%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<p>编辑 <code>routes/api.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Route::group([<span class="string">'namespace'</span>=&gt;<span class="string">'Api'</span>], <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;<span class="comment">// Api控制器文件放在Api目录下</span></span><br><span class="line"></span><br><span class="line">    Route::group([<span class="string">'prefix'</span>=&gt;<span class="string">'v1'</span>,<span class="string">'namespace'</span>=&gt;<span class="string">'V1'</span>],<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;<span class="comment">// v1版本</span></span><br><span class="line">        <span class="comment">// Controllers Within The "App\Http\Controllers\Api\V1" Namespace</span></span><br><span class="line"></span><br><span class="line">        Route::get(<span class="string">'demo/foo'</span>, <span class="string">'DemoController@foo'</span>)-&gt;name(<span class="string">'api.v1.demo.foo'</span>);</span><br><span class="line">        <span class="comment">// 访问地址 api/v1/demo/foo</span></span><br><span class="line"></span><br><span class="line">        Route::get(<span class="string">'demo/bar'</span>, <span class="string">'DemoController@bar'</span>)-&gt;name(<span class="string">'api.v1.demo.bar'</span>);</span><br><span class="line">        <span class="comment">// 访问地址 api/v1/demo/bar</span></span><br><span class="line"></span><br><span class="line">        Route::group([<span class="string">'middleware'</span>=&gt;<span class="string">'auth:api'</span>], <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">//需要api认证的路由（用户表必须有api_token字段）</span></span><br><span class="line">            <span class="comment">//在控制器中获取用户信息$user = $request-&gt;user();</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    Route::group([<span class="string">'prefix'</span>=&gt;<span class="string">'v2'</span>, <span class="string">'namespace'</span>=&gt;<span class="string">'V2'</span>], <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;<span class="comment">// v2版本</span></span><br><span class="line">        <span class="comment">// Controllers Within The "App\Http\Controllers\Api\V2" Namespace</span></span><br><span class="line"></span><br><span class="line">        Route::get(<span class="string">'demo/foo'</span>, <span class="string">'DemoController@foo'</span>)-&gt;name(<span class="string">'api.v2.demo.foo'</span>);</span><br><span class="line">        <span class="comment">// 访问地址 api/v2/demo/demo1</span></span><br><span class="line"></span><br><span class="line">        Route::get(<span class="string">'demo/bar'</span>, <span class="string">'DemoController@bar'</span>)-&gt;name(<span class="string">'api.v2.demo.bar'</span>);</span><br><span class="line">        <span class="comment">//访问地址 api/v2/demo/bar</span></span><br><span class="line"></span><br><span class="line">        Route::group([<span class="string">'middleware'</span>=&gt;<span class="string">'auth:api'</span>],<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">//需要api认证的路由（用户表必须有api_token字段）</span></span><br><span class="line">            <span class="comment">//在控制器中获取用户信息$user = $request-&gt;user();</span></span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 数据类型</title>
      <link href="2020/03/11/MySQL-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>2020/03/11/MySQL-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>MySQL中定义数据字段的类型对你数据库的优化是非常重要的。</p><p>MySQL支持多种类型，大致可以分为三类：数值、日期/时间和字符串(字符)类型。</p><h2 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h2><p>MySQL支持所有标准SQL数值数据类型。</p><p>这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值数据类型(FLOAT、REAL和DOUBLE PRECISION)。</p><p>关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。</p><p>BIT数据类型保存位字段值，并且支持MyISAM、MEMORY、InnoDB和BDB表。</p><p>作为SQL标准的扩展，MySQL也支持整数类型TINYINT、MEDIUMINT和BIGINT。下面的表显示了需要的每个整数类型的存储和范围。</p><table><thead><tr><th>类型</th><th>大小</th><th>范围（有符号）</th><th>范围（无符号）</th><th>用途</th></tr></thead><tbody><tr><td>TINYINT</td><td>1 字节</td><td>(-128，127)</td><td>(0，255) 小整</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2 字节</td><td>(-32 768，32 767)</td><td>(0，65 535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3 字节</td><td>(-8 388 608，8 388 607)</td><td>(0，16 777 215)</td><td>大整数值</td></tr><tr><td>INT或INTEGER</td><td>4 字节</td><td>(-2 147 483 648，2 147 483 647)</td><td>(0，4 294 967 295)</td><td>大整数值</td></tr></tbody></table><a id="more"></a><p>||||||</p><h2 id="日期和时间类型"><a href="#日期和时间类型" class="headerlink" title="日期和时间类型"></a>日期和时间类型</h2><p>参考链接：<a href="https://www.runoob.com/mysql/mysql-data-types.html" target="_blank" rel="noopener">https://www.runoob.com/mysql/mysql-data-types.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何将Chrome插件扩展下载到本地</title>
      <link href="2020/03/02/%E5%A6%82%E4%BD%95%E5%B0%86Chrome%E6%8F%92%E4%BB%B6%E6%89%A9%E5%B1%95%E4%B8%8B%E8%BD%BD%E5%88%B0%E6%9C%AC%E5%9C%B0/"/>
      <url>2020/03/02/%E5%A6%82%E4%BD%95%E5%B0%86Chrome%E6%8F%92%E4%BB%B6%E6%89%A9%E5%B1%95%E4%B8%8B%E8%BD%BD%E5%88%B0%E6%9C%AC%E5%9C%B0/</url>
      
        <content type="html"><![CDATA[<p>通过 <a href="http://chrome-extension-downloader.com/" target="_blank" rel="noopener">http://chrome-extension-downloader.com/</a>，输入Chrome扩展的网址或者ID，即可点击下载扩展</p><p><img src="/2020/03/02/如何将Chrome插件扩展下载到本地/20200302132031.png" alt="图1"></p><a id="more"></a><p>这里，我们下载已经安装的 Chrome扩展，打开 Chrome 浏览器，输入 <code>chrome://extensions/</code>，打开当前安装的Chrome扩展，开启开发者模式，会看到每个扩展都有一个 id。</p><p><img src="/2020/03/02/如何将Chrome插件扩展下载到本地/20200302132257.png" alt="图2"></p><p>把要下载的扩展 id，复制到输入框内，点击下载即可。</p><p><img src="/2020/03/02/如何将Chrome插件扩展下载到本地/20200302132439.png" alt="图3"></p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel5.4 添加路由文件</title>
      <link href="2020/02/26/Laravel5-4-%E6%B7%BB%E5%8A%A0%E8%B7%AF%E7%94%B1%E6%96%87%E4%BB%B6/"/>
      <url>2020/02/26/Laravel5-4-%E6%B7%BB%E5%8A%A0%E8%B7%AF%E7%94%B1%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>在 laravel 5.4 中的 <code>routes</code> 文件夹里面默认有两个路由文件 <code>web.php</code> 和 <code>api.php</code>。<br>很明显，一个是网页端的，一个是给接口的。<br>另外的 <code>channels.php</code> 和 <code>console.php</code> 我还没研究。<br>如果项目需要很多路由，显然一个两个文件可能不太好管理，所以我们可以新添加路由文件。</p><h2 id="新建路由文件"><a href="#新建路由文件" class="headerlink" title="新建路由文件"></a>新建路由文件</h2><p>我们在 <code>routes</code> 文件夹下多创建一个 <code>admin.php</code> 文件作为管理后台的路由。</p><a id="more"></a><h2 id="修改-RouteServiceProvider-php"><a href="#修改-RouteServiceProvider-php" class="headerlink" title="修改 RouteServiceProvider.php"></a>修改 RouteServiceProvider.php</h2><ol><li>新增方法</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义管理后台的路由文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">mapAdminRoutes</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Route::prefix(<span class="string">'admin'</span>)</span><br><span class="line">        -&gt;namespace(<span class="keyword">$this</span>-&gt;namespace . <span class="string">'\Admin'</span>)<span class="comment">// 指定命名空间</span></span><br><span class="line">        -&gt;group(base_path(<span class="string">'routes/admin.php'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里可以使用路由的很多方法，例如指定中间建，指定命名空间等，很灵活。</p><ol start="2"><li>修改该文件下的 map () 方法</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define the routes for the application.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">map</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;mapApiRoutes();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;mapWebRoutes();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;mapAdminRoutes(); <span class="comment">//添加上一部的方法</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完成上面两步后，你可以在 <code>admin.php</code> 添加你想要的路由了。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>在 <code>admin.php</code> 文件添加路由</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::any(<span class="string">'test'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'admin route'</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>另外， <code>admin.php</code> 的控制器需要写在 <code>app\Http\Controllers\Admin</code> 目录下（因为指定命名空间）。</p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel Composer The Process class relies on proc_open, which is not available on your PHP installation. 错误</title>
      <link href="2020/02/25/Laravel-Composer-The-Process-class-relies-on-proc-open-which-is-not-available-on-your-PHP-installation-%E9%94%99%E8%AF%AF/"/>
      <url>2020/02/25/Laravel-Composer-The-Process-class-relies-on-proc-open-which-is-not-available-on-your-PHP-installation-%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<p>拉取项目，然后执行 <code>composer install</code> 报如下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Symfony\Component\Process\Exception\RuntimeException]                                   </span><br><span class="line">  The Process class relies on proc_open, <span class="built_in">which</span> is not available on your PHP installation.</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="/2020/02/25/Laravel-Composer-The-Process-class-relies-on-proc-open-which-is-not-available-on-your-PHP-installation-错误/20200225182701.png" alt="报错图片"></p><p>解决方法：</p><p>找到php配置文件<code>php.ini</code>打开，搜索<code>disable_functions</code>指令，找到类似如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_get_status,popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server</span><br></pre></td></tr></table></figure><p>找到<code>proc_open</code>并删除即可，然后重启php。</p><p>再次 <code>composer install</code> 又报了如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ErrorException]                                          </span><br><span class="line">  proc_get_status() has been disabled for security reasons</span><br></pre></td></tr></table></figure><p><img src="/2020/02/25/Laravel-Composer-The-Process-class-relies-on-proc-open-which-is-not-available-on-your-PHP-installation-错误/20200225183405.png" alt="报错图片"></p><p>同样的，找到php配置文件<code>php.ini</code>打开，搜索<code>disable_functions</code>指令，找到类似如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server</span><br></pre></td></tr></table></figure><p>找到<code>proc_get_status</code>并删除即可，然后重启php。</p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7 安装 VMware Tools</title>
      <link href="2020/02/24/CentOS7-%E5%AE%89%E8%A3%85-VMware-Tools/"/>
      <url>2020/02/24/CentOS7-%E5%AE%89%E8%A3%85-VMware-Tools/</url>
      
        <content type="html"><![CDATA[<h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum -y install perl gcc gcc-c++ make cmake kernel kernel-headers kernel-devel net-tools</span></span><br></pre></td></tr></table></figure><h2 id="加载vmware-tools-到CentOS7光驱CD-ROM"><a href="#加载vmware-tools-到CentOS7光驱CD-ROM" class="headerlink" title="加载vmware tools 到CentOS7光驱CD-ROM"></a>加载vmware tools 到CentOS7光驱CD-ROM</h2><p>点击菜单 虚拟机 &gt;&gt; 安装/升级vmwareTools</p><a id="more"></a><h2 id="将CD-ROM挂载到指定目录"><a href="#将CD-ROM挂载到指定目录" class="headerlink" title="将CD-ROM挂载到指定目录"></a>将CD-ROM挂载到指定目录</h2><blockquote><p>通常情况下都是将设备目录 <code>/dev/crrom</code> 挂载到 <code>/mnt/cdrom</code> 目录,<br>如果 <code>/mnt</code> 目录下不存在 <code>cdrom</code> 目录则创建</p></blockquote><p>创建 <code>/mnt/cdrom</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkdir -p /mnt/cdrom</span></span><br></pre></td></tr></table></figure><p>挂载目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mount -t auto /dev/cdrom /mnt/cdrom</span></span><br><span class="line">mount: /dev/sr0 is write-protected, mounting <span class="built_in">read</span>-only</span><br></pre></td></tr></table></figure><blockquote><p>提示：如果挂载失败，重启试试看。</p></blockquote><h2 id="拷贝安装包到tmp目录"><a href="#拷贝安装包到tmp目录" class="headerlink" title="拷贝安装包到tmp目录"></a>拷贝安装包到tmp目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cp /mnt/cdrom/VMwareTools-10.1.6-5214329.tar.gz /tmp/</span></span><br></pre></td></tr></table></figure><h2 id="解除挂载"><a href="#解除挂载" class="headerlink" title="解除挂载"></a>解除挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># umount /dev/cdrom</span></span><br></pre></td></tr></table></figure><h2 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] <span class="built_in">cd</span> /tmp</span><br><span class="line">[root@localhost tmp]<span class="comment"># tar -zxvf VMwareTools-10.1.6-5214329.tar.gz</span></span><br></pre></td></tr></table></figure><h2 id="安装前先解决个问题"><a href="#安装前先解决个问题" class="headerlink" title="安装前先解决个问题"></a>安装前先解决个问题</h2><p>正常情况下，现在就要进入 <code>vmware-tools-distrib</code> 目录，执行 <code>./vmware-install.pl</code>安装了。我安装的时候，一直会提示 <code>但是你会遇到一个错误, 也不算错误就是让你指定 进入路径的内核头文件的3.10.0-862.el7.x86_64内核？ 的路径</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Searching <span class="keyword">for</span> a valid kernel header path...</span><br><span class="line">The path <span class="string">""</span> is not a valid path to the 3.10.0-862.el7.x86_64 kernel headers.</span><br><span class="line">Would you like to change it? [yes] yes</span><br><span class="line"></span><br><span class="line">Enter the path to the kernel header files <span class="keyword">for</span> the 3.10.0-862.el7.x86_64 </span><br><span class="line">kernel?</span><br></pre></td></tr></table></figure><p>这就奇怪了, 上面不是已经安装依赖 <code>kernel-headers</code> 了吗? 怎么还就非得让我人工手动再次指定呢?</p><p>就不信这个邪了, 来再查找一下有没有安装成功 <code>kernel-headers</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost tmp]<span class="comment"># rpm -aq | grep kernel-headers</span></span><br><span class="line">kernel-headers-3.10.0-1062.12.1.el7.x86_64</span><br></pre></td></tr></table></figure><p>从以上结果上来看当前系统已经安装了 <code>kernel-headers</code> 并且比上面的版本还要高</p><p>可以在 <code>/usr/src/kernels/</code> 找到 <code>kernel-headers</code> 安装的对应版本目录</p><p>进入到这个 <code>kernel-headers</code> 安装对应版本目录, 并对 <code>version.h</code> 创建软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; 进入到这个 `kernel-headers` 安装对应版本目录</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># cd /usr/src/kernels/3.10.0-1062.12.1.el7.x86_64/</span></span><br><span class="line"></span><br><span class="line">&gt; 创建软链接</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># ln -s /usr/src/kernels/3.10.0-1062.12.1.el7.x86_64/include/generated/uapi/linux/version.h /usr/src/kernels/3.10.0-1062.12.1.el7.x86_64/include/linux/version.h</span></span><br></pre></td></tr></table></figure><p>重启系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h2 id="安装-VMware-Tools"><a href="#安装-VMware-Tools" class="headerlink" title="安装 VMware Tools"></a>安装 VMware Tools</h2><p>开机后再次进入到 <code>vmware-tools-distrib</code> 源码包目录进行再次重新安装 <code>VMware Tools</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd /tmp/vmware-tools-distrib/</span></span><br><span class="line">[root@localhost vmware-tools-distrib]<span class="comment"># ./vmware-install.pl</span></span><br></pre></td></tr></table></figure><p>再运行到 <code>Searching for a valid kernel header path...</code> 结果就不是上面那个样子了, 如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Searching <span class="keyword">for</span> a valid kernel header path...</span><br><span class="line">Detected the kernel headers at </span><br><span class="line"><span class="string">"/lib/modules/3.10.0-1062.12.1.el7.x86_64/build/include"</span>.</span><br><span class="line">The path <span class="string">"/lib/modules/3.10.0-1062.12.1.el7.x86_64/build/include"</span> appears to be</span><br><span class="line">a valid path to the 3.10.0-1062.12.1.el7.x86_64 kernel headers.</span><br></pre></td></tr></table></figure><p>直接回车就可以了, 接下来的安装过程照旧，最终提示安装成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Creating a new initrd boot image for the kernel.</span><br><span class="line">The configuration of VMware Tools 10.1.6 build-5214329 for Linux for this </span><br><span class="line">running kernel completed successfully.</span><br><span class="line"></span><br><span class="line">Enjoy,</span><br><span class="line"></span><br><span class="line">--the VMware team</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMWare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS6.5 安装 VMware Tools</title>
      <link href="2020/02/24/CentOS6-5-%E5%AE%89%E8%A3%85-VMware-Tools/"/>
      <url>2020/02/24/CentOS6-5-%E5%AE%89%E8%A3%85-VMware-Tools/</url>
      
        <content type="html"><![CDATA[<p>CentOS6.5 安装VMware Tools 出现：</p><p>请确保您已登录客户机操作系统。在客户机中装载CD驱动器，启动终端，使用tar解压缩安装程序，然后执行vmware-insall.pl安装VMware Tools。</p><p>解决：</p><a id="more"></a><ol><li>首先选择：虚拟机 &gt;&gt; 安装/升级vmwareTools。</li></ol><p>提示：在客户机中装载虚拟CD驱动器,启动终端，使用tar解压缩安装程序，然后执行VMware-install.pl 安装 VMware Tools。</p><ol start="2"><li>进入CentOS系统</li></ol><p>装载CD：<code>mount /dev/cdrom /media</code></p><p>提示：<code>mount: block device /dev/sr0 is write-protected, mounting read-only</code></p><ol start="3"><li>拷贝、解压</li></ol><p>VMwareTools包文件名可能不一致</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp /media/VMwareTools-9.9.2-2496486.tar.gz /tmp/</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /tmp/</span><br><span class="line"></span><br><span class="line">tar -zxf VMwareTools-9.9.2-2496486.tar.gz</span><br></pre></td></tr></table></figure><ol start="4"><li>安装</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> vmware-tools-distrib/</span><br><span class="line"></span><br><span class="line">./vmware-install.pl</span><br></pre></td></tr></table></figure><p>开始安装，不考虑配置的话，接着一路回车即可。</p><p>如果出现错误提示：<code>-bash: ./vmware-install.pl: /usr/bin/perl: bad interpreter: No such file or directory</code> 是找不到perl 语言编译器，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install perl</span><br></pre></td></tr></table></figure><p>若无外网则无法安装，安装前可以通过<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure></p><p>的形式查看是否能通，若显示以下则说明连接外网没问题。</p><p>若无法连接，可以将VM设置为NAT（默认是这样的）。运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dhclient</span><br></pre></td></tr></table></figure></p><p>或是<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifdown eth0 </span><br><span class="line">ifup eth0</span><br></pre></td></tr></table></figure></p><p>，这两个命令的意思都是重新获取IP地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -v</span><br></pre></td></tr></table></figure><p>提示：<code>This is perl, v5.10.1 (*) built for x86_64-Linux-thread-multi …</code></p><ol start="5"><li>卸载CD-ROM</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /media</span><br></pre></td></tr></table></figure><p>完成安装。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMWare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Window下git生成 SSH Key</title>
      <link href="2020/02/24/Window%E4%B8%8Bgit%E7%94%9F%E6%88%90-SSH-Key/"/>
      <url>2020/02/24/Window%E4%B8%8Bgit%E7%94%9F%E6%88%90-SSH-Key/</url>
      
        <content type="html"><![CDATA[<p>我们使用 GitHub、GitLab 或者 Bitbucket 等仓库时，可能需要 ssh 认证，所以需要生成它的 ssh key。</p><ol><li>首先你得安装git工具</li></ol><p>下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></p><ol start="2"><li>打开 git 命令行</li></ol><a id="more"></a><p><img src="/2020/02/24/Window下git生成-SSH-Key/20200224142816.png" alt="git 命令行"></p><ol start="3"><li>设置 git 的 user name和email，如果已设置，跳过</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"你的用户"</span></span><br><span class="line">$ git config --global user.email <span class="string">"邮箱帐号@gmail.com"</span></span><br></pre></td></tr></table></figure><p>查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name</span><br><span class="line">$ git config --global user.email</span><br></pre></td></tr></table></figure><ol start="4"><li>输入指令，进入<code>.ssh</code>文件夹</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh/</span><br></pre></td></tr></table></figure><p><img src="/2020/02/24/Window下git生成-SSH-Key/20200224143424.png" alt="ssh 文件夹"></p><p>如果提示 <code>“ No such file or directory”</code>，你可以手动的创建一个 <code>.ssh</code>文件夹即可</p><p>命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.ssh</span><br></pre></td></tr></table></figure><ol start="5"><li>生成密钥</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C “邮箱帐号@gmail.com”</span><br></pre></td></tr></table></figure><p> 连续按三次回车，这里设置的密码就为空了，并且创建了key。</p><p> <img src="/2020/02/24/Window下git生成-SSH-Key/20200224143939.png" alt="生成密钥"></p><p> 最后得到了两个文件：<code>id_rsa</code>和<code>id_rsa.pub</code></p><ol start="6"><li>生成密钥目录</li></ol><p><code>C:\Users\XXX\.ssh</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id_rsa</span><br><span class="line">id_rsa.pub</span><br><span class="line">known_hosts</span><br></pre></td></tr></table></figure><p>把 <code>id_rsa.pub</code> 内容复制到 GitHub、GitLab 或者 Bitbucket 的ssh配置位置</p><ol start="7"><li>测试</li></ol><p>git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>bitbucket</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@bitbucket.org</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel5 基础性能优化小技巧</title>
      <link href="2020/02/20/Laravel5-%E5%9F%BA%E7%A1%80%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>2020/02/20/Laravel5-%E5%9F%BA%E7%A1%80%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<p>转载地址：<a href="http://www.jiatengfei.com/article/19" target="_blank" rel="noopener">http://www.jiatengfei.com/article/19</a></p><p>性能一直是 Laravel 框架为人诟病的一个点，所以调优 Laravel 程序算是一个必学的技能。</p><h2 id="一、使用Laravel自带的优化命令优化"><a href="#一、使用Laravel自带的优化命令优化" class="headerlink" title="一、使用Laravel自带的优化命令优化"></a>一、使用Laravel自带的优化命令优化</h2><ol><li>关闭应用 <code>debug app.debug=false</code></li><li>路由缓存 <code>php artisan router:cache</code></li><li>配置信息缓存 <code>php artisan config:cache</code></li><li>类映射加载优化 <code>php artisan optimize</code></li><li>自动加载优化 <code>composer dumpautoload</code></li><li>使用 Laravel 缓存</li><li>根据需要只加载必要的中间件</li><li>使用即时编译器（JIT），如：HHVM、OPcache</li><li>使用 PHP 7.x</li></ol><h3 id="关闭应用debug"><a href="#关闭应用debug" class="headerlink" title="关闭应用debug"></a>关闭应用debug</h3><p>打开应用根目录下的 <code>.env</code> 文件，把 <code>APP_DEBUG</code> 设置为 <code>false</code>。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">APP_DEBUG=false</span><br></pre></td></tr></table></figure><h3 id="路由缓存"><a href="#路由缓存" class="headerlink" title="路由缓存"></a>路由缓存</h3><p>路由缓存可以有效的提高路由器的注册效率，在大型应用程序中效果越加明显。</p><p>生成路由缓存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan router:cache</span><br></pre></td></tr></table></figure><p>运行以上命令会生成 <code>bootstrap/cache/routes.php</code> 文件，需要注意的是，路由缓存<strong>不支持路由匿名函数</strong>编写逻辑，否则会报错。</p><p>清除路由缓存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan route:clear</span><br></pre></td></tr></table></figure><p>此命令就是把 <code>bootstrap/cache/routes.php</code> 文件删除。</p><h3 id="配置信息缓存"><a href="#配置信息缓存" class="headerlink" title="配置信息缓存"></a>配置信息缓存</h3><p>使用 Artisan 自带的命令，把 config 文件夹里所有配置信息合并到一个文件里，减少运行时文件的载入数量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan config:cache</span><br></pre></td></tr></table></figure><p>上面命令会生成 <code>bootstrap/cache/config.php</code> 文件，可以使用以下命令清除配置信息缓存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan config:clear</span><br></pre></td></tr></table></figure><p>注意：配置信息缓存不会随着配置信息更新而自动重载，所以，开发时候建议关闭配置信息缓存，一般在生产环境中使用。</p><h3 id="类映射加载优化"><a href="#类映射加载优化" class="headerlink" title="类映射加载优化"></a>类映射加载优化</h3><p>optimize 命令把常用加载的类合并到一个文件中，通过减少文件的加载来提高运行效率。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan optimize</span><br></pre></td></tr></table></figure><p>运行上面这个命令会生成 <code>bootstrap/cache/packages.php</code> 和 <code>bootstrap/cache/services.php</code> 两个文件。</p><p>要清除类映射加载优化，请运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan clear-compiled</span><br></pre></td></tr></table></figure><p>提示：由于 PHP 自身的性能优化，optimize 命令已经不能给应用提供显著的性能提升，因此在新版本中optimize命令已经被彻底移除了。</p><h3 id="自动加载优化"><a href="#自动加载优化" class="headerlink" title="自动加载优化"></a>自动加载优化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer dumpautoload -o</span><br></pre></td></tr></table></figure><p>Laravel 应用程序是使用 composer 来构建的。这个命令会把 PSR-0 和 PSR-4 转换为一个类映射表来提高类的加载速度。</p><p>注意：<code>php artisan optimize</code>命令里已经做了这个操作。</p><h2 id="二、使用debugbar进行问题定位"><a href="#二、使用debugbar进行问题定位" class="headerlink" title="二、使用debugbar进行问题定位"></a>二、使用debugbar进行问题定位</h2><p><a href="2020/02/20-Laravel-debugbar-开发调试利器">传送门</a></p><h2 id="三、使用加载进行优化"><a href="#三、使用加载进行优化" class="headerlink" title="三、使用加载进行优化"></a>三、使用加载进行优化</h2><p>使用(<code>with</code>/<code>load</code>)进行预加载，可以减少模块条用模型。</p><p><img src="/2020/02/20/Laravel5-基础性能优化小技巧/20200221123608.png" alt="图片1"></p><p><img src="/2020/02/20/Laravel5-基础性能优化小技巧/20200221123627.png" alt="图片2"></p><h2 id="四、使用DB-listen进行慢sql的查询"><a href="#四、使用DB-listen进行慢sql的查询" class="headerlink" title="四、使用DB_listen进行慢sql的查询"></a>四、使用DB_listen进行慢sql的查询</h2><p>通过DB门面的listen方法监听查询事件，比如我们在记录日志和调试的时候这会给我们确定问题提供便利，可以在服务提供者的boot方法中注册该监听器，例如我们在 <code>AppServiceProvider</code> 的 <code>boot</code>方法中定义监听器如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\DB::listen( <span class="function"><span class="keyword">function</span><span class="params">($query)</span> </span>&#123;</span><br><span class="line">    $sql = $query-&gt;sql;</span><br><span class="line">    $bindings = $query-&gt;bindings;</span><br><span class="line">    $time = $query-&gt;time;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( $time &gt; <span class="number">110</span> )&#123;</span><br><span class="line">        \Log::debug(var_export(compact(<span class="string">'sql'</span>,<span class="string">'bindings'</span>,<span class="string">'time'</span>),<span class="keyword">true</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="/2020/02/20/Laravel5-基础性能优化小技巧/20200221123536.png" alt="图片3"></p><p>这样我们可以在 <code>storage/logs/laravel.log</code> 查看记录的慢查询日志了，然后针对慢查询做相应的优化即可。</p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-debugbar 开发调试利器</title>
      <link href="2020/02/20/Laravel-debugbar-%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E5%88%A9%E5%99%A8/"/>
      <url>2020/02/20/Laravel-debugbar-%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E5%88%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>转载地址：<a href="https://learnku.com/laravel/t/2531/extension-recommended-laravel-debugbar-development-debugging-tools" target="_blank" rel="noopener">https://learnku.com/laravel/t/2531/extension-recommended-laravel-debugbar-development-debugging-tools</a></p><p><a href="https://github.com/barryvdh/laravel-debugbar" target="_blank" rel="noopener">laravel-debugbar</a> 用于直观的显示调试及错误信息，提高开发效率。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>1). 使用 Composer 安装该扩展包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require barryvdh/laravel-debugbar</span><br></pre></td></tr></table></figure><a id="more"></a><p>2). 安装完成后，修改 <code>config/app.php</code> 在 <code>providers</code> 数组内追加 Debugbar 的 Provider</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'providers'</span> =&gt; [</span><br><span class="line">    ...</span><br><span class="line">    Barryvdh\Debugbar\ServiceProvider::class,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>同时在 <code>aliases</code> 数组内追加如下内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'aliases'</span> =&gt; [</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">'Debugbar'</span> =&gt; Barryvdh\Debugbar\Facade::class,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>3). 接下来运行以下命令生成此扩展包的配置文件 <code>config/debugbar.php</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan vendor:publish --provider=<span class="string">"Barryvdh\Debugbar\ServiceProvider"</span></span><br></pre></td></tr></table></figure><p>打开 <code>config/debugbar.php</code>，将 <code>enabled</code> 的值设置为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'enabled'</span> =&gt; env(<span class="string">'APP_DEBUG'</span>, <span class="keyword">false</span>),</span><br></pre></td></tr></table></figure><p>修改完以后，Debugbar 分析器的启动状态将由 <code>.env</code> 文件中 <code>APP_DEBUG</code> 值决定。</p><p>页面刷新后，查看一下效果吧，到此，此拓展包即安装成功。</p><h2 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h2><p>上文只是教大家如何最快速的配置 debugbar (实际上对于一般的项目来说，基本配置已经够用了)，更多的用法和代码实现细节请移步 <a href="http://phpdebugbar.com/docs/readme.html" target="_blank" rel="noopener">官方文档</a> 参考。</p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 Base table or view already exists: 1050 Table &#39;users&#39; already exists</title>
      <link href="2020/02/14/%E8%A7%A3%E5%86%B3-Base-table-or-view-already-exists-1050-Table-users-already-exists/"/>
      <url>2020/02/14/%E8%A7%A3%E5%86%B3-Base-table-or-view-already-exists-1050-Table-users-already-exists/</url>
      
        <content type="html"><![CDATA[<p>解决 <code>Base table or view already exists: 1050 Table &#39;users&#39; already exists&#39;</code> 错误。</p><p>这个报错说明表 <code>users</code>已经存在了，如果 表 <code>migrations</code> 中没有<code>users</code>的记录，则删除表 <code>users</code> 再次执行命令 <code>php artisan migrate</code></p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> migrate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 Syntax error or access violation: 1071 Specified key was too long; max key length is 1000 bytes</title>
      <link href="2020/02/14/%E8%A7%A3%E5%86%B3-Syntax-error-or-access-violation-1071-Specified-key-was-too-long-max-key-length-is-1000-bytes/"/>
      <url>2020/02/14/%E8%A7%A3%E5%86%B3-Syntax-error-or-access-violation-1071-Specified-key-was-too-long-max-key-length-is-1000-bytes/</url>
      
        <content type="html"><![CDATA[<p>解决 <code>Syntax error or access violation: 1071 Specified key was too long; max key length is 1000 bytes</code> 报错。</p><p>这个错误信息是说，需要1071个字节，但是当前数据库最大长度是1000字节。</p><p>这里我们需要修改 <code>app\Providers\AppServiceProvider.php</code> 文件</p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Providers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">ServiceProvider</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Bootstrap any application services.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// mb4string 1000/4=250</span></span><br><span class="line">        Schema::defaultStringLength(<span class="number">250</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Register any application services.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>boot 方法是所有应用执行前运行的方法;</li><li><code>Schema::defaultStringLength(250);</code> 设置默认字符串长度为250</li><li>在Laravel5.4之后默认的字符串使用类型是mb4string，一个长度为4个字节，这里用<code>1000/4=250</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> migrate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Composer镜像地址</title>
      <link href="2020/02/11/Composer%E9%95%9C%E5%83%8F%E5%9C%B0%E5%9D%80/"/>
      <url>2020/02/11/Composer%E9%95%9C%E5%83%8F%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<p>由于大家都懂的原因，Composer官方的镜像地址，可能会无法访问，所以我们要把镜像地址更换为国内的。之前一直是 Laravel China 在维护国内的镜像，随着 <a href="https://developer.aliyun.com/composer" target="_blank" rel="noopener">阿里开源镜像</a> 发布以后，Laravel China 也宣布停用，<a href="https://learnku.com/articles/30758" target="_blank" rel="noopener">Laravel China 镜像完成历史使命，将于两个月后停用</a>。</p><p>全局配置镜像地址：</p><a id="more"></a><p><strong>全局配置（推荐）</strong></p><p>所有项目都会使用该镜像地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure><p>取消配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g --<span class="built_in">unset</span> repos.packagist</span><br></pre></td></tr></table></figure><p><strong>项目配置</strong></p><p>仅修改当前工程配置，仅当前工程可使用该镜像地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config repo.packagist composer https://mirrors.aliyun.com/composer/</span><br></pre></td></tr></table></figure><p>取消配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config --<span class="built_in">unset</span> repos.packagist</span><br></pre></td></tr></table></figure><p><strong>镜像管理器:</strong></p><p><a href="https://github.com/slince/composer-registry-manager" target="_blank" rel="noopener">https://github.com/slince/composer-registry-manager</a></p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 这一篇就够了</title>
      <link href="2020/02/04/Nginx-%E8%BF%99%E4%B8%80%E7%AF%87%E5%B0%B1%E5%A4%9F%E4%BA%86/"/>
      <url>2020/02/04/Nginx-%E8%BF%99%E4%B8%80%E7%AF%87%E5%B0%B1%E5%A4%9F%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>转载地址: <a href="https://juejin.im/post/5d81906c518825300a3ec7ca" target="_blank" rel="noopener">https://juejin.im/post/5d81906c518825300a3ec7ca</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>安装 nginx 之前，确保系统已经安装 gcc、openssl-devel、pcre-devel 和 zlib-devel 软件库</p><ul><li>gcc 可以通过光盘直接选择安装</li><li>openssl-devel、zlib-devel 可以通过光盘直接选择安装，https 时使用</li><li>pcre-devel 安装 pcre 库是为了使 nginx 支持 HTTP Rewrite 模块</li></ul><a id="more"></a><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">Nginx 下载</a></p><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#wget http://nginx.org/download/nginx-1.8.0.tar.gz</span></span><br><span class="line"><span class="comment">#tar xzvf nginx-1.8.0.tar.gz</span></span><br><span class="line"><span class="comment">#cd nginx-1.8.0</span></span><br><span class="line"><span class="comment">#./configure --prefix=/opt/X_nginx/nginx --with-http_ssl_module</span></span><br><span class="line"><span class="comment">#make &amp;&amp; sudo make install</span></span><br></pre></td></tr></table></figure><ul><li>–prefix=/opt/X_nginx/nginx 安装目录</li><li>–with-http_ssl_module 添加 https 支持</li></ul><p><strong>编译时将 ssl 模块静态编译</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./configure  --prefix=/opt/X_nginx/nginx \</span><br><span class="line">             --with-openssl=../openssl-1.0.2l \</span><br><span class="line">             --with-zlib=../zlib-1.2.11 \</span><br><span class="line">             --with-pcre=../pcre-8.41 \</span><br><span class="line">             --with-http_ssl_module</span><br></pre></td></tr></table></figure><h2 id="nginx-服务架构"><a href="#nginx-服务架构" class="headerlink" title="nginx 服务架构"></a>nginx 服务架构</h2><h3 id="模块化结构"><a href="#模块化结构" class="headerlink" title="模块化结构"></a>模块化结构</h3><blockquote><p>nginx 服务器的开发<strong>完全</strong>遵循模块化设计思想</p></blockquote><h4 id="模块化开发"><a href="#模块化开发" class="headerlink" title="模块化开发"></a>模块化开发</h4><ol><li>单一职责原则，一个模块只负责一个功能</li><li>将程序分解，自顶向下，逐步求精</li><li>高内聚，低耦合</li></ol><h4 id="nginx-的模块化结构"><a href="#nginx-的模块化结构" class="headerlink" title="nginx 的模块化结构"></a>nginx 的模块化结构</h4><ul><li>核心模块：nginx 最基本最核心的服务，如进程管理、权限控制、日志记录；</li><li>标准 HTTP 模块：nginx 服务器的标准 HTTP 功能；</li><li>可选 HTTP 模块：处理特殊的 HTTP 请求</li><li>邮件服务模块：邮件服务</li><li>第三方模块：作为扩展，完成特殊功能</li></ul><h3 id="nginx-的模块清单"><a href="#nginx-的模块清单" class="headerlink" title="nginx 的模块清单"></a>nginx 的模块清单</h3><ul><li>核心模块<ul><li>ngx_core</li><li>ngx_errlog</li><li>ngx_conf</li><li>ngx_events</li><li>ngx_event_core</li><li>ngx_epll</li><li>ngx_regex</li></ul></li><li>标准 HTTP 模块<ul><li>ngx_http</li><li>ngx_http_core             #配置端口，URI 分析，服务器相应错误处理，别名控制 (alias) 等</li><li>ngx_http_log              #自定义 access 日志</li><li>ngx_http_upstream         #定义一组服务器，可以接受来自 proxy, Fastcgi,Memcache 的重定向；主要用作负载均衡</li><li>ngx_http_static</li><li>ngx_http_autoindex        #自动生成目录列表</li><li>ngx_http_index            #处理以/结尾的请求，如果没有找到 index 页，则看是否开启了random_index；如开启，则用之，否则用 autoindex</li><li>ngx_http_auth_basic       #基于 http 的身份认证 (auth_basic)</li><li>ngx_http_access           #基于 IP 地址的访问控制 (deny,allow)</li><li>ngx_http_limit_conn       #限制来自客户端的连接的响应和处理速率</li><li>ngx_http_limit_req        #限制来自客户端的请求的响应和处理速率</li><li>ngx_http_geo</li><li>ngx_http_map              #创建任意的键值对变量</li><li>ngx_http_split_clients</li><li>ngx_http_referer          #过滤 HTTP 头中 Referer 为空的对象</li><li>ngx_http_rewrite          #通过正则表达式重定向请求</li><li>ngx_http_proxy</li><li>ngx_http_fastcgi          #支持 fastcgi</li><li>ngx_http_uwsgi</li><li>ngx_http_scgi</li><li>ngx_http_memcached</li><li>ngx_http_empty_gif        #从内存创建一个 1×1 的透明 gif 图片，可以快速调用</li><li>ngx_http_browser          #解析 http 请求头部的 User-Agent 值</li><li>ngx_http_charset          #指定网页编码</li><li>ngx_http_upstream_ip_hash</li><li>ngx_http_upstream_least_conn</li><li>ngx_http_upstream_keepalive</li><li>ngx_http_write_filter</li><li>ngx_http_header_filter</li><li>ngx_http_chunked_filter</li><li>ngx_http_range_header</li><li>ngx_http_gzip_filter</li><li>ngx_http_postpone_filter</li><li>ngx_http_ssi_filter</li><li>ngx_http_charset_filter</li><li>ngx_http_userid_filter</li><li>ngx_http_headers_filter   #设置 http 响应头</li><li>ngx_http_copy_filter</li><li>ngx_http_range_body_filter</li><li>ngx_http_not_modified_filter</li></ul></li><li>可选 HTTP 模块<ul><li>ngx_http_addition         #在响应请求的页面开始或者结尾添加文本信息</li><li>ngx_http_degradation      #在低内存的情况下允许服务器返回 444 或者 204 错误</li><li>ngx_http_perl</li><li>ngx_http_flv              #支持将 Flash 多媒体信息按照流文件传输，可以根据客户端指定的开始位置返回 Flash</li><li>ngx_http_geoip            #支持解析基于 GeoIP 数据库的客户端请求</li><li>ngx_google_perftools</li><li>ngx_http_gzip             #gzip 压缩请求的响应</li><li>ngx_http_gzip_static      #搜索并使用预压缩的以.gz 为后缀的文件代替一般文件响应客户端请求</li><li>ngx_http_image_filter     #支持改变 png，jpeg，gif 图片的尺寸和旋转方向</li><li>ngx_http_mp4              #支持.mp4,.m4v,.m4a 等多媒体信息按照流文件传输，常与 ngx_http_flv 一起使用</li><li>ngx_http_random_index     #当收到 / 结尾的请求时，在指定目录下随机选择一个文件作为 index</li><li>ngx_http_secure_link      #支持对请求链接的有效性检查</li><li>ngx_http_ssl              #支持 https</li><li>ngx_http_stub_status</li><li>ngx_http_sub_module       #使用指定的字符串替换响应中的信息</li><li>ngx_http_dav              #支持 HTTP 和 WebDAV 协议中的 PUT/DELETE/MKCOL/COPY/MOVE 方法</li><li>ngx_http_xslt             #将 XML 响应信息使用 XSLT 进行转换</li></ul></li><li>邮件服务模块<ul><li>ngx_mail_core</li><li>ngx_mail_pop3</li><li>ngx_mail_imap</li><li>ngx_mail_smtp</li><li>ngx_mail_auth_http</li><li>ngx_mail_proxy</li><li>ngx_mail_ssl</li></ul></li><li>第三方模块<ul><li>echo-nginx-module         #支持在 nginx 配置文件中使用 echo/sleep/time/exec 等类 Shell 命令</li><li>memc-nginx-module</li><li>rds-json-nginx-module     #使 nginx 支持 json 数据的处理</li><li>lua-nginx-module</li></ul></li></ul><h3 id="nginx-的-web-请求处理机制"><a href="#nginx-的-web-请求处理机制" class="headerlink" title="nginx 的 web 请求处理机制"></a>nginx 的 web 请求处理机制</h3><p>作为服务器软件，必须具备并行处理多个客户端的请求的能力， 工作方式主要以下 3 种：</p><ul><li>多进程 (Apache)<ul><li>优点：设计和实现简单；子进程独立</li><li>缺点：生成一个子进程要内存复制，在资源和时间上造成额外开销</li></ul></li><li>多线程 (IIS)<ul><li>优点：开销小</li><li>缺点：开发者自己要对内存进行管理；线程之间会相互影响</li></ul></li><li>异步方式 (nginx)</li></ul><p>经常说道异步非阻塞这个概念， 包含两层含义：<br>通信模式：+ 同步：发送方发送完请求后，等待并接受对方的回应后，再发送下个请求 + 异步：发送方发送完请求后，不必等待，直接发送下个请求</p><h2 id="nginx-配置文件实例"><a href="#nginx-配置文件实例" class="headerlink" title="nginx 配置文件实例"></a>nginx 配置文件实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义 nginx 运行的用户和用户组</span></span><br><span class="line">user www www;</span><br><span class="line"></span><br><span class="line"><span class="comment">#nginx 进程数，建议设置为等于 CPU 总核心数。</span></span><br><span class="line">worker_processes 8;</span><br><span class="line"></span><br><span class="line"><span class="comment">#nginx 默认没有开启利用多核 CPU, 通过增加 worker_cpu_affinity 配置参数来充分利用多核 CPU 以下是 8 核的配置参数</span></span><br><span class="line">worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;</span><br><span class="line"></span><br><span class="line"><span class="comment">#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]</span></span><br><span class="line">error_log /var/<span class="built_in">log</span>/nginx/error.log info;</span><br><span class="line"></span><br><span class="line"><span class="comment">#进程文件</span></span><br><span class="line">pid /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment">#一个 nginx 进程打开的最多文件描述符数目，理论值应该是最多打开文件数（系统的值 ulimit -n）与 nginx 进程数相除，但是 nginx 分配请求并不均匀，所以建议与 ulimit -n 的值保持一致。</span></span><br><span class="line">worker_rlimit_nofile 65535;</span><br><span class="line"></span><br><span class="line"><span class="comment">#工作模式与连接数上限</span></span><br><span class="line">events</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">#参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll 模型是 Linux 2.6 以上版本内核中的高性能网络 I/O 模型，如果跑在 FreeBSD 上面，就用 kqueue 模型。</span></span><br><span class="line">    <span class="comment">#epoll 是多路复用 IO(I/O Multiplexing) 中的一种方式，但是仅用于 linux2.6 以上内核，可以大大提高 nginx 的性能</span></span><br><span class="line">    use epoll;</span><br><span class="line"></span><br><span class="line">    <span class="comment">############################################################################</span></span><br><span class="line">    <span class="comment">#单个后台 worker process 进程的最大并发链接数</span></span><br><span class="line">    <span class="comment">#事件模块指令，定义 nginx 每个进程最大连接数，默认 1024。最大客户连接数由 worker_processes 和 worker_connections 决定</span></span><br><span class="line">    <span class="comment">#即 max_client=worker_processes*worker_connections, 在作为反向代理时：max_client=worker_processes*worker_connections / 4</span></span><br><span class="line">    worker_connections 65535;</span><br><span class="line">    <span class="comment">############################################################################</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#设定 http 服务器</span></span><br><span class="line">http &#123;</span><br><span class="line">    include mime.types; <span class="comment">#文件扩展名与文件类型映射表</span></span><br><span class="line">    default_type application/octet-stream; <span class="comment">#默认文件类型</span></span><br><span class="line">    <span class="comment">#charset utf-8; #默认编码</span></span><br><span class="line"></span><br><span class="line">    server_names_hash_bucket_size 128; <span class="comment">#服务器名字的 hash 表大小</span></span><br><span class="line">    client_header_buffer_size 32k; <span class="comment">#上传文件大小限制</span></span><br><span class="line">    large_client_header_buffers 4 64k; <span class="comment">#设定请求缓</span></span><br><span class="line">    client_max_body_size 8m; <span class="comment">#设定请求缓</span></span><br><span class="line">    sendfile on; <span class="comment">#开启高效文件传输模式，sendfile 指令指定 nginx 是否调用 sendfile 函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘 IO 重负载应用，可设置为 off，以平衡磁盘与网络 I/O 处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成 off。</span></span><br><span class="line">    autoindex on; <span class="comment">#开启目录列表访问，合适下载服务器，默认关闭。</span></span><br><span class="line">    tcp_nopush on; <span class="comment">#防止网络阻塞</span></span><br><span class="line">    tcp_nodelay on; <span class="comment">#防止网络阻塞</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">##连接客户端超时时间各种参数设置##</span></span><br><span class="line">    keepalive_timeout  120;          <span class="comment">#单位是秒，客户端连接时时间，超时之后服务器端自动关闭该连接 如果 nginx 守护进程在这个等待的时间里，一直没有收到浏览发过来 http 请求，则关闭这个 http 连接</span></span><br><span class="line">    client_header_timeout 10;        <span class="comment">#客户端请求头的超时时间</span></span><br><span class="line">    client_body_timeout 10;          <span class="comment">#客户端请求主体超时时间</span></span><br><span class="line">    reset_timedout_connection on;    <span class="comment">#告诉 nginx 关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间</span></span><br><span class="line">    send_timeout 10;                 <span class="comment">#客户端响应超时时间，在两次客户端读取操作之间。如果在这段时间内，客户端没有读取任何数据，nginx 就会关闭连接</span></span><br><span class="line">    <span class="comment">################################</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#FastCGI 相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。</span></span><br><span class="line">    fastcgi_connect_timeout 300;</span><br><span class="line">    fastcgi_send_timeout 300;</span><br><span class="line">    fastcgi_read_timeout 300;</span><br><span class="line">    fastcgi_buffer_size 64k;</span><br><span class="line">    fastcgi_buffers 4 64k;</span><br><span class="line">    fastcgi_busy_buffers_size 128k;</span><br><span class="line">    fastcgi_temp_file_write_size 128k;</span><br><span class="line"></span><br><span class="line">    <span class="comment">###作为代理缓存服务器设置#######</span></span><br><span class="line">    <span class="comment">###先写到 temp 再移动到 cache</span></span><br><span class="line">    <span class="comment">#proxy_cache_path /var/tmp/nginx/proxy_cache levels=1:2 keys_zone=cache_one:512m inactive=10m max_size=64m;</span></span><br><span class="line">    <span class="comment">###以上 proxy_temp 和 proxy_cache 需要在同一个分区中</span></span><br><span class="line">    <span class="comment">###levels=1:2 表示缓存级别，表示缓存目录的第一级目录是 1 个字符，第二级目录是 2 个字符 keys_zone=cache_one:128m 缓存空间起名为 cache_one 大小为 512m</span></span><br><span class="line">    <span class="comment">###max_size=64m 表示单个文件超过 128m 就不缓存了  inactive=10m 表示缓存的数据，10 分钟内没有被访问过就删除</span></span><br><span class="line">    <span class="comment">#########end####################</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#####对传输文件压缩###########</span></span><br><span class="line">    <span class="comment">#gzip 模块设置</span></span><br><span class="line">    gzip on; <span class="comment">#开启 gzip 压缩输出</span></span><br><span class="line">    gzip_min_length 1k; <span class="comment">#最小压缩文件大小</span></span><br><span class="line">    gzip_buffers 4 16k; <span class="comment">#压缩缓冲区</span></span><br><span class="line">    gzip_http_version 1.0; <span class="comment">#压缩版本（默认 1.1，前端如果是 squid2.5 请使用 1.0）</span></span><br><span class="line">    gzip_comp_level 2; <span class="comment">#压缩等级，gzip 压缩比，1 为最小，处理最快；9 为压缩比最大，处理最慢，传输速度最快，也最消耗 CPU；</span></span><br><span class="line">    gzip_types text/plain application/x-javascript text/css application/xml;</span><br><span class="line">    <span class="comment">#压缩类型，默认就已经包含 text/html，所以下面就不用再写了，写上去也不会有问题，但是会有一个 warn。</span></span><br><span class="line">    gzip_vary on;</span><br><span class="line">    <span class="comment">##############################</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#limit_zone crawler $binary_remote_addr 10m; #开启限制 IP 连接数的时候需要使用</span></span><br><span class="line"></span><br><span class="line">    upstream blog.ha97.com &#123;</span><br><span class="line">        <span class="comment">#upstream 的负载均衡，weight 是权重，可以根据机器配置定义权重。weigth 参数表示权值，权值越高被分配到的几率越大。</span></span><br><span class="line">        server 192.168.80.121:80 weight=3;</span><br><span class="line">        server 192.168.80.122:80 weight=2;</span><br><span class="line">        server 192.168.80.123:80 weight=3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#虚拟主机的配置</span></span><br><span class="line">    server &#123;</span><br><span class="line">        <span class="comment">#监听端口</span></span><br><span class="line">        listen 80;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#############https##################</span></span><br><span class="line">        <span class="comment">#listen 443 ssl;</span></span><br><span class="line">        <span class="comment">#ssl_certificate /opt/https/xxxxxx.crt;</span></span><br><span class="line">        <span class="comment">#ssl_certificate_key /opt/https/xxxxxx.key;</span></span><br><span class="line">        <span class="comment">#ssl_protocols SSLv3 TLSv1;</span></span><br><span class="line">        <span class="comment">#ssl_ciphers HIGH:!ADH:!EXPORT57:RC4+RSA:+MEDIUM;</span></span><br><span class="line">        <span class="comment">#ssl_prefer_server_ciphers on;</span></span><br><span class="line">        <span class="comment">#ssl_session_cache shared:SSL:2m;</span></span><br><span class="line">        <span class="comment">#ssl_session_timeout 5m;</span></span><br><span class="line">        <span class="comment">####################################end</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#域名可以有多个，用空格隔开</span></span><br><span class="line">        server_name www.ha97.com ha97.com;</span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line">        root /data/www/ha97;</span><br><span class="line">        location ~ .*.(php|php5)?$ &#123;</span><br><span class="line">            fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">            fastcgi_index index.php;</span><br><span class="line">            include fastcgi.conf;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#图片缓存时间设置</span></span><br><span class="line">        location ~ .*.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">            expires 10d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#JS 和 CSS 缓存时间设置</span></span><br><span class="line">        location ~ .*.(js|css)?$ &#123;</span><br><span class="line">            expires 1h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#日志格式设定</span></span><br><span class="line">        log_format access <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span> <span class="string">'$status $body_bytes_sent "$http_referer" '</span> <span class="string">'"$http_user_agent" $http_x_forwarded_for'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#定义本虚拟主机的访问日志</span></span><br><span class="line">        access_log /var/<span class="built_in">log</span>/nginx/ha97access.log access;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#对 "/" 启用反向代理</span></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http://127.0.0.1:88;</span><br><span class="line">            proxy_redirect off;</span><br><span class="line">            proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="comment">#后端的 Web 服务器可以通过 X-Forwarded-For 获取用户真实 IP</span></span><br><span class="line">            proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="comment">#以下是一些反向代理的配置，可选。</span></span><br><span class="line">            proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">            client_max_body_size 10m; <span class="comment">#允许客户端请求的最大单文件字节数</span></span><br><span class="line">            client_body_buffer_size 128k; <span class="comment">#缓冲区代理缓冲用户端请求的最大字节数，</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">##代理设置 以下设置是 nginx 和后端服务器之间通讯的设置##</span></span><br><span class="line">            proxy_connect_timeout 90; <span class="comment">#nginx 跟后端服务器连接超时时间（代理连接超时）</span></span><br><span class="line">            proxy_send_timeout 90; <span class="comment">#后端服务器数据回传时间（代理发送超时）</span></span><br><span class="line">            proxy_read_timeout 90; <span class="comment">#连接成功后，后端服务器响应时间（代理接收超时）</span></span><br><span class="line">            proxy_buffering on;    <span class="comment">#该指令开启从后端被代理服务器的响应内容缓冲 此参数开启后 proxy_buffers 和 proxy_busy_buffers_size 参数才会起作用</span></span><br><span class="line">            proxy_buffer_size 4k;  <span class="comment">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span><br><span class="line">            proxy_buffers 4 32k;   <span class="comment">#proxy_buffers 缓冲区，网页平均在 32k 以下的设置</span></span><br><span class="line">            proxy_busy_buffers_size 64k; <span class="comment">#高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class="line">            proxy_max_temp_file_size 2048m; <span class="comment">#默认 1024m, 该指令用于设置当网页内容大于 proxy_buffers 时，临时文件大小的最大值。如果文件大于这个值，它将从 upstream 服务器同步地传递请求，而不是缓冲到磁盘</span></span><br><span class="line">            proxy_temp_file_write_size 512k; 这是当被代理服务器的响应过大时 nginx 一次性写入临时文件的数据量。</span><br><span class="line">            proxy_temp_path  /var/tmp/nginx/proxy_temp;    <span class="comment">##定义缓冲存储目录，之前必须要先手动创建此目录</span></span><br><span class="line">            proxy_headers_hash_max_size 51200;</span><br><span class="line">            proxy_headers_hash_bucket_size 6400;</span><br><span class="line">            <span class="comment">#######################################################</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#设定查看 nginx 状态的地址</span></span><br><span class="line">        location /nginxStatus &#123;</span><br><span class="line">            stub_status on;</span><br><span class="line">            access_log on;</span><br><span class="line">            auth_basic <span class="string">"nginxStatus"</span>;</span><br><span class="line">            auth_basic_user_file conf/htpasswd;</span><br><span class="line">            <span class="comment">#htpasswd 文件的内容可以用 apache 提供的 htpasswd 工具来产生。</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#本地动静分离反向代理配置</span></span><br><span class="line">        <span class="comment">#所有 jsp 的页面均交由 tomcat 或 resin 处理</span></span><br><span class="line">        location ~ .(jsp|jspx|<span class="keyword">do</span>)?$ &#123;</span><br><span class="line">            proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">            proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            proxy_pass http://127.0.0.1:8080;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#所有静态文件由 nginx 直接读取不经过 tomcat 或 resin</span></span><br><span class="line">        location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$</span><br><span class="line">        &#123; expires 15d; &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*.(js|css)?$</span><br><span class="line">        &#123; expires 1h; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="nginx-服务器基础配置指令"><a href="#nginx-服务器基础配置指令" class="headerlink" title="nginx 服务器基础配置指令"></a>nginx 服务器基础配置指令</h2><h3 id="nginx-conf-文件的结构"><a href="#nginx-conf-文件的结构" class="headerlink" title="nginx.conf 文件的结构"></a>nginx.conf 文件的结构</h3><ul><li>Global: nginx 运行相关</li><li>events: 与用户的网络连接相关</li><li>http<ul><li>http Global: 代理，缓存，日志，以及第三方模块的配置</li><li>server<ul><li>server Global: 虚拟主机相关</li><li>location: 地址定向，数据缓存，应答控制，以及第三方模块的配置</li></ul></li></ul></li></ul><blockquote><p>所有的所有的所有的指令，都要以 <code>;</code> 结尾</p></blockquote><h3 id="nginx-运行相关的-Global-部分"><a href="#nginx-运行相关的-Global-部分" class="headerlink" title="nginx 运行相关的 Global 部分"></a>nginx 运行相关的 Global 部分</h3><h4 id="配置运行-nginx-服务器用户"><a href="#配置运行-nginx-服务器用户" class="headerlink" title="配置运行 nginx 服务器用户"></a>配置运行 nginx 服务器用户</h4><p>user nobody nobody;</p><h4 id="配置允许生成的-worker-process-数"><a href="#配置允许生成的-worker-process-数" class="headerlink" title="配置允许生成的 worker process 数"></a>配置允许生成的 worker process 数</h4><p>worker_processes auto; worker_processes 4;</p><blockquote><p>这个数字，跟电脑 CPU 核数要保持一致</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep ^proces /proc/cpuinfo</span></span><br><span class="line">processor       : 0</span><br><span class="line">processor       : 1</span><br><span class="line">processor       : 2</span><br><span class="line">processor       : 3</span><br><span class="line"><span class="comment"># grep ^proces /proc/cpuinfo | wc -l</span></span><br><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="配置-nginx-进程-PID-存放路径"><a href="#配置-nginx-进程-PID-存放路径" class="headerlink" title="配置 nginx 进程 PID 存放路径"></a>配置 nginx 进程 PID 存放路径</h4><p>pid logs/nginx.pid;</p><blockquote><p>这里面保存的就是一个数字，nginx master 进程的进程号</p></blockquote><h4 id="配置错误日志的存放路径"><a href="#配置错误日志的存放路径" class="headerlink" title="配置错误日志的存放路径"></a>配置错误日志的存放路径</h4><p>error_log logs/error.log; error_log logs/error.log error;</p><h4 id="配置文件的引入"><a href="#配置文件的引入" class="headerlink" title="配置文件的引入"></a>配置文件的引入</h4><p>include mime.types; include fastcgi_params; include ../../conf/*.conf;</p><h3 id="与用户的网络连接相关的-events"><a href="#与用户的网络连接相关的-events" class="headerlink" title="与用户的网络连接相关的 events"></a>与用户的网络连接相关的 events</h3><h4 id="设置网络连接的序列化"><a href="#设置网络连接的序列化" class="headerlink" title="设置网络连接的序列化"></a>设置网络连接的序列化</h4><p>accept_mutex on;</p><blockquote><p>对多个 nginx 进程接收连接进行序列化，防止多个进程对连接的争抢（惊群）</p></blockquote><h4 id="设置是否允许同时接收多个网络连接"><a href="#设置是否允许同时接收多个网络连接" class="headerlink" title="设置是否允许同时接收多个网络连接"></a>设置是否允许同时接收多个网络连接</h4><p>multi_accept off;</p><h4 id="事件驱动模型的选择"><a href="#事件驱动模型的选择" class="headerlink" title="事件驱动模型的选择"></a>事件驱动模型的选择</h4><p>use select|poll|kqueue|epoll|rtsig|/dev/poll|eventport</p><blockquote><p>这个重点，后面再看</p></blockquote><h4 id="配置最大连接数"><a href="#配置最大连接数" class="headerlink" title="配置最大连接数"></a>配置最大连接数</h4><p>worker_connections 512;</p><h3 id="http"><a href="#http" class="headerlink" title="http"></a>http</h3><h4 id="http-Global-代理-缓存-日志-第三方模块配置"><a href="#http-Global-代理-缓存-日志-第三方模块配置" class="headerlink" title="http Global 代理 - 缓存 - 日志 - 第三方模块配置"></a>http Global 代理 - 缓存 - 日志 - 第三方模块配置</h4><h5 id="定义-MIME-Type"><a href="#定义-MIME-Type" class="headerlink" title="定义 MIME-Type"></a>定义 MIME-Type</h5><p>include mime.types; default_type application/octet-stream;</p><h5 id="自定义服务日志"><a href="#自定义服务日志" class="headerlink" title="自定义服务日志"></a>自定义服务日志</h5><p>access_log logs/access.log main; access_log off;</p><h5 id="配置允许-sendfile-方式传输文件"><a href="#配置允许-sendfile-方式传输文件" class="headerlink" title="配置允许 sendfile 方式传输文件"></a>配置允许 sendfile 方式传输文件</h5><p>sendfile off;</p><p>sendfile on; sendfile_max_chunk 128k;</p><blockquote><p>nginx 每个 worker process 每次调用 sendfile() 传输的数据量的最大值</p></blockquote><p><strong>Refer:</strong></p><ul><li><a href="http://www.vpsee.com/2009/07/linux-sendfile-improve-performance/" target="_blank" rel="noopener">Linux kenel sendfile 如何提升性能</a></li><li><a href="http://blog.csdn.net/zmj_88888888/article/details/9169227" target="_blank" rel="noopener">nginx sendifle tcp_nopush tcp_nodelay 参数解释</a></li></ul><h5 id="配置连接超时时间"><a href="#配置连接超时时间" class="headerlink" title="配置连接超时时间"></a>配置连接超时时间</h5><blockquote><p>与用户建立连接后，nginx 可以保持这些连接一段时间，默认 75s 下面的 65s 可以被 Mozilla/Konqueror 识别，是发给用户端的头部信息<code>Keep-Alive</code>值</p></blockquote><p>keepalive_timeout 75s 65s;</p><h5 id="单连接请求数上限"><a href="#单连接请求数上限" class="headerlink" title="单连接请求数上限"></a>单连接请求数上限</h5><blockquote><p>和用户端建立连接后，用户通过此连接发送请求；这条指令用于设置请求的上限数</p></blockquote><p>keepalive_requests 100;</p><h4 id="server"><a href="#server" class="headerlink" title="server"></a>server</h4><h5 id="配置网络监听"><a href="#配置网络监听" class="headerlink" title="配置网络监听"></a>配置网络监听</h5><p>listen <em>:80 | </em>:8000; # 监听所有的 80 和 8000 端口</p><p>listen 192.168.1.10:8000;</p><p>listen 192.168.1.10;</p><p>listen 8000; # 等同于 listen *:8000;</p><p>listen 192.168.1.10 default_server backlog=511; # 该 ip 的连接请求默认由此虚拟主机处理；最多允许 1024 个网络连接同时处于挂起状态</p><h5 id="基于名称的虚拟主机配置"><a href="#基于名称的虚拟主机配置" class="headerlink" title="基于名称的虚拟主机配置"></a>基于名称的虚拟主机配置</h5><p>server_name myserver.com <a href="http://www.myserver.com" target="_blank" rel="noopener">www.myserver.com</a>;</p><p>server_name .myserver.com <a href="http://www.myserver" target="_blank" rel="noopener">www.myserver</a>. myserver2.*; # 使用通配符</p><blockquote><p>不允许的情况： server_name <a href="http://www.ab*d.com" target="_blank" rel="noopener">www.ab*d.com</a>; # <code>*</code>只允许出现在 www 和 com 的位置</p></blockquote><p>server_name ~^www\d+.myserver.com$; # 使用正则</p><blockquote><p>nginx 的配置中，可以用正则的地方，都以<code>~</code>开头</p></blockquote><blockquote><p>from nginx~0.7.40 开始，server_name 中的正则支持 字符串捕获功能（capture）</p></blockquote><p>server_name ~^www.(.+).com$; # 当请求通过 <a href="http://www.myserver.com" target="_blank" rel="noopener">www.myserver.com</a> 请求时， myserver 就被记录到<code>$1</code>中，在本 server 的上下文中就可以使用</p><p>如果一个名称 被多个虚拟主机的 server_name 匹配成功，那这个请求到底交给谁处理呢？看优先级：</p><ol><li>准确匹配到 server_name</li><li>通配符在开始时匹配到 server_name</li><li>通配符在结尾时匹配到 server_name</li><li>正则表达式匹配 server_name</li><li>先到先得</li></ol><h5 id="配置-https-证书"><a href="#配置-https-证书" class="headerlink" title="配置 https 证书"></a>配置 https 证书</h5><p><strong>原理</strong></p><p>https 是在 http 和 TCP 中间加上一层加密层</p><blockquote><ul><li>浏览器向服务端发送消息时：本质上是浏览器（客户端）使用服务端的公钥来加密信息，服务端使用自己的私钥解密，</li><li>浏览器从服务端获取消息是：服务端使用自己私钥加密，浏览器（客户端）使用服务端的公钥来解密信息</li></ul></blockquote><p>在这个过程中，需要保证服务端给浏览器的公钥不是假冒的。证明服务端公钥信息的机构是 CA（数字认证中心）</p><p>可以理解为：如果想证明一个人的身份是真的，就得证明这个人的身份证是真的</p><p><strong>数字证书</strong></p><blockquote><p>数字证书相当于物理世界中的身份证，<br>在网络中传递信息的双方互相不能见面，利用数字证书可确认双方身份，而不是他人冒充的。<br>这个数字证书由信任的第三方，即认证中心使用自己的私钥对 A 的公钥加密，加密后文件就是网络上的身份证了，即数字证书</p></blockquote><p>大致可以理解为如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1. 服务端将自己的公钥和其他信息（服务端数字证书），请求数字认证中心签名，数字认证中心使用自己的私钥在证书里加密（只有数字认证中心的公钥才能解开）</span><br><span class="line">2. 服务端将自己的证书（证书里面包括服务端的公钥）给浏览器</span><br><span class="line">3. 浏览器的“证书管理器”中有“受信任的根证书颁发机构”列表，客户端在接收到响应后，会在这个列表里查看是否存在解开该服务器数字证书的公钥。有两种错误情况：如果公钥在这个列表里，但是解码后的内容不匹配，说明证书被冒用；如果公钥不在这个列表里，说明这张证书不是受信任的机构所颁发，他的真实性无法确定</span><br><span class="line">4. 如果一切都没问题，浏览器就可以使用服务器的公钥对信息内容进行加密，然后与服务器交换信息（已加密）</span><br><span class="line"></span><br><span class="line">+--------------+           +------------------+</span><br><span class="line">|    服务端    |----------&gt;| 数字认证中心 (CA) |</span><br><span class="line">+------+-------+    1    X +------------------+</span><br><span class="line">       |                / /</span><br><span class="line">       |               / /</span><br><span class="line">       |              / /</span><br><span class="line">       |             / /</span><br><span class="line">       |2         3 / / 4</span><br><span class="line">       |           / /</span><br><span class="line">       |          / /</span><br><span class="line">       |         / /</span><br><span class="line">       X        / /</span><br><span class="line">+--------------+ /</span><br><span class="line">|    浏览器    |X</span><br><span class="line">+--------------+</span><br><span class="line"></span><br><span class="line">只要证书（证书里有服务端的公钥）是可信的，公钥就是可信的。</span><br></pre></td></tr></table></figure><p><strong>证书格式</strong></p><p>Linux 下的工具们通常使用 base64 编码的文本格式，相关常用后缀如下</p><ul><li>证书<ul><li>.crt</li><li>.pem</li><li>.cer(IIS 等一些平台下，则习惯用 cer 作为证书文件的扩展名，二进制证书）</li></ul></li><li>私钥：.key<br>-证书请求：.csr</li><li>其他<ul><li>.keystore java 密钥库（包括证书和私钥）</li></ul></li></ul><p><strong>制作证书</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1. 生成服务器端的私钥 (key 文件）</span><br><span class="line"><span class="variable">$openssl</span> genrsa  -out server.key 1024</span><br><span class="line"></span><br><span class="line">2. 生成服务器端证书签名请求文件 (csr 文件）;</span><br><span class="line">$ openssl req -new -key server.key -out server.csr</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">Country Name:CN------------ 证书持有者所在国家</span><br><span class="line">State or Province Name:BJ-- 证书持有者所在州或省份（可省略不填）</span><br><span class="line">Locality Name:BJ----------- 证书持有者所在城市（可省略不填）</span><br><span class="line">Organization Name:SC------- 证书持有者所属组织或公司</span><br><span class="line">Organizational Unit Name:.- 证书持有者所属部门（可省略不填）</span><br><span class="line">Common Name :ceshi.com----- 域名</span><br><span class="line">Email Address:------------- 邮箱（可省略不填）</span><br><span class="line"></span><br><span class="line">A challenge password:------ 直接回车</span><br><span class="line">An optional company name:-- 直接回车</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3. 生成证书文件 (crt 文件）</span><br><span class="line">$ openssl x509 -req -days 1000 -<span class="keyword">in</span> server.csr -signkey server.key -out server.crt</span><br></pre></td></tr></table></figure><p>以上生成 server.crt server.key 文件即是用于 HTTPS 配置的证书和 key</p><p>如果想查看证书里面的内容，可以通过 $openssl x509 -in server.crt -text -noout 查看</p><p><strong>配置 nginx</strong></p><p>在 nginx 的 server 区域内添加如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">listen 443 ssl;</span><br><span class="line">ssl_certificate /opt/https/server.crt;</span><br><span class="line">ssl_certificate_key /opt/https/server.key;</span><br><span class="line">ssl_protocols SSLv3 TLSv1;</span><br><span class="line">ssl_ciphers HIGH:!ADH:!EXPORT57:RC4+RSA:+MEDIUM;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">ssl_session_cache shared:SSL:2m;</span><br><span class="line">ssl_session_timeout 5m;</span><br></pre></td></tr></table></figure><h5 id="基于-IP-的虚拟主机配置"><a href="#基于-IP-的虚拟主机配置" class="headerlink" title="基于 IP 的虚拟主机配置"></a>基于 IP 的虚拟主机配置</h5><blockquote><p>基于 IP 的虚拟主机，需要将网卡设置为同时能够监听多个 IP 地址</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br><span class="line"><span class="comment"># 查看到本机 IP 地址为 192.168.1.30</span></span><br><span class="line">ifconfig eth1:0 192.168.1.31 netmask 255.255.255.0 up</span><br><span class="line">ifconfig eth1:1 192.168.1.32 netmask 255.255.255.0 up</span><br><span class="line">ifconfig</span><br><span class="line"><span class="comment"># 这时就看到 eth1 增加来 2 个别名， eth1:0 eth1:1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要机器重启后仍保持这两个虚拟的 IP</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ifconfig eth1:0 192.168.1.31 netmask 255.255.255.0 up"</span> &gt;&gt; /etc/rc.local</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ifconfig eth1:0 192.168.1.32 netmask 255.255.255.0 up"</span> &gt;&gt; /etc/rc.local</span><br></pre></td></tr></table></figure><p>再来配置基于 IP 的虚拟主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    ...</span><br><span class="line">    server &#123;</span><br><span class="line">     listen 80;</span><br><span class="line">     server_name 192.168.1.31;</span><br><span class="line">     ...</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">     listen 80;</span><br><span class="line">     server_name 192.168.1.32;</span><br><span class="line">     ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="配置-location-块"><a href="#配置-location-块" class="headerlink" title="配置 location 块"></a>配置 location 块</h5><blockquote><p>location 块的配置，应该是最常用的了</p></blockquote><p>location [ = | ~ | ~* | ^~ ] uri {…}</p><p>这里内容分 2 块，匹配方式和 uri， 其中 uri 又分为 标准 uri 和正则 uri</p><p>先不考虑 那 4 种匹配方式</p><ol><li>nginx 首先会再 server 块的多个 location 中搜索是否有<code>标准 uri</code>和请求字符串匹配， 如果有，记录匹配度最高的一个；</li><li>然后，再用 location 块中的<code>正则 uri</code>和请求字符串匹配， 当第一个<code>正则 uri</code>匹配成功，即停止搜索， 并使用该 location 块处理请求；</li><li>如果，所有的<code>正则 uri</code>都匹配失败，就使用刚记录下的匹配度最高的一个<code>标准 uri</code>处理请求</li><li>如果都失败了，那就失败喽</li></ol><p>再看 4 种匹配方式：</p><ul><li><code>=</code>:  用于<code>标准 uri</code>前，要求请求字符串与其严格匹配，成功则立即处理</li><li><code>^~</code>: 用于<code>标准 uri</code>前，并要求一旦匹配到，立即处理，不再去匹配其他的那些个<code>正则 uri</code></li><li><code>~</code>:  用于<code>正则 uri</code>前，表示 uri 包含正则表达式， 并区分大小写</li><li><code>~*</code>: 用于<code>正则 uri</code>前， 表示 uri 包含正则表达式， 不区分大小写</li></ul><blockquote><p><code>^~</code> 也是支持浏览器编码过的 URI 的匹配的哦， 如 <code>/html/%20/data</code> 可以成功匹配 <code>/html/ /data</code></p></blockquote><h5 id="root-配置请求的根目录"><a href="#root-配置请求的根目录" class="headerlink" title="[root] 配置请求的根目录"></a>[root] 配置请求的根目录</h5><p>Web 服务器收到请求后，首先要在服务端指定的目录中寻找请求资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root /var/www;</span><br></pre></td></tr></table></figure><p><strong>root 后跟的指定目录是上级目录</strong></p><p>该上级目录下要含有和 location 后指定名称的同名目录才行，末尾“/”加不加无所谓</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /c/ &#123;</span><br><span class="line">      root /a/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问站点 <a href="http://location/c" target="_blank" rel="noopener">http://location/c</a> 访问的就是 /a/c 目录下的站点信息。</p><h5 id="alias-更改-location-的-URI"><a href="#alias-更改-location-的-URI" class="headerlink" title="[alias] 更改 location 的 URI"></a>[alias] 更改 location 的 URI</h5><p>除了使用 root 指明处理请求的根目录，还可以使用 alias 改变 location 收到的 URI 的请求路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~ ^/data/(.+\.(htm|html))$ &#123;</span><br><span class="line">    <span class="built_in">alias</span> /locatinotest1/other/<span class="variable">$1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>alias 后跟的指定目录是准确的，并且末尾必须加“/”，否则找不到文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /c/ &#123;</span><br><span class="line">      <span class="built_in">alias</span> /a/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问站点 <a href="http://location/c" target="_blank" rel="noopener">http://location/c</a> 访问的就是 /a/ 目录下的站点信息。</p><p>【注】一般情况下，在 location / 中配置 root，在 location /other 中配置 alias 是一个好习惯。</p><h5 id="设置网站的默认首页"><a href="#设置网站的默认首页" class="headerlink" title="设置网站的默认首页"></a>设置网站的默认首页</h5><p>index 指令主要有 2 个作用：</p><ul><li>对请求地址没有指明首页的，指定默认首页</li><li>对一个请求，根据请求内容而设置不同的首页，如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~ ^/data/(.+)/web/$ &#123;</span><br><span class="line">    index index.<span class="variable">$1</span>.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="设置网站的错误页面"><a href="#设置网站的错误页面" class="headerlink" title="设置网站的错误页面"></a>设置网站的错误页面</h5><p>error_page 404 /404.html; error_page 403 /forbidden.html; error_page 404 =301 /404.html;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /404.html &#123;</span><br><span class="line">    root /myserver/errorpages/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="基于-IP-配置-nginx-的访问权限"><a href="#基于-IP-配置-nginx-的访问权限" class="headerlink" title="基于 IP 配置 nginx 的访问权限"></a>基于 IP 配置 nginx 的访问权限</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    deny 192.168.1.1;</span><br><span class="line">    allow 192.168.1.0/24;</span><br><span class="line">    allow 192.168.1.2/24;</span><br><span class="line">    deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>从 192.168.1.0 的用户时可以访问的，因为解析到 allow 那一行之后就停止解析了</p></blockquote><h5 id="基于密码配置-nginx-的访问权限"><a href="#基于密码配置-nginx-的访问权限" class="headerlink" title="基于密码配置 nginx 的访问权限"></a>基于密码配置 nginx 的访问权限</h5><p>auth_basic “please login”; auth_basic_user_file /etc/nginx/conf/pass_file;</p><blockquote><p>这里的 file 必须使用绝对路径，使用相对路径无效</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /usr/local/apache2/bin/htpasswd -c -d pass_file user_name</span></span><br><span class="line"><span class="comment"># 回车输入密码，-c 表示生成文件，-d 是以 crypt 加密。</span></span><br><span class="line"></span><br><span class="line">name1:password1</span><br><span class="line">name2:password2:comment</span><br></pre></td></tr></table></figure><blockquote><p>经过 basic auth 认证之后没有过期时间，直到该页面关闭； 如果需要更多的控制，可以使用 HttpAuthDigestModule <a href="http://wiki.nginx.org/HttpAuthDigestModule" target="_blank" rel="noopener">wiki.nginx.org/HttpAuthDig…</a></p></blockquote><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><h3 id="架设简单文件服务器"><a href="#架设简单文件服务器" class="headerlink" title="架设简单文件服务器"></a>架设简单文件服务器</h3><p>将 /data/public/ 目录下的文件通过 nginx 提供给外部访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mkdir /data/public/</span></span><br><span class="line"><span class="comment">#chmod 777 /data/public/</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">worker_processes 1;</span><br><span class="line">error_log logs/error.log info;</span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    server &#123;</span><br><span class="line">        <span class="comment"># 监听 8080 端口</span></span><br><span class="line">        listen 8080;</span><br><span class="line">        location /share/ &#123;</span><br><span class="line">            <span class="comment"># 打开自动列表功能，通常关闭</span></span><br><span class="line">            autoindex on;</span><br><span class="line">            <span class="comment"># 将 /share/ 路径映射至 /data/public/，请保证 nginx 进程有权限访问 /data/public/</span></span><br><span class="line">            <span class="built_in">alias</span> /data/public/;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="nginx-正向代理"><a href="#nginx-正向代理" class="headerlink" title="nginx 正向代理"></a>nginx 正向代理</h3><ul><li>正向代理指代理客户端访问服务器的一个中介服务器，代理的对象是客户端。正向代理就是代理服务器替客户端去访问目标服务器</li><li>反向代理指代理后端服务器响应客户端请求的一个中介服务器，代理的对象是服务器。</li></ul><ol><li>配置</li></ol><p>代理服务器配置</p><p>nginx.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    resolver x.x.x.x;</span><br><span class="line"><span class="comment">#       resolver 8.8.8.8;</span></span><br><span class="line">    listen 82;</span><br><span class="line">    location / &#123;</span><br><span class="line">            proxy_pass http://<span class="variable">$http_host</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    access_log  /data/httplogs/proxy-<span class="variable">$host</span>-aceess.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>location 保持原样即可，根据自己的配置更改 listen port 和 dnf 即 resolver 验证： 在需要访问外网的机器上执行以下操作之一即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. <span class="built_in">export</span> http_proxy=http://yourproxyaddress：proxyport（建议）</span><br><span class="line">2. vim ~/.bashrc</span><br><span class="line">    <span class="built_in">export</span> http_proxy=http://yourproxyaddress：proxyport</span><br></pre></td></tr></table></figure><ol start="2"><li>不足 nginx 不支持 CONNECT 方法，不像我们平时用的 GET 或者 POST，可以选用 apache 或 squid 作为代替方案。</li></ol><h3 id="nginx-服务器基础配置实例"><a href="#nginx-服务器基础配置实例" class="headerlink" title="nginx 服务器基础配置实例"></a>nginx 服务器基础配置实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">user nginx nginx;</span><br><span class="line"></span><br><span class="line">worker_processes 3;</span><br><span class="line"></span><br><span class="line">error_log logs/error.log;</span><br><span class="line">pid myweb/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include mime.types;</span><br><span class="line">    default_type applicatioin/octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout 65;</span><br><span class="line"></span><br><span class="line">    log_format access.log <span class="string">'$remote_addr [$time_local] "$request" "$http_user_agent"'</span>;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 8081;</span><br><span class="line">        server_name myServer1;</span><br><span class="line"></span><br><span class="line">        access_log myweb/server1/<span class="built_in">log</span>/access.log;</span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line"></span><br><span class="line">        location /server1/location1 &#123;</span><br><span class="line">            root myweb;</span><br><span class="line">            index index.svr1-loc1.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /server1/location2 &#123;</span><br><span class="line">            root myweb;</span><br><span class="line">            index index.svr1-loc2.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 8082;</span><br><span class="line">        server_name 192.168.0.254;</span><br><span class="line"></span><br><span class="line">        auth_basic <span class="string">"please Login:"</span>;</span><br><span class="line">        auth_basic_user_file /opt/X_nginx/nginx/myweb/user_passwd;</span><br><span class="line"></span><br><span class="line">        access_log myweb/server2/<span class="built_in">log</span>/access.log;</span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line"></span><br><span class="line">        location /server2/location1 &#123;</span><br><span class="line">            root myweb;</span><br><span class="line">            index index.svr2-loc1.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /svr2/loc2 &#123;</span><br><span class="line">            <span class="built_in">alias</span> myweb/server2/location2/;</span><br><span class="line">            index index.svr2-loc2.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">            root myweb/;</span><br><span class="line">            index 404.html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#./sbin/nginx -c conf/nginx02.conf</span></span><br><span class="line">nginx: [warn] the <span class="string">"user"</span> directive makes sense only <span class="keyword">if</span> the master process runs with super-user privileges, ignored <span class="keyword">in</span> /opt/X_nginx/nginx/conf/nginx02.conf:1</span><br><span class="line">.</span><br><span class="line">├── 404.html</span><br><span class="line">├── server1</span><br><span class="line">│   ├── location1</span><br><span class="line">│   │   └── index.svr1-loc1.htm</span><br><span class="line">│   ├── location2</span><br><span class="line">│   │   └── index.svr1-loc2.htm</span><br><span class="line">│   └── <span class="built_in">log</span></span><br><span class="line">│       └── access.log</span><br><span class="line">└── server2</span><br><span class="line">    ├── location1</span><br><span class="line">    │   └── index.svr2-loc1.htm</span><br><span class="line">    ├── location2</span><br><span class="line">    │   └── index.svr2-loc2.htm</span><br><span class="line">    └── <span class="built_in">log</span></span><br><span class="line">        └── access.log</span><br><span class="line"></span><br><span class="line">8 directories, 7 files</span><br></pre></td></tr></table></figure><h4 id="测试-myServer1-的访问"><a href="#测试-myServer1-的访问" class="headerlink" title="测试 myServer1 的访问"></a>测试 myServer1 的访问</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://myserver1:8081/server1/location1/</span><br><span class="line">this is server1/location1/index.svr1-loc1.htm</span><br><span class="line"></span><br><span class="line">http://myserver1:8081/server1/location2/</span><br><span class="line">this is server1/location1/index.svr1-loc2.htm</span><br></pre></td></tr></table></figure><h4 id="测试-myServer2-的访问"><a href="#测试-myServer2-的访问" class="headerlink" title="测试 myServer2 的访问"></a>测试 myServer2 的访问</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.254:8082/server2/location1/</span><br><span class="line">this is server2/location1/index.svr2-loc1.htm</span><br><span class="line"></span><br><span class="line">http://192.168.0.254:8082/svr2/loc2/</span><br><span class="line">this is server2/location1/index.svr2-loc2.htm</span><br><span class="line"></span><br><span class="line">http://192.168.0.254:8082/server2/location2/</span><br><span class="line">404 404 404 404</span><br></pre></td></tr></table></figure><h3 id="使用缓存"><a href="#使用缓存" class="headerlink" title="使用缓存"></a>使用缓存</h3><p>创建缓存目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir  /tmp/nginx_proxy_cache2</span><br><span class="line">chmod 777 /tmp/nginx_proxy_cache2</span><br></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http 区域下添加缓存区配置</span></span><br><span class="line">proxy_cache_path /tmp/nginx_proxy_cache2 levels=1 keys_zone=cache_one:512m inactive=60s max_size=1000m;</span><br><span class="line"></span><br><span class="line"><span class="comment"># server 区域下添加缓存配置</span></span><br><span class="line"><span class="comment">#缓存相应的文件（静态文件）</span></span><br><span class="line">location ~ \.(gif|jpg|png|htm|html|css|js|flv|ico|swf)(.*) &#123;</span><br><span class="line">     proxy_pass http://IP: 端口；<span class="comment">#如果没有缓存则通过 proxy_pass 转向请求</span></span><br><span class="line">     proxy_redirect off;</span><br><span class="line">     proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">     proxy_cache cache_one;</span><br><span class="line">     proxy_cache_valid 200 302 1h;            <span class="comment">#对不同的 HTTP 状态码设置不同的缓存时间，h 小时，d 天数</span></span><br><span class="line">     proxy_cache_valid 301 1d;</span><br><span class="line">     proxy_cache_valid any 1m;</span><br><span class="line">     expires 30d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-location-反向代理到已有网站"><a href="#使用-location-反向代理到已有网站" class="headerlink" title="使用 location 反向代理到已有网站"></a>使用 location 反向代理到已有网站</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~/bianque/(.*)$ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8888/<span class="variable">$1</span>/?<span class="variable">$args</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>加内置变量 <code>args</code> 是保障 nginx 正则捕获 get 请求时不丢失，如果只是 post 请求，<code>args</code>是非必须的  </li><li><code>$1</code> 取自正则表达式部分()里的内容</li></ul></blockquote><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="ngx-http-sub-module-替换响应中内容"><a href="#ngx-http-sub-module-替换响应中内容" class="headerlink" title="ngx_http_sub_module 替换响应中内容"></a>ngx_http_sub_module 替换响应中内容</h4><ul><li>ngx_http_sub_module nginx 用来替换响应内容的一个模块（应用：有些程序中写死了端口，可以通过此工具将页面中的端口替换为其他端口）</li></ul><h4 id="配置-http-强制跳转-https"><a href="#配置-http-强制跳转-https" class="headerlink" title="配置 http 强制跳转 https"></a>配置 http 强制跳转 https</h4><p>在 nginx 配置文件中的 server 区域添加如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$scheme</span> = <span class="string">'http'</span>) &#123;</span><br><span class="line">    rewrite ^(.*)$ https://<span class="variable">$host</span><span class="variable">$uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决GitHub无法访问</title>
      <link href="2020/02/02/%E8%A7%A3%E5%86%B3GitHub%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/"/>
      <url>2020/02/02/%E8%A7%A3%E5%86%B3GitHub%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<p>在系统的 <code>hosts</code> 文件里面加上以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">192.30.253.112 github.com</span><br><span class="line">185.199.108.153 assets-cdn.github.com</span><br><span class="line">185.199.109.153 assets-cdn.github.com</span><br><span class="line">185.199.110.153 assets-cdn.github.com</span><br><span class="line">185.199.111.153 assets-cdn.github.com</span><br><span class="line">199.232.5.194 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><p>使hosts生效即可。</p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP去掉cURL头信息</title>
      <link href="2020/01/13/How-to-remove-HTTP-headers-from-cURL-response/"/>
      <url>2020/01/13/How-to-remove-HTTP-headers-from-cURL-response/</url>
      
        <content type="html"><![CDATA[<h2 id="设置CURLOPT-HEADER为FALSE"><a href="#设置CURLOPT-HEADER为FALSE" class="headerlink" title="设置CURLOPT_HEADER为FALSE"></a>设置<code>CURLOPT_HEADER</code>为<code>FALSE</code></h2><p>如果设置<code>CURLOPT_HEADER</code>为<code>FALSE</code>则响应结果不含HTTP头信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 设置header</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, FALSE);</span><br></pre></td></tr></table></figure><p>如果参数<code>CURLOPT_HEADER</code>为<code>TRUE</code>则需要在返回结果中进行处理</p><a id="more"></a><h2 id="根据头信息大小删除头信息"><a href="#根据头信息大小删除头信息" class="headerlink" title="根据头信息大小删除头信息"></a>根据头信息大小删除头信息</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$response = curl_exec($ch);</span><br><span class="line">$code = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line"><span class="keyword">if</span> ( $code == <span class="number">200</span> )</span><br><span class="line">&#123;</span><br><span class="line">    $header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE);</span><br><span class="line">    $header = substr($response, <span class="number">0</span>, $header_size);</span><br><span class="line">    $body = substr($response, $header_size);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="根据头信息和body信息之间的链接字符串分割"><a href="#根据头信息和body信息之间的链接字符串分割" class="headerlink" title="根据头信息和body信息之间的链接字符串分割"></a>根据头信息和body信息之间的链接字符串分割</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$response = curl_exec($ch);</span><br><span class="line">$code = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line"><span class="keyword">if</span> ( $code == <span class="number">200</span> )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//list( $header, $body ) = explode( "\r\n\r\n", $response, 2 );// 两者都可以</span></span><br><span class="line">    <span class="keyword">list</span>( $header, $body ) = preg_split( <span class="string">'/([\r\n][\r\n])\\1/'</span>, $response, <span class="number">2</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cURL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用cloudflare works边缘计算搭建在线网页代理</title>
      <link href="2020/01/10/%E5%88%A9%E7%94%A8cloudflare-works%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97%E6%90%AD%E5%BB%BA%E5%9C%A8%E7%BA%BF%E7%BD%91%E9%A1%B5%E4%BB%A3%E7%90%86/"/>
      <url>2020/01/10/%E5%88%A9%E7%94%A8cloudflare-works%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97%E6%90%AD%E5%BB%BA%E5%9C%A8%E7%BA%BF%E7%BD%91%E9%A1%B5%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>今天看到阮一峰老师的Twitter发的“关于Cloudflare 正式发布 workers 功能”，搜索了一下关于 workers 功能使用教程，找了一篇文章(Xiaomage’s Blog <a href="https://blog.xmgspace.me/archives/jsproxy-on-cloudflare.html" target="_blank" rel="noopener">利用cloudflare works边缘计算搭建在线网页代理</a>)还不错，先码后续继续研究。</p><a id="more"></a><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ol><li>开源项目<a href="https://github.com/EtherDream/jsproxy" target="_blank" rel="noopener">jsproxy</a></li><li>一个cloudflare账号</li><li>一个Github账号，或者一台服务器+域名</li></ol><p><strong>一点说明：</strong></p><p>要利用cloudflare works边缘计算搭建在线网页代理，需要用到大神<a href="https://github.com/EtherDream" target="_blank" rel="noopener">EtherDream</a>的开源项目<a href="https://github.com/EtherDream/jsproxy" target="_blank" rel="noopener">jsproxy</a></p><p>这个项目使用了Service Worker，它能让 JS 拦截网页产生的请求，并能自定义返回内容，相当于在浏览器内部实现一个反向代理。这使得绝大部分的内容处理都可以在浏览器上完成，服务器只需纯粹的转发流量。</p><p>你可以使用Github pages服务，快速搭建起页面前端，从而做到真正的serverless。当然，如果你有一台服务器+域名，你也可以把服务器放在自己的服务器上。这一步只是给cloudflare一个回源服务器，用户访问的一切流量都要经过cloudflaer服务器，而不是Github或者你的服务器。所以服务器位置并不会影响网页代理的速度，而是用户到所连接到的cloudflare服务器的速度。建议使用Github pages的服务即可，下面的教程也将演示利用Github pages搭建此代理的过程。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="GitHub方面"><a href="#GitHub方面" class="headerlink" title="GitHub方面"></a>GitHub方面</h3><ol><li>登录你的Github账号，fork <a href="https://github.com/EtherDream/jsproxy" target="_blank" rel="noopener">jsproxy</a>项目到你的仓库中</li><li>进入你fork的jsproxy项目的<code>setting</code>中，启用下方的Github pages，其中项目分支选择<code>gh-pages branch</code>分支即可，配置见下图：<br><img src="/2020/01/10/利用cloudflare-works边缘计算搭建在线网页代理/1719250668.png" alt="图1"></li><li>进入你fork的jsproxy项目的<code>source(源代码)</code>中，切换到<code>gh-pages branch</code>分支，新建一个<code>index.html</code>，内容为空即可。</li><li>访问你Github pages服务生成的网址，如果为白屏，没有报404错误的话，回到刚才的源代码，将<code>index.html</code>删除即可。3、4两部可以在Github里直接操作，也可以用git命令拉取到本地进行修改，这里不再赘述。</li><li>如果你想自定义页面的样式，可以修改<code>gh-pages branch</code>分支中的<code>index_v3.html</code></li></ol><h3 id="Cloudflare方面"><a href="#Cloudflare方面" class="headerlink" title="Cloudflare方面"></a>Cloudflare方面</h3><ol><li>在<a href="https://dash.cloudflare.com/" target="_blank" rel="noopener">https://dash.cloudflare.com/</a>登录你的cloudflare账号，点击右侧大大的<code>workers</code>进入workers控制面板。</li><li>第一次使用workers功能，需要完成一个新手引导教程。第一步，需要选择一个cloudflare提供的<code>*.workers.dev</code>的二级域名，根据自己的喜好填写，按照提示next就可以了。</li><li>新手教程第二步会让你选择plan，我们白嫖党当然要选择Free Plan啦，每天有100000个请求配额，个人使用绰绰有余。</li><li>下一步可能要验证邮箱，到注册cloudflare的邮箱里点击链接激活一下就可以。</li><li>完成新手引导后，回到workers面板，点击蓝色的<code>Create a Worker</code>按钮，新建一个worker。</li><li>这时会打开一个带有代码编辑器的新标签页，在左侧选择Script标签，粘贴以下内容：注意在第六行里填写好你Github pages的网址，即<code>https://xxx.github.io/jsproxy</code><br><img src="/2020/01/10/利用cloudflare-works边缘计算搭建在线网页代理/2606084779.png" alt="图2"></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * static files (404.html, sw.js, conf.js)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> ASSET_URL = <span class="string">'https://xxx.github.io/jsproxy'</span><span class="comment">//这里填写你Github pages的网址！</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> JS_VER = <span class="number">10</span></span><br><span class="line"><span class="keyword">const</span> MAX_RETRY = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @type &#123;RequestInit&#125; */</span></span><br><span class="line"><span class="keyword">const</span> PREFLIGHT_INIT = &#123;</span><br><span class="line">  status: <span class="number">204</span>,</span><br><span class="line">  headers: <span class="keyword">new</span> Headers(&#123;</span><br><span class="line">    <span class="string">'access-control-allow-origin'</span>: <span class="string">'*'</span>,</span><br><span class="line">    <span class="string">'access-control-allow-methods'</span>: <span class="string">'GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS'</span>,</span><br><span class="line">    <span class="string">'access-control-max-age'</span>: <span class="string">'1728000'</span>,</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;any&#125; body</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; status</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&lt;string, string&gt;&#125; headers</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeRes</span>(<span class="params">body, status = <span class="number">200</span>, headers = &#123;&#125;</span>) </span>&#123;</span><br><span class="line">  headers[<span class="string">'--ver'</span>] = JS_VER</span><br><span class="line">  headers[<span class="string">'access-control-allow-origin'</span>] = <span class="string">'*'</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(body, &#123;status, headers&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; urlStr </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">newUrl</span>(<span class="params">urlStr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> URL(urlStr)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">addEventListener(<span class="string">'fetch'</span>, e =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> ret = fetchHandler(e)</span><br><span class="line">    .catch(<span class="function"><span class="params">err</span> =&gt;</span> makeRes(<span class="string">'cfworker error:\n'</span> + err.stack, <span class="number">502</span>))</span><br><span class="line">  e.respondWith(ret)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;FetchEvent&#125; e </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchHandler</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> req = e.request</span><br><span class="line">  <span class="keyword">const</span> urlStr = req.url</span><br><span class="line">  <span class="keyword">const</span> urlObj = <span class="keyword">new</span> URL(urlStr)</span><br><span class="line">  <span class="keyword">const</span> path = urlObj.href.substr(urlObj.origin.length)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (urlObj.protocol === <span class="string">'http:'</span>) &#123;</span><br><span class="line">    urlObj.protocol = <span class="string">'https:'</span></span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">''</span>, <span class="number">301</span>, &#123;</span><br><span class="line">      <span class="string">'strict-transport-security'</span>: <span class="string">'max-age=99999999; includeSubDomains; preload'</span>,</span><br><span class="line">      <span class="string">'location'</span>: urlObj.href,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (path.startsWith(<span class="string">'/http/'</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> httpHandler(req, path.substr(<span class="number">6</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span> (path) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'/http'</span>:</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">'请更新 cfworker 到最新版本!'</span>)</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'/ws'</span>:</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">'not support'</span>, <span class="number">400</span>)</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'/works'</span>:</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">'it works'</span>)</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="comment">// static files</span></span><br><span class="line">    <span class="keyword">return</span> fetch(ASSET_URL + path)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;Request&#125; req</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; pathname</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">httpHandler</span>(<span class="params">req, pathname</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reqHdrRaw = req.headers</span><br><span class="line">  <span class="keyword">if</span> (reqHdrRaw.has(<span class="string">'x-jsproxy'</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> Response.error()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// preflight</span></span><br><span class="line">  <span class="keyword">if</span> (req.method === <span class="string">'OPTIONS'</span> &amp;&amp;</span><br><span class="line">      reqHdrRaw.has(<span class="string">'access-control-request-headers'</span>)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Response(<span class="literal">null</span>, PREFLIGHT_INIT)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> acehOld = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">let</span> rawSvr = <span class="string">''</span></span><br><span class="line">  <span class="keyword">let</span> rawLen = <span class="string">''</span></span><br><span class="line">  <span class="keyword">let</span> rawEtag = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reqHdrNew = <span class="keyword">new</span> Headers(reqHdrRaw)</span><br><span class="line">  reqHdrNew.set(<span class="string">'x-jsproxy'</span>, <span class="string">'1'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 此处逻辑和 http-dec-req-hdr.lua 大致相同</span></span><br><span class="line">  <span class="comment">// https://github.com/EtherDream/jsproxy/blob/master/lua/http-dec-req-hdr.lua</span></span><br><span class="line">  <span class="keyword">const</span> refer = reqHdrNew.get(<span class="string">'referer'</span>)</span><br><span class="line">  <span class="keyword">const</span> query = refer.substr(refer.indexOf(<span class="string">'?'</span>) + <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> (!query) &#123;</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">'missing params'</span>, <span class="number">403</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> param = <span class="keyword">new</span> URLSearchParams(query)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [k, v] <span class="keyword">of</span> <span class="built_in">Object</span>.entries(param)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (k.substr(<span class="number">0</span>, <span class="number">2</span>) === <span class="string">'--'</span>) &#123;</span><br><span class="line">      <span class="comment">// 系统信息</span></span><br><span class="line">      <span class="keyword">switch</span> (k.substr(<span class="number">2</span>)) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'aceh'</span>:</span><br><span class="line">        acehOld = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">'raw-info'</span>:</span><br><span class="line">        [rawSvr, rawLen, rawEtag] = v.split(<span class="string">'|'</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 还原 HTTP 请求头</span></span><br><span class="line">      <span class="keyword">if</span> (v) &#123;</span><br><span class="line">        reqHdrNew.set(k, v)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        reqHdrNew.delete(k)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!param.has(<span class="string">'referer'</span>)) &#123;</span><br><span class="line">    reqHdrNew.delete(<span class="string">'referer'</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// cfworker 会把路径中的 `//` 合并成 `/`</span></span><br><span class="line">  <span class="keyword">const</span> urlStr = pathname.replace(<span class="regexp">/^(https?):\/+/</span>, <span class="string">'$1://'</span>)</span><br><span class="line">  <span class="keyword">const</span> urlObj = newUrl(urlStr)</span><br><span class="line">  <span class="keyword">if</span> (!urlObj) &#123;</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">'invalid proxy url: '</span> + urlStr, <span class="number">403</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** @type &#123;RequestInit&#125; */</span></span><br><span class="line">  <span class="keyword">const</span> reqInit = &#123;</span><br><span class="line">    method: req.method,</span><br><span class="line">    headers: reqHdrNew,</span><br><span class="line">    redirect: <span class="string">'manual'</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (req.method === <span class="string">'POST'</span>) &#123;</span><br><span class="line">    reqInit.body = req.body</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> proxy(urlObj, reqInit, acehOld, rawLen, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param &#123;URL&#125; urlObj </span></span><br><span class="line"><span class="comment"> * @param &#123;RequestInit&#125; reqInit </span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; retryTimes </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">proxy</span>(<span class="params">urlObj, reqInit, acehOld, rawLen, retryTimes</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> fetch(urlObj.href, reqInit)</span><br><span class="line">  <span class="keyword">const</span> resHdrOld = res.headers</span><br><span class="line">  <span class="keyword">const</span> resHdrNew = <span class="keyword">new</span> Headers(resHdrOld)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> expose = <span class="string">'*'</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [k, v] <span class="keyword">of</span> resHdrOld.entries()) &#123;</span><br><span class="line">    <span class="keyword">if</span> (k === <span class="string">'access-control-allow-origin'</span> ||</span><br><span class="line">        k === <span class="string">'access-control-expose-headers'</span> ||</span><br><span class="line">        k === <span class="string">'location'</span> ||</span><br><span class="line">        k === <span class="string">'set-cookie'</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">const</span> x = <span class="string">'--'</span> + k</span><br><span class="line">      resHdrNew.set(x, v)</span><br><span class="line">      <span class="keyword">if</span> (acehOld) &#123;</span><br><span class="line">        expose = expose + <span class="string">','</span> + x</span><br><span class="line">      &#125;</span><br><span class="line">      resHdrNew.delete(k)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (acehOld &amp;&amp;</span><br><span class="line">      k !== <span class="string">'cache-control'</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">'content-language'</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">'content-type'</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">'expires'</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">'last-modified'</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">'pragma'</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      expose = expose + <span class="string">','</span> + k</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (acehOld) &#123;</span><br><span class="line">    expose = expose + <span class="string">',--s'</span></span><br><span class="line">    resHdrNew.set(<span class="string">'--t'</span>, <span class="string">'1'</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// verify</span></span><br><span class="line">  <span class="keyword">if</span> (rawLen) &#123;</span><br><span class="line">    <span class="keyword">const</span> newLen = resHdrOld.get(<span class="string">'content-length'</span>) || <span class="string">''</span></span><br><span class="line">    <span class="keyword">const</span> badLen = (rawLen !== newLen)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (badLen) &#123;</span><br><span class="line">      <span class="keyword">if</span> (retryTimes &lt; MAX_RETRY) &#123;</span><br><span class="line">        urlObj = <span class="keyword">await</span> parseYtVideoRedir(urlObj, newLen, res)</span><br><span class="line">        <span class="keyword">if</span> (urlObj) &#123;</span><br><span class="line">          <span class="keyword">return</span> proxy(urlObj, reqInit, acehOld, rawLen, retryTimes + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> makeRes(res.body, <span class="number">400</span>, &#123;</span><br><span class="line">        <span class="string">'--error'</span>: <span class="string">`bad len: <span class="subst">$&#123;newLen&#125;</span>, except: <span class="subst">$&#123;rawLen&#125;</span>`</span>,</span><br><span class="line">        <span class="string">'access-control-expose-headers'</span>: <span class="string">'--error'</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (retryTimes &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      resHdrNew.set(<span class="string">'--retry'</span>, retryTimes)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> status = res.status</span><br><span class="line"></span><br><span class="line">  resHdrNew.set(<span class="string">'access-control-expose-headers'</span>, expose)</span><br><span class="line">  resHdrNew.set(<span class="string">'access-control-allow-origin'</span>, <span class="string">'*'</span>)</span><br><span class="line">  resHdrNew.set(<span class="string">'--s'</span>, status)</span><br><span class="line">  resHdrNew.set(<span class="string">'--ver'</span>, JS_VER)</span><br><span class="line"></span><br><span class="line">  resHdrNew.delete(<span class="string">'content-security-policy'</span>)</span><br><span class="line">  resHdrNew.delete(<span class="string">'content-security-policy-report-only'</span>)</span><br><span class="line">  resHdrNew.delete(<span class="string">'clear-site-data'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (status === <span class="number">301</span> ||</span><br><span class="line">      status === <span class="number">302</span> ||</span><br><span class="line">      status === <span class="number">303</span> ||</span><br><span class="line">      status === <span class="number">307</span> ||</span><br><span class="line">      status === <span class="number">308</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    status = status + <span class="number">10</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(res.body, &#123;</span><br><span class="line">    status,</span><br><span class="line">    headers: resHdrNew,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;URL&#125; urlObj </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isYtUrl</span>(<span class="params">urlObj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    urlObj.host.endsWith(<span class="string">'.googlevideo.com'</span>) &amp;&amp;</span><br><span class="line">    urlObj.pathname.startsWith(<span class="string">'/videoplayback'</span>)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;URL&#125; urlObj </span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; newLen </span></span><br><span class="line"><span class="comment"> * @param &#123;Response&#125; res </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">parseYtVideoRedir</span>(<span class="params">urlObj, newLen, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (newLen &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!isYtUrl(urlObj)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> res.text()</span><br><span class="line">    urlObj = <span class="keyword">new</span> URL(data)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!isYtUrl(urlObj)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> urlObj</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后点击下方的<code>save and deploy</code>部署就生效啦！记下cloudflare分配给你的workers.dev的三级域名，这就是你部署好的在线代理网址。</p><p>如果你正巧有托管在Cloudflare或它旗下的Partner的话，你可以就可以自定义网页代理的域名，不必记下冗长的三级域名，方法如下：</p><ol><li>进入你的域名控制台，点击控制台顶部的workers标签，进入对应域名的workers设置。</li><li>点击右侧的<code>Add route</code>按钮，部署一条新规则。</li><li>在弹出的对话框中：Route中填写 example.yourwebstie.com/* ，其中example是网页代理的二级域名，可以自定义，Worker选择你刚刚部署的worker。<br><img src="/2020/01/10/利用cloudflare-works边缘计算搭建在线网页代理/2266245004.png" alt="图3"></li><li>修改example.yourwebstie.com的DNS记录为cname记录，这条cname记录指向cloudflare分配给你的workers.dev下刚刚部署好的workers站点。</li></ol><p>Then, 在你使用没有翻墙软件的电脑时，也能利用这个网页代理随心上谷歌看油管咯~enjoy it！</p>]]></content>
      
      
      <categories>
          
          <category> 云服务 </category>
          
          <category> Cloudflare </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Workers </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将本地开发npm包模块链接到运行项目中</title>
      <link href="2020/01/07/%E5%B0%86%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91npm%E5%8C%85%E6%A8%A1%E5%9D%97%E9%93%BE%E6%8E%A5%E5%88%B0%E8%BF%90%E8%A1%8C%E9%A1%B9%E7%9B%AE%E4%B8%AD/"/>
      <url>2020/01/07/%E5%B0%86%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91npm%E5%8C%85%E6%A8%A1%E5%9D%97%E9%93%BE%E6%8E%A5%E5%88%B0%E8%BF%90%E8%A1%8C%E9%A1%B9%E7%9B%AE%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<p>在本地开发npm包的时候，我们可以使用<code>npm link</code>命令，将npm包模块链接到运行项目中去，方便地对模块进行调试和测试，下面举例说明：</p><p>我们现在有两个项目</p><ol><li><code>local-dev</code> 本地开发包</li><li><code>run-pro</code> 运行项目，用来测试我们开发的包</li></ol><a id="more"></a><p>在<code>local-dev</code>下执行<code>npm init -y</code>生成一个默认的包配置文件<code>package.json</code>，在目录下新建<code>index.js</code>如下，写个简单的时间戳转换为时间函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timeStampToTime</span>(<span class="params">timestamp</span>)</span>&#123; <span class="comment">// 时间戳转为时间</span></span><br><span class="line">    <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(timestamp);</span><br><span class="line">    <span class="keyword">let</span> year = date.getFullYear();</span><br><span class="line"><span class="keyword">let</span> month = date.getMonth() + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> day = date.getDate();</span><br><span class="line">month = month &lt; <span class="number">10</span> ? <span class="string">'0'</span> + month : month;</span><br><span class="line">day = day &lt; <span class="number">10</span> ? <span class="string">'0'</span> + day : day;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> hour = date.getHours();</span><br><span class="line">    <span class="keyword">let</span> min = date.getMinutes();</span><br><span class="line">    <span class="keyword">let</span> sec = date.getSeconds();</span><br><span class="line">    <span class="keyword">let</span> time = year + <span class="string">'-'</span> + month + <span class="string">'-'</span> + day + <span class="string">' '</span> + hour + <span class="string">':'</span> + sec + <span class="string">':'</span> + sec;</span><br><span class="line">    <span class="keyword">return</span> time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = timeStampToTime;</span><br></pre></td></tr></table></figure><p>然后执行 <code>npm link</code> 命令，<code>local-dev</code> 会根据<code>package.json</code>上的配置，被链接到全局，路径是<code>{prefix}/lib/node_modules/&lt;package&gt;</code>，这是官方文档上的描述，我们可以使用<code>npm config get prefix</code>命令获取到<code>prefix</code>的值(我使用的是windows，实际被链接到的路径是<code>{prefix}/node_modules/&lt;package&gt;</code>)</p><p><img src="/2020/01/07/将本地开发npm包模块链接到运行项目中/2020010701.png" alt="图1"></p><p>我们可以看到，已经在这个目录下面生成了一个<code>local-dev</code>的快捷方式</p><p>再进入<code>run-pro</code>,执行<code>npm init -y</code>生成包文件，接着执行<code>npm link local-dev</code></p><p>可以看到在这个项目的<code>node_modules</code>目录下生产了一个<code>local-dev</code>的快捷方式</p><p><img src="/2020/01/07/将本地开发npm包模块链接到运行项目中/20200107103349.png" alt="图2"></p><p>现在<code>run-pro</code>这个项目就可以引用这个<code>local-dev</code>这个模块了<br>我们在<code>run-pro</code>的目录下新建<code>index.js</code>文件,内容如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> timeStampToTime = <span class="built_in">require</span>(<span class="string">'local-dev'</span>);</span><br><span class="line"><span class="keyword">let</span> timestamp = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();;</span><br><span class="line"><span class="built_in">console</span>.log(timeStampToTime(timestamp));</span><br></pre></td></tr></table></figure><p>然后执行<code>node index.js</code>，可以看到命令行已经打印出函数的执行结果了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node index.js</span><br><span class="line">2020-01-07 10:33:33</span><br></pre></td></tr></table></figure><p>然后，我们修改下<code>local-dev</code>中的<code>index.js</code>文件的日期函数，返回结果就修改成返回斜线格式的日期</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> time = year + <span class="string">'/'</span> + month + <span class="string">'/'</span> + day + <span class="string">' '</span> + hour + <span class="string">':'</span> + sec + <span class="string">':'</span> + sec;</span><br></pre></td></tr></table></figure><p>再回到<code>run-pro</code>目录下执行<code>index.js</code>，可以看到，返回结果已经变成了斜线的日期</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node index.js</span><br><span class="line">2020/01/07 10:31:31</span><br></pre></td></tr></table></figure><p>看到了吧，所有对<code>local-dev</code>的修改会被直接映射到<code>run-pro/node_modules/local-dev</code></p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 的相关介绍和用途</title>
      <link href="2020/01/02/Nginx-%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D%E5%92%8C%E7%94%A8%E9%80%94/"/>
      <url>2020/01/02/Nginx-%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D%E5%92%8C%E7%94%A8%E9%80%94/</url>
      
        <content type="html"><![CDATA[<p>转转地址: <a href="https://www.cnblogs.com/wcwnina/p/8728391.html" target="_blank" rel="noopener">https://www.cnblogs.com/wcwnina/p/8728391.html</a></p><h2 id="Nginx的产生"><a href="#Nginx的产生" class="headerlink" title="Nginx的产生"></a>Nginx的产生</h2><p>没有听过Nginx？那么一定听过它的”同行”Apache吧！Nginx同Apache一样都是一种WEB服务器。基于REST架构风格，以统一资源描述符(Uniform Resources Identifier)URI或者统一资源定位符(Uniform Resources Locator)URL作为沟通依据，通过HTTP协议提供各种网络服务。</p><a id="more"></a><p>然而，这些服务器在设计之初受到当时环境的局限，例如当时的用户规模，网络带宽，产品特点等局限并且各自的定位和发展都不尽相同。这也使得各个WEB服务器有着各自鲜明的特点。</p><p>Apache的发展时期很长，而且是毫无争议的世界第一大服务器。它有着很多优点：稳定、开源、跨平台等等。它出现的时间太长了，它兴起的年代，互联网产业远远比不上现在。所以它被设计为一个重量级的。它不支持高并发的服务器。在Apache上运行数以万计的并发访问，会导致服务器消耗大量内存。操作系统对其进行进程或线程间的切换也消耗了大量的CPU资源，导致HTTP请求的平均响应速度降低。</p><p>这些都决定了Apache不可能成为高性能WEB服务器，轻量级高并发服务器Nginx就应运而生了。</p><p>俄罗斯的工程师Igor Sysoev，他在为Rambler Media工作期间，使用C语言开发了Nginx。Nginx作为WEB服务器一直为Rambler Media提供出色而又稳定的服务。</p><p>然后呢，Igor Sysoev将Nginx代码开源，并且赋予自由软件许可证。</p><p>由于：</p><ul><li>Nginx使用基于事件驱动架构，使得其可以支持数以百万级别的TCP连接</li><li>高度的模块化和自由软件许可证使得第三方模块层出不穷（这是个开源的时代啊~）</li><li>Nginx是一个跨平台服务器，可以运行在Linux，Windows，FreeBSD，Solaris，AIX，Mac OS等操作系统上</li><li>这些优秀的设计带来的是极大的稳定性</li></ul><p>所以，Nginx火了！</p><h2 id="Nginx的用武之地"><a href="#Nginx的用武之地" class="headerlink" title="Nginx的用武之地"></a>Nginx的用武之地</h2><p>Nginx是一款自由的、开源的、高性能的HTTP服务器和反向代理服务器；同时也是一个IMAP、POP3、SMTP代理服务器；Nginx可以作为一个HTTP服务器进行网站的发布处理，另外Nginx可以作为反向代理进行负载均衡的实现。</p><h3 id="关于代理"><a href="#关于代理" class="headerlink" title="关于代理"></a>关于代理</h3><p>说到代理，首先我们要明确一个概念，所谓代理就是一个代表、一个渠道；</p><p>此时就涉及到两个角色，一个是被代理角色，一个是目标角色，被代理角色通过这个代理访问目标角色完成一些任务的过程称为代理操作过程；如同生活中的专卖店~客人到adidas专卖店买了一双鞋，这个专卖店就是代理，被代理角色就是adidas厂家，目标角色就是用户。</p><h3 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h3><p>说反向代理之前，我们先看看正向代理，正向代理也是大家最常接触的到的代理模式，我们会从两个方面来说关于正向代理的处理模式，分别从软件方面和生活方面来解释一下什么叫正向代理。</p><p>在如今的网络环境下，我们如果由于技术需要要去访问国外的某些网站，此时你会发现位于国外的某网站我们通过浏览器是没有办法访问的，此时大家可能都会用一个操作FQ进行访问，FQ的方式主要是找到一个可以访问国外网站的代理服务器，我们将请求发送给代理服务器，代理服务器去访问国外的网站，然后将访问到的数据传递给我们！</p><p>上述这样的代理模式称为正向代理，<em>正向代理最大的特点是客户端非常明确要访问的服务器地址</em>；服务器只清楚请求来自哪个代理服务器，而不清楚来自哪个具体的客户端；正向代理模式<em>屏蔽或者隐藏了真实客户端信息</em>。来看个示意图（我把客户端和正向代理框在一块，同属于一个环境，后面我有介绍）：</p><p><img src="/2020/01/02/Nginx-的相关介绍和用途/20181211123717325.png" alt="图1"></p><p><em>客户端必须设置正向代理服务器</em>，当然前提是要知道正向代理服务器的IP地址，还有代理程序的端口。如图。</p><p><img src="/2020/01/02/Nginx-的相关介绍和用途/20181211121039404.png" alt="图2"></p><p>总结来说：<em>正向代理，”它代理的是客户端，代客户端发出请求”</em>，是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。客户端必须要进行一些特别的设置才能使用正向代理。</p><p>正向代理的用途：</p><ol><li>访问原来无法访问的资源，如Google</li><li>可以做缓存，加速访问资源</li><li>对客户端访问授权，上网进行认证</li><li>代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息</li></ol><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>明白了什么是正向代理，我们继续看关于反向代理的处理方式，举例如我大天朝的某宝网站，每天同时连接到网站的访问人数已经爆表，单个服务器远远不能满足人民日益增长的购买欲望了，此时就出现了一个大家耳熟能详的名词：分布式部署；也就是通过部署多台服务器来解决访问人数限制的问题；某宝网站中大部分功能也是直接使用Nginx进行反向代理实现的，并且通过封装Nginx和其他的组件之后起了个高大上的名字：Tengine，有兴趣的童鞋可以访问Tengine的官网查看具体的信息：<a href="http://tengine.taobao.org/" target="_blank" rel="noopener">http://tengine.taobao.org/</a>。那么反向代理具体是通过什么样的方式实现的分布式的集群操作呢，我们先看一个示意图（我把服务器和反向代理框在一块，同属于一个环境，后面我有介绍）：</p><p><img src="/2020/01/02/Nginx-的相关介绍和用途/20180406175939873.png" alt="图3"></p><p>通过上述的图解大家就可以看清楚了，多个客户端给服务器发送的请求，Nginx服务器接收到之后，按照一定的规则分发给了后端的业务处理服务器进行处理了。此时~请求的来源也就是客户端是明确的，但是请求具体由哪台服务器处理的并不明确了，Nginx扮演的就是一个反向代理角色。</p><p><em>客户端是无感知代理的存在的，反向代理对外都是透明的，访问者并不知道自己访问的是一个代理。因为客户端不需要任何配置就可以访问。</em></p><p><em>反向代理，”它代理的是服务端，代服务端接收请求”</em>，主要用于服务器集群分布式部署的情况下，<em>反向代理隐藏了服务器的信息</em>。</p><p>反向代理的作用：</p><ol><li>保证内网的安全，通常将反向代理作为公网访问地址，Web服务器是内网</li><li>负载均衡，通过反向代理服务器来优化网站的负载</li></ol><p><strong>项目场景</strong></p><p>通常情况下，我们在实际项目操作时，正向代理和反向代理很有可能会存在在一个应用场景中，正向代理代理客户端的请求去访问目标服务器，目标服务器是一个反向单利服务器，反向代理了多台真实的业务处理服务器。具体的拓扑图如下：</p><p><img src="/2020/01/02/Nginx-的相关介绍和用途/20180406180130452.png" alt="图4"></p><h3 id="二者区别"><a href="#二者区别" class="headerlink" title="二者区别"></a>二者区别</h3><p>截了一张图来说明正向代理和反向代理二者之间的区别，如图。</p><p><img src="/2020/01/02/Nginx-的相关介绍和用途/20181211122806997.png" alt="图5"></p><p>图解：</p><p>在正向代理中，Proxy和Client同属于一个LAN（图中方框内），隐藏了客户端信息；</p><p>在反向代理中，Proxy和Server同属于一个LAN（图中方框内），隐藏了服务端信息；</p><p>实际上，Proxy在两种代理中做的事情都是替服务器代为收发请求和响应，不过从结构上看正好左右互换了一下，所以把后出现的那种代理方式称为反向代理了。</p><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>我们已经明确了所谓代理服务器的概念，那么接下来，Nginx扮演了反向代理服务器的角色，它是以依据什么样的规则进行请求分发的呢？不用的项目应用场景，分发的规则是否可以控制呢？</p><p>这里提到的客户端发送的、Nginx反向代理服务器接收到的请求数量，就是我们说的负载量。</p><p>请求数量按照一定的规则进行分发到不同的服务器处理的规则，就是一种均衡规则。</p><p>所以，将服务器接收到的请求按照规则分发的过程，称为负载均衡。</p><p>负载均衡在实际项目操作过程中，有硬件负载均衡和软件负载均衡两种，硬件负载均衡也称为硬负载，如F5负载均衡，相对造价昂贵成本较高，但是数据的稳定性安全性等等有非常好的保障，如中国移动中国联通这样的公司才会选择硬负载进行操作；更多的公司考虑到成本原因，会选择使用软件负载均衡，软件负载均衡是利用现有的技术结合主机硬件实现的一种消息队列分发机制。</p><p><img src="/2020/01/02/Nginx-的相关介绍和用途/20180406180405961.png" alt="图6"></p><p>Nginx支持的负载均衡调度算法方式如下：</p><ol><li>weight轮询(默认，常用)：接收到的请求按照权重分配到不同的后端服务器，即使在使用过程中，某一台后端服务器宕机，Nginx会自动将该服务器剔除出队列，请求受理情况不会受到任何影响。 这种方式下，可以给不同的后端服务器设置一个权重值(weight)，用于调整不同的服务器上请求的分配率；权重数据越大，被分配到请求的几率越大；该权重值，主要是针对实际工作环境中不同的后端服务器硬件配置进行调整的。</li><li>ip_hash（常用）：每个请求按照发起客户端的ip的hash结果进行匹配，这样的算法下一个固定ip地址的客户端总会访问到同一个后端服务器，这也在一定程度上解决了集群部署环境下session共享的问题。</li><li>fair：智能调整调度算法，动态的根据后端服务器的请求处理到响应的时间进行均衡分配，响应时间短处理效率高的服务器分配到请求的概率高，响应时间长处理效率低的服务器分配到的请求少；结合了前两者的优点的一种调度算法。但是需要注意的是Nginx默认不支持fair算法，如果要使用这种调度算法，请安装upstream_fair模块。</li><li>url_hash：按照访问的url的hash结果分配请求，每个请求的url会指向后端固定的某个服务器，可以在Nginx作为静态服务器的情况下提高缓存效率。同样要注意Nginx默认不支持这种调度算法，要使用的话需要安装Nginx的hash软件包。</li></ol><h2 id="几种常用web服务器对比"><a href="#几种常用web服务器对比" class="headerlink" title="几种常用web服务器对比"></a>几种常用web服务器对比</h2><table><thead><tr><th>对比项\服务器</th><th>Apache</th><th>Nginx</th><th>Lighttpd</th></tr></thead><tbody><tr><td>Proxy代理</td><td>非常好</td><td>非常好</td><td>一般</td></tr><tr><td>Rewriter</td><td>好</td><td>非常好</td><td>一般</td></tr><tr><td>Fcgi</td><td>不好</td><td>好</td><td>非常好</td></tr><tr><td>热部署</td><td>不支持</td><td>支持</td><td>不支持</td></tr><tr><td>系统压力</td><td>很大</td><td>很小</td><td>比较小</td></tr><tr><td>稳定性</td><td>好</td><td>非常好</td><td>不好</td></tr><tr><td>安全性</td><td>好</td><td>一般</td><td>一般</td></tr><tr><td>静态文件处理</td><td>一般</td><td>非常好</td><td>好</td></tr><tr><td>反向代理</td><td>一般</td><td>非常好</td><td>一般</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XMLHttpRequest使用教程</title>
      <link href="2019/12/31/XMLHttpRequest%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>2019/12/31/XMLHttpRequest%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="XMLHttpRequest-兼容性"><a href="#XMLHttpRequest-兼容性" class="headerlink" title="XMLHttpRequest 兼容性"></a>XMLHttpRequest 兼容性</h2><p>关于 XMLHttpRequest 的浏览器兼容性，大家可以直接查看“Can I use”这个网站提供的结果<a href="https://caniuse.com/#search=XMLHttpRequest" target="_blank" rel="noopener">XMLHttpRequest</a>兼容性。</p><a id="more"></a><h2 id="使用-XMLHttpRequest-提交表单数据"><a href="#使用-XMLHttpRequest-提交表单数据" class="headerlink" title="使用 XMLHttpRequest 提交表单数据"></a>使用 XMLHttpRequest 提交表单数据</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// 构造表单数据</span></span><br><span class="line">  <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">  formData.append(<span class="string">'username'</span>, <span class="string">'johndoe'</span>);</span><br><span class="line">  formData.append(<span class="string">'id'</span>, <span class="number">123456</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 创建xhr对象 </span></span><br><span class="line">  <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">  <span class="comment">// 设置xhr请求的超时时间</span></span><br><span class="line">  xhr.timeout = <span class="number">3000</span>;<span class="comment">// 3秒</span></span><br><span class="line">  <span class="comment">// 设置响应返回的数据格式</span></span><br><span class="line">  xhr.responseType = <span class="string">"text"</span>;</span><br><span class="line">  <span class="comment">// 创建一个 post 请求,采用异步</span></span><br><span class="line">  xhr.open(<span class="string">'POST'</span>, <span class="string">'/server.php'</span>, <span class="literal">true</span>);</span><br><span class="line">  <span class="comment">// 注册相关事件回调处理函数</span></span><br><span class="line">  xhr.onload = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.status == <span class="number">200</span>||<span class="keyword">this</span>.status == <span class="number">304</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> res = <span class="string">'response'</span> <span class="keyword">in</span> xhr ? xhr.response : xhr.responseText</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  xhr.ontimeout = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;&#125;;</span><br><span class="line">  xhr.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;&#125;;</span><br><span class="line">  xhr.upload.onprogress = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//发送数据</span></span><br><span class="line">  xhr.send(formData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开发文档:<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpReques" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpReques</a><br>参考链接:<a href="https://segmentfault.com/a/1190000004322487#articleHeader16" target="_blank" rel="noopener">https://segmentfault.com/a/1190000004322487#articleHeader16</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XMLHttpRequest Level 2 使用指南</title>
      <link href="2019/12/31/XMLHttpRequest-Level-2-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>2019/12/31/XMLHttpRequest-Level-2-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>转载地址：<a href="http://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html</a></p><p><a href="http://en.wikipedia.org/wiki/XMLHttpRequest" target="_blank" rel="noopener">XMLHttpRequest</a>是一个浏览器接口，使得Javascript可以进行HTTP(S)通信。</p><p>最早，微软在IE 5引进了这个接口。因为它太有用，其他浏览器也模仿部署了，ajax操作因此得以诞生。</p><a id="more"></a><p>但是，这个接口一直没有标准化，每家浏览器的实现或多或少有点不同。HTML 5的概念形成后，W3C开始考虑标准化这个接口。2008年2月，就提出了<a href="http://dev.w3.org/2006/webapi/XMLHttpRequest-2/" target="_blank" rel="noopener">XMLHttpRequest Level 2</a> 草案。</p><p>这个XMLHttpRequest的新版本，提出了很多有用的新功能，将大大推动互联网革新。本文就对这个新版本进行详细介绍。</p><h2 id="一、老版本的XMLHttpRequest对象"><a href="#一、老版本的XMLHttpRequest对象" class="headerlink" title="一、老版本的XMLHttpRequest对象"></a>一、老版本的XMLHttpRequest对象</h2><p>在介绍新版本之前，我们先回顾一下老版本的用法。</p><p>首先，新建一个XMLHttpRequest的实例。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br></pre></td></tr></table></figure><p>然后，向远程主机发出一个HTTP请求。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xhr.open(<span class="string">'GET'</span>, <span class="string">'example.php'</span>);</span><br><span class="line">xhr.send();</span><br></pre></td></tr></table></figure><p>接着，就等待远程主机做出回应。这时需要监控XMLHttpRequest对象的状态变化，指定回调函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span> ) &#123;</span><br><span class="line">alert( xhr.responseText );</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">alert( xhr.statusText );</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>上面的代码包含了老版本XMLHttpRequest对象的主要属性：</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>xhr.readyState</td><td>XMLHttpRequest对象的状态，等于4表示数据已经接收完毕。</td></tr><tr><td>xhr.status</td><td>服务器返回的状态码，等于200表示一切正常。</td></tr><tr><td>xhr.responseText</td><td>服务器返回的文本数据</td></tr><tr><td>xhr.responseXML</td><td>服务器返回的XML格式的数据</td></tr><tr><td>xhr.statusText</td><td>服务器返回的状态文本。</td></tr></tbody></table><h2 id="二、老版本的缺点"><a href="#二、老版本的缺点" class="headerlink" title="二、老版本的缺点"></a>二、老版本的缺点</h2><p>老版本的XMLHttpRequest对象有以下几个缺点：</p><ul><li>只支持文本数据的传送，无法用来读取和上传二进制文件。</li><li>传送和接收数据时，没有进度信息，只能提示有没有完成。</li><li>受到<a href="http://www.w3.org/Security/wiki/Same_Origin_Policy" target="_blank" rel="noopener">“同域限制”</a>（Same Origin Policy），只能向同一域名的服务器请求数据。</li></ul><h2 id="三、新版本的功能"><a href="#三、新版本的功能" class="headerlink" title="三、新版本的功能"></a>三、新版本的功能</h2><ol><li>可以设置HTTP请求的时限。</li><li>可以使用FormData对象管理表单数据。</li><li>可以上传文件。</li><li>可以请求不同域名下的数据（跨域请求）。</li><li>可以获取服务器端的二进制数据。</li><li>可以获得数据传输的进度信息。</li></ol><p>下面，我就一一介绍这些新功能。</p><h3 id="3-1、HTTP请求的时限"><a href="#3-1、HTTP请求的时限" class="headerlink" title="3.1、HTTP请求的时限"></a>3.1、HTTP请求的时限</h3><p>有时，ajax操作很耗时，而且无法预知要花多少时间。如果网速很慢，用户可能要等很久。</p><p>新版本的XMLHttpRequest对象，增加了timeout属性，可以设置HTTP请求的时限。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.timeout = <span class="number">3000</span>;</span><br></pre></td></tr></table></figure><p>上面的语句，将最长等待时间设为3000毫秒。过了这个时限，就自动停止HTTP请求。与之配套的还有一个timeout事件，用来指定回调函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xhr.ontimeout = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">alert(<span class="string">'请求超时！'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前，Opera、Firefox和IE 10支持该属性，IE 8和IE 9的这个属性属于XDomainRequest对象，而Chrome和Safari还不支持。(注：由于是2012年9月份的文章，现在应该都是支持的)</p><h3 id="3-2、FormData对象"><a href="#3-2、FormData对象" class="headerlink" title="3.2、FormData对象"></a>3.2、FormData对象</h3><p>ajax操作往往用来传递表单数据。为了方便表单处理，HTML 5新增了一个FormData对象，可以模拟表单。</p><p>首先，新建一个FormData对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span><br></pre></td></tr></table></figure><p>然后，为它添加表单项。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">formData.append(<span class="string">'username'</span>, <span class="string">'张三'</span>);</span><br><span class="line">formData.append(<span class="string">'id'</span>, <span class="number">123456</span>);</span><br></pre></td></tr></table></figure><p>最后，直接传送这个FormData对象。这与提交网页表单的效果，完全一样。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.send(formData);</span><br></pre></td></tr></table></figure><p>FormData对象也可以用来获取网页表单的值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> form = <span class="built_in">document</span>.getElementById(<span class="string">'myform'</span>);</span><br><span class="line"><span class="keyword">var</span> formData = <span class="keyword">new</span> FormData(form);</span><br><span class="line">formData.append(<span class="string">'secret'</span>, <span class="string">'123456'</span>); <span class="comment">// 添加一个表单项</span></span><br><span class="line">xhr.open(<span class="string">'POST'</span>, form.action);</span><br><span class="line">xhr.send(formData);</span><br></pre></td></tr></table></figure><h3 id="3-3、上传文件"><a href="#3-3、上传文件" class="headerlink" title="3.3、上传文件"></a>3.3、上传文件</h3><p>新版XMLHttpRequest对象，不仅可以发送文本信息，还可以上传文件。</p><p>假定files是一个”选择文件”的表单元素（input[type=”file”]），我们将它装入FormData对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; files.length;i++) &#123;</span><br><span class="line">formData.append(<span class="string">'files[]'</span>, files[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，发送这个FormData对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.send(formData);</span><br></pre></td></tr></table></figure><h3 id="3-4、跨域资源共享（CORS）"><a href="#3-4、跨域资源共享（CORS）" class="headerlink" title="3.4、跨域资源共享（CORS）"></a>3.4、跨域资源共享（CORS）</h3><p>新版本的XMLHttpRequest对象，可以向不同域名的服务器发出HTTP请求。这叫做<a href="http://en.wikipedia.org/wiki/Cross-Origin_Resource_Sharing" target="_blank" rel="noopener">“跨域资源共享”</a>（Cross-origin resource sharing，简称CORS）。</p><p>使用”跨域资源共享”的前提，是浏览器必须支持这个功能，而且服务器端必须同意这种”跨域”。如果能够满足上面的条件，则代码的写法与不跨域的请求完全一样。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.open(<span class="string">'GET'</span>, <span class="string">'http://other.server/and/path/to/script'</span>);</span><br></pre></td></tr></table></figure><p>目前，除了IE 8和IE 9，主流浏览器都支持CORS，IE 10也将支持这个功能。服务器端的设置，请参考<a href="https://developer.mozilla.org/en-US/docs/Server-Side_Access_Control" target="_blank" rel="noopener">《Server-Side Access Control》</a>。</p><h3 id="3-5、接收二进制数据"><a href="#3-5、接收二进制数据" class="headerlink" title="3.5、接收二进制数据"></a>3.5、接收二进制数据</h3><h4 id="方法A：改写MIMEType"><a href="#方法A：改写MIMEType" class="headerlink" title="方法A：改写MIMEType"></a>方法A：改写MIMEType</h4><p>老版本的XMLHttpRequest对象，只能从服务器取回文本数据（否则它的名字就不用XML起首了），新版则可以取回二进制数据。</p><p>这里又分成两种做法。较老的做法是改写数据的MIMEType，将服务器返回的二进制数据伪装成文本数据，并且告诉浏览器这是用户自定义的字符集。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.overrideMimeType(<span class="string">"text/plain; charset=x-user-defined"</span>);</span><br></pre></td></tr></table></figure><p>然后，用responseText属性接收服务器返回的二进制数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> binStr = xhr.responseText;</span><br></pre></td></tr></table></figure><p>由于这时，浏览器把它当做文本数据，所以还必须再一个个字节地还原成二进制数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = binStr.length; i &lt; len; ++i) &#123;</span><br><span class="line">　　<span class="keyword">var</span> c = binStr.charCodeAt(i);</span><br><span class="line">　　<span class="keyword">var</span> byte = c &amp; <span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后一行的位运算”c &amp; 0xff”，表示在每个字符的两个字节之中，只保留后一个字节，将前一个字节扔掉。原因是浏览器解读字符的时候，会把字符自动解读成Unicode的0xF700-0xF7ff区段。</p><h4 id="方法B：responseType属性"><a href="#方法B：responseType属性" class="headerlink" title="方法B：responseType属性"></a>方法B：responseType属性</h4><p>从服务器取回二进制数据，较新的方法是使用新增的responseType属性。如果服务器返回文本数据，这个属性的值是”TEXT”，这是默认值。较新的浏览器还支持其他值，也就是说，可以接收其他格式的数据。</p><p>你可以把responseType设为blob，表示服务器传回的是二进制对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.open(<span class="string">'GET'</span>, <span class="string">'/path/to/image.png'</span>);</span><br><span class="line">xhr.responseType = <span class="string">'blob'</span>;</span><br></pre></td></tr></table></figure><p>接收数据的时候，用浏览器自带的Blob对象即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> blob = <span class="keyword">new</span> Blob([xhr.response], &#123;<span class="attr">type</span>: <span class="string">'image/png'</span>&#125;);</span><br></pre></td></tr></table></figure><p>注意，是读取xhr.response，而不是xhr.responseText。</p><p>你还可以将responseType设为arraybuffer，把二进制数据装在一个数组里。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.open(<span class="string">'GET'</span>, <span class="string">'/path/to/image.png'</span>);</span><br><span class="line">xhr.responseType = <span class="string">"arraybuffer"</span>;</span><br></pre></td></tr></table></figure><p>接收数据的时候，需要遍历这个数组。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrayBuffer = xhr.response;</span><br><span class="line"><span class="keyword">if</span> (arrayBuffer) &#123;</span><br><span class="line">　　<span class="keyword">var</span> byteArray = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(arrayBuffer);</span><br><span class="line">　　<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; byteArray.byteLength; i++) &#123;</span><br><span class="line">　　　　<span class="comment">// do something</span></span><br><span class="line">　　&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更详细的讨论，请看<a href="https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Sending_and_Receiving_Binary_Data" target="_blank" rel="noopener">Sending and Receiving Binary Data</a>。</p><h3 id="3-6、进度信息"><a href="#3-6、进度信息" class="headerlink" title="3.6、进度信息"></a>3.6、进度信息</h3><p>新版本的XMLHttpRequest对象，传送数据的时候，有一个progress事件，用来返回进度信息。</p><p>它分成上传和下载两种情况。下载的progress事件属于XMLHttpRequest对象，上传的progress事件属于XMLHttpRequest.upload对象。</p><p>我们先定义progress事件的回调函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xhr.onprogress = updateProgress;</span><br><span class="line">xhr.upload.onprogress = updateProgress;</span><br></pre></td></tr></table></figure><p>然后，在回调函数里面，使用这个事件的一些属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateProgress</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">　　<span class="keyword">if</span> (event.lengthComputable) &#123;</span><br><span class="line">　　　　<span class="keyword">var</span> percentComplete = event.loaded / event.total;</span><br><span class="line">　　&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码中，event.total是需要传输的总字节，event.loaded是已经传输的字节。如果event.lengthComputable不为真，则event.total等于0。</p><p>与progress事件相关的，还有其他五个事件，可以分别指定回调函数：</p><table><thead><tr><th>事件</th><th>说明</th></tr></thead><tbody><tr><td>load事件</td><td>传输成功完成。</td></tr><tr><td>abort事件</td><td>传输被用户取消。</td></tr><tr><td>error事件</td><td>传输中出现错误。</td></tr><tr><td>loadstart事件</td><td>传输开始。</td></tr><tr><td>loadEnd事件</td><td>传输结束，但是不知道成功还是失败。</td></tr></tbody></table><h2 id="四、阅读材料"><a href="#四、阅读材料" class="headerlink" title="四、阅读材料"></a>四、阅读材料</h2><ol><li><a href="http://dev.opera.com/articles/view/xhr2/" target="_blank" rel="noopener">Introduction to XMLHttpRequest Level 2</a>： 新功能的综合介绍。</li><li><a href="http://www.html5rocks.com/en/tutorials/file/xhr2/" target="_blank" rel="noopener">New Tricks in XMLHttpRequest 2</a>：一些用法的介绍。</li><li><a href="https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest" target="_blank" rel="noopener">Using XMLHttpRequest</a>：一些高级用法，主要针对Firefox浏览器。</li><li><a href="https://developer.mozilla.org/en-US/docs/HTTP_access_control" target="_blank" rel="noopener">HTTP Access Control</a>：CORS综述。</li><li><a href="http://dev.opera.com/articles/view/dom-access-control-using-cross-origin-resource-sharing/" target="_blank" rel="noopener">DOM access control using cross-origin resource sharing</a>：CORS的9种HTTP头信息</li><li><a href="https://developer.mozilla.org/en-US/docs/Server-Side_Access_Control" target="_blank" rel="noopener">Server-Side Access Control</a>：服务器端CORS设置。</li><li><a href="http://enable-cors.org/" target="_blank" rel="noopener">Enable CORS</a>：服务端CORS设置。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用 Git 命令清单</title>
      <link href="2019/12/25/%E5%B8%B8%E7%94%A8-Git-%E5%91%BD%E4%BB%A4%E6%B8%85%E5%8D%95/"/>
      <url>2019/12/25/%E5%B8%B8%E7%94%A8-Git-%E5%91%BD%E4%BB%A4%E6%B8%85%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<p>转载地址：<a href="https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html</a></p><p>我每天使用 Git ，但是很多命令记不住。</p><p>一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。</p><p><img src="/2019/12/25/常用-Git-命令清单/bg2015120901.png" alt="图1"></p><p>下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。</p><a id="more"></a><blockquote><ul><li>Workspace：工作区</li><li>Index / Stage：暂存区</li><li>Repository：仓库区（或本地仓库）</li><li>Remote：远程仓库</li></ul></blockquote><h2 id="一、新建代码库"><a href="#一、新建代码库" class="headerlink" title="一、新建代码库"></a>一、新建代码库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 方式1:在当前目录新建一个Git代码库</span><br><span class="line">$ git init</span><br><span class="line"></span><br><span class="line"># 方式2:新建一个目录，将其初始化为Git代码库</span><br><span class="line">$ git init [project-name]</span><br><span class="line"></span><br><span class="line"># 方式3:下载一个项目和它的整个代码历史</span><br><span class="line">$ git clone [url]</span><br></pre></td></tr></table></figure><h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><p>Git的设置文件为<code>.gitconfig</code>，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前的Git配置</span><br><span class="line">$ git config --list</span><br><span class="line"></span><br><span class="line"># 编辑Git配置文件</span><br><span class="line">$ git config -e [--global]</span><br><span class="line"></span><br><span class="line"># 设置提交代码时的用户信息</span><br><span class="line">$ git config [--global] user.name &quot;[name]&quot;</span><br><span class="line">$ git config [--global] user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure><h2 id="三、增加-删除文件"><a href="#三、增加-删除文件" class="headerlink" title="三、增加/删除文件"></a>三、增加/删除文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 添加指定文件到暂存区</span><br><span class="line">$ git add [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"># 添加指定目录到暂存区，包括子目录</span><br><span class="line">$ git add [dir]</span><br><span class="line"></span><br><span class="line"># 添加当前目录的所有文件到暂存区</span><br><span class="line">$ git add .</span><br><span class="line"></span><br><span class="line"># 添加每个变化前，都会要求确认</span><br><span class="line"># 对于同一个文件的多处变化，可以实现分次提交</span><br><span class="line">$ git add -p</span><br><span class="line"></span><br><span class="line"># 删除工作区文件，并且将这次删除放入暂存区</span><br><span class="line">$ git rm [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"># 停止追踪指定文件，但该文件会保留在工作区</span><br><span class="line">$ git rm --cached [file]</span><br><span class="line"></span><br><span class="line"># 改名文件，并且将这个改名放入暂存区</span><br><span class="line">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure><h2 id="四、代码提交"><a href="#四、代码提交" class="headerlink" title="四、代码提交"></a>四、代码提交</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 提交暂存区到仓库区</span><br><span class="line">$ git commit -m [message]</span><br><span class="line"></span><br><span class="line"># 提交暂存区的指定文件到仓库区</span><br><span class="line">$ git commit [file1] [file2] ... -m [message]</span><br><span class="line"></span><br><span class="line"># 提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class="line">$ git commit -a</span><br><span class="line"></span><br><span class="line"># 提交时显示所有diff信息</span><br><span class="line">$ git commit -v</span><br><span class="line"></span><br><span class="line"># 使用一次新的commit，替代上一次提交</span><br><span class="line"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br><span class="line">$ git commit --amend -m [message]</span><br><span class="line"></span><br><span class="line"># 重做上一次commit，并包括指定文件的新变化</span><br><span class="line">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure><h2 id="五、分支"><a href="#五、分支" class="headerlink" title="五、分支"></a>五、分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有本地分支</span><br><span class="line">$ git branch</span><br><span class="line"></span><br><span class="line"># 列出所有远程分支</span><br><span class="line">$ git branch -r</span><br><span class="line"></span><br><span class="line"># 列出所有本地分支和远程分支</span><br><span class="line">$ git branch -a</span><br><span class="line"></span><br><span class="line"># 新建一个分支，但依然停留在当前分支</span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"></span><br><span class="line"># 新建一个分支，并切换到该分支</span><br><span class="line">$ git checkout -b [branch]</span><br><span class="line"></span><br><span class="line"># 新建一个分支，指向指定commit</span><br><span class="line">$ git branch [branch] [commit]</span><br><span class="line"></span><br><span class="line"># 新建一个分支，与指定的远程分支建立追踪关系</span><br><span class="line">$ git branch --track [branch] [remote-branch]</span><br><span class="line"></span><br><span class="line"># 切换到指定分支，并更新工作区</span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line"></span><br><span class="line"># 切换到上一个分支</span><br><span class="line">$ git checkout -</span><br><span class="line"></span><br><span class="line"># 建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class="line">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class="line"></span><br><span class="line"># 合并指定分支到当前分支</span><br><span class="line">$ git merge [branch]</span><br><span class="line"></span><br><span class="line"># 选择一个commit，合并进当前分支</span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"></span><br><span class="line"># 删除分支</span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"></span><br><span class="line"># 删除远程分支</span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure><h2 id="六、标签"><a href="#六、标签" class="headerlink" title="六、标签"></a>六、标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有tag</span><br><span class="line">$ git tag</span><br><span class="line"></span><br><span class="line"># 新建一个tag在当前commit</span><br><span class="line">$ git tag [tag]</span><br><span class="line"></span><br><span class="line"># 新建一个tag在指定commit</span><br><span class="line">$ git tag [tag] [commit]</span><br><span class="line"></span><br><span class="line"># 删除本地tag</span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"></span><br><span class="line"># 删除远程tag</span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br><span class="line"></span><br><span class="line"># 查看tag信息</span><br><span class="line">$ git show [tag]</span><br><span class="line"></span><br><span class="line"># 提交指定tag</span><br><span class="line">$ git push [remote] [tag]</span><br><span class="line"></span><br><span class="line"># 提交所有tag</span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"></span><br><span class="line"># 新建一个分支，指向某个tag</span><br><span class="line">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure><h2 id="七、查看信息"><a href="#七、查看信息" class="headerlink" title="七、查看信息"></a>七、查看信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"># 显示有变更的文件</span><br><span class="line">$ git status</span><br><span class="line"></span><br><span class="line"># 显示当前分支的版本历史</span><br><span class="line">$ git log</span><br><span class="line"></span><br><span class="line"># 显示commit历史，以及每次commit发生变更的文件</span><br><span class="line">$ git log --stat</span><br><span class="line"></span><br><span class="line"># 搜索提交历史，根据关键词</span><br><span class="line">$ git log -S [keyword]</span><br><span class="line"></span><br><span class="line"># 显示某个commit之后的所有变动，每个commit占据一行</span><br><span class="line">$ git log [tag] HEAD --pretty=format:%s</span><br><span class="line"></span><br><span class="line"># 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件</span><br><span class="line">$ git log [tag] HEAD --grep feature</span><br><span class="line"></span><br><span class="line"># 显示某个文件的版本历史，包括文件改名</span><br><span class="line">$ git log --follow [file]</span><br><span class="line">$ git whatchanged [file]</span><br><span class="line"></span><br><span class="line"># 显示指定文件相关的每一次diff</span><br><span class="line">$ git log -p [file]</span><br><span class="line"></span><br><span class="line"># 显示过去5次提交</span><br><span class="line">$ git log -5 --pretty --oneline</span><br><span class="line"></span><br><span class="line"># 显示所有提交过的用户，按提交次数排序</span><br><span class="line">$ git shortlog -sn</span><br><span class="line"></span><br><span class="line"># 显示指定文件是什么人在什么时间修改过</span><br><span class="line">$ git blame [file]</span><br><span class="line"></span><br><span class="line"># 显示暂存区和工作区的差异</span><br><span class="line">$ git diff</span><br><span class="line"></span><br><span class="line"># 显示暂存区和上一个commit的差异</span><br><span class="line">$ git diff --cached [file]</span><br><span class="line"></span><br><span class="line"># 显示工作区与当前分支最新commit之间的差异</span><br><span class="line">$ git diff HEAD</span><br><span class="line"></span><br><span class="line"># 显示两次提交之间的差异</span><br><span class="line">$ git diff [first-branch]...[second-branch]</span><br><span class="line"></span><br><span class="line"># 显示今天你写了多少行代码</span><br><span class="line">$ git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;</span><br><span class="line"></span><br><span class="line"># 显示某次提交的元数据和内容变化</span><br><span class="line">$ git show [commit]</span><br><span class="line"></span><br><span class="line"># 显示某次提交发生变化的文件</span><br><span class="line">$ git show --name-only [commit]</span><br><span class="line"></span><br><span class="line"># 显示某次提交时，某个文件的内容</span><br><span class="line">$ git show [commit]:[filename]</span><br><span class="line"></span><br><span class="line"># 显示当前分支的最近几次提交</span><br><span class="line">$ git reflog</span><br></pre></td></tr></table></figure><h2 id="八、远程同步"><a href="#八、远程同步" class="headerlink" title="八、远程同步"></a>八、远程同步</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 下载远程仓库的所有变动</span><br><span class="line">$ git fetch [remote]</span><br><span class="line"></span><br><span class="line"># 显示所有远程仓库</span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line"># 显示某个远程仓库的信息</span><br><span class="line">$ git remote show [remote]</span><br><span class="line"></span><br><span class="line"># 增加一个新的远程仓库，并命名</span><br><span class="line">$ git remote add [shortname] [url]</span><br><span class="line"></span><br><span class="line"># 取回远程仓库的变化，并与本地分支合并</span><br><span class="line">$ git pull [remote] [branch]</span><br><span class="line"></span><br><span class="line"># 上传本地指定分支到远程仓库</span><br><span class="line">$ git push [remote] [branch]</span><br><span class="line"></span><br><span class="line"># 强行推送当前分支到远程仓库，即使有冲突</span><br><span class="line">$ git push [remote] --force</span><br><span class="line"></span><br><span class="line"># 推送所有分支到远程仓库</span><br><span class="line">$ git push [remote] --all</span><br></pre></td></tr></table></figure><h2 id="九、撤销"><a href="#九、撤销" class="headerlink" title="九、撤销"></a>九、撤销</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 恢复暂存区的指定文件到工作区</span><br><span class="line">$ git checkout [file]</span><br><span class="line"></span><br><span class="line"># 恢复某个commit的指定文件到暂存区和工作区</span><br><span class="line">$ git checkout [commit] [file]</span><br><span class="line"></span><br><span class="line"># 恢复暂存区的所有文件到工作区</span><br><span class="line">$ git checkout .</span><br><span class="line"></span><br><span class="line"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><span class="line">$ git reset [file]</span><br><span class="line"></span><br><span class="line"># 重置暂存区与工作区，与上一次commit保持一致</span><br><span class="line">$ git reset --hard</span><br><span class="line"></span><br><span class="line"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><span class="line">$ git reset [commit]</span><br><span class="line"></span><br><span class="line"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span><br><span class="line">$ git reset --hard [commit]</span><br><span class="line"></span><br><span class="line"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br><span class="line">$ git reset --keep [commit]</span><br><span class="line"></span><br><span class="line"># 新建一个commit，用来撤销指定commit</span><br><span class="line"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span><br><span class="line">$ git revert [commit]</span><br><span class="line"></span><br><span class="line"># 暂时将未提交的变化移除，稍后再移入</span><br><span class="line">$ git stash</span><br><span class="line">$ git stash pop</span><br></pre></td></tr></table></figure><h2 id="十、其他"><a href="#十、其他" class="headerlink" title="十、其他"></a>十、其他</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 生成一个可供发布的压缩包</span><br><span class="line">$ git archive</span><br></pre></td></tr></table></figure><h2 id="强制覆盖master分支代码"><a href="#强制覆盖master分支代码" class="headerlink" title="强制覆盖master分支代码"></a>强制覆盖master分支代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git fetch --all</span></span><br><span class="line"><span class="comment"># git reset --hard origin/master</span></span><br><span class="line"><span class="comment"># git pull</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub Actions 教程：定时发送天气邮件</title>
      <link href="2019/12/23/GitHub-Actions-%E6%95%99%E7%A8%8B%EF%BC%9A%E5%AE%9A%E6%97%B6%E5%8F%91%E9%80%81%E5%A4%A9%E6%B0%94%E9%82%AE%E4%BB%B6/"/>
      <url>2019/12/23/GitHub-Actions-%E6%95%99%E7%A8%8B%EF%BC%9A%E5%AE%9A%E6%97%B6%E5%8F%91%E9%80%81%E5%A4%A9%E6%B0%94%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>转载地址：<a href="http://www.ruanyifeng.com/blog/2019/12/github_actions.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2019/12/github_actions.html</a></p><p>2019年11月，GitHub 正式开放了 <a href="https://github.com/features/actions" target="_blank" rel="noopener">GitHub Actions</a> 这个功能，现在不用申请就能使用。</p><p>GitHub Actions 是一个 <a href="http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html" target="_blank" rel="noopener">CI/CD</a>（持续集成/持续部署）工具，但也可用作代码运行环境。功能非常强大，能够玩出许多花样。</p><p>我写的<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noopener">《GitHub Actions 入门教程》</a> 已经介绍了它的基本用法。本文紧接前一篇教程，给出一个简单实用的例子：每天定时运行一次脚本，获取天气预报，然后发送电子邮件。</p><a id="more"></a><p>完整代码可以从 GitHub 仓库 <a href="https://github.com/ruanyf/weather-action" target="_blank" rel="noopener">ruanyf/weather-action</a> 获取。</p><h2 id="第一步：获取天气预报"><a href="#第一步：获取天气预报" class="headerlink" title="第一步：获取天气预报"></a>第一步：获取天气预报</h2><p>网站 <a href="http://wttr.in/" target="_blank" rel="noopener">wttr.in</a> 支持命令行请求天气预报。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl wttr.in</span><br></pre></td></tr></table></figure><p>上面的命令会返回，你的 IP 地址所在位置的天气。</p><p><img src="/2019/12/23/GitHub-Actions-教程：定时发送天气邮件/01.jpg" alt="GitHub Page"></p><p>它还允许 URL 里面指定城市。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl wttr.in/Shanghai</span><br></pre></td></tr></table></figure><p>返回的数据可以通过<a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html" target="_blank" rel="noopener"><code>curl</code></a>命令的<code>-o</code>参数，保存成文件，以便后面发送。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -o result.html wttr.in/Shanghai</span><br></pre></td></tr></table></figure><p>wttr. in 允许定制天气预报的格式和内容，详见<a href="https://github.com/chubin/wttr.in" target="_blank" rel="noopener">它的文档</a>，这里就不展开了。最后封装好的脚本<code>weather.sh</code>，完整代码看<a href="https://github.com/ruanyf/weather-action/blob/master/weather.sh" target="_blank" rel="noopener">这里</a>。</p><h2 id="第二步：发送邮件"><a href="#第二步：发送邮件" class="headerlink" title="第二步：发送邮件"></a>第二步：发送邮件</h2><p>拿到天气预报以后，只要放在邮件里面，发出去就可以了。</p><p>我用的是网易 163 邮件的<a href="http://help.163.com/09/1223/14/5R7P3QI100753VB8.html" target="_blank" rel="noopener">免费发送服务</a>，需要在它的网站上开通，本地的配置请看下一步。</p><h2 id="第三步：配置-GitHub-Actions"><a href="#第三步：配置-GitHub-Actions" class="headerlink" title="第三步：配置 GitHub Actions"></a>第三步：配置 GitHub Actions</h2><p>触发 GitHub Actions 需要在项目仓库新建一个<code>.github/workflows</code>子目录，里面是 YAML 格式配置文件，文件名可以随便取。GitHub 只要发现配置文件，就会运行 Actions。</p><p>配置文件的第一部分是触发条件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name: &apos;GitHub Actions Weather Bot&apos;</span><br><span class="line"> </span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">  schedule:</span><br><span class="line">    - cron: &apos;0 21 * * *&apos;</span><br></pre></td></tr></table></figure><p>上面代码中，<code>name</code>字段是配置文件的描述，<code>on</code>字段是触发条件。我们指定两种情况下触发，第一种是代码 Push 进仓库，第二种是<a href="https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows#scheduled-events-schedule" target="_blank" rel="noopener">定时任务</a>，每天在国际标准时间21点（北京时间早上5点）运行。</p><p>接着，就是运行流程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">runs-on: ubuntu-latest</span><br><span class="line">steps:</span><br><span class="line">  - name: &apos;Checkout codes&apos;</span><br><span class="line">    uses: actions/checkout@v1</span><br></pre></td></tr></table></figure><p>上面代码中，运行环境指定为最新版的 Ubuntu。流程的第一步是从代码仓库获取代码。</p><p>拿到代码以后，就可以获取天气预报了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- name: &apos;Get weather report&apos;</span><br><span class="line">  run: bash ./weather.sh</span><br></pre></td></tr></table></figure><p>上面代码中，<code>run</code>字段就是所要运行的命令。</p><p>最后，发送邮件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- name: &apos;Send mail&apos;</span><br><span class="line">  uses: dawidd6/action-send-mail@master</span><br><span class="line">  with:</span><br><span class="line">    serveraddress: smtp.163.com</span><br><span class="line">    serverport: 465</span><br><span class="line">    username: $&#123;&#123; secrets.MAILUSERNAME &#125;&#125;</span><br><span class="line">    password: $&#123;&#123; secrets.MAILPASSWORD &#125;&#125;</span><br><span class="line">    subject: Shanghai Weather Report</span><br><span class="line">    body: file://result.html</span><br><span class="line">    to: yifeng.ruan@gmail.com</span><br><span class="line">    from: GitHub Actions</span><br><span class="line">    content_type: text/html</span><br></pre></td></tr></table></figure><p>上面代码中，发送邮件使用的是一个已经写好的 action，只要配几个参数就可以用。参数之中，邮件 SMTP 服务器的用户名和密码，使用的是加密变量，需要在项目的<code>settings/secrets</code>菜单里面设置。</p><p>完整的配置文件看这里。更具体的语法解释可以参考<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noopener">《GitHub Actions 入门教程》</a>。</p><p>写好配置，推送到仓库以后，就可以每天清早收到一封天气预报邮件了。在这个基础上不难扩展，可以定时执行各种脚本（比如每5分钟检查一次某个网站是否在线），然后将结果发到指定的渠道，这里就有一个发到社交媒体 Telegram 的<a href="https://github.com/signalnerve/github-actions-weather-bot" target="_blank" rel="noopener">例子</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Actions </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub Actions 入门教程</title>
      <link href="2019/12/23/GitHub-Actions-%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
      <url>2019/12/23/GitHub-Actions-%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>转载地址：<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html</a></p><p><a href="https://github.com/features/actions" target="_blank" rel="noopener">GitHub Actions</a> 是 GitHub 的持续集成服务，于2018年10月<a href="https://github.blog/changelog/2018-10-16-github-actions-limited-beta/" target="_blank" rel="noopener">推出</a>。</p><p>这些天，我一直在试用，觉得它非常强大，有创意，比 Travis CI 玩法更多。</p><p>本文是一个简单教程，演示如何使用 GitHub Actions 自动发布一个 React 应用到 GitHub Pages。</p><a id="more"></a><h2 id="一、GitHub-Actions-是什么？"><a href="#一、GitHub-Actions-是什么？" class="headerlink" title="一、GitHub Actions 是什么？"></a>一、GitHub Actions 是什么？</h2><p>大家知道，持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。</p><p>很多操作在不同项目里面是类似的，完全可以共享。GitHub 注意到了这一点，想出了一个很妙的点子，允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。</p><p>如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。</p><p>GitHub 做了一个<a href="https://github.com/marketplace?type=actions" target="_blank" rel="noopener">官方市场</a>，可以搜索到他人提交的 actions。另外，还有一个 <a href="https://github.com/sdras/awesome-actions" target="_blank" rel="noopener">awesome actions</a> 的仓库，也可以找到不少 action。</p><p><img src="/2019/12/23/GitHub-Actions-入门教程/01.png" alt="官方市场"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">actions/setup-node@74bc508 # 指向一个 commit</span><br><span class="line">actions/setup-node@v1.0    # 指向一个标签</span><br><span class="line">actions/setup-node@master  # 指向一个分支</span><br></pre></td></tr></table></figure><h2 id="二、基本概念"><a href="#二、基本概念" class="headerlink" title="二、基本概念"></a>二、基本概念</h2><p>GitHub Actions 有一些自己的术语。</p><p>（1）workflow （工作流程）：持续集成一次运行的过程，就是一个 workflow。</p><p>（2）job （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。</p><p>（3）step（步骤）：每个 job 由多个 step 构成，一步步完成。</p><p>（4）action （动作）：每个 step 可以依次执行一个或多个命令（action）。</p><h2 id="三、workflow-文件"><a href="#三、workflow-文件" class="headerlink" title="三、workflow 文件"></a>三、workflow 文件</h2><p>GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的<code>.github/workflows</code>目录。</p><p>workflow 文件采用 YAML 格式，文件名可以任意取，但是后缀名统一为<code>.yml</code>，比如<code>foo.yml</code>。一个库可以有多个 workflow 文件。GitHub 只要发现<code>.github/workflows</code>目录里面有<code>.yml</code>文件，就会自动运行该文件。</p><p>workflow 文件的配置字段非常多，详见<a href="https://help.github.com/en/articles/workflow-syntax-for-github-actions" target="_blank" rel="noopener">官方文档</a>。下面是一些基本字段。</p><h3 id="（1）name"><a href="#（1）name" class="headerlink" title="（1）name"></a>（1）<code>name</code></h3><p><code>name</code>字段是 workflow 的名称。如果省略该字段，默认为当前 workflow 的文件名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name: GitHub Actions Demo</span><br></pre></td></tr></table></figure><h3 id="（2）on"><a href="#（2）on" class="headerlink" title="（2）on"></a>（2）<code>on</code></h3><p><code>on</code>字段指定触发 workflow 的条件，通常是某些事件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">on: push</span><br></pre></td></tr></table></figure><p>上面代码指定，<code>push</code>事件触发 workflow。</p><p><code>on</code>字段也可以是事件的数组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">on: [push, pull_request]</span><br></pre></td></tr></table></figure><p>上面代码指定，<code>push</code>事件或<code>pull_request</code>事件都可以触发 workflow。</p><p>完整的事件列表，请查看<a href="https://help.github.com/en/articles/events-that-trigger-workflows" target="_blank" rel="noopener">官方文档</a>。除了代码库事件，GitHub Actions 也支持外部事件触发，或者定时运行。</p><h3 id="（3）on-lt-push-pull-request-gt-lt-tags-branches-gt"><a href="#（3）on-lt-push-pull-request-gt-lt-tags-branches-gt" class="headerlink" title="（3）on.&lt;push|pull_request&gt;.&lt;tags|branches&gt;"></a>（3）<code>on.&lt;push|pull_request&gt;.&lt;tags|branches&gt;</code></h3><p>指定触发事件时，可以限定分支或标签。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:    </span><br><span class="line">      - master</span><br></pre></td></tr></table></figure><p>上面代码指定，只有<code>master</code>分支发生<code>push</code>事件时，才会触发 workflow。</p><h3 id="（4）jobs-lt-job-id-gt-name"><a href="#（4）jobs-lt-job-id-gt-name" class="headerlink" title="（4）jobs.&lt;job_id&gt;.name"></a>（4）<code>jobs.&lt;job_id&gt;.name</code></h3><p>workflow 文件的主体是<code>jobs</code>字段，表示要执行的一项或多项任务。</p><p><code>jobs</code>字段里面，需要写出每一项任务的<code>job_id</code>，具体名称自定义。<code>job_id</code>里面的<code>name</code>字段是任务的说明。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jobs:</span><br><span class="line">  my_first_job:</span><br><span class="line">    name: My first job</span><br><span class="line">  my_second_job:</span><br><span class="line">    name: My second job</span><br></pre></td></tr></table></figure><p>上面代码的<code>jobs</code>字段包含两项任务，<code>job_id</code>分别是<code>my_first_job</code>和<code>my_second_job</code>。</p><h3 id="（5）jobs-lt-job-id-gt-needs"><a href="#（5）jobs-lt-job-id-gt-needs" class="headerlink" title="（5）jobs.&lt;job_id&gt;.needs"></a>（5）<code>jobs.&lt;job_id&gt;.needs</code></h3><p><code>needs</code>字段指定当前任务的依赖关系，即运行顺序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">jobs:</span><br><span class="line">  job1:</span><br><span class="line">  job2:</span><br><span class="line">    needs: job1</span><br><span class="line">  job3:</span><br><span class="line">    needs: [job1, job2]</span><br></pre></td></tr></table></figure><p>上面代码中，<code>job1</code>必须先于<code>job2</code>完成，而<code>job3</code>等待<code>job1</code>和<code>job2</code>的完成才能运行。因此，这个 workflow 的运行顺序依次为：<code>job1</code>、<code>job2</code>、<code>job3</code>。</p><h3 id="（6）jobs-lt-job-id-gt-runs-on"><a href="#（6）jobs-lt-job-id-gt-runs-on" class="headerlink" title="（6）jobs.&lt;job_id&gt;.runs-on"></a>（6）<code>jobs.&lt;job_id&gt;.runs-on</code></h3><p><code>runs-on</code>字段指定运行所需要的虚拟机环境。它是必填字段。目前可用的虚拟机如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ubuntu-latest，ubuntu-18.04或ubuntu-16.04</span><br><span class="line">windows-latest，windows-2019或windows-2016</span><br><span class="line">macOS-latest或macOS-10.14</span><br></pre></td></tr></table></figure><p>下面代码指定虚拟机环境为<code>ubuntu-18.04</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">runs-on: ubuntu-18.04</span><br></pre></td></tr></table></figure><h3 id="（7）jobs-lt-job-id-gt-steps"><a href="#（7）jobs-lt-job-id-gt-steps" class="headerlink" title="（7）jobs.&lt;job_id&gt;.steps"></a>（7）<code>jobs.&lt;job_id&gt;.steps</code></h3><p><code>steps</code>字段指定每个 Job 的运行步骤，可以包含一个或多个步骤。每个步骤都可以指定以下三个字段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jobs.&lt;job_id&gt;.steps.name：步骤名称。</span><br><span class="line">jobs.&lt;job_id&gt;.steps.run：该步骤运行的命令或者 action。</span><br><span class="line">jobs.&lt;job_id&gt;.steps.env：该步骤所需的环境变量。</span><br></pre></td></tr></table></figure><p>下面是一个完整的 workflow 文件的范例。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">name: Greeting from Mona</span><br><span class="line">on: push</span><br><span class="line"></span><br><span class="line">jobs:</span><br><span class="line">  my-job:</span><br><span class="line">    name: My Job</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">    - name: Print a greeting</span><br><span class="line">      env:</span><br><span class="line">        MY_VAR: Hi there! My name is</span><br><span class="line">        FIRST_NAME: Mona</span><br><span class="line">        MIDDLE_NAME: The</span><br><span class="line">        LAST_NAME: Octocat</span><br><span class="line">      run: |</span><br><span class="line">        echo $MY_VAR $FIRST_NAME $MIDDLE_NAME $LAST_NAME.</span><br></pre></td></tr></table></figure><p>上面代码中，<code>steps</code>字段只包括一个步骤。该步骤先注入四个环境变量，然后执行一条 Bash 命令。</p><h2 id="四、实例：React-项目发布到-GitHub-Pages"><a href="#四、实例：React-项目发布到-GitHub-Pages" class="headerlink" title="四、实例：React 项目发布到 GitHub Pages"></a>四、实例：React 项目发布到 GitHub Pages</h2><p>下面是一个实例，通过 GitHub Actions 构建一个 React 项目，并发布到 GitHub Pages。最终代码都在<a href="https://github.com/ruanyf/github-actions-demo" target="_blank" rel="noopener">这个仓库</a>里面，发布后的参考网址为<a href="https://ruanyf.github.io/github-actions-demo" target="_blank" rel="noopener">ruanyf.github.io/github-actions-demo</a>。</p><p>第一步，GitHub Actions 目前还处在测试阶段，需要到<a href="https://github.com/features/actions/signup/" target="_blank" rel="noopener">这个网址</a>申请测试资格。申请以后，可能需要几天才能通过。据说，2019年11月就会放开。</p><p>获得资格后，仓库顶部的菜单会出现<code>Actions</code>一项。</p><p><img src="/2019/12/23/GitHub-Actions-入门教程/02.jpg" alt="Actions"></p><p>第二步，这个示例需要将构建成果发到 GitHub 仓库，因此需要 GitHub 密钥。按照官方文档，生成一个密钥。然后，将这个密钥储存到当前仓库的<code>Settings/Secrets</code>里面。</p><p><img src="/2019/12/23/GitHub-Actions-入门教程/03.jpg" alt="Secrets"></p><p>上图是储存秘密的环境变量的地方。环境变量的名字可以随便起，这里用的是<code>ACCESS_TOKEN</code>。如果你不用这个名字，后面脚本里的变量名也要跟着改。</p><p>第三步，本地计算机使用<a href="https://github.com/facebook/create-react-app" target="_blank" rel="noopener"><code>create-react-app</code></a>，生成一个标准的 React 应用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npx create-react-app github-actions-demo</span><br><span class="line">$ cd github-actions-demo</span><br></pre></td></tr></table></figure><p>然后，打开<code>package.json</code>文件，加一个<code>homepage</code>字段，表示该应用发布后的根目录（参见<a href="https://create-react-app.dev/docs/deployment#building-for-relative-paths" target="_blank" rel="noopener">官方文档</a>）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;homepage&quot;: &quot;https://[username].github.io/github-actions-demo&quot;,</span><br></pre></td></tr></table></figure><p>上面代码中，将<code>[username]</code>替换成你的 GitHub 用户名，参见<a href="https://github.com/ruanyf/github-actions-demo/blob/master/package.json#L10" target="_blank" rel="noopener">范例</a>。</p><p>第四步，在这个仓库的<code>.github/workflows</code>目录，生成一个 workflow 文件，名字可以随便取，这个示例是<code>ci.yml</code>。</p><p>我们选用一个别人已经写好的 action：<a href="我们选用一个别人已经写好的 action：JamesIves/github-pages-deploy-action，它提供了 workflow 的范例文件，直接拷贝过来就行了（查看源码）。">JamesIves/github-pages-deploy-action</a>，它提供了 workflow 的范例文件，直接拷贝过来就行了（查看<a href="https://github.com/ruanyf/github-actions-demo/blob/master/.github/workflows/ci.yml" target="_blank" rel="noopener">源码</a>）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">name: GitHub Actions Build and Deploy Demo</span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - master</span><br><span class="line">jobs:</span><br><span class="line">  build-and-deploy:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">    - name: Checkout</span><br><span class="line">      uses: actions/checkout@master</span><br><span class="line"></span><br><span class="line">    - name: Build and Deploy</span><br><span class="line">      uses: JamesIves/github-pages-deploy-action@master</span><br><span class="line">      env:</span><br><span class="line">        ACCESS_TOKEN: $&#123;&#123; secrets.ACCESS_TOKEN &#125;&#125;</span><br><span class="line">        BRANCH: gh-pages</span><br><span class="line">        FOLDER: build</span><br><span class="line">        BUILD_SCRIPT: npm install &amp;&amp; npm run build</span><br></pre></td></tr></table></figure><p>上面这个 workflow 文件的要点如下。</p><ol><li>整个流程在master分支发生push事件时触发。</li><li>只有一个job，运行在虚拟机环境ubuntu-latest。</li><li>第一步是获取源码，使用的 action 是actions/checkout。</li><li>第二步是构建和部署，使用的 action 是JamesIves/github-pages-deploy-action。</li><li>第二步需要四个环境变量，分别为 GitHub 密钥、发布分支、构建成果所在目录、构建脚本。其中，只有 GitHub 密钥是秘密变量，需要写在双括号里面，其他三个都可以直接写在文件里。</li></ol><p>第五步，保存上面的文件后，将整个仓库推送到 GitHub。</p><p>GitHub 发现了 workflow 文件以后，就会自动运行。你可以在网站上实时查看<a href="https://github.com/ruanyf/github-actions-demo/commit/24fbf6a875351297f31434fd44bc3146accf9e59/checks" target="_blank" rel="noopener">运行日志</a>，日志默认保存30天。</p><p><img src="/2019/12/23/GitHub-Actions-入门教程/04.jpg" alt="运行日志"></p><p>等到 workflow 运行结束，访问 <a href="https://ruanyf.github.io/github-actions-demo/" target="_blank" rel="noopener">GitHub Page</a>，会看到构建成果已经发上网了。</p><p><img src="/2019/12/23/GitHub-Actions-入门教程/05.jpg" alt="GitHub Page"></p><p>以后，每次修改后推送源码，GitHub Actions 都会自动运行，将构建产物发布到网页。</p><h2 id="五、参考链接"><a href="#五、参考链接" class="headerlink" title="五、参考链接"></a>五、参考链接</h2><ul><li><a href="https://help.github.com/en/categories/automating-your-workflow-with-github-actions" target="_blank" rel="noopener">GitHub Pages 官方文档</a></li><li><a href="https://lukeboyle.com/blog-posts/2019/08/github-actions-for-web-apps/" target="_blank" rel="noopener">Github Actions for web apps</a>, Luke Boyle</li><li><a href="https://medium.com/@adam.zolyak/my-first-week-with-github-actions-5d92de4c4851" target="_blank" rel="noopener">My First Week With GitHub Actions</a>, Adam Zolyak</li></ul>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Actions </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Composer 安装与使用</title>
      <link href="2019/12/19/Composer-%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>2019/12/19/Composer-%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>原文地址：<a href="https://www.runoob.com/w3cnote/composer-install-and-usage.html" target="_blank" rel="noopener">https://www.runoob.com/w3cnote/composer-install-and-usage.html</a></p><p>Composer 是 PHP 的一个依赖管理工具。我们可以在项目中声明所依赖的外部工具库，Composer 会帮你安装这些依赖的库文件，有了它，我们就可以很轻松的使用一个命令将其他人的优秀代码引用到我们的项目中来。</p><p>Composer 默认情况下不是全局安装，而是基于指定的项目的某个目录中（例如 vendor）进行安装。</p><a id="more"></a><p>Composer 需要 PHP <code>5.3.2+</code> 以上版本，且需要开启 <code>openssl</code>。</p><p>Composer 可运行在 Windows 、 Linux 以及 OSX 平台上。</p><h2 id="Composer-的安装"><a href="#Composer-的安装" class="headerlink" title="Composer 的安装"></a>Composer 的安装</h2><h3 id="Wondows-平台"><a href="#Wondows-平台" class="headerlink" title="Wondows 平台"></a>Wondows 平台</h3><p>Wondows 平台上，我们只需要下载 <a href="https://getcomposer.org/Composer-Setup.exe" target="_blank" rel="noopener">Composer-Setup.exe</a> 后，一步步安装即可。</p><p>需要注意的是你需要开启 <code>openssl</code> 配置，我们打开 php 目录下的 <code>php.ini</code>，将 <code>extension=php_openssl.dll</code> 前面的分号去掉就可以了。</p><p>安装成功后，我们可以通过命令窗口(cmd) 输入 <code>composer --version</code> 命令来查看是否安装成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ composer --version</span><br><span class="line">Composer version 1.8.0 2018-12-03 10:31:16</span><br></pre></td></tr></table></figure><p>接下来我们可以更改 Packagist 为<strong>国内镜像</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure><h3 id="Linux-平台"><a href="#Linux-平台" class="headerlink" title="Linux 平台"></a>Linux 平台</h3><p>Linux 平台可以使用以下命令来安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[...]# php -r &quot;copy(&apos;https://install.phpcomposer.com/installer&apos;, &apos;composer-setup.php&apos;);&quot;</span><br><span class="line">[...]# php composer-setup.php</span><br><span class="line"></span><br><span class="line">All settings correct for using Composer</span><br><span class="line">Downloading...</span><br><span class="line"></span><br><span class="line">Composer (version 1.6.5) successfully installed to: /root/composer.phar</span><br><span class="line">Use it: php composer.phar</span><br></pre></td></tr></table></figure><p>移动 composer.phar，这样 composer 就可以进行全局调用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[...]# mv composer.phar /usr/local/bin/composer</span><br></pre></td></tr></table></figure><p>切换为<strong>国内镜像</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[...]# composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure><p>更新 composer：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[...]# composer selfupdate</span><br></pre></td></tr></table></figure><h3 id="Mac-OS-系统"><a href="#Mac-OS-系统" class="headerlink" title="Mac OS 系统"></a>Mac OS 系统</h3><p>Mac OS 系统可以使用以下命令来安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -sS https://getcomposer.org/installer | php</span><br><span class="line">$ sudo mv composer.phar /usr/local/bin/composer</span><br><span class="line">$ composer --version</span><br><span class="line">Composer version 1.7.2 2018-08-16 16:57:12</span><br></pre></td></tr></table></figure><p>切换为国内镜像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure><p>更新 composer：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer selfupdate</span><br></pre></td></tr></table></figure><h2 id="Composer-的使用"><a href="#Composer-的使用" class="headerlink" title="Composer 的使用"></a>Composer 的使用</h2><p>要使用 Composer，我们需要先在项目的目录下创建一个 composer.json 文件，文件描述了项目的依赖关系。</p><p>文件格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;require&quot;: &#123;</span><br><span class="line">        &quot;monolog/monolog&quot;: &quot;1.2.*&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上文件说明我们需要下载从 1.2 开始的任何版本的 monolog。</p><p>接下来只要运行以下命令即可安装依赖包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer install</span><br></pre></td></tr></table></figure><h3 id="require-命令"><a href="#require-命令" class="headerlink" title="require 命令"></a>require 命令</h3><p>除了使用 install 命令外，我们也可以使用 require 命令快速的安装一个依赖而不需要手动在 composer.json 里添加依赖信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer require monolog/monolog</span><br></pre></td></tr></table></figure><p>Composer 会先找到合适的版本，然后更新<code>composer.json</code>文件，在 <code>require</code> 那添加 <code>monolog/monolog</code> 包的相关信息，再把相关的依赖下载下来进行安装，最后更新 <code>composer.lock</code> 文件并生成 <code>php</code> 的自动加载文件。</p><h3 id="update-命令"><a href="#update-命令" class="headerlink" title="update 命令"></a>update 命令</h3><p>update 命令用于更新项目里所有的包，或者指定的某些包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 更新所有依赖</span><br><span class="line">$ composer update</span><br><span class="line"></span><br><span class="line"># 更新指定的包</span><br><span class="line">$ composer update monolog/monolog</span><br><span class="line"></span><br><span class="line"># 更新指定的多个包</span><br><span class="line">$ composer update monolog/monolog symfony/dependency-injection</span><br><span class="line"></span><br><span class="line"># 还可以通过通配符匹配包</span><br><span class="line">$ composer update monolog/monolog symfony/*</span><br></pre></td></tr></table></figure><p>需要注意的时，包能升级的版本会受到版本约束的约束，包不会升级到超出约束的版本的范围。例如如果 composer.json 里包的版本约束为 ^1.10，而最新版本为 2.0。那么 update 命令是不能把包升级到 2.0 版本的，只能最高升级到 1.x 版本。关于版本约束请看后面的介绍。</p><h3 id="remove-命令"><a href="#remove-命令" class="headerlink" title="remove 命令"></a>remove 命令</h3><p>remove 命令用于移除一个包及其依赖（在依赖没有被其他包使用的情况下），如果依赖被其他包使用，则无法移除：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ composer remove monolog/monolog</span><br><span class="line">Loading composer repositories with package information</span><br><span class="line">Updating dependencies (including require-dev)</span><br><span class="line">Package operations: 0 installs, 0 updates, 2 removals</span><br><span class="line">  - Removing psr/log (1.0.2)</span><br><span class="line">  - Removing monolog/monolog (1.23.0)</span><br><span class="line">Generating autoload files</span><br></pre></td></tr></table></figure><h3 id="search-命令"><a href="#search-命令" class="headerlink" title="search 命令"></a>search 命令</h3><p>search 命令可以搜索包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer search monolog</span><br></pre></td></tr></table></figure><p>该命令会输出包及其描述信息，如果只想输出包名可以使用 <code>--only-name</code> 参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer search --only-name monolog</span><br></pre></td></tr></table></figure><h3 id="show-命令"><a href="#show-命令" class="headerlink" title="show 命令"></a>show 命令</h3><p>show 命令可以列出当前项目使用到包的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有已经安装的包</span><br><span class="line">$ composer show</span><br><span class="line"></span><br><span class="line"># 可以通过通配符进行筛选</span><br><span class="line">$ composer show monolog/*</span><br><span class="line"></span><br><span class="line"># 显示具体某个包的信息</span><br><span class="line">$ composer show monolog/monolog</span><br></pre></td></tr></table></figure><h2 id="版本约束"><a href="#版本约束" class="headerlink" title="版本约束"></a>版本约束</h2><h3 id="精确版本"><a href="#精确版本" class="headerlink" title="精确版本"></a>精确版本</h3><p>我们可以告诉 Composer 安装的具体版本，例如：<code>1.0.2</code>，指定 <code>1.0.2</code> 版本。</p><h3 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h3><p>通过使用比较操作符来指定包的范围。这些操作符包括：<code>&gt;</code>，<code>&gt;=</code>，<code>&lt;</code>，<code>&lt;=</code>，<code>!=</code>。</p><p>你可以定义多个范围，使用空格或者逗号 <code>,</code> 表示逻辑上的与，使用双竖线 <code>||</code> 表示逻辑上的或。其中与的优先级会大于或。 实例：</p><ul><li><code>&gt;=1.0</code></li><li><code>&gt;=1.0 &lt;2.0</code></li><li><code>&gt;=1.0 &lt;1.1 || &gt;=1.2</code></li></ul><p>我们也可以通过使用连字符 <code>-</code> 来指定版本范围。</p><p>连字符的左边表明了 <code>&gt;=</code> 的版本，如果右边的版本不是完整的版本号，则会被使用通配符进行补全。例如<code>1.0 - 2.0</code>等同于<code>&gt;=1.0.0 &lt;2.1</code>（<code>2.</code>0相当于<code>2.0.*</code>），而<code>1.0.0 - 2.1.0</code>则等同于<code>&gt;=1.0.0 &lt;=2.1.0</code>。</p><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><p>可以使用通配符来设置版本。<code>1.0.*</code>相当于<code>&gt;=1.0 &lt;1.1</code>。<br>例子：<code>1.0.*</code></p><h3 id="波浪号"><a href="#波浪号" class="headerlink" title="波浪号 ~"></a>波浪号 ~</h3><p>我们先通过后面这个例子去解释~操作符的用法：<code>~1.2</code>相当于<code>&gt;=1.2 &lt;2.0.0</code>，而<code>~1.2.3</code>相当于<code>&gt;=1.2.3 &lt;1.3.0</code>。对于使用<a href="http://semver.org/" target="_blank" rel="noopener">Semantic Versioning</a>作为版本号标准的项目来说，这种版本约束方式很实用。例如<code>~1.2</code>定义了最小的小版本号，然后你可以升级<code>2.0</code>以下的任何版本而不会出问题，因为按照Semantic Versioning的版本定义，小版本的升级不应该有兼容性的问题。简单来说，<code>~</code>定义了最小的版本，并且允许版本的最后一位版本号进行升级（没懂得话，请再看一边前面的例子）。<br>例子：<code>~1.2</code></p><blockquote><p>需要注意的是，如果<code>~</code>作用在主版本号上，例如<code>~1</code>，按照上面的说法，Composer可以安装版本<code>1</code>以后的主版本，但是事实上是<code>~1</code>会被当作<code>~1.0</code>对待，只能增加小版本，不能增加主版本。</p></blockquote><h3 id="折音号"><a href="#折音号" class="headerlink" title="折音号 ^"></a>折音号 ^</h3><p><code>^</code>操作符的行为跟Semantic Versioning有比较大的关联，它允许升级版本到安全的版本。例如，<code>^1.2.3</code>相当于<code>&gt;=1.2.3 &lt;2.0.0</code>，因为在<code>2.0</code>版本前的版本应该都没有兼容性的问题。而对于<code>1.0</code>之前的版本，这种约束方式也考虑到了安全问题，例如<code>^0.3</code>会被当作<code>&gt;=0.3.0 &lt;0.4.0</code>对待。<br>例子：<code>^1.2.3</code></p><h2 id="版本稳定性"><a href="#版本稳定性" class="headerlink" title="版本稳定性"></a>版本稳定性</h2><p>如果你没有显式的指定版本的稳定性，Composer会根据使用的操作符，默认在内部指定为-dev或者-stable。例如：</p><table><thead><tr><th>约束</th><th>内部约束</th></tr></thead><tbody><tr><td>1.2.3</td><td>=1.2.3.0-stable</td></tr><tr><td>&gt;1.2</td><td>&gt;1.2.0.0-stable</td></tr><tr><td>&gt;=1.2</td><td>&gt;=1.2.0.0-dev</td></tr><tr><td>&gt;=1.2-stable</td><td>&gt;=1.2.0.0-stable</td></tr><tr><td>&lt;1.3</td><td>&lt;1.3.0.0-dev</td></tr><tr><td>&lt;=1.3</td><td>&lt;=1.3.0.0-stable</td></tr><tr><td>1 - 2</td><td>&gt;=1.0.0.0-dev &lt;3.0.0.0-dev</td></tr><tr><td>~1.3</td><td>&gt;=1.3.0.0-dev &lt;2.0.0.0-dev</td></tr><tr><td>1.4.*</td><td>&gt;=1.4.0.0-dev &lt;1.5.0.0-dev</td></tr></tbody></table><p>例子：<code>1.0 - 2.0</code><br>如果你想指定版本只要稳定版本，你可以在版本后面添加后缀<code>-stable</code>。<br><code>minimum-stability</code> 配置项定义了包在选择版本时对稳定性的选择的默认行为。默认是<code>stable</code>。它的值如下（按照稳定性排序）：<code>dev</code>，<code>alpha</code>，<code>beta</code>，<code>RC</code>和<code>stable</code>。除了修改这个配置去修改这个默认行为，我们还可以通过稳定性标识（例如<code>@stable</code>和<code>@dev</code>）来安装一个相比于默认配置不同稳定性的版本。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;require&quot;: &#123;</span><br><span class="line">        &quot;monolog/monolog&quot;: &quot;1.0.*@beta&quot;,</span><br><span class="line">        &quot;acme/foo&quot;: &quot;@dev&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next主题引用块加颜色(Bootstrap Callout)</title>
      <link href="2019/12/17/Next%E4%B8%BB%E9%A2%98%E5%BC%95%E7%94%A8%E5%9D%97%E5%8A%A0%E9%A2%9C%E8%89%B2-Bootstrap-Callout/"/>
      <url>2019/12/17/Next%E4%B8%BB%E9%A2%98%E5%BC%95%E7%94%A8%E5%9D%97%E5%8A%A0%E9%A2%9C%E8%89%B2-Bootstrap-Callout/</url>
      
        <content type="html"><![CDATA[<p>我们在写文章时，经常会有一些警告、注意和提示等信息，如果单纯放在引用块里不是很明显，如果你使用的是NexT主题，那么可以使用 <strong>Bootstrap Callout</strong> 来改变引用块的颜色。</p><p>使用方式：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note class_name %&#125; Content (md partial supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>class_name</code> 可以是以下列表中的一个值：</p><ul><li>default</li><li>primary</li><li>success</li><li>info</li><li>warning</li><li>danger</li></ul><p><code>Content</code> 为提示内容</p><p>效果示例:</p><p><img src="/2019/12/17/Next主题引用块加颜色-Bootstrap-Callout/bootstrap-callout.png" alt="效果示例"></p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Next主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 语言环境安装</title>
      <link href="2019/12/17/Go-%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
      <url>2019/12/17/Go-%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>Go 语言支持以下系统：</p><ul><li>Linux</li><li>FreeBSD</li><li>Mac OS X（也称为 Darwin）</li><li>Windows</li></ul><p>安装包下载地址为：<a href="https://golang.org/dl/" target="_blank" rel="noopener">https://golang.org/dl/</a>。</p><p>如果打不开可以使用这个地址：<a href="https://golang.google.cn/dl/" target="_blank" rel="noopener">https://golang.google.cn/dl/</a>。</p><a id="more"></a><p>各个系统对应的包名：</p><table><thead><tr><th>操作系统</th><th>包名</th></tr></thead><tbody><tr><td>Windows</td><td>go版本号.<strong><strong><em>**</em></strong></strong>.msi</td></tr><tr><td>Linux</td><td>go版本号.<strong><strong><em>**</em></strong></strong>.tar.gz</td></tr><tr><td>Mac</td><td>go版本号.<strong><strong><em>**</em></strong></strong>.pkg</td></tr><tr><td>FreeBSD</td><td>go版本号.<strong><strong><em>**</em></strong></strong>.tar.gz</td></tr></tbody></table><h2 id="Windows-系统下安装"><a href="#Windows-系统下安装" class="headerlink" title="Windows 系统下安装"></a>Windows 系统下安装</h2><p>Windows 下可以使用 <code>*.msi</code> 后缀(在下载列表中可以找到该文件，如:<code>go1.13.5.windows-amd64.msi)</code>的安装包来安装。</p><p>默认情况下 <code>*.ms</code>i 文件会安装在 <code>C:\Go</code> 目录下，你可以指定安装目录 <code>D:\path\Go</code>。安装成功后默认会在Path 环境变量添加 <code>D:\path\Go\bin</code>，你也可以检查Path 环境变量种是否有 <code>D:\path\Go\bin</code> 没有的话添加上。添加后你需要重启命令窗口才能生效。</p><h3 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h3><p>创建工作目录 <code>E:\&gt;go_learn</code>，创建测试文件 <code>test.go</code>。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   fmt.Println(<span class="string">"Hello World!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 go 命令执行以上代码输出结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E:\go_learn&gt;go run test.go</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure><h2 id="UNIX-Linux-Mac-OS-X-和-FreeBSD-安装"><a href="#UNIX-Linux-Mac-OS-X-和-FreeBSD-安装" class="headerlink" title="UNIX/Linux/Mac OS X, 和 FreeBSD 安装"></a>UNIX/Linux/Mac OS X, 和 FreeBSD 安装</h2><p>以下介绍了在UNIX/Linux/Mac OS X, 和 FreeBSD系统下使用源码安装方法：</p><p>1、下载二进制包：go1.13.5.linux-amd64.tar.gz。</p><p>2、将下载的二进制包解压至 /usr/local目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -C /usr/local -xzf go1.13.5.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>3、将 /usr/local/go/bin 目录添加至PATH环境变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:/usr/local/go/bin</span><br></pre></td></tr></table></figure><div class="note primary"><p>注意：MAC 系统下你可以使用 .pkg 结尾的安装包直接双击来完成安装，安装目录在 <code>/usr/local/go/</code> 下。</p></div>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> Go 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go 语言基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客Next主题SEO优化方法</title>
      <link href="2019/12/13/Hexo%E5%8D%9A%E5%AE%A2Next%E4%B8%BB%E9%A2%98SEO%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/"/>
      <url>2019/12/13/Hexo%E5%8D%9A%E5%AE%A2Next%E4%B8%BB%E9%A2%98SEO%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="添加站点地图"><a href="#添加站点地图" class="headerlink" title="添加站点地图"></a>添加站点地图</h2><h3 id="安装扩展"><a href="#安装扩展" class="headerlink" title="安装扩展"></a>安装扩展</h3><p>需要安装两个插件来生成 sitemap 文件，前一个是传统的 sitemap，后一个是百度的 sitemap。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h3><p>将sitemap文件添加到站点配置文件<code>_config.yml</code>中，并修改url字段的值为你的博客域名，其值默认为<code>http://yoursite.com</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 新增字段</span><br><span class="line">sitemap: </span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br><span class="line"></span><br><span class="line"># 修改字段</span><br><span class="line">url: https://xinyufeng.net</span><br></pre></td></tr></table></figure><p>安装完成后执行<code>hexo g</code>即会在站点<code>public</code>目录下生成<code>sitemap.xml</code>和<code>baidusitemap.xml</code>。</p><h2 id="添加蜘蛛协议"><a href="#添加蜘蛛协议" class="headerlink" title="添加蜘蛛协议"></a>添加蜘蛛协议</h2><p>在站点<code>source</code>文件夹下新建<code>robots.txt</code>文件，文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow: /</span><br><span class="line">Allow: /archives/</span><br><span class="line">Allow: /categories/</span><br><span class="line">Allow: /tags/ </span><br><span class="line">Allow: /awesome/ </span><br><span class="line">Disallow: /js/</span><br><span class="line">Disallow: /css/</span><br><span class="line">Disallow: /images/</span><br><span class="line">Disallow: /fonts/</span><br><span class="line"></span><br><span class="line">Sitemap: https://xinyufeng.net/sitemap.xml</span><br><span class="line">Sitemap: https://xinyufeng.net/baidusitemap.xml</span><br></pre></td></tr></table></figure><p><code>Allow</code>字段的值即为允许搜索引擎爬区的内容，可以对应到主题配置文件中的<code>menu</code>目录配置，如果菜单栏还有其他选项都可以按照格式自行添加，<code>Disallow</code>字段的值则为拒绝搜索引擎爬区的内容。</p><p>需要将<code>https:xinyufeng.net</code>改成自己的域名。</p><h2 id="提交站点到-Google"><a href="#提交站点到-Google" class="headerlink" title="提交站点到 Google"></a>提交站点到 Google</h2><p>打开<a href="https://www.google.com/webmasters/" target="_blank" rel="noopener">Google Search Console</a>，添加博客地址。</p><p>step1.点击 [Search Console]</p><p><img src="/2019/12/13/Hexo博客Next主题SEO优化方法/1.png" alt="点击Search Console"></p><p>step2.选择资源类型</p><p><img src="/2019/12/13/Hexo博客Next主题SEO优化方法/2.png" alt="选择资源类型"></p><p>step3.验证所有权</p><p><img src="/2019/12/13/Hexo博客Next主题SEO优化方法/3.png" alt="验证所有权"></p><p>step4.添加网站地图</p><p>点击 [站点地图] 在 添加新的站点地图 输入框输入 <code>sitemap.xml</code>，点击提交</p><p><img src="/2019/12/13/Hexo博客Next主题SEO优化方法/4.png" alt="添加网站地图"></p><p>补充中……</p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SEO优化 </tag>
            
            <tag> Next主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加字数统计、阅读时长</title>
      <link href="2019/12/13/Hexo%E6%B7%BB%E5%8A%A0%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E3%80%81%E9%98%85%E8%AF%BB%E6%97%B6%E9%95%BF/"/>
      <url>2019/12/13/Hexo%E6%B7%BB%E5%8A%A0%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E3%80%81%E9%98%85%E8%AF%BB%E6%97%B6%E9%95%BF/</url>
      
        <content type="html"><![CDATA[<p>NexT 主题默认已经集成了文章【字数统计】、【阅读时长】统计功能，如果我们需要使用，只需要在主题配置文件 _config.yml 中打开 <code>wordcount</code> 统计功能即可。如下所示：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true         # 单篇 字数统计</span><br><span class="line">  min2read: true          # 单篇 阅读时长</span><br><span class="line">  totalcount: false       # 网站 字数统计</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure><p>这样还不行哦，需要依赖 <code>hexo-wordcount</code> 扩展，所以接下来，我们需要安装这个扩展。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>安装完成后，重新执行启动服务预览就可以了。</p><p><strong>优化显示信息</strong></p><p>预览后我们发现，统计数后面是没有单位的，如果我们要加上 xxx字 和 xx分钟 怎么办呢，这里我们需要修改模版文件了。</p><p>打开文件 <code>/themes/next/layout/_macro/post.swig</code></p><p>修改【字数统计】，找到如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.wordcount&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125;</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>添加 “字” 到 <code>...wordcount(post.content) }}</code> 后面，修改后为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.wordcount&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125; 字</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>同样，我们修改【阅读时长】，修改后如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=&quot;&#123;&#123; __(&apos;post.min2read&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">    &#123;&#123; min2read(post.content) &#125;&#125; 分钟</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>改完成后，重新执行启动服务预览就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序生成指定页面二维码</title>
      <link href="2019/12/13/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%94%9F%E6%88%90%E6%8C%87%E5%AE%9A%E9%A1%B5%E9%9D%A2%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
      <url>2019/12/13/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%94%9F%E6%88%90%E6%8C%87%E5%AE%9A%E9%A1%B5%E9%9D%A2%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>在我们的业务需求中会遇到，获取进入小程序指定页面的二维码（包括四方形的二维码 和 小程序码），微信提供了获取小程序二维码的接口，通过这个接口，拼接参数可以获取到指定页面的二维码，用户扫码后会进入参数设定的页面。</p><p>接下来，我们以生成商品详情页（<code>pages/goods/detail</code>）二维码为例进行说明</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>获取小程序的 <code>AppID</code> 和 <code>AppSecret</code>参数</li></ol><p>进入小程序后台，点击左侧「开发」，找到「开发设置」，我们就能找到 <code>AppID</code>(小程序ID) 和 <code>AppSecret</code>(小程序密钥) 。<code>AppSecret</code>是不展示出来的，点击「获取」或「重置」，扫码之后，网页就会显示新的 <code>AppSecret</code>，需要我们在本地保存一下，因为再次登录进来<code>AppSecret</code>是不展示出来的。</p><a id="more"></a><ol start="2"><li>小程序的<code>app.json</code>文件中已经注册了需要生成的页面</li></ol><p>本例中小程序的<code>app.json</code>文件中，已经注册了商品详情页（<code>pages/goods/detail</code>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;pages&quot;:[</span><br><span class="line">  ..........,</span><br><span class="line">  &quot;pages/goods/detail&quot;</span><br><span class="line">  ........</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>当然，相应目录下也需要有相应的页面文件，且你的小程序已经有已发布的线上版本。否则，用户扫码后，微信会提示出错。</p><h2 id="获取access-token"><a href="#获取access-token" class="headerlink" title="获取access_token"></a>获取<code>access_token</code></h2><p>因为在后面获取二维码的部分会用到，所以我们首先要利用 <code>AppID</code> 和 <code>AppSecret</code>获取到 <code>access_token</code></p><p><strong>请求地址：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET</span><br></pre></td></tr></table></figure><p><strong>请求参数：</strong></p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>grant_type</td><td>string</td><td></td><td>是</td><td>填写 client_credential</td></tr><tr><td>appid</td><td>string</td><td></td><td>是</td><td>小程序唯一凭证，即 AppID</td></tr><tr><td>secret</td><td>string</td><td></td><td>是</td><td>小程序唯一凭证密钥，即 AppSecret</td></tr></tbody></table><p><img src="/2019/12/13/小程序生成指定页面二维码/01.png" alt="获取access_token"></p><p>从结果中，我们可以得知：执行这个操作后，微信会给你返回一个 JSON 数据包。解析这个数据包，我们就可以获得 <code>access_token</code></p><h2 id="获取二维码"><a href="#获取二维码" class="headerlink" title="获取二维码"></a>获取二维码</h2><p>微信提供了两个 POST 获取小程序二维码的接口。你可以根据你的业务需求，自由选择任一接口，获取相应的小程序二维码。</p><h3 id="获取小程序码"><a href="#获取小程序码" class="headerlink" title="获取小程序码"></a>获取小程序码</h3><p>参考文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.get.html" target="_blank" rel="noopener">wxacode.get</a></p><p><strong>请求地址：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST https://api.weixin.qq.com/wxa/getwxacode?access_token=ACCESS_TOKEN</span><br></pre></td></tr></table></figure><p><strong>请求参数：</strong></p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>access_token</td><td>string</td><td></td><td>是</td><td>接口调用凭证</td></tr><tr><td>path</td><td>string</td><td></td><td>是</td><td>扫码进入的小程序页面路径，最大长度 128 字节，不能为空；对于小游戏，可以只传入 query 部分，来实现传参效果，如：传入 “?foo=bar”，即可在 wx.getLaunchOptionsSync 接口中的 query 参数获取到 {foo:”bar”}。</td></tr><tr><td>width</td><td>number</td><td>430</td><td>否</td><td>二维码的宽度，单位 px。最小 280px，最大 1280px</td></tr><tr><td>auto_color</td><td>boolean</td><td>false</td><td>否</td><td>自动配置线条颜色，如果颜色依然是黑色，则说明不建议配置主色调</td></tr><tr><td>line_color</td><td>Object</td><td>{“r”:0,”g”:0,”b”:0}</td><td>否</td><td>auto_color 为 false 时生效，使用 rgb 设置颜色 例如 {“r”:”xxx”,”g”:”xxx”,”b”:”xxx”} 十进制表示</td></tr><tr><td>is_hyaline</td><td>boolean</td><td>false</td><td>否</td><td>是否需要透明底色，为 true 时，生成透明底色的小程序码</td></tr></tbody></table><p><strong>返回值：</strong></p><p>Buffer（返回的图片 Buffer）</p><h3 id="获取普通二维码"><a href="#获取普通二维码" class="headerlink" title="获取普通二维码"></a>获取普通二维码</h3><p>参考文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.createQRCode.html" target="_blank" rel="noopener">wxacode.createQRCode</a></p><p><strong>请求地址：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST https://api.weixin.qq.com/cgi-bin/wxaapp/createwxaqrcode?access_token=ACCESS_TOKEN</span><br></pre></td></tr></table></figure><p><strong>请求参数：</strong></p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>access_token</td><td>string</td><td></td><td>是</td><td>接口调用凭证</td></tr><tr><td>path</td><td>string</td><td></td><td>是</td><td>扫码进入的小程序页面路径，最大长度 128 字节，不能为空；对于小游戏，可以只传入 query 部分，来实现传参效果，如：传入 “?foo=bar”，即可在 wx.getLaunchOptionsSync 接口中的 query 参数获取到 {foo:”bar”}。</td></tr><tr><td>width</td><td>number</td><td>430</td><td>否</td><td>二维码的宽度，单位 px。最小 280px，最大 1280px</td></tr></tbody></table><p><strong>返回值：</strong></p><p>Buffer（返回的图片 Buffer）</p><h3 id="获取小程序码实例"><a href="#获取小程序码实例" class="headerlink" title="获取小程序码实例"></a>获取小程序码实例</h3><p><img src="/2019/12/13/小程序生成指定页面二维码/02.png" alt="获取小程序码实例"></p>]]></content>
      
      
      <categories>
          
          <category> 微信开发 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>px、em、rem区别介绍</title>
      <link href="2019/12/12/px%E3%80%81em%E3%80%81rem%E5%8C%BA%E5%88%AB%E4%BB%8B%E7%BB%8D/"/>
      <url>2019/12/12/px%E3%80%81em%E3%80%81rem%E5%8C%BA%E5%88%AB%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="PX"><a href="#PX" class="headerlink" title="PX"></a>PX</h2><p>px像素（Pixel）。相对长度单位。像素px是相对于显示器屏幕分辨率而言的。</p><p><strong>PX特点</strong></p><a id="more"></a><ol><li>IE无法调整那些使用 px 作为单位的字体大小；</li><li>国外的大部分网站能够调整的原因在于其使用了em 或 rem 作为字体单位；</li><li>Firefox能够调整 px 和 em ，rem，但是96%以上的中国网民使用IE浏览器(或内核)。</li></ol><h2 id="EM"><a href="#EM" class="headerlink" title="EM"></a>EM</h2><p>em是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。</p><p><strong>EM特点</strong></p><ol><li>em的值并不是固定的；</li><li>em会继承父级元素的字体大小。</li></ol><blockquote><p>注意：任意浏览器的默认字体高都是<code>16px</code>。所有未经调整的浏览器都符合: <code>1em=16px</code>。那么<code>12px=0.75em</code>,<code>10px=0.625em</code>。为了简化<code>font-size</code>的换算，需要在css中的<code>body</code>选择器中声明<code>font-size=62.5%</code>，这就使<code>em</code>值变为 <code>16px*62.5%=10px</code>, 这样<code>12px=1.2em</code>, <code>10px=1em</code>, 也就是说只需要将你的原来的<code>px</code>数值除以<code>10</code>，然后换上<code>em</code>作为单位就行了。<br><br>所以我们在写CSS的时候，需要注意几点：<br><br>&nbsp;&nbsp;1. <code>body</code>选择器中声明<code>font-size=62.5%</code>；<br>&nbsp;&nbsp;2. 将你的原来的<code>px</code>数值除以<code>10</code>，然后换上<code>em</code>作为单位；<br>&nbsp;&nbsp;3. 重新计算那些被放大的字体的<code>em</code>数值。避免字体大小的重复声明。<br>也就是避免1.2 * 1.2= 1.44的现象。比如说你在#content中声明了字体大小为1.2em，那么在声明p的字体大小时就只能是1em，而不是1.2em, 因为此em非彼em，它因继承#content的字体高而变为了1em=12px。</p></blockquote><p>举个栗子来说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Demo&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">    font-size: 62.5%;</span><br><span class="line">&#125;</span><br><span class="line">.content &#123;</span><br><span class="line">    font-size: 1.2em;</span><br><span class="line">&#125;</span><br><span class="line">.two &#123;</span><br><span class="line">    font-size: 1.2em;</span><br><span class="line">&#125;</span><br><span class="line">.three &#123;</span><br><span class="line">    font-size: 1em;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">        &lt;p class=&quot;one&quot;&gt;1. Hello World (font-size:未定义)&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">        &lt;p class=&quot;two&quot;&gt;2. Hello World (font-size: 1.2em)&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">        &lt;p class=&quot;three&quot;&gt;3. Hello World (font-size: 1em)&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="/2019/12/12/px、em、rem区别介绍/01.png" alt="效果图"></p><p>这就说明子级的<code>font-size</code>是基于父级的<code>font-size=?em</code>大小，子级的<code>font-size</code>=父级的<code>font-size=?em</code>*子级定义的<code>font-size=?em</code>(默认是1) 大小。</p><h2 id="REM"><a href="#REM" class="headerlink" title="REM"></a>REM</h2><p>rem是CSS3新增的一个相对单位（root em，根em），这个单位引起了广泛关注。这个单位与em有什么区别呢？区别在于使用rem为元素设定字体大小时，仍然是相对大小，但相对的只是HTML根元素。这个单位可谓集相对大小和绝对大小的优点于一身，通过它既可以做到只修改根元素就成比例地调整所有字体大小，又可以避免字体大小逐层复合的连锁反应。目前，除了IE8及更早版本外，所有浏览器均已支持rem。对于不支持它的浏览器，应对方法也很简单，就是多写一个绝对单位的声明。这些浏览器会忽略用rem设定的字体大小。下面就是一个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p &#123;font-size:14px; font-size:.875rem;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意： 选择使用什么字体单位主要由你的项目来决定，如果你的用户群都使用最新版的浏览器，那推荐使用rem，如果要考虑兼容性，那就使用px,或者两者同时使用。</p></blockquote><h2 id="px-与-rem-的选择？"><a href="#px-与-rem-的选择？" class="headerlink" title="px 与 rem 的选择？"></a>px 与 rem 的选择？</h2><p>对于只需要适配少部分手机设备，且分辨率对页面影响不大的，使用px即可 。</p><p>对于需要适配各种移动设备，使用rem，例如只需要适配iPhone和iPad等分辨率差别比较挺大的设备。</p><p>参考链接：<a href="https://www.runoob.com/w3cnote/px-em-rem-different.html" target="_blank" rel="noopener">https://www.runoob.com/w3cnote/px-em-rem-different.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html2canvas-实现页面截图</title>
      <link href="2019/12/11/html2canvas-%E5%AE%9E%E7%8E%B0%E9%A1%B5%E9%9D%A2%E6%88%AA%E5%9B%BE/"/>
      <url>2019/12/11/html2canvas-%E5%AE%9E%E7%8E%B0%E9%A1%B5%E9%9D%A2%E6%88%AA%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="html2canvas简介"><a href="#html2canvas简介" class="headerlink" title="html2canvas简介"></a>html2canvas简介</h2><p>该脚本允许您直接在用户浏览器上对网页或部分网页进行“截屏”。屏幕截图是基于DOM的，因此对于真实的表示可能不是100%准确的，因为它并不生成实际的屏幕截图，而是基于页面上可用的信息构建屏幕截图。</p><a id="more"></a><p><strong>html2canvas官网</strong></p><p>项目下载：<a href="https://github.com/niklasvh/html2canvas/" target="_blank" rel="noopener">https://github.com/niklasvh/html2canvas/</a></p><p>官方网址：<a href="https://html2canvas.hertzen.com/" target="_blank" rel="noopener">https://html2canvas.hertzen.com/</a></p><h2 id="支持的浏览器"><a href="#支持的浏览器" class="headerlink" title="支持的浏览器"></a>支持的浏览器</h2><ul><li>Firefox 3.5+</li><li>Google Chrome</li><li>Opera 12+</li><li>IE9+</li><li>Safari 6+</li></ul><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">html2canvas(element, options);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">html2canvas(document.body, &#123;</span><br><span class="line">  onrendered: function(canvas) &#123;</span><br><span class="line">    var url = canvas.toDataURL();//图片地址</span><br><span class="line">    document.body.appendChild(canvas);</span><br><span class="line">  &#125;,</span><br><span class="line">  width: 300,</span><br><span class="line">  height: 300</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Tip: 这个语法可能存在问题，不建议使用。</p><p>或者使用ES6的promise（建议使用此语法）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//两个参数：所需要截图的元素id，截图后要执行的函数， canvas为截图后返回的最后一个canvas</span><br><span class="line">html2canvas(document.getElementById(&apos;id&apos;)).then(function(canvas) &#123;</span><br><span class="line">    document.body.appendChild(canvas);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="可用参数"><a href="#可用参数" class="headerlink" title="可用参数"></a>可用参数</h2><table><thead><tr><th>参数名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>allowTaint</td><td><code>false</code></td><td>Whether to allow cross-origin images to taint the canvas<br>允许跨域</td></tr><tr><td>background</td><td><code>#ffffff</code></td><td>Canvas background color, if none is specified in DOM. Set <code>null</code> for transparent<br><code>canvas</code>的背景颜色，如果没有设定默认透明</td></tr><tr><td>canvas</td><td><code>null</code></td><td>Existing <code>canvas</code> element to use as a base for drawing on<br>现有的<code>canvas</code>元素，用作绘图的基础</td></tr><tr><td>foreignObjectRendering</td><td><code>false</code></td><td>Whether to use ForeignObject rendering if the browser supports it<br>如果浏览器支持，是否使用ForeignObject渲染</td></tr><tr><td>imageTimeout</td><td><code>15000</code></td><td>Timeout for loading an image (in milliseconds). Set to <code>0</code> to disable timeout.<br>加载图像的超时(以毫秒为单位)。设置为0以禁用超时。</td></tr><tr><td>ignoreElements</td><td><code>(element) =&gt; false</code></td><td>Predicate function which removes the matching elements from the render.<br>谓词函数，它从呈现中删除匹配的元素。</td></tr><tr><td>logging</td><td><code>true</code></td><td>Enable logging for debug purposes<br>为调试目的启用日志记录，在console.log()中输出信息</td></tr><tr><td>onclone</td><td><code>null</code></td><td>Callback function which is called when the Document has been cloned for rendering, can be used to modify the contents that will be rendered without affecting the original source document.<br>回调函数(在克隆文档以进行呈现时调用)可用于修改将要呈现的内容，而不影响原始源文档。</td></tr><tr><td>proxy</td><td><code>null</code></td><td>Url to the <a href="https://html2canvas.hertzen.com/proxy/" target="_blank" rel="noopener">proxy</a> which is to be used for loading cross-origin images. If left empty, cross-origin images won’t be loaded.<br>到代理的Url，用于加载跨源图像。如果留空，则不会加载交叉源图像。</td></tr><tr><td>removeContainer</td><td><code>true</code></td><td>Whether to cleanup the cloned DOM elements html2canvas creates temporarily<br>是否清除克隆的DOM元素html2canvas临时创建的</td></tr><tr><td>scale</td><td><code>window.devicePixelRatio</code></td><td>The scale to use for rendering. Defaults to the browsers device pixel ratio.<br>用于渲染的比例。默认的浏览器设备像素比例。</td></tr><tr><td>useCORS</td><td><code>false</code></td><td>Whether to attempt to load images from a server using CORS<br>是否尝试使用CORS从服务器加载图像</td></tr><tr><td>width</td><td><code>Element</code> width</td><td>The width of the <code>canvas</code><br>canvas宽度设定</td></tr><tr><td>height</td><td><code>Element</code> height</td><td>The height of the <code>canvas</code><br>canvas高度设定</td></tr><tr><td>x</td><td><code>Element</code> x-offset</td><td>Crop canvas x-coordinate<br>坐标轴x位置</td></tr><tr><td>y</td><td><code>Element</code> y-offset</td><td>Crop canvas y-coordinate<br>坐标轴y位置</td></tr><tr><td>scrollX</td><td><code>Element</code> scrollX</td><td>The x-scroll position to used when rendering element, (for example if the Element uses <code>position: fixed</code>)<br>渲染元素时使用的x-scroll位置(例如，如果元素使用position: fixed)</td></tr><tr><td>scrollY</td><td><code>Element</code> scrollY</td><td>The y-scroll position to used when rendering element, (for example if the Element uses <code>position: fixed</code>)<br>渲染元素时使用的y-scroll位置(例如，如果元素使用position: fixed)</td></tr><tr><td>windowWidth</td><td><code>Window.innerWidth</code></td><td>Window width to use when rendering <code>Element</code>, which may affect things like Media queries<br>显示元素时使用的窗口宽度，这可能会影响媒体查询等内容</td></tr><tr><td>windowHeight</td><td><code>Window.innerHeight</code></td><td>Window height to use when rendering <code>Element</code>, which may affect things like Media queries<br>显示元素时使用的窗口高度，这可能会影响媒体查询等内容</td></tr></tbody></table><p>如果希望从呈现中排除某些<code>Elements</code>，可以向这些元素添加一个<code>data-html2canvas-ignore</code>属性，html2canvas将从呈现中排除这些元素。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;html2canvas example&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;view&quot;</span><br><span class="line">        style=&quot;background:url(./imgs/goodspic01.jpg) 50%; width: 700px; height: 500px;background-repeat:no-repeat; background-color: #8BC34A;&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;button&quot; value=&quot;截图&quot; onclick=&quot;takeScreenshot()&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script src=&quot;./lib/html2canvas/html2canvas.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        function takeScreenshot() &#123;</span><br><span class="line">            console.log(&apos;开始截图&apos;);</span><br><span class="line">            </span><br><span class="line">            html2canvas(document.getElementById(&apos;view&apos;), &#123;</span><br><span class="line">                // width: 300,</span><br><span class="line">                // height: 300</span><br><span class="line">            &#125;).then(canvas =&gt; &#123;</span><br><span class="line">                console.log(canvas.toDataURL(&quot;image/png&quot;));</span><br><span class="line">                document.body.appendChild(canvas);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><strong>截图前</strong><br><img src="/2019/12/11/html2canvas-实现页面截图/1.png" alt="截图前"></p><p><strong>截图后</strong><br><img src="/2019/12/11/html2canvas-实现页面截图/2.png" alt="截图后"></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript类库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 条件判断和常用的函数</title>
      <link href="2019/12/05/MySQL-%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0/"/>
      <url>2019/12/05/MySQL-%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL条件判断"><a href="#MySQL条件判断" class="headerlink" title="MySQL条件判断"></a>MySQL条件判断</h2><p><strong>IF条件函数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF(expr1,expr2,expr3)</span><br></pre></td></tr></table></figure><p>当 <code>expr1</code> 为真时，返回 <code>expr2</code>，否则返回 <code>expr3</code></p><a id="more"></a><p><strong>IFNULL函数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IFNULL(expr1,expr2)</span><br></pre></td></tr></table></figure><p>当 <code>expr1</code> 不为 <code>NULL</code> 时返回 <code>expr1</code>，否则返回 <code>expr2</code></p><p><strong>CASE语句</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CASE case_value</span><br><span class="line">    WHEN when_value THEN statement_list</span><br><span class="line">    [WHEN when_value THEN statement_list] ...</span><br><span class="line">    [ELSE statement_list]</span><br><span class="line">END</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">(</span><br><span class="line">    CASE age </span><br><span class="line">        WHEN &lt; 60 THEN &apos;60岁以下&apos; </span><br><span class="line">        WHEN &lt; 80 THEN &apos;80岁以下&apos; </span><br><span class="line">        ELSE &apos;80岁及以上&apos; </span><br><span class="line">    END</span><br><span class="line">) as age_range FROM table_a</span><br></pre></td></tr></table></figure><p>查询年龄，当<code>age &lt; 60</code>显示是<code>60岁以下</code>，<code>age &lt; 80</code>显示是<code>80岁以下</code>，剩下的是<code>80岁及以上</code>。</p><h2 id="常用系统函数"><a href="#常用系统函数" class="headerlink" title="常用系统函数"></a>常用系统函数</h2><p><strong>VERSION():查询版本信息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT VERSION();</span><br><span class="line">// 5.7.25-log</span><br></pre></td></tr></table></figure><p><strong>CONNECTION_ID():返回MySql服务器当前链接的次数，每个链接都有各自唯一的ID</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT CONNECTION_ID();</span><br><span class="line">// 15301000</span><br></pre></td></tr></table></figure><p><strong>SHOW PROCESSLIST:输出显示有哪些线程在运行，且各自的运行状态，若是root用户则显示所有的用户状态，若是普通用户则只显示自己的状态</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW PROCESSLIST;</span><br></pre></td></tr></table></figure><p><code>SHOW PROCESSLIST</code>最多显示100条，若想全部显示，则用下面这条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW FULL PROCESSLIST;</span><br></pre></td></tr></table></figure><table><thead><tr><th>字段名称</th><th>字段含义</th></tr></thead><tbody><tr><td>Id</td><td>登录MySQL时，系统分配的connection_id</td></tr><tr><td>User</td><td>当前用户，如果不是root，这个命令则只显示用户权限范围内的语句</td></tr><tr><td>Host</td><td>显示这个语句是从哪个ip的哪个端口上发出的，可以用来追踪出现问题的用户</td></tr><tr><td>db</td><td>显示这个进程目前连接的是哪个数据库</td></tr><tr><td>Command</td><td>显示当前链接数据库执行的命令，一般取值为休眠(Sleep)，查询(Query)，和连接(Connect)</td></tr><tr><td>Time</td><td>显示这个状态持续的时间，单位是秒</td></tr><tr><td>State</td><td>显示使用当前连接的sql语句状态，很重要的列后续会有所有状态的描述，State只是语句执行中的某一个状态，一条sql，以查询为例，可能要经过Copying to tmp table,Sorting result,Sending data等状态才能完成</td></tr><tr><td>Info</td><td>显示这个sql语句，是判断问题语句的一个重要依据</td></tr></tbody></table><p><strong>LAST_INSERT_ID():自动返回最后一个INSERT或UPDATE为AUTO_INCREMENT列设置的第一个发生的值，意思就是，如果现在有id为1，2的数据，然后一条insert插入3调数据，返回的id是3而不是其他数值</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT LAST_INSERT_ID();</span><br></pre></td></tr></table></figure><h2 id="加密函数"><a href="#加密函数" class="headerlink" title="加密函数"></a>加密函数</h2><p><strong>PASSWORD(str):该函数在MySQL服务器鉴定系统中使用，不应将它用在个人的应用中，它的加密是单向的</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT PASSWORD(&apos;123&apos;);</span><br><span class="line">// *23AE809DDACAF96AF0FD78ED04B6A265E05AA257</span><br></pre></td></tr></table></figure><p><strong>MD5(str):参见其他编程语言md5</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT MD5(&apos;123&apos;);</span><br><span class="line">// 202cb962ac59075b964b07152d234b70</span><br></pre></td></tr></table></figure><p><strong>ENCODE(str,pass_str):使用pass_str作为密码加密str</strong></p><p>加密后可能是乱码，不建议使用</p><p><strong>DECODE(crypt_str,pass_str):使用pass_str作为密码，解密crypt_str，crypt_str是ENCODE()返回的结果</strong></p><h2 id="转换函数"><a href="#转换函数" class="headerlink" title="转换函数"></a>转换函数</h2><p><strong>CONV(N,from_base,to_base):不同进制转换</strong></p><p><strong>INET_ATON(expr):IP地址转换为数字</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT INET_ATON(&apos;192.168.0.1&apos;);</span><br><span class="line">// 3232235521</span><br></pre></td></tr></table></figure><p><strong>INET_NTOA(expr):数字转换为IP地址</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT INET_NTOA(3232235521);</span><br><span class="line">// 192.168.0.1</span><br></pre></td></tr></table></figure><h2 id="加锁函数与解锁函数"><a href="#加锁函数与解锁函数" class="headerlink" title="加锁函数与解锁函数"></a>加锁函数与解锁函数</h2><p><code>GET_LOCK(str, timeout)</code> 设法使用字符串 <code>str</code> 给定的名字得到一个锁，超时为 <code>timeout</code> 秒。若成功得到锁，返回<code>1</code>，若操作超时返回<code>0</code>，若发生错误，返回<code>null</code>。假如有一个用 <code>GET_LOCK()</code>得到的锁，当执行<code>RELEASE_LOCK()</code>或断开连接(正常或非正常)时，这个锁就会解除。<br><code>RELEASE_LOCK(str)</code>解开被 <code>GET_LOCK()</code>获取的，用字符串 <code>str</code> 所命令的锁。若锁被解开，则返回<code>1</code>；若该线程尚未创建锁，则返回<code>0</code>(此时锁没有被解开)；若命名的锁不存在，则返回<code>NULL</code>。若该锁从未被<code>GET_LOCK()</code>的调用获取，或已经被提前解开，则该锁不存在。<br><code>IS_FREE_LOCK(str)</code>检查名为<code>str</code>的锁是否可以使用。若可以使用返回<code>1</code>，若正在被使用返回<code>0</code>，出现错误返回<code>0</code>.<br><code>IS_USED_LOCK(str)</code>检查名为str的锁是否正在被使用(被封锁)，若正在被使用则返回使用该锁的连接表示(connectionId),否则返回<code>NULL</code></p><h2 id="改变数据类型的函数"><a href="#改变数据类型的函数" class="headerlink" title="改变数据类型的函数"></a>改变数据类型的函数</h2><p><code>CAST(expr as type),convert(expr, type)</code>,可以用来截取字符串</p><p>例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT cast(`title` AS char(4)) AS `title` FROM `order`; </span><br><span class="line">SELECT convert(`title`, char(4)) AS `title` FROM `order`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用jQuery的extend方法合并对象</title>
      <link href="2019/11/28/%E4%BD%BF%E7%94%A8jQuery%E7%9A%84extend%E6%96%B9%E6%B3%95%E5%90%88%E5%B9%B6%E5%AF%B9%E8%B1%A1/"/>
      <url>2019/11/28/%E4%BD%BF%E7%94%A8jQuery%E7%9A%84extend%E6%96%B9%E6%B3%95%E5%90%88%E5%B9%B6%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extend(dest, src1, src2, src3...);</span><br></pre></td></tr></table></figure><a id="more"></a><p>直接用代码来说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var src1 = &#123;name: &apos;Tom&apos;, age: &apos;18&apos;&#125;;</span><br><span class="line">var src2 = &#123;name: &apos;Jerry&apos;, sex: &apos;man&apos;&#125;;</span><br><span class="line"></span><br><span class="line">var newSrc=$.extend(&#123;&#125;, src1, src2);</span><br><span class="line">console.log(newSrc);</span><br><span class="line"></span><br><span class="line">// 输出结果：</span><br><span class="line">// &#123;name: &quot;Jerry&quot;, age: &quot;18&quot;, sex: &quot;man&quot;&#125;</span><br></pre></td></tr></table></figure><p>说明 ：</p><ol><li>将<code>{}</code>作为dest参数</li><li>后面的参数如果和前面的参数存在相同的名称，那么后面的会覆盖前面的参数值</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将方法添加到String类</title>
      <link href="2019/11/28/%E5%B0%86%E6%96%B9%E6%B3%95%E6%B7%BB%E5%8A%A0%E5%88%B0String%E7%B1%BB/"/>
      <url>2019/11/28/%E5%B0%86%E6%96%B9%E6%B3%95%E6%B7%BB%E5%8A%A0%E5%88%B0String%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p>在日常开发中，JavaScript中String对象自带的对象方法，可能不满足我们的开发需求。</p><p>例如，我们要去掉字符串中所有的空格字符，我们可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var str = str.replace(/\s+/g, &apos;&apos;);</span><br></pre></td></tr></table></figure><a id="more"></a><p>如果我们有多个字符串需要这样处理，那么我们需要</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var str = str.replace(/\s+/g, &apos;&apos;);</span><br><span class="line">var str2 = str2.replace(/\s+/g, &apos;&apos;);</span><br><span class="line">var str3 = str3.replace(/\s+/g, &apos;&apos;);</span><br><span class="line">// .....</span><br></pre></td></tr></table></figure><p>但是我们更希望有一个String对象，来统一处理，类似String对象的<code>trim()</code>对象方法用来去除字符串两边的空白。</p><p>下面我们就定义<strong>除去字符串中所有的空白</strong>方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String.prototype.gtrim = function () &#123;</span><br><span class="line">    var that = this;</span><br><span class="line">    return that.replace(/\s+/g, &apos;&apos;);</span><br><span class="line">&#125;</span><br><span class="line">var text = &apos; 12 34 56 &apos;;</span><br><span class="line">console.log(text);// 原字符串</span><br><span class="line">console.log(text.gtrim());// 处理后的字符串</span><br><span class="line"></span><br><span class="line">// 输出结果</span><br><span class="line">// 12 34 56 </span><br><span class="line">//demo.html:46 123456</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery扩展方法</title>
      <link href="2019/11/28/JQuery%E6%89%A9%E5%B1%95%E6%96%B9%E6%B3%95/"/>
      <url>2019/11/28/JQuery%E6%89%A9%E5%B1%95%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>jQuery插件的开发包括两种：<br>一种是<strong>类级别</strong>的插件开发，即给jQuery添加新的全局函数，相当于给jQuery类本身添加方法。jQuery的全局函数就是属于jQuery命名空间的函数，调用形式：<code>$.fun()</code>；<br>另一种是<strong>对象级别</strong>的插件开发，即给jQuery对象添加方法。调用形式：<code>$(&#39;选择器&#39;).fun()</code>。</p><a id="more"></a><p>也可以理解为另外两种方式：<br>一种是jQuery本身的扩展方法；<code>jQuery.extend(Object);</code><br>另一种是jQuery所选对象的扩展方法。<code>jQuery.fn.extent(Object);</code></p><p>下面就对这两种开发做详细的说明：</p><h2 id="类级别的插件开发"><a href="#类级别的插件开发" class="headerlink" title="类级别的插件开发"></a>类级别的插件开发</h2><p>对类级别的插件开发，我们可以把jQuery看成一个类，给jQuery类添加静态方法，比如<code>$.ajax()</code>这个函数，将此函数定义在jQuery的命名空间中。</p><p>可采用如下几种形式进行开发：</p><h3 id="添加一个新的全局函数"><a href="#添加一个新的全局函数" class="headerlink" title="添加一个新的全局函数"></a>添加一个新的全局函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.foo = function()&#123;</span><br><span class="line">console.log(&apos;this is foo function&apos;);</span><br><span class="line">&#125;;</span><br><span class="line">// 调用方法</span><br><span class="line">$.foo();</span><br><span class="line"></span><br><span class="line">// 输出结果：</span><br><span class="line">// this is foo function</span><br></pre></td></tr></table></figure><h3 id="使用jQuery-extend-object"><a href="#使用jQuery-extend-object" class="headerlink" title="使用jQuery.extend(object);"></a>使用<code>jQuery.extend(object);</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$.extend(&#123;</span><br><span class="line">        hello: function()&#123;</span><br><span class="line">            console.log(&apos;Hello World&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">        , getName: function(name)&#123;</span><br><span class="line">            console.log(&apos;Name:&apos;+name);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;);</span><br><span class="line">// 调用方法</span><br><span class="line">$.hello();</span><br><span class="line">$.getName(&apos;Tom&apos;);</span><br><span class="line"></span><br><span class="line">// 输出结果：</span><br><span class="line">// Hello World</span><br><span class="line">// demo.html:34 Name:Tom</span><br></pre></td></tr></table></figure><h3 id="使用命名空间"><a href="#使用命名空间" class="headerlink" title="使用命名空间"></a>使用命名空间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$.myPlugin = &#123;</span><br><span class="line">        hello: function()&#123;</span><br><span class="line">            console.log(&apos;[myPlugin] Hello World&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">        , getName: function(name)&#123;</span><br><span class="line">            console.log(&apos;[myPlugin] Name:&apos;+name);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 调用方法</span><br><span class="line">$.myPlugin.hello();</span><br><span class="line">$.myPlugin.getName(&apos;Tom&apos;);</span><br><span class="line"></span><br><span class="line">// 输出结果：</span><br><span class="line">// [myPlugin] Hello World</span><br><span class="line">// demo.html:32 [myPlugin] Name:Tom</span><br></pre></td></tr></table></figure><h2 id="对象级别的插件开发"><a href="#对象级别的插件开发" class="headerlink" title="对象级别的插件开发"></a>对象级别的插件开发</h2><p>html代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=&quot;demo&quot;&gt;Hello World&lt;/p&gt;</span><br></pre></td></tr></table></figure><h3 id="形式一"><a href="#形式一" class="headerlink" title="形式一"></a>形式一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$.fn.foo = function()&#123;</span><br><span class="line">console.log(&apos;对象标签文本内容：&apos; + $(this).text());</span><br><span class="line">return this;// 如果是链式调用,返回this</span><br><span class="line">&#125;;</span><br><span class="line">// 调用方法</span><br><span class="line">$(&apos;#demo&apos;).foo();</span><br><span class="line"></span><br><span class="line">// 输出结果：</span><br><span class="line">// 对象标签文本内容：Hello World</span><br></pre></td></tr></table></figure><h3 id="形式二"><a href="#形式二" class="headerlink" title="形式二"></a>形式二</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(function($)&#123;</span><br><span class="line">$.fn.extend(&#123;</span><br><span class="line">foo2: function(opt, callback)&#123;</span><br><span class="line">console.log(&quot;opt:&quot;, opt);</span><br><span class="line">callback &amp;&amp; callback(&#123;name: &apos;Jerry&apos;&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line">// 调用方法</span><br><span class="line">$(&quot;#demo&quot;).foo2(&#123;name: &apos;Tom&apos;&#125;, function(data)&#123;console.log(&apos;data:&apos;, data)&#125;);</span><br><span class="line"></span><br><span class="line">// 输出结果：</span><br><span class="line">// opt: &#123;name: &quot;Tom&quot;&#125;</span><br><span class="line">// data: &#123;name: &quot;Jerry&quot;&#125;</span><br></pre></td></tr></table></figure><h3 id="形式三"><a href="#形式三" class="headerlink" title="形式三"></a>形式三</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(function (jq) &#123;</span><br><span class="line">jq.fn.foo3 = function (obj) &#123;</span><br><span class="line">console.log(obj);</span><br><span class="line">&#125;;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line">// 调用方法</span><br><span class="line">$(&quot;#demo&quot;).foo3(&quot;hello jQuery&quot;);</span><br><span class="line"></span><br><span class="line">// 输出结果：</span><br><span class="line">// hello jQuery</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>躲开 cat 命令</title>
      <link href="2019/11/19/%E8%BA%B2%E5%BC%80-cat-%E5%91%BD%E4%BB%A4/"/>
      <url>2019/11/19/%E8%BA%B2%E5%BC%80-cat-%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>原文地址：<a href="https://ura.d3npa.dev/posts/hiding-from-cats.md" target="_blank" rel="noopener">https://ura.d3npa.dev/posts/hiding-from-cats.md</a></p><h2 id="躲开-cat-命令"><a href="#躲开-cat-命令" class="headerlink" title="躲开 cat 命令"></a>躲开 cat 命令</h2><p><code>/usr/bin/cat</code> 是一种从一个位置读取数据并将其写入另一个位置的工具；在大多数情况下，它用于从文件读取文本并将其写入<code>STDOUT</code>。<code>Cat</code>还支持某些控制字符，例如换行符<code>\f</code>，回车符<code>\r</code>和换行符<code>\n</code>。</p><a id="more"></a><p>这是一个有趣的小概念验证，说明如何<code>\r</code>使用它来隐藏<code>cat</code>的<code>shell</code>脚本命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cmd_h = &quot;echo &apos;You forgot to check `cat -A`!&apos; &gt; oops&quot; # hidden</span><br><span class="line">cmd_v = &quot;echo &apos;Hello world!&apos;&quot;                         # visible</span><br><span class="line"></span><br><span class="line">with open(&quot;test.sh&quot;, &quot;w&quot;) as f:</span><br><span class="line">    output = &quot;#!/bin/sh\n&quot;</span><br><span class="line">    output += cmd_h + &quot;;&quot; + cmd_v + &quot; #\r&quot; + cmd_v + &quot; &quot; * (len(cmd_h) + 3) + &quot;\n&quot;</span><br><span class="line">    f.write(output)</span><br></pre></td></tr></table></figure><p>这会滥用<code>cat</code>的默认行为，即呈现回车<code>\r</code>符。本质上，一个<code>\r</code>会将光标移回该行的开头，并且此后打印的字符将被写在之前（覆盖）打印的任何内容。这也是为什么我们在字符串的末尾添加空格。</p><p>因此，当我们运行时cat test.sh：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.sh</span><br><span class="line">#!/bin/sh</span><br><span class="line">echo &apos;Hello world!&apos;</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>但是，运行文件实际上会执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;You forgot to check `cat -A`!&apos; &gt; oops</span><br><span class="line">echo &apos;Hello world!&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ ls</span><br><span class="line">test.sh</span><br><span class="line">$ sh ./test.sh</span><br><span class="line">Hello world!</span><br><span class="line">$ ls</span><br><span class="line">oops  test.sh</span><br><span class="line">$ cat oops</span><br><span class="line">You forgot to check `cat -A`!</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>最后，有三种捕获方法：<br>1.<code>test.sh</code>的文件大小与<code>cat</code>打印的内容不匹配。<br>2.打开在文件中的编辑器，例如<code>vi</code>，<code>vim</code>，或<code>nano</code>，或一个类似<code>less</code>页调器。<br>3.如果我们使用<code>cat -A ./test.sh</code>替代，则禁用控制字符的呈现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat -A test.sh</span><br><span class="line">#!/bin/sh$</span><br><span class="line">echo &apos;You forgot to check `cat -A`!&apos; &gt; oops;echo &apos;Hello world!&apos; #^Mecho &apos;Hello world!&apos;                                              </span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>不幸的是，当从Internet下载脚本时，大多数人没有认真检查他们正在运行的脚本。在少数人中，有许多人依靠<code>/usr/bin/cat</code>这样做。这种攻击可以用来躲过攻击，即使是那些用<code>cat</code>费心检查代码的人。</p><p>从现在开始，让我们在检查脚本时使用一些更安全的东西，比如<code>less</code>。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 实现表单多条同样name的数据统计</title>
      <link href="2019/11/19/JS-%E5%AE%9E%E7%8E%B0%E8%A1%A8%E5%8D%95%E5%A4%9A%E6%9D%A1%E5%90%8C%E6%A0%B7name%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1/"/>
      <url>2019/11/19/JS-%E5%AE%9E%E7%8E%B0%E8%A1%A8%E5%8D%95%E5%A4%9A%E6%9D%A1%E5%90%8C%E6%A0%B7name%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>在前端开发过程中，我们会遇到<code>form</code>表单中<code>name</code>值相同数据的计算，比如，在结算中，可添加多条结算数据<br>下面就以实际代码来解决这问题，此实例用了layui框架来获取表单的数据</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Demo&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=&quot;&quot; id=&quot;formBox&quot;&gt;</span><br><span class="line">        应结算金额：&lt;input type=&quot;text&quot; name=&quot;all_settlement&quot; value=&quot;100&quot;&gt;</span><br><span class="line">        &lt;table&gt;</span><br><span class="line">            &lt;thead&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th style=&quot;text-align: center; width: 15%;&quot;&gt;类型&lt;/th&gt;</span><br><span class="line">                &lt;th style=&quot;text-align: center; width: 15%&quot;&gt;金额&lt;/th&gt;</span><br><span class="line">                &lt;th style=&quot;text-align: center;&quot;&gt;备注&lt;/th&gt;</span><br><span class="line">                &lt;th style=&quot;text-align: center; width: 10%;&quot;&gt;操作&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;/thead&gt;</span><br><span class="line">            &lt;tbody&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">                    &lt;select name=&quot;out_type[]&quot;&gt;</span><br><span class="line">                        &lt;option value=&quot;+&quot; selected&gt;增加&lt;/option&gt;</span><br><span class="line">                        &lt;option value=&quot;-&quot;&gt;扣减&lt;/option&gt;</span><br><span class="line">                    &lt;/select&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">                    &lt;input type=&quot;number&quot; name=&quot;fee[]&quot; min=&quot;0&quot; placeholder=&quot;请填写金额&quot; value=&quot;20&quot;&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">                    &lt;input type=&quot;text&quot; name=&quot;explain[]&quot; placeholder=&quot;请填写备注&quot; value=&quot;增加金额&quot;&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">                    &lt;button&gt;删除&lt;/button&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">                    &lt;select name=&quot;out_type[]&quot;&gt;</span><br><span class="line">                        &lt;option value=&quot;+&quot;&gt;增加&lt;/option&gt;</span><br><span class="line">                        &lt;option value=&quot;-&quot; selected&gt;扣减&lt;/option&gt;</span><br><span class="line">                    &lt;/select&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">                    &lt;input type=&quot;number&quot; name=&quot;fee[]&quot; min=&quot;0&quot; placeholder=&quot;请填写金额&quot; value=&quot;10&quot;&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">                    &lt;input type=&quot;text&quot; name=&quot;explain[]&quot; placeholder=&quot;请填写备注&quot; value=&quot;扣减金额&quot;&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">                    &lt;button&gt;删除&lt;/button&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;/tbody&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">        &lt;button type=&quot;submit&quot;&gt;提交&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 如果我们使用layui框架的form获取表单数据，表单数据为</span><br><span class="line">var formData = &#123;</span><br><span class="line">    &apos;fee[0]&apos; : &apos;20&apos;,</span><br><span class="line">    &apos;out_type[0]&apos; : &apos;+&apos;,</span><br><span class="line">    &apos;explain[0]&apos; : &apos;增加金额&apos;,</span><br><span class="line">    &apos;fee[1]&apos; : &apos;10&apos;,</span><br><span class="line">    &apos;out_type[1]&apos; : &apos;-&apos;,</span><br><span class="line">    &apos;explain[1]&apos; : &apos;扣减金额&apos;,</span><br><span class="line">    &apos;all_settlement&apos; : &apos;100&apos;    // 应结结算金额</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var fee = []; var out_type = [];</span><br><span class="line">$.each(formData, function (k, obj) &#123;</span><br><span class="line">    if (k.search(/(fee|out_type)\[\d+\]/i) &gt;=0)</span><br><span class="line">    &#123;</span><br><span class="line">        eval(k + &apos; = obj&apos;);// 此处转换为: fee[0] = obj; out_type[0] = obj; ....这就是为什么要在前面定义变量fee和out_type</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">var actual_settlement = parseFloat(formData.all_settlement);</span><br><span class="line">for (var idx in fee)</span><br><span class="line">&#123;</span><br><span class="line">    if (out_type[idx] == &apos;+&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        actual_settlement += parseFloat(fee[idx]);</span><br><span class="line">    &#125;</span><br><span class="line">    else if(out_type[idx] == &apos;-&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        actual_settlement -= parseFloat(fee[idx]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.write(&apos;实际结算金额为：&apos;+ actual_settlement);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 创建用户并限制其访问目录</title>
      <link href="2019/11/14/Linux-%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E5%B9%B6%E9%99%90%E5%88%B6%E5%85%B6%E8%AE%BF%E9%97%AE%E7%9B%AE%E5%BD%95/"/>
      <url>2019/11/14/Linux-%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E5%B9%B6%E9%99%90%E5%88%B6%E5%85%B6%E8%AE%BF%E9%97%AE%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p><strong>1. 创建用户及访问目录</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># useradd user1 -d /usr/data/www/web1 -M</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>2. 设置用户密码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># passwd  user1</span><br></pre></td></tr></table></figure><p>输入命令后，会提示输入密码</p><p><strong>3. 将访问目录和所有子目录权限全部赋予用户</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R user1 /usr/data/www/web1</span><br></pre></td></tr></table></figure><p><strong>4. 创建组（如已有组则跳过）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd developer</span><br></pre></td></tr></table></figure><p><strong>5. 用户设置组</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -g developer user1</span><br></pre></td></tr></table></figure><p><strong>6. 将上层目录设置为root所有</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown root /usr/data/www</span><br></pre></td></tr></table></figure><p><strong>7. 赋予权限给上层目录</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 751 /usr/data/www</span><br></pre></td></tr></table></figure><p><code>751</code>权限解释： </p><table><thead><tr><th></th><th>读取</th><th>写入</th><th>执行</th></tr></thead><tbody><tr><td>所有者权限</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>组权限</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>公共权限</td><td>✔</td><td>✔</td><td>✔</td></tr></tbody></table><p><strong>其他</strong></p><p>如果同级目录下还有别的目录，可以配置为上层目录权限，限制user1访问。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JQuery的Deferred对象详解</title>
      <link href="2019/09/18/JQuery%E7%9A%84Deferred%E5%AF%B9%E8%B1%A1%E8%AF%A6%E8%A7%A3/"/>
      <url>2019/09/18/JQuery%E7%9A%84Deferred%E5%AF%B9%E8%B1%A1%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>转载链接：<a href="http://www.ruanyifeng.com/blog/2011/08/a_detailed_explanation_of_jquery_deferred_object.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2011/08/a_detailed_explanation_of_jquery_deferred_object.html</a></p><p>从jQuery 1.5.0版本开始引入的一个新功能—-<a href="http://api.jquery.com/category/deferred-object/" target="_blank" rel="noopener">deferred对象</a>，这个功能很重要，未来将成为jQuery的核心方法，它彻底改变了如何在jQuery中使用ajax。为了实现它，jQuery的全部ajax代码都被改写了。但是，它比较抽象，初学者很难掌握，网上的教程也不多。所以，我把自己的学习笔记整理出来了，希望对大家有用。</p><h2 id="一、什么是deferred对象？"><a href="#一、什么是deferred对象？" class="headerlink" title="一、什么是deferred对象？"></a>一、什么是deferred对象？</h2><p>开发网站的过程中，我们经常遇到某些耗时很长的javascript操作。其中，既有异步的操作（比如ajax读取服务器数据），也有同步的操作（比如遍历一个大型数组），它们都不是立即能得到结果的。</p><a id="more"></a><p>通常的做法是，为它们指定回调函数（callback）。即事先规定，一旦它们运行结束，应该调用哪些函数。</p><p>但是，在回调函数方面，jQuery的功能非常弱。为了改变这一点，jQuery开发团队就设计了<a href="http://api.jquery.com/category/deferred-object/" target="_blank" rel="noopener">deferred对象</a>。</p><p><strong>简单说，deferred对象就是jQuery的回调函数解决方案。</strong>在英语中，defer的意思是”延迟”，所以deferred对象的含义就是”延迟”到未来某个点再执行。</p><p>它解决了如何处理耗时操作的问题，对那些操作提供了更好的控制，以及统一的编程接口。它的主要功能，可以归结为四点。下面我们通过示例代码，一步步来学习。</p><h2 id="二、ajax操作的链式写法"><a href="#二、ajax操作的链式写法" class="headerlink" title="二、ajax操作的链式写法"></a>二、ajax操作的链式写法</h2><p>首先，回顾一下jQuery的ajax操作的传统写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url: &apos;test.html&apos;,</span><br><span class="line">    success: function()&#123;</span><br><span class="line">        alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">    &#125;,</span><br><span class="line">    error: function()&#123;</span><br><span class="line">        alert(&apos;出错了&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在上面的代码中，$.ajax()接受一个对象参数，这个对象包含两个方法：success方法指定操作成功后的回调函数，error方法指定操作失败后的回调函数。</p><p>$.ajax()操作完成后，如果使用的是低于1.5.0版本的jQuery，返回的是XHR对象，你没法进行链式操作；如果高于1.5.0版本，返回的是deferred对象，可以进行链式操作。</p><p>现在，新的写法是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&apos;test.html&apos;)</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.fail(function()&#123;</span><br><span class="line">    alert(&apos;出错了&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>可以看到，<a href="http://api.jquery.com/deferred.done/" target="_blank" rel="noopener">done()</a>相当于success方法，<a href="http://api.jquery.com/deferred.fail/" target="_blank" rel="noopener">fail()</a>相当于error方法。采用链式写法以后，代码的可读性大大提高。</p><h2 id="三、指定同一操作的多个回调函数"><a href="#三、指定同一操作的多个回调函数" class="headerlink" title="三、指定同一操作的多个回调函数"></a>三、指定同一操作的多个回调函数</h2><p>deferred对象的一大好处，就是它允许你自由添加多个回调函数。</p><p>还是以上面的代码为例，如果ajax操作成功后，除了原来的回调函数，我还想再运行一个回调函数，怎么办？</p><p>很简单，直接把它加在后面就行了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&apos;test.html&apos;)</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.fail(function()&#123;</span><br><span class="line">    alert(&apos;出错了&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;第二个回调函数！&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>回调函数可以添加任意多个，它们按照添加顺序执行。</p><h2 id="四、为多个操作指定回调函数"><a href="#四、为多个操作指定回调函数" class="headerlink" title="四、为多个操作指定回调函数"></a>四、为多个操作指定回调函数</h2><p>deferred对象的另一大好处，就是它允许你为多个事件指定一个回调函数，这是传统写法做不到的。</p><p>请看下面的代码，它用到了一个新的方法<a href="http://api.jquery.com/jQuery.when/" target="_blank" rel="noopener">$.when()</a>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.when($.ajax(&apos;test1.html&apos;), $.ajax(&apos;test2.html&apos;))</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.fail(function()&#123;</span><br><span class="line">    alert(&apos;出错了&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;第二个回调函数！&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这段代码的意思是，先执行两个操作$.ajax(“test1.html”)和$.ajax(“test2.html”)，如果都成功了，就运行done()指定的回调函数；如果有一个失败或都失败了，就执行fail()指定的回调函数。</p><h2 id="五、普通操作的回调函数接口（上）"><a href="#五、普通操作的回调函数接口（上）" class="headerlink" title="五、普通操作的回调函数接口（上）"></a>五、普通操作的回调函数接口（上）</h2><p>deferred对象的最大优点，就是它把这一套回调函数接口，从ajax操作扩展到了所有操作。也就是说，任何一个操作—-不管是ajax操作还是本地操作，也不管是异步操作还是同步操作—-都可以使用deferred对象的各种方法，指定回调函数。</p><p>我们来看一个具体的例子。假定有一个很耗时的操作wait：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var wait = function()&#123;</span><br><span class="line">    var tasks = function()&#123;</span><br><span class="line">        alert(&apos;执行完毕！&apos;);</span><br><span class="line">    &#125;;</span><br><span class="line">    setTimeout(tasks, 5000);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我们为它指定回调函数，应该怎么做呢？</p><p>很自然的，你会想到，可以使用$.when()：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.when(wait())</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.fail(function()&#123;</span><br><span class="line">    alert(&apos;出错啦！&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>但是，这样写的话，done()方法会立即执行，起不到回调函数的作用。原因在于$.when()的参数只能是deferred对象，所以必须对wait()进行改写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var dtd = $.Deferred();// 新建一个deferred对象</span><br><span class="line">var wait = function(dtd)&#123;</span><br><span class="line">    var tasks = function()&#123;</span><br><span class="line">        alert(&apos;执行完毕！&apos;);</span><br><span class="line">        dtd.resolve();// 改变deferred对象的执行状态</span><br><span class="line">    &#125;;</span><br><span class="line">    setTimeout(tasks, 5000);</span><br><span class="line">    return dtd;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>现在，wait()函数返回的是deferred对象，这就可以加上链式操作了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.when(wait(dtd))</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.fail(function()&#123;</span><br><span class="line">    alert(&apos;出错啦！&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>wait()函数运行完，就会自动运行done()方法指定的回调函数。</p><h2 id="六、deferred-resolve-方法和deferred-reject-方法"><a href="#六、deferred-resolve-方法和deferred-reject-方法" class="headerlink" title="六、deferred.resolve()方法和deferred.reject()方法"></a>六、deferred.resolve()方法和deferred.reject()方法</h2><p>如果仔细看，你会发现在上面的wait()函数中，还有一个地方我没讲解。那就是<a href="http://api.jquery.com/deferred.resolve" target="_blank" rel="noopener">dtd.resolve()</a>的作用是什么？</p><p>要说清楚这个问题，就要引入一个新概念”执行状态”。jQuery规定，deferred对象有三种执行状态—-未完成，已完成和已失败。如果执行状态是”已完成”（resolved）,deferred对象立刻调用done()方法指定的回调函数；如果执行状态是”已失败”，调用fail()方法指定的回调函数；如果执行状态是”未完成”，则继续等待，或者调用<a href="http://api.jquery.com/deferred.progress/" target="_blank" rel="noopener">progress()</a>方法指定的回调函数（jQuery1.7版本添加）。</p><p>前面部分的ajax操作时，deferred对象会根据返回结果，自动改变自身的执行状态；但是，在wait()函数中，这个执行状态必须由程序员手动指定。dtd.resolve()的意思是，将dtd对象的执行状态从”未完成”改为”已完成”，从而触发done()方法。</p><p>类似的，还存在一个<a href="http://api.jquery.com/deferred.reject" target="_blank" rel="noopener">deferred.reject()</a>方法，作用是将dtd对象的执行状态从”未完成”改为”已失败”，从而触发fail()方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">var dtd = $.Deferred();// 新建一个deferred对象</span><br><span class="line">var wait = function(dtd)&#123;</span><br><span class="line">    var tasks = function()&#123;</span><br><span class="line">        alert(&apos;执行完毕！&apos;);</span><br><span class="line">        dtd.reject();// 改变deferred对象的执行状态</span><br><span class="line">    &#125;;</span><br><span class="line">    setTimeout(tasks, 5000);</span><br><span class="line">    return dtd;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$.when(wait(dtd))</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.fail(function()&#123;</span><br><span class="line">    alert(&apos;出错啦！&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="七、deferred-promise-方法"><a href="#七、deferred-promise-方法" class="headerlink" title="七、deferred.promise()方法"></a>七、deferred.promise()方法</h2><p>上面这种写法，还是有问题。那就是dtd是一个全局对象，所以它的执行状态可以从外部改变。</p><p>请看下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">var dtd = $.Deferred();// 新建一个deferred对象</span><br><span class="line">var wait = function(dtd)&#123;</span><br><span class="line">    var tasks = function()&#123;</span><br><span class="line">        alert(&apos;执行完毕！&apos;);</span><br><span class="line">        dtd.reject();// 改变deferred对象的执行状态</span><br><span class="line">    &#125;;</span><br><span class="line">    setTimeout(tasks, 5000);</span><br><span class="line">    return dtd;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$.when(wait(dtd))</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.fail(function()&#123;</span><br><span class="line">    alert(&apos;出错啦！&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">dtd.resolve();</span><br></pre></td></tr></table></figure><p>我在代码的尾部加了一行dtd.resolve()，这就改变了dtd对象的执行状态，因此导致done()方法立刻执行，跳出”哈哈，成功了！”的提示框，等5秒之后再跳出”执行完毕！”的提示框。</p><p>为了避免这种情况，jQuery提供了<a href="http://api.jquery.com/deferred.promise/" target="_blank" rel="noopener">deferred.promise()</a>方法。它的作用是，在原来的deferred对象上返回另一个deferred对象，后者只开放与改变执行状态无关的方法（比如done()方法和fail()方法），屏蔽与改变执行状态有关的方法（比如resolve()方法和reject()方法），从而使得执行状态不能被改变。</p><p>请看下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">var dtd = $.Deferred();// 新建一个deferred对象</span><br><span class="line">var wait = function(dtd)&#123;</span><br><span class="line">    var tasks = function()&#123;</span><br><span class="line">        alert(&apos;执行完毕！&apos;);</span><br><span class="line">        dtd.reject();// 改变deferred对象的执行状态</span><br><span class="line">    &#125;;</span><br><span class="line">    setTimeout(tasks, 5000);</span><br><span class="line">    return dtd.promise();// 返回promise对象</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var d = wait(dtd);// 新建一个d对象，改为对这个对象进行操作</span><br><span class="line">$.when(d)</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.fail(function()&#123;</span><br><span class="line">    alert(&apos;出错啦！&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">d.resolve();// 此时，这个语句是无效的</span><br></pre></td></tr></table></figure><p>在上面的这段代码中，wait()函数返回的是promise对象。然后，我们把回调函数绑定在这个对象上面，而不是原来的deferred对象上面。这样的好处是，无法改变这个对象的执行状态，要想改变执行状态，只能操作原来的deferred对象。</p><p>不过，更好的写法是<a href="http://blog.allenm.me/2012/01/jquery_deferred_promise_method/" target="_blank" rel="noopener">allenm</a>所指出的，将dtd对象变成wait(）函数的内部对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">var wait = function()&#123;</span><br><span class="line">    var dtd = $.Deferred();// 新建一个deferred对象</span><br><span class="line">    var tasks = function()&#123;</span><br><span class="line">        alert(&apos;执行完毕！&apos;);</span><br><span class="line">        dtd.resolve();// 改变deferred对象的执行状态</span><br><span class="line">    &#125;;</span><br><span class="line">    setTimeout(tasks, 5000);</span><br><span class="line">    return dtd.promise();// 返回promise对象</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$.when(wait())</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.fail(function()&#123;</span><br><span class="line">    alert(&apos;出错啦！&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="八、普通操作的回调函数接口（中）"><a href="#八、普通操作的回调函数接口（中）" class="headerlink" title="八、普通操作的回调函数接口（中）"></a>八、普通操作的回调函数接口（中）</h2><p>另一种防止执行状态被外部改变的方法，是使用deferred对象的建构函数$.Deferred()。</p><p>这时，wait函数还是保持不变，我们直接把它传入$.Deferred()：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var wait = function(dtd)&#123;</span><br><span class="line">    var tasks = function()&#123;</span><br><span class="line">        alert(&apos;执行完毕！&apos;);</span><br><span class="line">        dtd.resolve();// 改变deferred对象的执行状态</span><br><span class="line">    &#125;;</span><br><span class="line">    setTimeout(tasks, 5000);</span><br><span class="line">    return dtd.promise();// 返回promise对象</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$.Deferred(wait)</span><br><span class="line">.done(function()&#123;</span><br><span class="line">    alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.fail(function()&#123;</span><br><span class="line">    alert(&apos;出错啦！&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>jQuery规定，$.Deferred()可以接受一个函数名（注意，是函数名）作为参数，$.Deferred()所生成的deferred对象将作为这个函数的默认参数。</p><h2 id="九、普通操作的回调函数接口（下）"><a href="#九、普通操作的回调函数接口（下）" class="headerlink" title="九、普通操作的回调函数接口（下）"></a>九、普通操作的回调函数接口（下）</h2><p>除了上面两种方法以外，我们还可以直接在wait对象上部署deferred接口。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var dtd = $.Deferred();// 生成Deferred对象</span><br><span class="line">var wait = function(dtd)&#123;</span><br><span class="line">    var tasks = function()&#123;</span><br><span class="line">        alert(&apos;执行完毕！&apos;);</span><br><span class="line">        dtd.resolve();// 改变deferred对象的执行状态</span><br><span class="line">    &#125;;</span><br><span class="line">    setTimeout(tasks, 5000);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">dtd.promise(wait);</span><br><span class="line">wait.done(function()&#123;</span><br><span class="line">    alert(&apos;哈哈，成功了！&apos;);</span><br><span class="line">&#125;)</span><br><span class="line">.fail(function()&#123;</span><br><span class="line">    alert(&apos;出错啦！&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">wait(dtd);</span><br></pre></td></tr></table></figure><p>这里的关键是dtd.promise(wait)这一行，它的作用就是在wait对象上部署Deferred接口。正是因为有了这一行，后面才能直接在wait上面调用done()和fail()。</p><h2 id="十、小结：deferred对象的方法"><a href="#十、小结：deferred对象的方法" class="headerlink" title="十、小结：deferred对象的方法"></a>十、小结：deferred对象的方法</h2><p>前面已经讲到了deferred对象的多种方法，下面做一个总结：</p><ul><li><a href="http://api.jquery.com/category/deferred-object/" target="_blank" rel="noopener">$.Deferred()</a> 生成一个deferred对象。</li><li><a href="http://api.jquery.com/deferred.done/" target="_blank" rel="noopener">deferred.done()</a> 指定操作成功时的回调函数</li><li><a href="http://api.jquery.com/deferred.fail/" target="_blank" rel="noopener">deferred.fail()</a> 指定操作失败时的回调函数</li><li><a href="http://api.jquery.com/deferred.promise/" target="_blank" rel="noopener">deferred.promise()</a> 没有参数时，返回一个新的deferred对象，该对象的运行状态无法被改变；接受参数时，作用为在参数对象上部署deferred接口。</li><li><a href="http://api.jquery.com/deferred.resolve/" target="_blank" rel="noopener">deferred.resolve()</a> 手动改变deferred对象的运行状态为”已完成”，从而立即触发done()方法。</li><li><a href="http://api.jquery.com/deferred.reject/" target="_blank" rel="noopener">deferred.reject()</a> 这个方法与deferred.resolve()正好相反，调用后将deferred对象的运行状态变为”已失败”，从而立即触发fail()方法。</li><li><a href="http://api.jquery.com/jQuery.when/" target="_blank" rel="noopener">$.when()</a> 为多个操作指定回调函数。</li></ul><p>除了这些方法以外，deferred对象还有二个重要方法，上面的教程中没有涉及到。</p><ul><li><a href="http://api.jquery.com/deferred.then/" target="_blank" rel="noopener">deferred.then()</a> 有时为了省事，可以把done()和fail()合在一起写，这就是then()方法。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$.when($.ajax(&quot;/main.php&quot;))</span><br><span class="line">.then(successFunc, failureFunc);</span><br></pre></td></tr></table></figure><p>如果then()有两个参数，那么第一个参数是done()方法的回调函数，第二个参数是fail()方法的回调方法。如果then()只有一个参数，那么等同于done()。</p><ul><li><a href="http://api.jquery.com/deferred.always/" target="_blank" rel="noopener">deferred.always()</a> 这个方法也是用来指定回调函数的，它的作用是，不管调用的是deferred.resolve()还是deferred.reject()，最后总是执行。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$.ajax( &quot;test.html&quot; )</span><br><span class="line">.always( function() &#123; alert(&quot;已执行！&quot;);&#125; );</span><br></pre></td></tr></table></figure><p>（致谢：本文第一稿发表后，<a href="http://blog.allenm.me/" target="_blank" rel="noopener">allenm</a>来信指出原文对promise()的理解是错的。现在的第二稿是根据<a href="http://blog.allenm.me/2012/01/jquery_deferred_promise_method/" target="_blank" rel="noopener">他的文章</a>修改的，在此我表示衷心感谢。）</p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端构建工具发展及其比较</title>
      <link href="2019/09/15/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E5%8F%91%E5%B1%95%E5%8F%8A%E5%85%B6%E6%AF%94%E8%BE%83/"/>
      <url>2019/09/15/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E5%8F%91%E5%B1%95%E5%8F%8A%E5%85%B6%E6%AF%94%E8%BE%83/</url>
      
        <content type="html"><![CDATA[<p>转载链接：<a href="https://blog.dunizb.com/2018/04/23/前端构建工具发展及其比较/" target="_blank" rel="noopener">https://blog.dunizb.com/2018/04/23/前端构建工具发展及其比较/</a></p><p>我们一定会感叹前端技术发展之快，各种可以提高开发效率的新思想和框架层出不穷。但是他们都有一个共同特点：源代码无法直接运行，必须通过转换后才能正常运行。</p><p>构建工具就是做这件事，将源代码转换成可以执行的JavaScript、CSS、HTML 代码，包括如下内容：</p><a id="more"></a><ul><li>代码转换：将 TypeScript 编译成JavaScript、将 SCSS 编译成 CSS等。</li><li>文件优化：压缩JavaScript、CSS、HTML 代码，压缩合并图片等。</li><li>代码分割：提取多个页面的公共代码，提取首屏不需要执行部分代码让其异步记在。</li><li>模块合并：在采用模块化的项目里会有很多个模块和文件，需要通过构建功能将模块分类合并成一个文件。</li><li>自动刷新：监听本地源代码变化，自动重新构建、刷新浏览器。</li><li>代码校验：在代码被提交到仓库前需要校验代码是否符合规范，以及单元测试是否通过。</li><li>自动发布：更新代码后，自动构建出线上发布代码并传输给发布系统。</li></ul><p>构建其实是工程化、自动化思想在前端开发中的体现，将一系列流程用代码去实现，让代码自动化地执行这一系列复杂的流程。构建为前端开发注入了更大的活力，解放了我们的生产力。</p><p>历史上先后出现了一系列构建工具，他们各有优缺点。由于前端工程师很熟悉 JavaScript，Node.js 又可以胜任所有构建需求，所以大多数构建工具都是用 Node.js 开发的，下面来一一介绍他们。</p><h2 id="一、构建工具发展史及趋势"><a href="#一、构建工具发展史及趋势" class="headerlink" title="一、构建工具发展史及趋势"></a>一、构建工具发展史及趋势</h2><h3 id="Npm-Scripts"><a href="#Npm-Scripts" class="headerlink" title="Npm Scripts"></a>Npm Scripts</h3><p>Npm Scripts（NPM脚本）是一个任务执行者。NPM是安装Node时附带的一个包管理器，Npm Script 则是 NPM 内置的一个功能，允许在 package.json 文件里面使用 scripts 字段定义任务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;scripts&quot;:&#123;</span><br><span class="line">        &quot;dev&quot;: &quot;node dev.js&quot;,</span><br><span class="line">        &quot;pub&quot;: &quot;node build.js&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>里面的 scripts 字段是一个对象，每个属性对应一个 Shell 脚本，以上代码定义了两个任务，dev 和 pub。其底层实现原理是通过调用 Shell 去运行脚本命令，例如，执行 npm run pub 命令等同于执行 node build.js 命令。</p><p><strong>优点：</strong>npm scripts 的优点是内置，无需安装其他依赖<br><strong>缺点：</strong>功能太简单，虽然提供了 pre 和 post 两个钩子，但不能方便的管理多个任务之间的依赖。</p><blockquote><p>附：<a href="https://www.ruanyifeng.com/blog/2016/10/npm_scripts.html" target="_blank" rel="noopener">npm scripts 使用指南</a></p></blockquote><h3 id="Grunt"><a href="#Grunt" class="headerlink" title="Grunt"></a>Grunt</h3><p><a href="https://gruntjs.com/" target="_blank" rel="noopener">Grunt</a> 现在已基本不用了，简单说一下。Grunt 和 Npm Scripts 类似，也是一个任务执行者。Grunt 有大量现成的插件封装了常见任务，也能管理任务之间的依赖关系，自动化地执行依赖任务，每个任务的具体执行代码和依赖关系写在配置文件 gruntfile.js 里。</p><p>Grunt 的<strong>优点</strong>是：</p><ul><li>灵活，它只负责执行我们定义好的任务；</li><li>大量可复用插件封装好了常见的构建任务。</li></ul><p>Grunt 的<strong>缺点</strong>是集成度不高，要写很多配置后才可以用，无法做到开箱即用。</p><p>Grunt 相当于进化版的 Npm scripts，它的诞生其实是为了弥补 Npm Scripts 的不足。</p><h3 id="Gulp"><a href="#Gulp" class="headerlink" title="Gulp"></a>Gulp</h3><p><a href="https://www.gulpjs.com.cn/" target="_blank" rel="noopener">Gulp</a> 是一个基于流的自动化构建工具。除了可以管理任务和执行任务，还支持监听文件、读写文件。Gulp 被设计的非常简单，只通过下面5个方法就可以支持几乎所有构建场景：</p><ul><li>通过 gulp.task 注册一个任务；</li><li>通过 gulp.run 执行任务；</li><li>通过 gulp.watch 监听文件变化；</li><li>通过 gulp.src 读取文件；</li><li>通过 gulp.dest 写完文件。</li></ul><p>Gulp 最大的特点是引入了<strong>流</strong>的概念，同时提供了一系列常用插件去处理流，流可以在插件之间传递，大致使用如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">// 引入 Gulp</span><br><span class="line">var gulp = require(&quot;gulp&quot;);</span><br><span class="line">// 引入插件</span><br><span class="line">var jshint = require(&quot;gulp-jshint&quot;);</span><br><span class="line">var sass = require(&quot;gulp-sass&quot;);</span><br><span class="line">var concat = require(&quot;gulp-concat&quot;);</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">// 便宜SCSS任务</span><br><span class="line">gulp.task(&apos;scss&apos;, function() &#123;</span><br><span class="line">    // 读取文件，通过管道喂给插件</span><br><span class="line">    gulp.src(&apos;./scss/*.scss&apos;)</span><br><span class="line">        // SCSS 插件将 scss 文件编译成 css</span><br><span class="line">        .pipe(sass())</span><br><span class="line">        // 输出文件</span><br><span class="line">        .pipe(guilp.dest(&apos;./css&apos;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 合并压缩 JavaScript 文件</span><br><span class="line">gulp.task(&apos;scripts&apos;, function() &#123;</span><br><span class="line">    gulp.src(&apos;./js/*.js&apos;)</span><br><span class="line">        .pipe(concat(&apos;all.js&apos;))</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(&apos;./dest&apos;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 监听文件变化</span><br><span class="line">gulp.task(&apos;watch&apos;, function() &#123;</span><br><span class="line">    // 当 SCSS 文件被编辑时执行 SCSS 任务</span><br><span class="line">    gulp.watch(&apos;./scss/*.scss&apos;, [&apos;sass&apos;]);</span><br><span class="line">    gulp.watch(&apos;./js/*.js&apos;, [&apos;scripts&apos;]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Gulp 的<strong>优点：</strong>好用又不失灵活，既可以单独完成构建，也可以和其他工具搭配使用。</p><p><strong>缺点：</strong>和Grunt 类似。集成度不高，要写很多配置后才可以用，无法做到开箱即用。</p><p>可以将Gulp 看做是 Grunt 的加强版。相对于 Grunt ，Gulp 增加了文件监听、读写文件、流式处理的功能。</p><h3 id="FIS-3"><a href="#FIS-3" class="headerlink" title="FIS 3"></a>FIS 3</h3><p><a href="http://fis.baidu.com/" target="_blank" rel="noopener">Fis3</a>是一个来自百度的优秀国产构建工具。相对于 Grunt、Gulp 这些只提供了基本功能的工具。Fis3集成了开发者常用的构建功能，如下所述。</p><ul><li>读写文件：通过 fis.match 读文件，release 配置文件输出路径。</li><li>资源定位：解析文件之间的依赖关系和文件位置。</li><li>文件指纹：在通过 useHash 配置输出文件时为文件 URL加上 md5 戳，来优化浏览器的缓存。</li><li>文件编译：通过 parser 配置文件解析器做文件转换，例如将 ES6 编译成 ES5。</li><li>压缩资源：通过 optimizer 配置代码压缩方法。</li><li>图片合并：通过 spriter 配置合并 CSS 里导入的图片到一个文件中，来减少 HTTP 请求数。</li></ul><p>大致使用如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// 加 md5</span><br><span class="line">fis.match(&apos;*.&#123;js,css,png&#125;&apos;, &#123;</span><br><span class="line">    useHash: true</span><br><span class="line">&#125;);</span><br><span class="line">// 通过fis3-parse-typescript插件可将 TypeScript 文件转换成 JavaScript 文件</span><br><span class="line">fis.match(&apos;*.ts&apos;, &#123;</span><br><span class="line">    parser: fis.plugin(&apos;typescript&apos;)</span><br><span class="line">&#125;);</span><br><span class="line">// 对CSS进行雪碧图合并</span><br><span class="line">fis.match(&apos;*.css&apos;, &#123;</span><br><span class="line">    // 为匹配到的文件分配属性 useSprite</span><br><span class="line">    useSprite: true</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩 JavaScript</span><br><span class="line">fis.match(&apos;*.js&apos;, &#123;</span><br><span class="line">    optimizer: fis.plugin(&apos;uglify-js&apos;)</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩CSS</span><br><span class="line">fis.match(&apos;*.css&apos;, &#123;</span><br><span class="line">    optimizer: fis.plugin(&apos;clean-css&apos;)</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩图片</span><br><span class="line">fis.match(&apos;*.png&apos;, &#123;</span><br><span class="line">    optimizer: fis.plugin(&apos;png-compressor&apos;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>可以看出 Fis3 很强大，内置了许多功能，无需做太多配置就能完成大量工作。</p><p>Fis3的<strong>优点：</strong>集成了各种Web老发所需的构建功能，配置简单，开箱即用。其<strong>缺点</strong>是目前官方已经不再更新和维护，不支持最新版本的Node。</p><p>FIS3是一种专注于Web开发的完整解决方案，如果将Grunt、Gulp比作汽车的发动机，那么FIS3则就是一辆完整的汽车。</p><h3 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h3><p><a href="https://webpack.github.io/" target="_blank" rel="noopener">Webpack</a> 是一个打包模块化的JavaScript的工具，在Webpack里一切文件皆模块，通过 loader 转换文件，通过Plugin 注入钩子，最后输出由多个模块组合成的文件。Webpack 专注于构建模块化项目。</p><p>其官网的首页图很形象的展示了 Webpack 的定义，如下图：</p><p><img src="https://webpack.github.io/assets/what-is-webpack.png" alt="Webpack 的定义"></p><p>一切文件，如JavaScript、CSS、SCSS、图片、模板，对于Webpack 来说都是一个个模块，这样的好处是能清晰地描绘各个模块之间的依赖关系，以方便Webpack进行组合和打包，经过Webpack的处理，最终会输出浏览器能使用的静态资源。</p><p>Webpack具有很大的灵活性，能配置处理文件的方式，使用方法大致如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    // 所有模块的入口，webpack从入口开始递归解析出所有依赖的模块</span><br><span class="line">    entry: &apos;./app.js&apos;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        // 将入口所依赖的所有模块打包成一个文件 bundle.js 输出</span><br><span class="line">        filename: &apos;bundle.js&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Webpack的<strong>优点</strong>是：</p><ul><li>专注于处理模块化的项目，能做到开箱即用、一步到位；</li><li>可通过 Plugin 扩展，完整好用又不失灵活性；</li><li>使用场景不局限于Web开发；</li><li>社区庞大活跃，经常引入紧跟时代发展的新特性，能为大多数场景找到已有的开源扩展；</li><li>良好的开发体验；</li></ul><p>Webpack的<strong>缺点</strong>是：只能用于采用模块化开发的项目。</p><h3 id="Rollup"><a href="#Rollup" class="headerlink" title="Rollup"></a>Rollup</h3><p><a href="https://www.rollupjs.com/" target="_blank" rel="noopener">Rollup</a> 是一个和 Webpack 很类似但专注于ES6的模块打包工具。它的亮点在于，针对ES6源码进行 Tree Shaking,以去除那些已经被定义但没被使用的代码并进行 Scope Hoisting，以减少输出文件的大小和提升运行性能。然而 Rollup 的这些亮点随后就被 Webpack 模仿和实现了。由于 Rollup 的使用方法和 Webpakc 差不多，所以这里就不详细介绍如何使用 Rollup 了，而是详细说明他们的差别：</p><ul><li>Rollup 是在Webpack 流行后出现的替代品；</li><li>Rollup 生态链不完善，体验还不如Webpack；</li><li>Rollup 的功能不如 Webpack 完善，但其配置和使用更简单；</li><li>Rollup 不支持 Code Spliting， 但好处是在打包出来的代码中没有 Webpack 那段模块的加载、执行和缓存的代码。</li></ul><p>Rollup 在用于打包JavaScript库时比 Webpack 更有优势，因为其打包出来的代码更小、更快。但他的功能不够完善，在很多场景下都找不到现成的解决方案。</p><h3 id="Parcel"><a href="#Parcel" class="headerlink" title="Parcel"></a>Parcel</h3><p><a href="https://parceljs.org/" target="_blank" rel="noopener">Parcel</a> 是 最近新起的Web 应用打包工具，适用于经验不同的开发者。它利用多核处理提供了极快的速度，并且不需要任何配置。</p><p>Parcel的优点：</p><ul><li>极速打包。Parcel 使用 worker 进程去启用多核编译。同时有文件系统缓存，即使在重启构建后也能快速再编译。</li><li>开箱即用。对 JS, CSS, HTML, 文件 及更多的支持，而且不需要插件。</li><li>自动转换。如若有需要，Babel, PostCSS, 和PostHTML甚至 node_modules 包会被用于自动转换代码.</li><li>热模块替换。Parcel 无需配置，在开发环境的时候会自动在浏览器内随着你的代码更改而去更新模块。</li><li>友好的错误日志。当遇到错误时，Parcel 会输出 语法高亮的代码片段，帮助你定位问题。</li></ul><p>缺点：</p><ul><li>不支持SourceMap：在开发模式下，Parcel也不会输出SourceMap，目前只能去调试可读性极低的代码；</li><li>不支持剔除无效代码(TreeShaking)：很多时候我们只用到了库中的一个函数，结果Parcel把整个库都打包了进来；</li><li>一些依赖会让Parcel出错：当你的项目依赖了一些Npm上的模块时，有些Npm模块会让Parcel运行错误；</li></ul><p>Parcel需要为零配置付出代价。零配置其实是把各种常见的场景做为默认值来实现的，这虽然能节省很多工作量，快速上手，但这同时会带来一些问题：</p><ul><li>不守规矩的<code>node_module</code>：有些依赖的库在发布到Npm上时可能不小心把<code>.babelrcpostcss.config.js</code> <code>tsconfig.json</code>这些配置文件也一起发布上去了，</li><li>不灵活的配置：零配置的Parcel关闭了很多配置项，在一些需要的配置的场景下无法改变。</li></ul><p>Parcel使用场景受限。目前Parcel只能用来构建用于运行在浏览器中的网页，这也是他的出发点和专注点。在软件行业不可能存在即使用简单又可以适应各种场景的方案，就算所谓的人工智能也许能解决这个问题，但人工智能不能保证100%的正确性。</p><p>反观Webpack除了用于构建网页，还可以做：</p><ul><li><a href="http://webpack.wuhaolin.cn/3%E5%AE%9E%E6%88%98/3-13%E6%9E%84%E5%BB%BANpm%E6%A8%A1%E5%9D%97.html" target="_blank" rel="noopener">打包发布到Npm上的库</a></li><li><a href="http://webpack.wuhaolin.cn/3%E5%AE%9E%E6%88%98/3-11%E6%9E%84%E5%BB%BA%E5%90%8C%E6%9E%84%E5%BA%94%E7%94%A8.html" target="_blank" rel="noopener">构建Node.js应用(同构应用)</a></li><li><a href="http://webpack.wuhaolin.cn/3%E5%AE%9E%E6%88%98/3-12%E6%9E%84%E5%BB%BAElectron%E5%BA%94%E7%94%A8.html" target="_blank" rel="noopener">构建Electron应用</a></li><li><a href="http://webpack.wuhaolin.cn/3%E5%AE%9E%E6%88%98/3-14%E6%9E%84%E5%BB%BA%E7%A6%BB%E7%BA%BF%E5%BA%94%E7%94%A8.html" target="_blank" rel="noopener">构建离线应用(ServiceWorkers)</a></li></ul><p>与Webpack的详细对比请参看<a href="https://www.cnblogs.com/lxg0/p/8387670.html" target="_blank" rel="noopener">这里</a></p><h2 id="二、为什么选择Webpack？"><a href="#二、为什么选择Webpack？" class="headerlink" title="二、为什么选择Webpack？"></a>二、为什么选择Webpack？</h2><p>上面介绍的构建工具是按照他们的诞生时间排序的，他们是时代的产物，侧面反映出 Web 开发的发展趋势，如下所述：</p><ul><li>在 Npm Scripts 和 Grunt 时代，Web 开发要做的事情变多，流程复杂，自动化思想被引入，用于简化流程；</li><li>在 Gulp 时代，开始出现一些新语言用于提高开发效率，流程处理思想的出现是为了简化文件转换的流程，例如将ES6转换为ES5；</li><li>在Webpack时代，由于单页应用的流行，网页的功能和实现代码变的复杂、庞大，Web开发向模块化改进。</li></ul><p>这些构建工具都有各自的定位和专注点，它们之间既可以单独完成任务，也可以互相搭配起来弥补各自的不足。在了解这些常见的构建工具后，我们需要根据自己的需求去判断应该如何进行选择和搭配它们才能更好的满足自己的需求。</p><p>经过多年的额发展，Webpack 已经成为构建工具中的首选，这是因为：</p><ul><li>大多数团队在开发新项目时会采用紧跟时代的技术，这些技术几乎都会采用“模块化+新语言+新框架”，Webpack可以为这些新项目提供一站式的解决方案；</li><li>Webpack有良好的生态和维护团队，能提供良好的开发体验并保证质量；</li><li>Webpack 被全世界大量的Web开发者使用和验证，能找到各个层面所需要的教程和经验分享。</li></ul><h2 id="三、Gulp与Webpack的区别"><a href="#三、Gulp与Webpack的区别" class="headerlink" title="三、Gulp与Webpack的区别"></a>三、Gulp与Webpack的区别</h2><p>常有人拿gulp与webpack来比较，知道这两个构建工具功能上有重叠的地方，可单用，也可一起用，但本质的区别就没有那么清晰。</p><p><strong>Gulp</strong>强调的是前端开发的工作流程，我们可以通过配置一系列的task，定义task处理的事务（例如文件压缩合并、雪碧图、启动server、版本控制等），然后定义执行顺序，来让gulp执行这些task，从而构建项目的整个前端开发流程。 <strong>简单说就一个Task Runner，就是用来跑一个一个任务的。</strong></p><p>Gulp 没发解决的是 js module 的问题，是你写代码时候如何组织代码结构的问题。</p><p><strong>Webpack</strong>是一个前端模块化方案，更侧重模块打包，我们可以把开发中的所有资源（图片、js文件、css文件等）都看成模块，通过loader（加载器）和plugins（插件）对资源进行处理，打包成符合生产环境部署的前端资源。</p><p><strong>相同点：</strong>文件合并与压缩（css,js），sass/less预编译，启动server，版本控制。</p><p><strong>不同点：</strong>虽然都是前端自动化构建工具，但看他们的定位就知道不是对等的。</p><ul><li>gulp严格上讲，模块化不是他强调的东西，他旨在规范前端开发流程。</li><li>webpack更是明显强调模块化开发，而那些文件压缩合并、预处理等功能，不过是他附带的功能。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> 构建工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 切换远程仓库地址</title>
      <link href="2019/09/13/Git-%E5%88%87%E6%8D%A2%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80/"/>
      <url>2019/09/13/Git-%E5%88%87%E6%8D%A2%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<p>在我们的项目版本管理，可能会改变远程仓库地址的情况，那么如何修改本地项目的远程仓库地址呢</p><p>origin 是默认的远程版本库名称</p><h2 id="查看远程地址"><a href="#查看远程地址" class="headerlink" title="查看远程地址"></a>查看远程地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show origin</span><br><span class="line">remote: Repository Not Found</span><br><span class="line">fatal: repository &apos;https://gitee.com/******/xxxx.git/&apos; not found</span><br></pre></td></tr></table></figure><p>因为远程仓库地址已被修改，所以本地查看时候提示没有被发现</p><a id="more"></a><h2 id="修改远程地址"><a href="#修改远程地址" class="headerlink" title="修改远程地址"></a>修改远程地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote set-url origin https://gitee.com/******/xxxx.git/</span><br></pre></td></tr></table></figure><h2 id="查看确认修改成功"><a href="#查看确认修改成功" class="headerlink" title="查看确认修改成功"></a>查看确认修改成功</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show origin</span><br><span class="line">* remote origin</span><br><span class="line">  Fetch URL: https://gitee.com/****/xxxx.git/</span><br><span class="line">  Push  URL: https://gitee.com/****/xxxx.git/</span><br><span class="line">  HEAD branch: master</span><br><span class="line">  Remote branch:</span><br><span class="line">    master tracked</span><br><span class="line">  Local branch configured for &apos;git pull&apos;:</span><br><span class="line">    master merges with remote master</span><br><span class="line">  Local ref configured for &apos;git push&apos;:</span><br><span class="line">    master pushes to master (up to date)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode 常用扩展</title>
      <link href="2019/09/12/VSCode-%E5%B8%B8%E7%94%A8%E6%89%A9%E5%B1%95/"/>
      <url>2019/09/12/VSCode-%E5%B8%B8%E7%94%A8%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<p>本文记录下自己经常用到的一些扩展，同时也推荐给更多的朋友，希望能对大家有所帮助。</p><h2 id="推荐插件"><a href="#推荐插件" class="headerlink" title="推荐插件"></a>推荐插件</h2><h3 id="Auto-Close-Tag"><a href="#Auto-Close-Tag" class="headerlink" title="Auto Close Tag"></a>Auto Close Tag</h3><p>自动添加 HTML/XML 的闭合标签，像 Visual Studio IDE 或 Sublime Text 一样。</p><p>地址：<a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag</a></p><h3 id="Auto-Rename-Tag"><a href="#Auto-Rename-Tag" class="headerlink" title="Auto Rename Tag"></a>Auto Rename Tag</h3><p>自动重命名成对的 HTML/XML 标签，与 Visual Studio IDE 相同。</p><p>地址：<a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag</a></p><h3 id="Markdown-Theme-Kit"><a href="#Markdown-Theme-Kit" class="headerlink" title="Markdown Theme Kit"></a>Markdown Theme Kit</h3><p>Visual Studio Code对Markdown的支持非常好，可以打开另一个窗口实时预览Markdown的编辑效果。这个插件主要是提供Markdown编辑器的颜色主题，这样编辑起来更爽快一些。</p><p>地址：<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.Theme-MarkdownKit" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=ms-vscode.Theme-MarkdownKit</a></p><a id="more"></a><h3 id="Mithril-Emmet"><a href="#Mithril-Emmet" class="headerlink" title="Mithril Emmet"></a>Mithril Emmet</h3><p>Emmet前身是zen-coding，可快速编写HTML代码和快速生成CSS样式</p><p>地址：<a href="https://marketplace.visualstudio.com/items?itemName=FallenMax.mithril-emmet" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=FallenMax.mithril-emmet</a></p><h3 id="vscode-fileheader"><a href="#vscode-fileheader" class="headerlink" title="vscode-fileheader"></a>vscode-fileheader</h3><p>自动生成头部注释</p><p>需要先修改插件配置，生成注释快捷键：<code>ctrl + alt + i</code></p><h3 id="ESLint"><a href="#ESLint" class="headerlink" title="ESLint"></a>ESLint</h3><p>地址：<a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint</a></p><h2 id="Laravel-相关"><a href="#Laravel-相关" class="headerlink" title="Laravel 相关"></a>Laravel 相关</h2><h3 id="Laravel-Blade-Snippets"><a href="#Laravel-Blade-Snippets" class="headerlink" title="Laravel Blade Snippets"></a>Laravel Blade Snippets</h3><p>Laravel blade 代码片段和语法高亮支持 Visual Studio Code。如果需要 <code>.blade.php</code>扩展文件支持 <code>Shift+Alt+f</code> 快速格式化代码，点击扩展图片，找到扩展 <code>Laravel Blade Snippets</code> 的配置图标点击 ，会看到有个 <code>Enable Blade Format</code> 选项，选中即可。如下图:</p><p><img src="/2019/09/12/VSCode-常用扩展/20200214142537.jpg" alt="Enable Blade Format"></p><p><a href="https://segmentfault.com/a/1190000018002815" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018002815</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源许可证教程</title>
      <link href="2019/09/12/%E5%BC%80%E6%BA%90%E8%AE%B8%E5%8F%AF%E8%AF%81%E6%95%99%E7%A8%8B/"/>
      <url>2019/09/12/%E5%BC%80%E6%BA%90%E8%AE%B8%E5%8F%AF%E8%AF%81%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>转载地址：<a href="http://www.ruanyifeng.com/blog/2017/10/open-source-license-tutorial.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2017/10/open-source-license-tutorial.html</a></p><p>作为一个开发者，如果你打算开源自己的代码，千万不要忘记，选择一种开源许可证（license）。</p><p>许多开发者对开源许可证了解很少，不清楚有哪些许可证，应该怎么选择。本文介绍开源许可证的基本知识，主要参考了 OpenSource.com （<a href="https://opensource.com/article/17/9/9-open-source-software-rules-startups" target="_blank" rel="noopener">1</a>，<a href="https://opensource.com/article/17/9/open-source-licensing" target="_blank" rel="noopener">2</a>）。</p><h2 id="一、什么是开源许可证"><a href="#一、什么是开源许可证" class="headerlink" title="一、什么是开源许可证"></a>一、什么是开源许可证</h2><p>开源许可证是一种法律许可。通过它，版权拥有人明确允许，用户可以免费地使用、修改、共享版权软件。</p><a id="more"></a><p>版权法默认禁止共享，也就是说，没有许可证的软件，就等同于保留版权，虽然开源了，用户只能看看源码，不能用，一用就会侵犯版权。所以软件开源的话，必须明确地授予用户开源许可证。</p><h2 id="二、开源许可证的种类"><a href="#二、开源许可证的种类" class="headerlink" title="二、开源许可证的种类"></a>二、开源许可证的种类</h2><p>目前，国际公认的开源许可证共有80多种。它们的共同特征是，都允许用户免费地使用、修改、共享源码，但是都有各自的使用条件。</p><p>如果一种开源许可证没有任何使用条件，连保留作者信息都不需要，那么就等同于放弃版权了。这时，软件可以直接声明进入”公共领域”（public domain）。</p><p>根据使用条件的不同，开源许可证分成两大类。</p><ul><li>宽松式（permissive）许可证</li><li>Copyleft 许可证</li></ul><h2 id="三、宽松式许可证"><a href="#三、宽松式许可证" class="headerlink" title="三、宽松式许可证"></a>三、宽松式许可证</h2><h3 id="3-1-特点"><a href="#3-1-特点" class="headerlink" title="3.1 特点"></a>3.1 特点</h3><p>宽松式许可证（permissive license）是最基本的类型，对用户几乎没有限制。用户可以修改代码后闭源。</p><p>它有三个基本特点。</p><p><strong>（1）没有使用限制</strong></p><p>用户可以使用代码，做任何想做的事情。</p><p><strong>（2）没有担保</strong></p><p>不保证代码质量，用户自担风险。</p><p><strong>（3）披露要求（notice requirement）</strong></p><p>用户必须披露原始作者。</p><h3 id="3-2-常见许可证"><a href="#3-2-常见许可证" class="headerlink" title="3.2 常见许可证"></a>3.2 常见许可证</h3><p>常见的宽松式许可证有四种。它们都允许用户任意使用代码，区别在于要求用户遵守的条件不同。</p><p><strong>（1）BSD（二条款版）</strong></p><p>分发软件时，必须保留原始的许可证声明。</p><p><strong>（2） BSD（三条款版）</strong></p><p>分发软件时，必须保留原始的许可证声明。不得使用原始作者的名字为软件促销。</p><p><strong>（3）MIT</strong></p><p>分发软件时，必须保留原始的许可证声明，与 BSD（二条款版）基本一致。</p><p><strong>（4）Apache 2</strong></p><p>分发软件时，必须保留原始的许可证声明。凡是修改过的文件，必须向用户说明该文件修改过；没有修改过的文件，必须保持许可证不变。</p><h2 id="四、Copyleft-许可证"><a href="#四、Copyleft-许可证" class="headerlink" title="四、Copyleft 许可证"></a>四、Copyleft 许可证</h2><h3 id="4-1-Copyleft-的含义"><a href="#4-1-Copyleft-的含义" class="headerlink" title="4.1 Copyleft 的含义"></a>4.1 Copyleft 的含义</h3><p>Copyleft 是<a href="http://www.ruanyifeng.com/blog/2005/03/post_112.html" target="_blank" rel="noopener">理查德·斯托曼</a>发明的一个词，作为 Copyright （版权）的反义词。</p><p>Copyright 直译是”复制权”，这是版权制度的核心，意为不经许可，用户无权复制。作为反义词，Copyleft 的含义是不经许可，用户可以随意复制。</p><p>但是，它带有前提条件，比宽松式许可证的限制要多。</p><ul><li>如果分发二进制格式，必须提供源码</li><li>修改后的源码，必须与修改前保持许可证一致</li><li>不得在原始许可证以外，附加其他限制</li></ul><p>上面三个条件的核心就是：修改后的 Copyleft 代码不得闭源。</p><h3 id="4-2-常见许可证"><a href="#4-2-常见许可证" class="headerlink" title="4.2 常见许可证"></a>4.2 常见许可证</h3><p>常见的 Copyleft 许可证也有四种（对用户的限制从最强到最弱排序）。</p><p><strong>（1）Affero GPL (AGPL)</strong></p><p>如果云服务（即 SAAS）用到的代码是该许可证，那么云服务的代码也必须开源。</p><p><strong>（2）GPL</strong></p><p>如果项目包含了 GPL 许可证的代码，那么整个项目都必须使用 GPL 许可证。</p><p><strong>（3）LGPL</strong></p><p>如果项目采用动态链接调用该许可证的库，项目可以不用开源。</p><p><strong>（4）Mozilla（MPL）</strong></p><p>只要该许可证的代码在单独的文件中，新增的其他文件可以不用开源。</p><h2 id="五、常见问题"><a href="#五、常见问题" class="headerlink" title="五、常见问题"></a>五、常见问题</h2><p>本节回答一些开源许可证的常见问题。</p><h3 id="5-1-什么叫分发（distribution）？"><a href="#5-1-什么叫分发（distribution）？" class="headerlink" title="5.1 什么叫分发（distribution）？"></a>5.1 什么叫分发（distribution）？</h3><p>除了 Affero GPL (AGPL) ，其他许可证都规定只有在”分发”时，才需要遵守许可证。换言之，如果不”分发”，就不需要遵守。</p><p>简单说，分发就是指将版权作品从一个人转移到另一个人。这意味着，如果你是自己使用，不提供给他人，就没有分发。另外，这里的”人”也指”法人”，因此如果使用方是公司，且只在公司内部使用，也不需要遵守许可证。</p><p>云服务（SaaS）是否构成”分发”呢？答案是不构成。所以你使用开源软件提供云服务，不必提供源码。但是，Affero GPL (AGPL) 许可证除外，它规定云服务也必须提供源码。</p><h3 id="5-2-开源软件的专利如何处理？"><a href="#5-2-开源软件的专利如何处理？" class="headerlink" title="5.2 开源软件的专利如何处理？"></a>5.2 开源软件的专利如何处理？</h3><p>某些许可证（Apache 2 和 GPL v3）包含明确的条款，授予用户许可，使用软件所包含的所有专利。</p><p>另一些许可证（BSD、MIT 和 GPL v2）根本没提到专利。但是一般认为，它们默认给予用户专利许可，不构成侵犯专利。</p><p>总得来说，除非有明确的”保留专利”的条款，使用开源软件都不会构成侵犯专利。</p><h3 id="5-3-什么是披露要求？"><a href="#5-3-什么是披露要求？" class="headerlink" title="5.3 什么是披露要求？"></a>5.3 什么是披露要求？</h3><p>所有的开源许可证都带有”披露要求”（notice requirement），即要求软件的分发者必须向用户披露，软件里面有开源代码。</p><p>一般来说，你只要在软件里面提供完整的原始许可证文本，并且披露原始作者，就满足了”披露要求”。</p><h3 id="5-4-GPL-病毒是真的吗？"><a href="#5-4-GPL-病毒是真的吗？" class="headerlink" title="5.4 GPL 病毒是真的吗？"></a>5.4 GPL 病毒是真的吗？</h3><p>GPL 许可证规定，只要你的项目包含了 GPL 代码，整个项目就都变成了 GPL。有人把这种传染性比喻成”GPL 病毒”。</p><p>很多公司希望避开这个条款，既使用 GPL 软件，又不把自己的专有代码开源。理论上，这是做不到的。因为 GPL 的设计目的，就是为了防止出现这种情况。</p><p>但是实际上，不遵守 GPL，最坏情况就是被起诉。如果你向法院表示无法履行 GPL 的条件，法官只会判决你停止使用 GPL 代码（法律上叫做”停止侵害”），而不会强制要求你将源码开源，因为《版权法》里面的”违约救济”没有提到违约者必须开源，只提到可以停止侵害和赔偿损失。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 版权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SVN 常用命令行</title>
      <link href="2019/09/10/SVN-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
      <url>2019/09/10/SVN-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>记录一下SVN常用的命令行</p><h2 id="检出项目"><a href="#检出项目" class="headerlink" title="检出项目"></a>检出项目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn co 地址 [项目路径]</span><br></pre></td></tr></table></figure><p>如果有项目路径，则把项目代码放在指定的项目路径中，否则，在当前目录下以地址的文件夹名作为项目路径。</p><a id="more"></a><p>一下命令，进入终端，然后进入项目所在的文件夹下</p><h2 id="查看SVN信息"><a href="#查看SVN信息" class="headerlink" title="查看SVN信息"></a>查看SVN信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn info</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@xxxxxx ******]# svn info</span><br><span class="line">Path: .</span><br><span class="line">Working Copy Root Path: /data/www/*******</span><br><span class="line">URL: svn://xxxxxxx1/*****</span><br><span class="line">Repository Root: svn://xxxxxxx1/*****</span><br><span class="line">Repository UUID: bd6e0071-16a1-4359-9796-084ad9f08e3d</span><br><span class="line">Revision: 1173</span><br><span class="line">Node Kind: directory</span><br><span class="line">Schedule: normal</span><br><span class="line">Last Changed Author: peak</span><br><span class="line">Last Changed Rev: 1173</span><br><span class="line">Last Changed Date: 2019-09-09 13:45:54 +0800 (Mon, 09 Sep 2019)</span><br></pre></td></tr></table></figure><h2 id="切换主机地址"><a href="#切换主机地址" class="headerlink" title="切换主机地址"></a>切换主机地址</h2><p>原地址：<code>svn://xxxxxxx1/*****</code><br>新地址：<code>svn://xxxxxxx2/*****</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn switch --relocate 原地址  新地址</span><br></pre></td></tr></table></figure><p>然后根据提示，依次输入服务器<code>root</code>密码、svn用户名、svn密码</p><p>我这里有个ATTENTION提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-----------------------------------------------------------------------</span><br><span class="line">ATTENTION!  Your password for authentication realm:</span><br><span class="line"></span><br><span class="line">   &lt;svn://115.28.211.133:3690&gt; bd6e0071-16a1-4359-9796-084ad9f08e3d</span><br><span class="line"></span><br><span class="line">can only be stored to disk unencrypted!  You are advised to configure</span><br><span class="line">your system so that Subversion can store passwords encrypted, if</span><br><span class="line">possible.  See the documentation for details.</span><br><span class="line"></span><br><span class="line">You can avoid future appearances of this warning by setting the value</span><br><span class="line">of the &apos;store-plaintext-passwords&apos; option to either &apos;yes&apos; or &apos;no&apos; in</span><br><span class="line">&apos;/root/.subversion/servers&apos;.</span><br><span class="line">-----------------------------------------------------------------------</span><br><span class="line">Store password unencrypted (yes/no)?</span><br></pre></td></tr></table></figure><p>这段文字是svn提示需要做svn 认证的cache，提示你只能把密码不加密（也许是明文）保存，问你是yes or no，其实输入<code>yes</code>就OK了。</p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SVN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决canvas使用oss图片绘制报错</title>
      <link href="2019/09/09/%E8%A7%A3%E5%86%B3canvas%E4%BD%BF%E7%94%A8oss%E5%9B%BE%E7%89%87%E7%BB%98%E5%88%B6%E6%8A%A5%E9%94%99/"/>
      <url>2019/09/09/%E8%A7%A3%E5%86%B3canvas%E4%BD%BF%E7%94%A8oss%E5%9B%BE%E7%89%87%E7%BB%98%E5%88%B6%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<p>使用 js 生成商品海报，在本地测试成功后，信心满满的放到线上，然鹅，报错了，报错信息如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uncaught DOMException: Failed to execute &apos;toDataURL&apos; on &apos;HTMLCanvasElement&apos;: Tainted canvases may not be exported. at Image.goodsImage.onload</span><br></pre></td></tr></table></figure><a id="more"></a><p>各种搜索后，结论是，因为线上是用了阿里云oss图片，属于跨域图片，需要解决如下几个地方。</p><h2 id="step1-修改阿里云oss设置"><a href="#step1-修改阿里云oss设置" class="headerlink" title="step1. 修改阿里云oss设置"></a>step1. 修改阿里云oss设置</h2><p>正在阿里云控制台-&gt;对象存储oss-&gt;选择存储空间-&gt;基础设置 创建规则<br>创建跨域规则如下：</p><table><thead><tr><th>参数</th><th>参考值</th></tr></thead><tbody><tr><td>来源</td><td>使用图片网站域名（来源可以设置多个，每行一个，每行最多能有一个通配符 *）</td></tr><tr><td>允许 Methods</td><td>GET</td></tr><tr><td>允许 Headers</td><td>access-control-allow-origin:*</td></tr><tr><td>暴露 Headers</td><td>可不填写</td></tr><tr><td>缓存时间（秒）</td><td>1</td></tr></tbody></table><h2 id="step2-修改阿里云cdn设置"><a href="#step2-修改阿里云cdn设置" class="headerlink" title="step2. 修改阿里云cdn设置"></a>step2. 修改阿里云cdn设置</h2><blockquote><p>如果没有使用cdn请跳过。</p></blockquote><p>正在阿里云控制台-&gt;CDN-&gt;域名管理-&gt;域名列表中管理-&gt;缓存配置-&gt;HTTP头 添加</p><p>添加参数如下</p><table><thead><tr><th>参数</th><th>参考值</th></tr></thead><tbody><tr><td>Access-Control-Allow-Origin</td><td>*</td></tr></tbody></table><h2 id="step3-js添加crossOrigin-“anonymous”"><a href="#step3-js添加crossOrigin-“anonymous”" class="headerlink" title="step3. js添加crossOrigin = “anonymous”"></a>step3. js添加crossOrigin = “anonymous”</h2><p>在<code>new Image</code>之后<code>Image.onload</code>之前添加<code>crossOrigin = &quot;anonymous&quot;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var canvas = document.createElement(&quot;canvas&quot;);</span><br><span class="line">var ctx = canvas.getContext(&quot;2d&quot;);</span><br><span class="line"></span><br><span class="line">var bgImg = new Image();// 背景图</span><br><span class="line">bgImg.crossOrigin = &quot;anonymous&quot;;</span><br><span class="line">bgImg.src = &apos;image url&apos;;</span><br><span class="line">bgImg.onload = function()&#123;</span><br><span class="line">    ctx.drawImage(bgImg , 0 , 0 , canvas.width , canvas.height);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，基本上解决了这个问题。</p><p><strong>参考文档：</strong></p><p><a href="https://github.com/h5bp/server-configs-apache/blob/master/src/cross-origin/images.conf" target="_blank" rel="noopener">Apache server configuration file for CORS images</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image" target="_blank" rel="noopener">Allowing cross-origin use of images and canvas</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP接口有返回值，但是却报500错误解决</title>
      <link href="2019/07/10/PHP%E6%8E%A5%E5%8F%A3%E6%9C%89%E8%BF%94%E5%9B%9E%E5%80%BC%EF%BC%8C%E4%BD%86%E6%98%AF%E5%8D%B4%E6%8A%A5500%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/"/>
      <url>2019/07/10/PHP%E6%8E%A5%E5%8F%A3%E6%9C%89%E8%BF%94%E5%9B%9E%E5%80%BC%EF%BC%8C%E4%BD%86%E6%98%AF%E5%8D%B4%E6%8A%A5500%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<p>使用ThinkPHP5框架，本地上传图片没问题，但是在线上上传图片却报500错误，查看请求链接，居然有返回值。</p><p><img src="/2019/07/10/PHP接口有返回值，但是却报500错误解决/20190710111407.jpg" alt="请求链接"></p><a id="more"></a><p><img src="/2019/07/10/PHP接口有返回值，但是却报500错误解决/20190710111434.jpg" alt="返回值"></p><p>把 <code>runtime</code> 权限改为777：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chmod -R 777 runtime</span><br></pre></td></tr></table></figure><p>再试，问题解决了。</p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 数据类型 字段限制取值范围</title>
      <link href="2019/06/28/mysql-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%AD%97%E6%AE%B5%E9%99%90%E5%88%B6%E5%8F%96%E5%80%BC%E8%8C%83%E5%9B%B4/"/>
      <url>2019/06/28/mysql-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E5%AD%97%E6%AE%B5%E9%99%90%E5%88%B6%E5%8F%96%E5%80%BC%E8%8C%83%E5%9B%B4/</url>
      
        <content type="html"><![CDATA[<p>例如一个性别字段(gender)，我们只想让这个字段插入<code>男</code>或<code>女</code>两个值，如何实现呢？</p><p>我们需要把字段的类型设置为枚举类型(enum)</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `table_name` (</span><br><span class="line">   `gender` enum(&apos;男&apos;,&apos;女&apos;) DEFAULT NULL</span><br><span class="line"> ) ENGINE=InnoDB DEFAULT CHARSET=utf8</span><br></pre></td></tr></table></figure><p>注意：如果插入非法值(不是<code>男</code>或<code>女</code>)，数据库会插入空字符串。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开启错误提示</title>
      <link href="2019/06/15/PHP%E5%BC%80%E5%90%AF%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA/"/>
      <url>2019/06/15/PHP%E5%BC%80%E5%90%AF%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<p>调试时可在访问的php文件开头输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ini_set(&quot;display_errors&quot;, &quot;On&quot;);</span><br><span class="line">error_reporting(E_ALL | E_STRICT);</span><br></pre></td></tr></table></figure><a id="more"></a><p>这样就会在页面上显示具体的php错误</p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 执行外部命令</title>
      <link href="2019/06/15/PHP-%E6%89%A7%E8%A1%8C%E5%A4%96%E9%83%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2019/06/15/PHP-%E6%89%A7%E8%A1%8C%E5%A4%96%E9%83%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="exec"><a href="#exec" class="headerlink" title="exec"></a>exec</h2><p>(PHP 4, PHP 5, PHP 7)<br>exec — 执行一个外部程序  </p><a id="more"></a><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec ( string $command [, array &amp;$output [, int &amp;$return_var ]] ) : string</span><br></pre></td></tr></table></figure><p><code>exec()</code> 执行 <code>command</code> 参数所指定的命令。</p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p><strong>command</strong><br>要执行的命令。</p><p><strong>output</strong><br>如果提供了 <code>output</code> 参数， 那么会用命令执行的输出填充此数组， 每行输出填充数组中的一个元素。 数组中的数据不包含行尾的空白字符，例如 <code>\n</code> 字符。 请注意，如果数组中已经包含了部分元素，<code>exec()</code> 函数会在数组末尾追加内容。如果你不想在数组末尾进行追加， 请在传入 <code>exec()</code> 函数之前 对数组使用 <code>unset()</code> 函数进行重置。</p><p><strong>return_var</strong><br>如果同时提供 <code>output</code> 和 <code>return_var</code> 参数， 命令执行后的返回状态会被写入到此变量。</p><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>如果执行正常，<code>return_var</code>参数返回<code>0</code></p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP函数参考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS上 libreoffice 和 unoconv 安装步骤 实现word转html</title>
      <link href="2019/06/14/CentOS%E4%B8%8A-libreoffice-%E5%92%8C-unoconv-%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4-%E5%AE%9E%E7%8E%B0word%E8%BD%AChtml/"/>
      <url>2019/06/14/CentOS%E4%B8%8A-libreoffice-%E5%92%8C-unoconv-%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4-%E5%AE%9E%E7%8E%B0word%E8%BD%AChtml/</url>
      
        <content type="html"><![CDATA[<h2 id="libreoffice安装"><a href="#libreoffice安装" class="headerlink" title="libreoffice安装"></a>libreoffice安装</h2><p><code>yum search libreoffice</code>查询一下系统自带的安装包</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line">libreoffice-sdk-doc.x86_64 : Software Development Kit documentation for LibreOffice</span><br><span class="line">libreoffice-wiki-publisher.x86_64 : Create Wiki articles on MediaWiki servers with LibreOffice</span><br><span class="line">libreoffice-writer.x86_64 : LibreOffice Word Processor Application</span><br><span class="line">libreoffice-xsltfilter.x86_64 : Optional xsltfilter module for LibreOffice</span><br><span class="line">libreoffice.x86_64 : Free Software Productivity Suite</span><br><span class="line">libreoffice-filters.x86_64 : All import / export filters</span><br><span class="line">libreoffice-gdb-debug-support.i686 : Additional support for debugging with gdb</span><br><span class="line">libreoffice-gdb-debug-support.x86_64 : Additional support for debugging with gdb</span><br><span class="line">libreoffice-librelogo.x86_64 : LibreLogo scripting language</span><br><span class="line">libreoffice-ure.x86_64 : UNO Runtime Environment</span><br></pre></td></tr></table></figure><p><code>yum install libreoffice.x86_64</code>  执行安装</p><h2 id="unoconv安装"><a href="#unoconv安装" class="headerlink" title="unoconv安装"></a>unoconv安装</h2><p>下载 unovocn ，git地址:<a href="https://github.com/dagwieers/unoconv/archive/master.zip" target="_blank" rel="noopener">https://github.com/dagwieers/unoconv/archive/master.zip</a></p><p><code>wget https://github.com/dagwieers/unoconv/archive/master.zip</code></p><p>下载后 <code>unzip master.zip</code> 即可。</p><p>进入解压后的 <code>unoconv-master</code> 目录，执行文件转换，运行：</p><p><code>./unoconv -f pdf CHANGELOG.md</code> </p><p>来测试，正常来说会生成一个<code>CHANGELOG.pdf</code>文件；</p><h3 id="转换报错"><a href="#转换报错" class="headerlink" title="转换报错"></a>转换报错</h3><p>如果转换报如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/usr/lib64/libreoffice/program/soffice.bin X11 error: Can’t open display:</span><br><span class="line">Set DISPLAY environment variable, use -display option</span><br><span class="line">or check permissions of your X-Server</span><br><span class="line">(See “man X” resp. “man xhost” for details)</span><br></pre></td></tr></table></figure><p>网上查了一下 需要安装一些别的软件就可以  <code>yum install libreoffice-headless</code>  用这个命令安装好这些依赖即可</p><p>再运行  <code>unoconv -f pdf CHANGELOG.md</code> 即可看到同目录已经生成了 相应的pdf文件</p><h3 id="将转换后新生成的文件到指定目录或文件"><a href="#将转换后新生成的文件到指定目录或文件" class="headerlink" title="将转换后新生成的文件到指定目录或文件"></a>将转换后新生成的文件到指定目录或文件</h3><p><code>./unoconv -f html -o static/1.html docs/1.doc</code></p><p>转换后新生成的html文件放到static目录下。</p><h2 id="在PHP执行命令"><a href="#在PHP执行命令" class="headerlink" title="在PHP执行命令"></a>在PHP执行命令</h2><p>如果在php文件使用<code>exec</code>命令执行如上命令返回<code>NULL</code>，则应该是php配置文件限制了执行外部命令函数。</p><p>如果在php文件使用<code>exec</code>命令执行如上命令返回<code>5</code>，则应该是文件权限问题。</p><p>参考链接:<br><a href="https://www.cnblogs.com/xcp19870712/p/4760842.html" target="_blank" rel="noopener">https://www.cnblogs.com/xcp19870712/p/4760842.html</a><br><a href="https://www.licongying.cn/2018/10/linux-centos-install-unoconv-liboffice/" target="_blank" rel="noopener">https://www.licongying.cn/2018/10/linux-centos-install-unoconv-liboffice/</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHPStorm常用快捷键</title>
      <link href="2019/06/10/PHPStorm%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>2019/06/10/PHPStorm%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<p><code>Ctrl + F</code> 文件内搜索<br><code>Ctrl + R</code> 文件内替换<br><code>Ctrl + Shift F</code> 项目内搜索<br><code>Ctrl + Shift R</code> 项目内替换<br><code>Ctrl + Shift N</code> 项目内查找文件名<br><code>Ctrl + Alt O</code> 清除文件内未使用use</p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHPStorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LNMP 运行项目无法访问根目录处理方法</title>
      <link href="2019/06/08/LNMP-%E8%BF%90%E8%A1%8C%E9%A1%B9%E7%9B%AE%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E6%A0%B9%E7%9B%AE%E5%BD%95%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
      <url>2019/06/08/LNMP-%E8%BF%90%E8%A1%8C%E9%A1%B9%E7%9B%AE%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E6%A0%B9%E7%9B%AE%E5%BD%95%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>使用lnmp集成环境中，运行入口文件在根目录的<code>public</code>目录下的项目时，报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FastCGI sent in stderr: &quot;PHP message: PHP Warning: require(): open_basedir restriction in effect.</span><br></pre></td></tr></table></figure><a id="more"></a><p>编辑nginx配置文件：<code>fastcgi.conf</code>，把如下代码注释掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;</span><br></pre></td></tr></table></figure><p>重启<br>lnmp restart</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LNMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thinkphp 在php5.6以上版本显示 &#39;No input file specified&#39;</title>
      <link href="2019/06/08/Thinkphp-%E5%9C%A8php5-6%E4%BB%A5%E4%B8%8A%E7%89%88%E6%9C%AC%E6%98%BE%E7%A4%BA-No-input-file-specified/"/>
      <url>2019/06/08/Thinkphp-%E5%9C%A8php5-6%E4%BB%A5%E4%B8%8A%E7%89%88%E6%9C%AC%E6%98%BE%E7%A4%BA-No-input-file-specified/</url>
      
        <content type="html"><![CDATA[<p>安装ThinkPHP5.0.7版本运行项目域名<code>http://test.lo</code>时提示安装ThinkPHP成功，但是运行<code>http://test.lo/index/index</code>时提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No input file specified</span><br></pre></td></tr></table></figure><a id="more"></a><p>上网查了一下才知道，<code>PHP5.6</code>以上的是<code>fast_cgi</code>模式，而在某些情况下，不能正确识别<code>path_info</code>所造成的错误，这个时候，你只需要更改<code>.htaccess</code>文件，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">  Options +FollowSymlinks -Multiviews</span><br><span class="line">  RewriteEngine On</span><br><span class="line"></span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">  RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><p>只需要在index.php后面添加<code>?</code>即可，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">  Options +FollowSymlinks -Multiviews</span><br><span class="line">  RewriteEngine On</span><br><span class="line"></span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">  RewriteRule ^(.*)$ index.php?/$1 [QSA,PT,L]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><p>再次运行<code>http://test.lo/index/index</code>成功了。</p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP 模型关联的一对一关联使用</title>
      <link href="2019/06/05/ThinkPHP-%E6%A8%A1%E5%9E%8B%E5%85%B3%E8%81%94%E7%9A%84%E4%B8%80%E5%AF%B9%E4%B8%80%E5%85%B3%E8%81%94%E4%BD%BF%E7%94%A8/"/>
      <url>2019/06/05/ThinkPHP-%E6%A8%A1%E5%9E%8B%E5%85%B3%E8%81%94%E7%9A%84%E4%B8%80%E5%AF%B9%E4%B8%80%E5%85%B3%E8%81%94%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>例如我们有 商品表(goods) 和商品分类表(goods_cat)</p><p>现在我们要查询商品信息，并且查询出商品对应的商品分类名称</p><p>在 goods 模型中 <code>/model/Goods.php</code></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public function getList()</span><br><span class="line">&#123;</span><br><span class="line">    $where = array();</span><br><span class="line">    $list = $this::with(&apos;goods_cat&apos;)</span><br><span class="line">            -&gt;field(&apos;*&apos;)</span><br><span class="line">            -&gt;where($where)</span><br><span class="line">            -&gt;select();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public function goodsCat()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;hasOne(&apos;goodsCat&apos;, &apos;id&apos;, &apos;cat_id&apos;)</span><br><span class="line">            -&gt;bind([&apos;cat_name&apos; =&gt; &apos;name&apos;]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中hasOne()参数：<br><code>goodsCat</code>对应表<code>goods_cat</code>的模型<br><code>id</code>是表<code>goods_cat</code>的主键<br><code>cat_id</code>是表<code>goods</code>对应表<code>goods_cat</code>的<code>id</code><br><code>cat_name</code>是查询结果展示的字段<br><code>name</code>是表<code>goods_cat</code>的分类名称字段</p><p>查询结果字段有<code>goods</code>的所有字段（因为field参数是<code>*</code>）和<code>cat_name</code></p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx 301 将不带www域名 重定向到www域名</title>
      <link href="2019/06/05/nginx-301-%E5%B0%86%E4%B8%8D%E5%B8%A6www%E5%9F%9F%E5%90%8D-%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0www%E5%9F%9F%E5%90%8D/"/>
      <url>2019/06/05/nginx-301-%E5%B0%86%E4%B8%8D%E5%B8%A6www%E5%9F%9F%E5%90%8D-%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0www%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<p>Nginx中使域名 <code>example.org</code> 重定向到 <code>www.example.org</code> ，需要如下配置</p><p><code>www.example.org.conf</code> 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.example.org;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><code>example.org.conf</code> 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  example.org;</span><br><span class="line">    return       301 http://www.example.org$request_uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>参考文档：</strong><br>官方文档：<a href="http://nginx.org/en/docs/http/converting_rewrite_rules.html" target="_blank" rel="noopener">http://nginx.org/en/docs/http/converting_rewrite_rules.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LVS-三种负载均衡方式比较</title>
      <link href="2019/06/03/LVS-%E4%B8%89%E7%A7%8D%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%96%B9%E5%BC%8F%E6%AF%94%E8%BE%83/"/>
      <url>2019/06/03/LVS-%E4%B8%89%E7%A7%8D%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%96%B9%E5%BC%8F%E6%AF%94%E8%BE%83/</url>
      
        <content type="html"><![CDATA[<p>转自: <a href="https://my.oschina.net/leeypp1/blog/294807" target="_blank" rel="noopener">https://my.oschina.net/leeypp1/blog/294807</a></p><h2 id="1、什么是LVS？"><a href="#1、什么是LVS？" class="headerlink" title="1、什么是LVS？"></a>1、什么是LVS？</h2><p>首先简单介绍一下LVS (Linux Virtual Server)到底是什么东西，其实它是一种集群(Cluster)技术，采用IP负载均衡技术和基于内容请求分发技术。调度器具有很好的吞吐率，将请求均衡地转移到不同的服务器上执行，且调度器自动屏蔽掉服务器的故障，从而将一组服务器构成一个高性能的、高可用的虚拟服务器。整个服务器集群的结构对客户是透明的，而且无需修改客户端和服务器端的程序。</p><p>为此，在设计时需要考虑系统的透明性、可伸缩性、高可用性和易管理性。一般来说，LVS集群采用三层结构，其体系结构如图所示：</p><a id="more"></a><p><img src="/2019/06/03/LVS-三种负载均衡方式比较/20190603124130.jpg" alt="LVS集群的体系结构"></p><h2 id="2、LVS主要组成部分为："><a href="#2、LVS主要组成部分为：" class="headerlink" title="2、LVS主要组成部分为："></a>2、LVS主要组成部分为：</h2><p>负载调度器（load balancer/ Director），它是整个集群对外面的前端机，负责将客户的请求发送到一组服务器上执行，而客户认为服务是来自一个IP地址（我们可称之为虚拟IP地址）上的。</p><p>服务器池（server pool/ Realserver），是一组真正执行客户请求的服务器，执行的服务一般有WEB、MAIL、FTP和DNS等。</p><p>共享存储（shared storage），它为服务器池提供一个共享的存储区，这样很容易使得服务器池拥有相同的内容，提供相同的服务。</p><h2 id="3、LVS负载均衡方式"><a href="#3、LVS负载均衡方式" class="headerlink" title="3、LVS负载均衡方式:"></a>3、LVS负载均衡方式:</h2><h3 id="Virtual-Server-via-Network-Address-Translation-NAT（VS-NAT）"><a href="#Virtual-Server-via-Network-Address-Translation-NAT（VS-NAT）" class="headerlink" title="Virtual Server via Network Address Translation NAT（VS/NAT）"></a>Virtual Server via Network Address Translation NAT（VS/NAT）</h3><p>VS/NAT是一种最简单的方式，所有的RealServer只需要将自己的网关指向Director即可。客户端可以是任意操作系统，但此方式下，一个Director能够带动的RealServer比较有限。在VS/NAT的方式下，Director也可以兼为一台RealServer。VS/NAT的体系结构如图所示。</p><p><img src="/2019/06/03/LVS-三种负载均衡方式比较/20190603124740.jpg" alt="VS/NAT的体系结构"></p><h3 id="Virtual-Server-via-IP-Tunneling-VS-TUN"><a href="#Virtual-Server-via-IP-Tunneling-VS-TUN" class="headerlink" title="Virtual Server via IP Tunneling(VS/TUN)"></a>Virtual Server via IP Tunneling(VS/TUN)</h3><p>IP隧道（IP tunneling）是将一个IP报文封装在另一个IP报文的技术，这可以使得目标为一个IP地址的数据报文能被封装和转发到另一个IP地址。IP隧道技术亦称为IP封装技术（IP encapsulation）。IP隧道主要用于移动主机和虚拟私有网络（Virtual Private Network），在其中隧道都是静态建立的，隧道一端有一个IP地址，另一端也有唯一的IP地址。</p><p>它的连接调度和管理与VS/NAT中的一样，只是它的报文转发方法不同。调度器根据各个服务器的负载情况，动态地选择一台服务器，将请求报文封装在另一个IP报文中，再将封装后的IP报文转发给选出的服务器；服务器收到报文后，先将报文解封获得原来目标地址为 VIP 的报文，服务器发现VIP地址被配置在本地的IP隧道设备上，所以就处理这个请求，然后根据路由表将响应报文直接返回给客户。</p><p><img src="/2019/06/03/LVS-三种负载均衡方式比较/20190603124830.jpg" alt="VS/TUN的体系结构"></p><p>VS/TUN的工作流程：</p><p><img src="/2019/06/03/LVS-三种负载均衡方式比较/20190603124920.jpg" alt></p><h3 id="Virtual-Server-via-Direct-Routing-VS-DR"><a href="#Virtual-Server-via-Direct-Routing-VS-DR" class="headerlink" title="Virtual Server via Direct Routing(VS/DR)"></a>Virtual Server via Direct Routing(VS/DR)</h3><p>VS/DR方式是通过改写请求报文中的MAC地址部分来实现的。Director和RealServer必需在物理上有一个网卡通过不间断的局域网相连。 RealServer上绑定的VIP配置在各自Non-ARP的网络设备上(如lo或tunl),Director的VIP地址对外可见，而RealServer的VIP对外是不可见的。RealServer的地址即可以是内部地址，也可以是真实地址。</p><p><img src="/2019/06/03/LVS-三种负载均衡方式比较/20190603125020.jpg" alt="VS/DR的体系结构"></p><p>VS/DR的工作流程</p><p>VS/DR的工作流程如图所示：它的连接调度和管理与VS/NAT和VS/TUN中的一样，它的报文转发方法又有不同，将报文直接路由给目标服务器。在VS/DR中，调度器根据各个服务器的负载情况，动态地选择一台服务器，不修改也不封装IP报文，而是将数据帧的MAC地址改为选出服务器的MAC地址，再将修改后的数据帧在与服务器组的局域网上发送。因为数据帧的MAC地址是选出的服务器，所以服务器肯定可以收到这个数据帧，从中可以获得该IP报文。当服务器发现报文的目标地址VIP是在本地的网络设备上，服务器处理这个报文，然后根据路由表将响应报文直接返回给客户。</p><p><img src="/2019/06/03/LVS-三种负载均衡方式比较/20190603125110.jpg" alt="VS/DR的工作流程"></p><h2 id="4、三种负载均衡方式比较："><a href="#4、三种负载均衡方式比较：" class="headerlink" title="4、三种负载均衡方式比较："></a>4、三种负载均衡方式比较：</h2><h3 id="Virtual-Server-via-NAT"><a href="#Virtual-Server-via-NAT" class="headerlink" title="Virtual Server via NAT"></a>Virtual Server via NAT</h3><p>VS/NAT 的优点是服务器可以运行任何支持TCP/IP的操作系统，它只需要一个IP地址配置在调度器上，服务器组可以用私有的IP地址。缺点是它的伸缩能力有限，当服务器结点数目升到20时，调度器本身有可能成为系统的新瓶颈，因为在VS/NAT中请求和响应报文都需要通过负载调度器。我们在Pentium166 处理器的主机上测得重写报文的平均延时为60us，性能更高的处理器上延时会短一些。假设TCP报文的平均长度为536 Bytes，则调度器的最大吞吐量为8.93 MBytes/s. 我们再假设每台服务器的吞吐量为800KBytes/s，这样一个调度器可以带动10台服务器。（注：这是很早以前测得的数据）</p><p>基于 VS/NAT的的集群系统可以适合许多服务器的性能要求。如果负载调度器成为系统新的瓶颈，可以有三种方法解决这个问题：混合方法、VS/TUN和 VS/DR。在DNS混合集群系统中，有若干个VS/NAT负调度器，每个负载调度器带自己的服务器集群，同时这些负载调度器又通过RR-DNS组成简单的域名。</p><p>但VS/TUN和VS/DR是提高系统吞吐量的更好方法。</p><p>对于那些将IP地址或者端口号在报文数据中传送的网络服务，需要编写相应的应用模块来转换报文数据中的IP地址或者端口号。这会带来实现的工作量，同时应用模块检查报文的开销会降低系统的吞吐率。</p><h3 id="Virtual-Server-via-IP-Tunneling"><a href="#Virtual-Server-via-IP-Tunneling" class="headerlink" title="Virtual Server via IP Tunneling"></a>Virtual Server via IP Tunneling</h3><p>在VS/TUN 的集群系统中，负载调度器只将请求调度到不同的后端服务器，后端服务器将应答的数据直接返回给用户。这样，负载调度器就可以处理大量的请求，它甚至可以调度百台以上的服务器（同等规模的服务器），而它不会成为系统的瓶颈。即使负载调度器只有100Mbps的全双工网卡，整个系统的最大吞吐量可超过 1Gbps。所以，VS/TUN可以极大地增加负载调度器调度的服务器数量。VS/TUN调度器可以调度上百台服务器，而它本身不会成为系统的瓶颈，可以用来构建高性能的超级服务器。VS/TUN技术对服务器有要求，即所有的服务器必须支持“IP Tunneling”或者“IP Encapsulation”协议。目前，VS/TUN的后端服务器主要运行Linux操作系统，我们没对其他操作系统进行测试。因为“IP Tunneling”正成为各个操作系统的标准协议，所以VS/TUN应该会适用运行其他操作系统的后端服务器。</p><h3 id="Virtual-Server-via-Direct-Routing"><a href="#Virtual-Server-via-Direct-Routing" class="headerlink" title="Virtual Server via Direct Routing"></a>Virtual Server via Direct Routing</h3><p>跟VS/TUN方法一样，VS/DR调度器只处理客户到服务器端的连接，响应数据可以直接从独立的网络路由返回给客户。这可以极大地提高LVS集群系统的伸缩性。跟VS/TUN相比，这种方法没有IP隧道的开销，但是要求负载调度器与实际服务器都有一块网卡连在同一物理网段上，服务器网络设备（或者设备别名）不作ARP响应，或者能将报文重定向（Redirect）到本地的Socket端口上。</p><p>三种LVS负载均衡技术的优缺点归纳以下表：</p><table><thead><tr><th></th><th>VS/NAT</th><th>VS/TUN</th><th>VS/DR</th></tr></thead><tbody><tr><td>服务器操作系统</td><td>任意</td><td>支持隧道</td><td>多数（支持Non-arp）</td></tr><tr><td>服务器网络</td><td>私有网络</td><td>局域网/广域网</td><td>局域网</td></tr><tr><td>服务器数目（100M网络）</td><td>10~20</td><td>100</td><td>大于100</td></tr><tr><td>服务器网关</td><td>负载均衡器</td><td>自己的路由</td><td>自己的路由</td></tr><tr><td>效率</td><td>一般</td><td>高</td><td>最高</td></tr></tbody></table><p>注：以上三种方法所能支持最大服务器数目的估计是假设调度器使用100M网卡，调度器的硬件配置与后端服务器的硬件配置相同，而且是对一般Web服务。使 用更高的硬件配置（如千兆网卡和更快的处理器）作为调度器，调度器所能调度的服务器数量会相应增加。当应用不同时，服务器的数目也会相应地改变。所以，以上数据估计主要是为三种方法的伸缩性进行量化比较。</p><h2 id="5、lvs的负载调度算法-在内核中的连接调度算法上，IPVS已实现了以下八种调度算法："><a href="#5、lvs的负载调度算法-在内核中的连接调度算法上，IPVS已实现了以下八种调度算法：" class="headerlink" title="5、lvs的负载调度算法 在内核中的连接调度算法上，IPVS已实现了以下八种调度算法："></a>5、lvs的负载调度算法 在内核中的连接调度算法上，IPVS已实现了以下八种调度算法：</h2><h3 id="一-轮叫调度（Round-shy-Robin-Scheduling）"><a href="#一-轮叫调度（Round-shy-Robin-Scheduling）" class="headerlink" title="一 轮叫调度（Round&shy;Robin Scheduling）"></a>一 轮叫调度（Round&shy;Robin Scheduling）</h3><p>轮叫调度（Round Robin Scheduling）算法就是以轮叫的方式依次将请求调度不同的服务器，即每次调度执行i=(i+1)mod n，并选出第i台服务器。算法的优点是其简洁性，它无需记录当前所有连接的状态，所以它是一种无状态调度。</p><h3 id="二-加权轮叫调度（Weighted-Round-shy-Robin-Scheduling）"><a href="#二-加权轮叫调度（Weighted-Round-shy-Robin-Scheduling）" class="headerlink" title="二 加权轮叫调度（Weighted Round&shy;Robin Scheduling）"></a>二 加权轮叫调度（Weighted Round&shy;Robin Scheduling）</h3><p>加权轮叫调度 （Weighted Round&shy;Robin Scheduling）算法可以解决服务器间性能不一的情况，它用相应的权值表示服务器的处理性能，服务器的缺省权值为1。假设服务器A的权值为1，B的权值为2，则表示服务器B的处理性能是A的两倍。加权轮叫调度算法是按权值的高 低和轮叫方式分配请求到各服务器。权值高的服务器先收到的连接，权值高的服 务器比权值低的服务器处理更多的连接，相同权值的服务器处理相同数目的连接数。</p><h3 id="三-最小连接调度（Least-shy-Connect-ion-Scheduling）"><a href="#三-最小连接调度（Least-shy-Connect-ion-Scheduling）" class="headerlink" title="三 最小连接调度（Least&shy;Connect ion Scheduling）"></a>三 最小连接调度（Least&shy;Connect ion Scheduling）</h3><p>最小连接调度（Least&shy; Connect ion Scheduling）算法是把新的连接请求分配到当前连接数最小的服务器。最小连接调度是一种动态调度算法，它通过服务器当前所活跃的连接数来估计服务器的负载情况。调度器需要记录各个服务器已建立连接的数目，当一个请求被调度到某台服务器，其连接数加1；当连接中止或超时，其连接数减一。</p><h3 id="四-加权最小连接调度（Weighted-Least-shy-Connectio-n-Scheduling）"><a href="#四-加权最小连接调度（Weighted-Least-shy-Connectio-n-Scheduling）" class="headerlink" title="四 加权最小连接调度（Weighted Least&shy;Connectio n Scheduling）"></a>四 加权最小连接调度（Weighted Least&shy;Connectio n Scheduling）</h3><p>加权最小连接调 度（Weighted Least&shy;Connectio n Scheduling）算法是最小连接调度的超集，各个服务器用相应的权值表示其处理性能。服务器的缺省权值为1，系统管理员可以动态地设置服务器的权值。加权最小连接调度在调度新连接时尽可能使服务器的已建立连接数和其权值成比例。</p><h3 id="五-基于局部性的最少链接（Locality-shy-Based-Least-Connections-Scheduling）"><a href="#五-基于局部性的最少链接（Locality-shy-Based-Least-Connections-Scheduling）" class="headerlink" title="五 基于局部性的最少链接（Locality&shy;Based Least Connections Scheduling）"></a>五 基于局部性的最少链接（Locality&shy;Based Least Connections Scheduling）</h3><p>基于局部性的最少链接调度（Locality&shy;Based Least Connections Scheduling，以下简称为LBLC）算法是针对请求报文的目标IP地址的负载均衡调度，目前主要用于Cache集群系统，因为在Cache集群中客户请求报文的目标IP地址是变化的。这里假设任何后端服务器都可以处理任一请求，算法的设计目标是在服务器的负载基本平衡情况下，将相同目标IP地址的请求调度到同一台服务器，来提高各台服务器的访问局部性和主存Cache命中率，从而整个集群系统的处理能力。LBLC调度算法先根据请求的目标IP   地址 找出该目标IP地址最近使用的服务器，若该服务器是可用的且没有超载，将请求发送到该服务器；若服务器不存在，或者该服务器超载且有服务器处于其一半的工 作负载，则用“最少链接”的原则选出一个可用的服务器，将请求发送到该服务器。</p><h3 id="六-带复制的基于局部性最少链接（Locality-shy-Based-Least-Connectio-ns-with-Replication-Scheduling）"><a href="#六-带复制的基于局部性最少链接（Locality-shy-Based-Least-Connectio-ns-with-Replication-Scheduling）" class="headerlink" title="六 带复制的基于局部性最少链接（Locality&shy;Based Least Connectio ns with Replication Scheduling）"></a>六 带复制的基于局部性最少链接（Locality&shy;Based Least Connectio ns with Replication Scheduling）</h3><p>带复制的基于局部性最少链接调度（Locality&shy;Based Least Connectio ns with Replication Scheduling，以下简称为LBLCR）算法也是针对目标IP地址的负载均衡，目前主要用于Cache集群系统。它与LBLC算法的不同之处是它要 维护从一个目标IP地址到一组服务器的映射，而LBLC算法维护从一个目标IP地址到一台服务器的映射。对于一个“热门”站点的服务请求，一台Cache 服务器可能会忙不过来处理这些请求。这时，LBLC调度算法会从所有的Cache服务器中按“最小连接”原则选出一台Cache服务器，映射该“热门”站点到这台Cache服务器，很快这台Cache服务器也会超载，就会重复上述过程选出新的Cache服务器。这样，可能会导致该“热门”站点的映像会出现 在所有的Cache服务器上，降低了Cache服务器的使用效率。LBLCR调度算法将“门站”点映射到一组Cache服务器（服务器集合），当该“热门”站点的请求负载增加时，会增加集合里的Cache服务器，来处理不断增长的负载；当该“热门”站点的请求负载降低时，会减少集合里的Cache服务器 数目。这样，该热门站点的映像不可能出现在所有的Cache服务器上，从而提供Cache集群系统的使用效率。LBLCR算法先根据请求的目标IP 地址找出该目标IP地址对应的服务器组；按“最小连接”原则从该服务器组中选出一台服务器，若服务器没有超载，将请求发送到该服务器；若服务器超载；则按“最小连接”原则从整个集群中选出一台服务器，将该服务器加入到服务器组中，将请求发送到该服务器。同时，当该服务器组有一段时间没有被修改，将最忙的服 务器从服务器组中删除，以降低复制的程度。</p><h3 id="七-目标地址散列调度（Destinat-ion-Hashing-Scheduling）"><a href="#七-目标地址散列调度（Destinat-ion-Hashing-Scheduling）" class="headerlink" title="七 目标地址散列调度（Destinat ion Hashing Scheduling）"></a>七 目标地址散列调度（Destinat ion Hashing Scheduling）</h3><p>目标地址散列调度 （Destinat ion Hashing Scheduling）算法也是针对目标IP地址的负载均衡，但它是一种静态映射算法，通过一个散列（Hash）函数将一个目标IP地址映射到一台服务器。目标地址散列调度算法先根据请求的目标IP地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。</p><h3 id="八-源地址散列调度（Source-Hashing-Scheduling）"><a href="#八-源地址散列调度（Source-Hashing-Scheduling）" class="headerlink" title="八 源地址散列调度（Source Hashing Scheduling）"></a>八 源地址散列调度（Source Hashing Scheduling）</h3><p>源地址散列调度（Source Hashing Scheduling）算法正好与目标地址散列调度算法相反，它根据请求的源IP地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。它采用的散列函数与目标地址散列调度算法 的相同。它的算法流程与目标地址散列调度算法的基本相似，除了将请求的目标IP地址换成请求的源IP   地址，所以这里不一一叙述。在实际应用中，源地址散列 调度和目标地址散列调度可以结合使用在防火墙集群中，它们可以保证整个系统的唯一出入口。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集群架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP实现word文档转html</title>
      <link href="2019/06/01/PHP%E5%AE%9E%E7%8E%B0word%E6%96%87%E6%A1%A3%E8%BD%AChtml/"/>
      <url>2019/06/01/PHP%E5%AE%9E%E7%8E%B0word%E6%96%87%E6%A1%A3%E8%BD%AChtml/</url>
      
        <content type="html"><![CDATA[<p>本文介绍利用 phpword (Packagist) 将word文档 .docx 扩展文件转成html文件。<br><div class="note info"><p>Tip:.doc 扩展文件转成html文件应该有问题</p></div></p><p>在 <a href="https://packagist.org/" target="_blank" rel="noopener">Packagist</a> 搜索 phpword， 在第一列会出现 <code>phpoffice/phpword</code> 包名称，点击查看详情，里面会有使用和安装介绍。</p><p><strong>安装环境</strong></p><ul><li>php: ^5.3.3 || ^7.0</li><li>ext-xml: *</li><li>zendframework/zend-escaper: ^2.2</li><li>phpoffice/common: ^0.2.9</li></ul><p>除了php版本要求，其他在安装phpword时候会自行安装</p><a id="more"></a><p><strong>安装phpword</strong></p><p>我使用安装是，在项目目录中，执行命令行，安装最新的稳定版</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require phpoffice/phpword</span><br></pre></td></tr></table></figure><p>安装结束后，在项目目录中<code>vendor</code>会有<code>phpoffice/phpword</code>文件夹</p><p><strong>使用phpword把.docx转成.html</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">require_once &apos;vendor/autoload.php&apos;;// 引入自动加载文件，如果在成熟框架中请忽略</span><br><span class="line">$phpWord = \PhpOffice\PhpWord\IOFactory::load(&apos;upload/test.docx&apos;);</span><br><span class="line">$xmlWriter = \PhpOffice\PhpWord\IOFactory::createWriter($phpWord, &quot;HTML&quot;);</span><br><span class="line">$xmlWriter-&gt;save(&apos;upload/test.html&apos;);</span><br></pre></td></tr></table></figure><p><strong>参考</strong><br><a href="https://phpword.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">PHPWord文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> package </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP 数据库操作 where 方法</title>
      <link href="2019/05/24/ThinkPHP-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-where-%E6%96%B9%E6%B3%95/"/>
      <url>2019/05/24/ThinkPHP-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-where-%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><code>where</code>方法的用法是ThinkPHP查询语言的精髓，也是ThinkPHP <code>ORM</code>的重要组成部分和亮点所在，可以完成包括普通查询、表达式查询、快捷查询、区间查询、组合查询在内的查询操作。<code>where</code>方法的参数支持的变量类型包括字符串、数组和闭包。</p><a id="more"></a><div class="note info"><p>和<code>where</code>方法相同用法的方法还包括<code>whereOr</code>、<code>whereIn</code>等一系列快捷查询方法，下面仅以<code>where</code>为例说明用法。</p></div><h2 id="表达式查询"><a href="#表达式查询" class="headerlink" title="表达式查询"></a>表达式查询</h2><div class="note danger"><p>表达式查询是官方推荐使用的查询方式</p></div><p>查询表达式的使用格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Db::table(<span class="string">'think_user'</span>)</span><br><span class="line">    -&gt;<span class="built_in">where</span>(<span class="string">'id'</span>,<span class="string">'&gt;'</span>,1)</span><br><span class="line">    -&gt;<span class="built_in">where</span>(<span class="string">'name'</span>,<span class="string">'thinkphp'</span>)</span><br><span class="line">    -&gt;select();</span><br></pre></td></tr></table></figure><p>更多的表达式查询语法，可以参考前面的查询表达式部分。</p><h2 id="数组条件"><a href="#数组条件" class="headerlink" title="数组条件"></a>数组条件</h2><p>数组方式有两种查询条件类型：关联数组和索引数组。</p><h3 id="关联数组"><a href="#关联数组" class="headerlink" title="关联数组"></a>关联数组</h3><p>主要用于等值<code>AND</code>条件，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 传入数组作为查询条件</span><br><span class="line">Db::table(<span class="string">'think_user'</span>)-&gt;<span class="built_in">where</span>([</span><br><span class="line"><span class="string">'name'</span>=&gt;<span class="string">'thinkphp'</span>,</span><br><span class="line">    <span class="string">'status'</span>=&gt;1</span><br><span class="line">])-&gt;select();</span><br></pre></td></tr></table></figure><p>最后生成的SQL语句是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM think_user WHERE `name`=<span class="string">'thinkphp'</span> AND status = 1</span><br></pre></td></tr></table></figure><p><code>V5.1.13+</code>版本开始增加了关联数组的<code>IN</code>查询支持，例如可以使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 传入数组作为查询条件</span><br><span class="line">Db::table(<span class="string">'think_user'</span>)-&gt;<span class="built_in">where</span>([</span><br><span class="line"><span class="string">'name'</span>=&gt;<span class="string">'thinkphp'</span>,</span><br><span class="line">    <span class="string">'status'</span>=&gt;[1, 2]</span><br><span class="line">])-&gt;select();</span><br></pre></td></tr></table></figure><p>最后生成的SQL语句是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM think_user WHERE `name`=<span class="string">'thinkphp'</span> AND status IN (1, 2)</span><br></pre></td></tr></table></figure><h3 id="索引数组"><a href="#索引数组" class="headerlink" title="索引数组"></a>索引数组</h3><p>索引数组方式批量设置查询条件，使用方式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 传入数组作为查询条件</span><br><span class="line">Db::table(<span class="string">'think_user'</span>)-&gt;<span class="built_in">where</span>([</span><br><span class="line">[<span class="string">'name'</span>,<span class="string">'='</span>,<span class="string">'thinkphp'</span>],</span><br><span class="line">    [<span class="string">'status'</span>,<span class="string">'='</span>,1]</span><br><span class="line">])-&gt;select();</span><br></pre></td></tr></table></figure><p>最后生成的SQL语句是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM think_user WHERE `name`=<span class="string">'thinkphp'</span> AND status = 1</span><br></pre></td></tr></table></figure><div class="note danger"><p>5.1的数组查询方式有所调整，是为了尽量避免数组方式的条件查询注入。</p></div><p>如果需要事先组装数组查询条件，可以使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$map</span>[] = [<span class="string">'name'</span>,<span class="string">'like'</span>,<span class="string">'think'</span>];</span><br><span class="line"><span class="variable">$map</span>[] = [<span class="string">'status'</span>,<span class="string">'='</span>,1];</span><br></pre></td></tr></table></figure><div class="note info"><p>数组方式查询还有一些额外的复杂用法，我们会在后面的高级查询章节提及。</p></div><h2 id="字符串条件"><a href="#字符串条件" class="headerlink" title="字符串条件"></a>字符串条件</h2><p>使用字符串条件直接查询和操作，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Db::table(<span class="string">'think_user'</span>)-&gt;<span class="built_in">where</span>(<span class="string">'type=1 AND status=1'</span>)-&gt;select();</span><br></pre></td></tr></table></figure><p>最后生成的SQL语句是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM think_user WHERE <span class="built_in">type</span>=1 AND status=1</span><br></pre></td></tr></table></figure><div class="note danger"><p>注意使用字符串查询条件和表达式查询的一个区别在于，不会对查询字段进行避免关键词冲突处理。</p></div><p>使用字符串条件的时候，如果需要传入变量，建议配合预处理机制，确保更加安全，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Db::table(<span class="string">'think_user'</span>)</span><br><span class="line">-&gt;<span class="built_in">where</span>(<span class="string">"id=:id and username=:name"</span>, [<span class="string">'id'</span> =&gt; [1, \PDO::PARAM_INT] , <span class="string">'name'</span> =&gt; <span class="string">'thinkphp'</span>])</span><br><span class="line">-&gt;select();</span><br></pre></td></tr></table></figure><p>或者使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Db::table(<span class="string">'think_user'</span>)</span><br><span class="line">-&gt;<span class="built_in">where</span>(<span class="string">"id=:id and username=:name"</span>)</span><br><span class="line">-&gt;<span class="built_in">bind</span>([<span class="string">'id'</span> =&gt; [1, \PDO::PARAM_INT] , <span class="string">'name'</span> =&gt; <span class="string">'thinkphp'</span>])</span><br><span class="line">-&gt;select();</span><br></pre></td></tr></table></figure><p>在<code>V5.1.7+</code>版本以后，你可以使用更安全的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Db::table(<span class="string">'think_user'</span>)</span><br><span class="line">-&gt;whereRaw(<span class="string">"id=:id and username=:name"</span>, [<span class="string">'id'</span> =&gt; [1, \PDO::PARAM_INT] , <span class="string">'name'</span> =&gt; <span class="string">'thinkphp'</span>])</span><br><span class="line">-&gt;select();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux删除文件出现rm: cannot remove .user.ini: Operation not permitted</title>
      <link href="2019/05/24/Linux%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%87%BA%E7%8E%B0rm-cannot-remove-user-ini-Operation-not-permitted/"/>
      <url>2019/05/24/Linux%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%87%BA%E7%8E%B0rm-cannot-remove-user-ini-Operation-not-permitted/</url>
      
        <content type="html"><![CDATA[<p>再使用 <code>rm -rf</code>命令时。居然会报错，报错信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf test</span></span><br><span class="line">rm: cannot remove <span class="built_in">test</span>/.user.ini : Operation not permitted</span><br></pre></td></tr></table></figure><a id="more"></a><p>这时候需要使用到Linux的chattr命令， chattr命令用于改变文件属性。这项指令可改变存放在ext2文件系统上的文件或目录属性，这些属性共有以下8种模式：</p><ul><li>a：让文件或目录仅供附加用途。</li><li>b：不更新文件或目录的最后存取时间。</li><li>c：将文件或目录压缩后存放。</li><li>d：将文件或目录排除在倾倒操作之外。</li><li>i：不得任意更动文件或目录。</li><li>s：保密性删除文件或目录。</li><li>S：即时更新文件或目录。</li><li>u：预防以外删除。</li></ul><p>语法<code>chattr[-RV][-v&lt;版本编号&gt;][+/-/=&lt;属性&gt;][文件或目录...]</code>参数<br>　　-R 递归处理，将指定目录下的所有文件及子目录一并处理。<br>　　-v&lt;版本编号&gt; 设置文件或目录版本。<br>　　-V 显示指令执行过程。<br>　　+&lt;属性&gt; 开启文件或目录的该项属性。<br>　　-&lt;属性&gt; 关闭文件或目录的该项属性。<br>　　=&lt;属性&gt; 指定文件或目录的该项属性。</p><p>进入到<code>.user.ini</code>所在目录，执行一下 <code>lsattr -a</code>，查看文件下下边包含文件的属性，看到<code>.user.ini</code>有个’i’属性，代表不得任意更动文件或目录，正是此属性在作祟：</p><p>然后执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chattr -i .user.ini</span><br></pre></td></tr></table></figure><p>就可以去除掉此属性，然后我们再执行删除，就可以顺利删除掉了。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux中使用cp命令报 cp:omitting directory错误</title>
      <link href="2019/05/24/Linux%E4%B8%AD%E4%BD%BF%E7%94%A8cp%E5%91%BD%E4%BB%A4%E6%8A%A5-cp-omitting-directory%E9%94%99%E8%AF%AF/"/>
      <url>2019/05/24/Linux%E4%B8%AD%E4%BD%BF%E7%94%A8cp%E5%91%BD%E4%BB%A4%E6%8A%A5-cp-omitting-directory%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<p>在Linux系统中使用cp命令对文件夹或者目录进行复制操作时，有时候会出现 <code>cp:omitting directiory</code>的错误提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp test test1</span></span><br><span class="line">cp: omitting directory ‘<span class="built_in">test</span>’</span><br></pre></td></tr></table></figure><p>这是因为test目录下还有目录，不能直接进行拷贝</p><p>我们先找下<code>cp</code>的命令帮助，输入<code>cp --h</code>，其中一个<code>-r</code>，可以解决这个问题</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp --h</span></span><br><span class="line">Usage: cp [OPTION]... [-T] SOURCE DEST</span><br><span class="line">  or:  cp [OPTION]... SOURCE... DIRECTORY</span><br><span class="line">  or:  cp [OPTION]... -t DIRECTORY SOURCE...</span><br><span class="line">Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">  -a, --archive                same as -dR --preserve=all</span><br><span class="line">      --attributes-only        don<span class="string">'t copy the file data, just the attributes</span></span><br><span class="line"><span class="string">      --backup[=CONTROL]       make a backup of each existing destination file</span></span><br><span class="line"><span class="string">  -b                           like --backup but does not accept an argument</span></span><br><span class="line"><span class="string">      --copy-contents          copy contents of special files when recursive</span></span><br><span class="line"><span class="string">  -d                           same as --no-dereference --preserve=links</span></span><br><span class="line"><span class="string">  -f, --force                  if an existing destination file cannot be</span></span><br><span class="line"><span class="string">                                 opened, remove it and try again (this option</span></span><br><span class="line"><span class="string">                                 is ignored when the -n option is also used)</span></span><br><span class="line"><span class="string">  -i, --interactive            prompt before overwrite (overrides a previous -n</span></span><br><span class="line"><span class="string">                                  option)</span></span><br><span class="line"><span class="string">  -H                           follow command-line symbolic links in SOURCE</span></span><br><span class="line"><span class="string">  -l, --link                   hard link files instead of copying</span></span><br><span class="line"><span class="string">  -L, --dereference            always follow symbolic links in SOURCE</span></span><br><span class="line"><span class="string">  -n, --no-clobber             do not overwrite an existing file (overrides</span></span><br><span class="line"><span class="string">                                 a previous -i option)</span></span><br><span class="line"><span class="string">  -P, --no-dereference         never follow symbolic links in SOURCE</span></span><br><span class="line"><span class="string">  -p                           same as --preserve=mode,ownership,timestamps</span></span><br><span class="line"><span class="string">      --preserve[=ATTR_LIST]   preserve the specified attributes (default:</span></span><br><span class="line"><span class="string">                                 mode,ownership,timestamps), if possible</span></span><br><span class="line"><span class="string">                                 additional attributes: context, links, xattr,</span></span><br><span class="line"><span class="string">                                 all</span></span><br><span class="line"><span class="string">  -c                           deprecated, same as --preserve=context</span></span><br><span class="line"><span class="string">      --no-preserve=ATTR_LIST  don'</span>t preserve the specified attributes</span><br><span class="line">      --parents                use full <span class="built_in">source</span> file name under DIRECTORY</span><br><span class="line">  -R, -r, --recursive          copy directories recursively</span><br><span class="line">      --reflink[=WHEN]         control <span class="built_in">clone</span>/CoW copies. See below</span><br><span class="line">      --remove-destination     remove each existing destination file before</span><br><span class="line">                                 attempting to open it (contrast with --force)</span><br><span class="line">      --sparse=WHEN            control creation of sparse files. See below</span><br><span class="line">      --strip-trailing-slashes  remove any trailing slashes from each SOURCE</span><br><span class="line">                                 argument</span><br><span class="line">  -s, --symbolic-link          make symbolic links instead of copying</span><br><span class="line">  -S, --suffix=SUFFIX          override the usual backup suffix</span><br><span class="line">  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY</span><br><span class="line">  -T, --no-target-directory    treat DEST as a normal file</span><br><span class="line">  -u, --update                 copy only when the SOURCE file is newer</span><br><span class="line">                                 than the destination file or when the</span><br><span class="line">                                 destination file is missing</span><br><span class="line">  -v, --verbose                explain what is being <span class="keyword">done</span></span><br><span class="line">  -x, --one-file-system        stay on this file system</span><br><span class="line">  -Z                           <span class="built_in">set</span> SELinux security context of destination</span><br></pre></td></tr></table></figure><p>在<code>cp</code>命令后添加<code>-r</code>选项(OPTION)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r <span class="built_in">test</span> test1</span><br></pre></td></tr></table></figure><p>没有报错，复制成功。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 编译安装 各参数配置详解</title>
      <link href="2019/05/22/PHP-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85-%E5%90%84%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
      <url>2019/05/22/PHP-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85-%E5%90%84%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="php编译安装的基本步骤"><a href="#php编译安装的基本步骤" class="headerlink" title="php编译安装的基本步骤"></a>php编译安装的基本步骤</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//首先要下载一个php的安装包,例如:php-5.6.33.tar.gz,</span><br><span class="line"></span><br><span class="line"><span class="comment"># tar zxvf php-5.6.33.tar.gz    // 解压php安装包,得到一个php-5.6.33的文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd php-5.6.33    // 进入php-5.6.33安装目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ./configure    // 对php的安装进行配置,后面要加配置选项</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># make &amp;&amp; make install    // 编译安装</span></span><br><span class="line"></span><br><span class="line">//编译安装完成之后,需要从解压后的文件夹中把php.ini-development </span><br><span class="line">//或是 php.ini-production 重命名成php.ini 复制到php安装文件中的相应位置,</span><br><span class="line">//可在phpinfo中查看相应位置.</span><br><span class="line">//把/usr/<span class="built_in">local</span>/etc/php-fpm.conf.default  复制到当前文件夹下,保存为php-fpm.conf</span><br></pre></td></tr></table></figure><a id="more"></a><p>上面是php编译安装的基本流程,下面详细介绍php的配置参数.</p><h2 id="php各参数配置"><a href="#php各参数配置" class="headerlink" title="php各参数配置"></a>php各参数配置</h2><p>在php安装目录执行<code>./configure --help</code>可查看参数配置信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br></pre></td><td class="code"><pre><span class="line">[root@izm5e4cvab4crhrlpfabpxz php-7.2.2]<span class="comment"># ./configure --help</span></span><br><span class="line">`configure<span class="string">' configures this package to adapt to many kinds of systems.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Usage: ./configure [OPTION]... [VAR=VALUE]...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To assign environment variables (e.g., CC, CFLAGS...), specify them as</span></span><br><span class="line"><span class="string">VAR=VALUE.  See below for descriptions of some of the useful variables.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Defaults for the options are specified in brackets.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Configuration:</span></span><br><span class="line"><span class="string">  -h, --help              display this help and exit</span></span><br><span class="line"><span class="string">      --help=short        display options specific to this package</span></span><br><span class="line"><span class="string">      --help=recursive    display the short help of all the included packages</span></span><br><span class="line"><span class="string">  -V, --version           display version information and exit</span></span><br><span class="line"><span class="string">  -q, --quiet, --silent   do not print `checking ...'</span> messages</span><br><span class="line">      --cache-file=FILE   cache <span class="built_in">test</span> results <span class="keyword">in</span> FILE [disabled]</span><br><span class="line">  -C, --config-cache      <span class="built_in">alias</span> <span class="keyword">for</span> `--cache-file=config.cache<span class="string">'</span></span><br><span class="line"><span class="string">  -n, --no-create         do not create output files</span></span><br><span class="line"><span class="string">      --srcdir=DIR        find the sources in DIR [configure dir or `..'</span>]</span><br><span class="line"></span><br><span class="line">Installation directories:</span><br><span class="line">  --prefix=PREFIX         install architecture-independent files <span class="keyword">in</span> PREFIX</span><br><span class="line">                          [/usr/<span class="built_in">local</span>]</span><br><span class="line">  --<span class="built_in">exec</span>-prefix=EPREFIX   install architecture-dependent files <span class="keyword">in</span> EPREFIX</span><br><span class="line">                          [PREFIX]</span><br><span class="line"></span><br><span class="line">By default, `make install<span class="string">' will install all the files in</span></span><br><span class="line"><span class="string">`/usr/local/bin'</span>, `/usr/<span class="built_in">local</span>/lib<span class="string">' etc.  You can specify</span></span><br><span class="line"><span class="string">an installation prefix other than `/usr/local'</span> using `--prefix<span class="string">',</span></span><br><span class="line"><span class="string">for instance `--prefix=$HOME'</span>.</span><br><span class="line"></span><br><span class="line">For better control, use the options below.</span><br><span class="line"></span><br><span class="line">Fine tuning of the installation directories:</span><br><span class="line">  --bindir=DIR            user executables [EPREFIX/bin]</span><br><span class="line">  --sbindir=DIR           system admin executables [EPREFIX/sbin]</span><br><span class="line">  --libexecdir=DIR        program executables [EPREFIX/libexec]</span><br><span class="line">  --sysconfdir=DIR        <span class="built_in">read</span>-only single-machine data [PREFIX/etc]</span><br><span class="line">  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]</span><br><span class="line">  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]</span><br><span class="line">  --libdir=DIR            object code libraries [EPREFIX/lib]</span><br><span class="line">  --includedir=DIR        C header files [PREFIX/include]</span><br><span class="line">  --oldincludedir=DIR     C header files <span class="keyword">for</span> non-gcc [/usr/include]</span><br><span class="line">  --datarootdir=DIR       <span class="built_in">read</span>-only arch.-independent data root [PREFIX/share]</span><br><span class="line">  --datadir=DIR           <span class="built_in">read</span>-only architecture-independent data [DATAROOTDIR]</span><br><span class="line">  --infodir=DIR           info documentation [DATAROOTDIR/info]</span><br><span class="line">  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]</span><br><span class="line">  --mandir=DIR            man documentation [DATAROOTDIR/man]</span><br><span class="line">  --docdir=DIR            documentation root [DATAROOTDIR/doc/PACKAGE]</span><br><span class="line">  --htmldir=DIR           html documentation [DOCDIR]</span><br><span class="line">  --dvidir=DIR            dvi documentation [DOCDIR]</span><br><span class="line">  --pdfdir=DIR            pdf documentation [DOCDIR]</span><br><span class="line">  --psdir=DIR             ps documentation [DOCDIR]</span><br><span class="line"></span><br><span class="line">System types:</span><br><span class="line">  --build=BUILD     configure <span class="keyword">for</span> building on BUILD [guessed]</span><br><span class="line">  --host=HOST       cross-compile to build programs to run on HOST [BUILD]</span><br><span class="line">  --target=TARGET   configure <span class="keyword">for</span> building compilers <span class="keyword">for</span> TARGET [HOST]</span><br><span class="line"></span><br><span class="line">Optional Features and Packages:</span><br><span class="line">  --<span class="built_in">disable</span>-option-checking  ignore unrecognized --<span class="built_in">enable</span>/--with options</span><br><span class="line">  --<span class="built_in">disable</span>-FEATURE       <span class="keyword">do</span> not include FEATURE (same as --<span class="built_in">enable</span>-FEATURE=no)</span><br><span class="line">  --<span class="built_in">enable</span>-FEATURE[=ARG]  include FEATURE [ARG=yes]</span><br><span class="line">  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]</span><br><span class="line">  --without-PACKAGE       <span class="keyword">do</span> not use PACKAGE (same as --with-PACKAGE=no)</span><br><span class="line">  --with-libdir=NAME      Look <span class="keyword">for</span> libraries <span class="keyword">in</span> .../NAME rather than .../lib</span><br><span class="line">  --<span class="built_in">disable</span>-rpath         Disable passing additional runtime library</span><br><span class="line">                          search paths</span><br><span class="line">  --<span class="built_in">enable</span>-re2c-cgoto     Enable -g flag to re2c to use computed goto gcc extension</span><br><span class="line">  --<span class="built_in">disable</span>-gcc-global-regs</span><br><span class="line">                          whether to <span class="built_in">enable</span> GCC global register variables</span><br><span class="line"></span><br><span class="line">SAPI modules:</span><br><span class="line"></span><br><span class="line">  --with-apxs2=FILE       Build shared Apache 2.0 Handler module. FILE is the optional</span><br><span class="line">                          pathname to the Apache apxs tool apxs</span><br><span class="line">  --<span class="built_in">disable</span>-cli           Disable building CLI version of PHP</span><br><span class="line">                          (this forces --without-pear)</span><br><span class="line">  --<span class="built_in">enable</span>-embed=TYPE     EXPERIMENTAL: Enable building of embedded SAPI library</span><br><span class="line">                          TYPE is either <span class="string">'shared'</span> or <span class="string">'static'</span>. TYPE=shared</span><br><span class="line">  --<span class="built_in">enable</span>-fpm            Enable building of the fpm SAPI executable</span><br><span class="line">  --with-fpm-user=USER    Set the user <span class="keyword">for</span> php-fpm to run as. (default: nobody)</span><br><span class="line">  --with-fpm-group=GRP    Set the group <span class="keyword">for</span> php-fpm to run as. For a system user, this</span><br><span class="line">                          should usually be <span class="built_in">set</span> to match the fpm username (default: nobody)</span><br><span class="line">  --with-fpm-systemd      Activate systemd integration</span><br><span class="line">  --with-fpm-acl          Use POSIX Access Control Lists</span><br><span class="line">  --with-litespeed        Build PHP as litespeed module</span><br><span class="line">  --<span class="built_in">enable</span>-phpdbg            Build phpdbg</span><br><span class="line">  --<span class="built_in">enable</span>-phpdbg-webhelper  Build phpdbg web SAPI support</span><br><span class="line">  --<span class="built_in">enable</span>-phpdbg-debug      Build phpdbg <span class="keyword">in</span> debug mode</span><br><span class="line">  --<span class="built_in">disable</span>-cgi           Disable building CGI version of PHP</span><br><span class="line"></span><br><span class="line">General settings:</span><br><span class="line"></span><br><span class="line">  --<span class="built_in">enable</span>-gcov           Enable GCOV code coverage (requires LTP) - FOR DEVELOPERS ONLY!!</span><br><span class="line">  --<span class="built_in">enable</span>-debug          Compile with debugging symbols</span><br><span class="line">  --with-layout=TYPE      Set how installed files will be laid out.  Type can</span><br><span class="line">                          be either PHP or GNU [PHP]</span><br><span class="line">  --with-config-file-path=PATH</span><br><span class="line">                          Set the path <span class="keyword">in</span> <span class="built_in">which</span> to look <span class="keyword">for</span> php.ini [PREFIX/lib]</span><br><span class="line">  --with-config-file-scan-dir=PATH</span><br><span class="line">                          Set the path <span class="built_in">where</span> to scan <span class="keyword">for</span> configuration files</span><br><span class="line">  --<span class="built_in">enable</span>-sigchild       Enable PHP<span class="string">'s own SIGCHLD handler</span></span><br><span class="line"><span class="string">  --enable-libgcc         Enable explicitly linking against libgcc</span></span><br><span class="line"><span class="string">  --disable-short-tags    Disable the short-form &lt;? start tag by default</span></span><br><span class="line"><span class="string">  --enable-dmalloc        Enable dmalloc</span></span><br><span class="line"><span class="string">  --disable-ipv6          Disable IPv6 support</span></span><br><span class="line"><span class="string">  --enable-dtrace         Enable DTrace support</span></span><br><span class="line"><span class="string">  --enable-fd-setsize     Set size of descriptor sets</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Extensions:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --with-EXTENSION=shared[,PATH]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    NOTE: Not all extensions can be build as '</span>shared<span class="string">'.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Example: --with-foobar=shared,/usr/local/foobar/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      o Builds the foobar extension as shared extension.</span></span><br><span class="line"><span class="string">      o foobar package install prefix is /usr/local/foobar/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --disable-all           Disable all extensions which are enabled by default</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --disable-libxml        Disable LIBXML support</span></span><br><span class="line"><span class="string">  --with-libxml-dir=DIR   LIBXML: libxml2 install prefix</span></span><br><span class="line"><span class="string">  --with-openssl=DIR      Include OpenSSL support (requires OpenSSL &gt;= 1.0.1)</span></span><br><span class="line"><span class="string">  --with-kerberos=DIR     OPENSSL: Include Kerberos support</span></span><br><span class="line"><span class="string">  --with-system-ciphers   OPENSSL: Use system default cipher list instead of hardcoded value</span></span><br><span class="line"><span class="string">  --with-pcre-regex=DIR   Include Perl Compatible Regular Expressions support.</span></span><br><span class="line"><span class="string">                          DIR is the PCRE install prefix BUNDLED</span></span><br><span class="line"><span class="string">  --with-pcre-jit         Enable PCRE JIT functionality (BUNDLED only)</span></span><br><span class="line"><span class="string">  --with-pcre-valgrind=DIR</span></span><br><span class="line"><span class="string">                          Enable PCRE valgrind support. Developers only!</span></span><br><span class="line"><span class="string">  --without-sqlite3=DIR   Do not include SQLite3 support. DIR is the prefix to</span></span><br><span class="line"><span class="string">                          SQLite3 installation directory.</span></span><br><span class="line"><span class="string">  --with-zlib=DIR         Include ZLIB support (requires zlib &gt;= 1.0.9)</span></span><br><span class="line"><span class="string">  --with-zlib-dir=&lt;DIR&gt;   Define the location of zlib install directory</span></span><br><span class="line"><span class="string">  --enable-bcmath         Enable bc style precision math functions</span></span><br><span class="line"><span class="string">  --with-bz2=DIR          Include BZip2 support</span></span><br><span class="line"><span class="string">  --enable-calendar       Enable support for calendar conversion</span></span><br><span class="line"><span class="string">  --disable-ctype         Disable ctype functions</span></span><br><span class="line"><span class="string">  --with-curl=DIR         Include cURL support</span></span><br><span class="line"><span class="string">  --enable-dba            Build DBA with bundled modules. To build shared DBA</span></span><br><span class="line"><span class="string">                          extension use --enable-dba=shared</span></span><br><span class="line"><span class="string">  --with-qdbm=DIR         DBA: QDBM support</span></span><br><span class="line"><span class="string">  --with-gdbm=DIR         DBA: GDBM support</span></span><br><span class="line"><span class="string">  --with-ndbm=DIR         DBA: NDBM support</span></span><br><span class="line"><span class="string">  --with-db4=DIR          DBA: Oracle Berkeley DB 4.x or 5.x support</span></span><br><span class="line"><span class="string">  --with-db3=DIR          DBA: Oracle Berkeley DB 3.x support</span></span><br><span class="line"><span class="string">  --with-db2=DIR          DBA: Oracle Berkeley DB 2.x support</span></span><br><span class="line"><span class="string">  --with-db1=DIR          DBA: Oracle Berkeley DB 1.x support/emulation</span></span><br><span class="line"><span class="string">  --with-dbm=DIR          DBA: DBM support</span></span><br><span class="line"><span class="string">  --with-tcadb=DIR        DBA: Tokyo Cabinet abstract DB support</span></span><br><span class="line"><span class="string">  --with-lmdb=DIR        DBA: Lightning memory-mapped database support</span></span><br><span class="line"><span class="string">  --without-cdb=DIR       DBA: CDB support (bundled)</span></span><br><span class="line"><span class="string">  --disable-inifile       DBA: INI support (bundled)</span></span><br><span class="line"><span class="string">  --disable-flatfile      DBA: FlatFile support (bundled)</span></span><br><span class="line"><span class="string">  --disable-dom           Disable DOM support</span></span><br><span class="line"><span class="string">  --with-libxml-dir=DIR   DOM: libxml2 install prefix</span></span><br><span class="line"><span class="string">  --with-enchant=DIR      Include enchant support.</span></span><br><span class="line"><span class="string">                          GNU Aspell version 1.1.3 or higher required.</span></span><br><span class="line"><span class="string">  --enable-exif           Enable EXIF (metadata from images) support</span></span><br><span class="line"><span class="string">  --disable-fileinfo      Disable fileinfo support</span></span><br><span class="line"><span class="string">  --disable-filter        Disable input filter support</span></span><br><span class="line"><span class="string">  --with-pcre-dir         FILTER: pcre install prefix</span></span><br><span class="line"><span class="string">  --enable-ftp            Enable FTP support</span></span><br><span class="line"><span class="string">  --with-openssl-dir=DIR  FTP: openssl install prefix</span></span><br><span class="line"><span class="string">  --with-gd=DIR           Include GD support.  DIR is the GD library base</span></span><br><span class="line"><span class="string">                          install directory BUNDLED</span></span><br><span class="line"><span class="string">  --with-webp-dir=DIR      GD: Set the path to libwebp install prefix</span></span><br><span class="line"><span class="string">  --with-jpeg-dir=DIR     GD: Set the path to libjpeg install prefix</span></span><br><span class="line"><span class="string">  --with-png-dir=DIR      GD: Set the path to libpng install prefix</span></span><br><span class="line"><span class="string">  --with-zlib-dir=DIR     GD: Set the path to libz install prefix</span></span><br><span class="line"><span class="string">  --with-xpm-dir=DIR      GD: Set the path to libXpm install prefix</span></span><br><span class="line"><span class="string">  --with-freetype-dir=DIR GD: Set the path to FreeType 2 install prefix</span></span><br><span class="line"><span class="string">  --enable-gd-jis-conv    GD: Enable JIS-mapped Japanese font support</span></span><br><span class="line"><span class="string">  --with-gettext=DIR      Include GNU gettext support</span></span><br><span class="line"><span class="string">  --with-gmp=DIR          Include GNU MP support</span></span><br><span class="line"><span class="string">  --with-mhash=DIR        Include mhash support</span></span><br><span class="line"><span class="string">  --disable-hash          Disable hash support</span></span><br><span class="line"><span class="string">  --without-iconv=DIR     Exclude iconv support</span></span><br><span class="line"><span class="string">  --with-imap=DIR         Include IMAP support. DIR is the c-client install prefix</span></span><br><span class="line"><span class="string">  --with-kerberos=DIR     IMAP: Include Kerberos support. DIR is the Kerberos install prefix</span></span><br><span class="line"><span class="string">  --with-imap-ssl=DIR     IMAP: Include SSL support. DIR is the OpenSSL install prefix</span></span><br><span class="line"><span class="string">  --with-interbase=DIR    Include Firebird support.  DIR is the Firebird base</span></span><br><span class="line"><span class="string">                          install directory /opt/firebird</span></span><br><span class="line"><span class="string">  --enable-intl           Enable internationalization support</span></span><br><span class="line"><span class="string">  --with-icu-dir=DIR      Specify where ICU libraries and headers can be found</span></span><br><span class="line"><span class="string">  --disable-json          Disable JavaScript Object Serialization support</span></span><br><span class="line"><span class="string">  --with-ldap=DIR         Include LDAP support</span></span><br><span class="line"><span class="string">  --with-ldap-sasl=DIR    LDAP: Include Cyrus SASL support</span></span><br><span class="line"><span class="string">  --enable-mbstring       Enable multibyte string support</span></span><br><span class="line"><span class="string">  --disable-mbregex       MBSTRING: Disable multibyte regex support</span></span><br><span class="line"><span class="string">  --disable-mbregex-backtrack</span></span><br><span class="line"><span class="string">                          MBSTRING: Disable multibyte regex backtrack check</span></span><br><span class="line"><span class="string">  --with-libmbfl=DIR      MBSTRING: Use external libmbfl.  DIR is the libmbfl base</span></span><br><span class="line"><span class="string">                          install directory BUNDLED</span></span><br><span class="line"><span class="string">  --with-onig=DIR         MBSTRING: Use external oniguruma. DIR is the oniguruma install prefix.</span></span><br><span class="line"><span class="string">                          If DIR is not set, the bundled oniguruma will be used</span></span><br><span class="line"><span class="string">  --with-mysqli=FILE      Include MySQLi support.  FILE is the path</span></span><br><span class="line"><span class="string">                          to mysql_config.  If no value or mysqlnd is passed</span></span><br><span class="line"><span class="string">                          as FILE, the MySQL native driver will be used</span></span><br><span class="line"><span class="string">  --enable-embedded-mysqli</span></span><br><span class="line"><span class="string">                          MYSQLi: Enable embedded support</span></span><br><span class="line"><span class="string">                          Note: Does not work with MySQL native driver!</span></span><br><span class="line"><span class="string">  --with-mysql-sock=SOCKPATH</span></span><br><span class="line"><span class="string">                          MySQLi/PDO_MYSQL: Location of the MySQL unix socket pointer.</span></span><br><span class="line"><span class="string">                          If unspecified, the default locations are searched</span></span><br><span class="line"><span class="string">  --with-oci8=DIR         Include Oracle Database OCI8 support. DIR defaults to $ORACLE_HOME.</span></span><br><span class="line"><span class="string">                          Use --with-oci8=instantclient,/path/to/instant/client/lib</span></span><br><span class="line"><span class="string">                          to use an Oracle Instant Client installation</span></span><br><span class="line"><span class="string">  --with-odbcver=HEX      Force support for the passed ODBC version. A hex number is expected, default 0x0350.</span></span><br><span class="line"><span class="string">                             Use the special value of 0 to prevent an explicit ODBCVER to be defined.</span></span><br><span class="line"><span class="string">  --with-adabas=DIR       Include Adabas D support /usr/local</span></span><br><span class="line"><span class="string">  --with-sapdb=DIR        Include SAP DB support /usr/local</span></span><br><span class="line"><span class="string">  --with-solid=DIR        Include Solid support /usr/local/solid</span></span><br><span class="line"><span class="string">  --with-ibm-db2=DIR      Include IBM DB2 support /home/db2inst1/sqllib</span></span><br><span class="line"><span class="string">  --with-ODBCRouter=DIR   Include ODBCRouter.com support /usr</span></span><br><span class="line"><span class="string">  --with-empress=DIR      Include Empress support \$EMPRESSPATH</span></span><br><span class="line"><span class="string">                          (Empress Version &gt;= 8.60 required)</span></span><br><span class="line"><span class="string">  --with-empress-bcs=DIR</span></span><br><span class="line"><span class="string">                          Include Empress Local Access support \$EMPRESSPATH</span></span><br><span class="line"><span class="string">                          (Empress Version &gt;= 8.60 required)</span></span><br><span class="line"><span class="string">  --with-birdstep=DIR     Include Birdstep support /usr/local/birdstep</span></span><br><span class="line"><span class="string">  --with-custom-odbc=DIR  Include user defined ODBC support. DIR is ODBC install base</span></span><br><span class="line"><span class="string">                          directory /usr/local. Make sure to define CUSTOM_ODBC_LIBS and</span></span><br><span class="line"><span class="string">                          have some odbc.h in your include dirs. f.e. you should define</span></span><br><span class="line"><span class="string">                          following for Sybase SQL Anywhere 5.5.00 on QNX, prior to</span></span><br><span class="line"><span class="string">                          running this configure script:</span></span><br><span class="line"><span class="string">                            CPPFLAGS=\"-DODBC_QNX -DSQLANY_BUG\"</span></span><br><span class="line"><span class="string">                            LDFLAGS=-lunix</span></span><br><span class="line"><span class="string">                            CUSTOM_ODBC_LIBS=\"-ldblib -lodbc\"</span></span><br><span class="line"><span class="string">  --with-iodbc=DIR        Include iODBC support /usr/local</span></span><br><span class="line"><span class="string">  --with-esoob=DIR        Include Easysoft OOB support /usr/local/easysoft/oob/client</span></span><br><span class="line"><span class="string">  --with-unixODBC=DIR     Include unixODBC support /usr/local</span></span><br><span class="line"><span class="string">  --with-dbmaker=DIR      Include DBMaker support</span></span><br><span class="line"><span class="string">  --disable-opcache       Disable Zend OPcache support</span></span><br><span class="line"><span class="string">  --disable-opcache-file  Disable file based caching</span></span><br><span class="line"><span class="string">  --disable-huge-code-pages</span></span><br><span class="line"><span class="string">                          Disable copying PHP CODE pages into HUGE PAGES</span></span><br><span class="line"><span class="string">  --enable-pcntl          Enable pcntl support (CLI/CGI only)</span></span><br><span class="line"><span class="string">  --disable-pdo           Disable PHP Data Objects support</span></span><br><span class="line"><span class="string">  --with-pdo-dblib=DIR    PDO: DBLIB-DB support.  DIR is the FreeTDS home directory</span></span><br><span class="line"><span class="string">  --with-pdo-firebird=DIR PDO: Firebird support.  DIR is the Firebird base</span></span><br><span class="line"><span class="string">                          install directory /opt/firebird</span></span><br><span class="line"><span class="string">  --with-pdo-mysql=DIR    PDO: MySQL support. DIR is the MySQL base directory</span></span><br><span class="line"><span class="string">                          If no value or mysqlnd is passed as DIR, the</span></span><br><span class="line"><span class="string">                          MySQL native driver will be used</span></span><br><span class="line"><span class="string">  --with-zlib-dir=DIR     PDO_MySQL: Set the path to libz install prefix</span></span><br><span class="line"><span class="string">  --with-pdo-oci=DIR      PDO: Oracle OCI support. DIR defaults to $ORACLE_HOME.</span></span><br><span class="line"><span class="string">                          Use --with-pdo-oci=instantclient,/path/to/instant/client/lib</span></span><br><span class="line"><span class="string">                          for an Oracle Instant Client installation.</span></span><br><span class="line"><span class="string">  --with-pdo-odbc=flavour,dir</span></span><br><span class="line"><span class="string">                          PDO: Support for '</span>flavour<span class="string">' ODBC driver.</span></span><br><span class="line"><span class="string">  include and lib dirs are looked for under '</span>dir<span class="string">'.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  '</span>flavour<span class="string">' can be one of:  ibm-db2, iODBC, unixODBC, generic</span></span><br><span class="line"><span class="string">  If '</span>,dir<span class="string">' part is omitted, default for the flavour</span></span><br><span class="line"><span class="string">  you have selected will be used. e.g.:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    --with-pdo-odbc=unixODBC</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  will check for unixODBC under /usr/local. You may attempt</span></span><br><span class="line"><span class="string">  to use an otherwise unsupported driver using the \"generic\"</span></span><br><span class="line"><span class="string">  flavour.  The syntax for generic ODBC support is:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    --with-pdo-odbc=generic,dir,libname,ldflags,cflags</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  When built as '</span>shared<span class="string">' the extension filename is always pdo_odbc.so</span></span><br><span class="line"><span class="string">  --with-pdo-pgsql=DIR    PDO: PostgreSQL support.  DIR is the PostgreSQL base</span></span><br><span class="line"><span class="string">                          install directory or the path to pg_config</span></span><br><span class="line"><span class="string">  --without-pdo-sqlite=DIR</span></span><br><span class="line"><span class="string">                          PDO: sqlite 3 support.  DIR is the sqlite base</span></span><br><span class="line"><span class="string">                          install directory BUNDLED</span></span><br><span class="line"><span class="string">  --with-pgsql=DIR        Include PostgreSQL support.  DIR is the PostgreSQL</span></span><br><span class="line"><span class="string">                          base install directory or the path to pg_config</span></span><br><span class="line"><span class="string">  --disable-phar          Disable phar support</span></span><br><span class="line"><span class="string">  --disable-posix         Disable POSIX-like functions</span></span><br><span class="line"><span class="string">  --with-pspell=DIR       Include PSPELL support.</span></span><br><span class="line"><span class="string">                          GNU Aspell version 0.50.0 or higher required</span></span><br><span class="line"><span class="string">  --with-libedit=DIR      Include libedit readline replacement (CLI/CGI only)</span></span><br><span class="line"><span class="string">  --with-readline=DIR     Include readline support (CLI/CGI only)</span></span><br><span class="line"><span class="string">  --with-recode=DIR       Include recode support</span></span><br><span class="line"><span class="string">  --disable-session       Disable session support</span></span><br><span class="line"><span class="string">  --with-mm=DIR           SESSION: Include mm support for session storage</span></span><br><span class="line"><span class="string">  --enable-shmop          Enable shmop support</span></span><br><span class="line"><span class="string">  --disable-simplexml     Disable SimpleXML support</span></span><br><span class="line"><span class="string">  --with-libxml-dir=DIR   SimpleXML: libxml2 install prefix</span></span><br><span class="line"><span class="string">  --with-snmp=DIR         Include SNMP support</span></span><br><span class="line"><span class="string">  --with-openssl-dir=DIR  SNMP: openssl install prefix</span></span><br><span class="line"><span class="string">  --enable-soap           Enable SOAP support</span></span><br><span class="line"><span class="string">  --with-libxml-dir=DIR   SOAP: libxml2 install prefix</span></span><br><span class="line"><span class="string">  --enable-sockets        Enable sockets support</span></span><br><span class="line"><span class="string">  --with-sodium=DIR     Include sodium support</span></span><br><span class="line"><span class="string">  --with-password-argon2=DIR           Include Argon2 support in password_*. DIR is the Argon2 shared library path]</span></span><br><span class="line"><span class="string">  --enable-sysvmsg        Enable sysvmsg support</span></span><br><span class="line"><span class="string">  --enable-sysvsem        Enable System V semaphore support</span></span><br><span class="line"><span class="string">  --enable-sysvshm        Enable the System V shared memory support</span></span><br><span class="line"><span class="string">  --with-tidy=DIR         Include TIDY support</span></span><br><span class="line"><span class="string">  --disable-tokenizer     Disable tokenizer support</span></span><br><span class="line"><span class="string">  --enable-wddx           Enable WDDX support</span></span><br><span class="line"><span class="string">  --with-libxml-dir=DIR   WDDX: libxml2 install prefix</span></span><br><span class="line"><span class="string">  --with-libexpat-dir=DIR WDDX: libexpat dir for XMLRPC-EPI (deprecated)</span></span><br><span class="line"><span class="string">  --disable-xml           Disable XML support</span></span><br><span class="line"><span class="string">  --with-libxml-dir=DIR   XML: libxml2 install prefix</span></span><br><span class="line"><span class="string">  --with-libexpat-dir=DIR XML: libexpat install prefix (deprecated)</span></span><br><span class="line"><span class="string">  --disable-xmlreader     Disable XMLReader support</span></span><br><span class="line"><span class="string">  --with-libxml-dir=DIR   XMLReader: libxml2 install prefix</span></span><br><span class="line"><span class="string">  --with-xmlrpc=DIR       Include XMLRPC-EPI support</span></span><br><span class="line"><span class="string">  --with-libxml-dir=DIR   XMLRPC-EPI: libxml2 install prefix</span></span><br><span class="line"><span class="string">  --with-libexpat-dir=DIR XMLRPC-EPI: libexpat dir for XMLRPC-EPI (deprecated)</span></span><br><span class="line"><span class="string">  --with-iconv-dir=DIR    XMLRPC-EPI: iconv dir for XMLRPC-EPI</span></span><br><span class="line"><span class="string">  --disable-xmlwriter     Disable XMLWriter support</span></span><br><span class="line"><span class="string">  --with-libxml-dir=DIR   XMLWriter: libxml2 install prefix</span></span><br><span class="line"><span class="string">  --with-xsl=DIR          Include XSL support.  DIR is the libxslt base</span></span><br><span class="line"><span class="string">                          install directory (libxslt &gt;= 1.1.0 required)</span></span><br><span class="line"><span class="string">  --enable-zend-test           Enable zend-test extension</span></span><br><span class="line"><span class="string">  --enable-zip            Include Zip read/write support</span></span><br><span class="line"><span class="string">  --with-zlib-dir=DIR     ZIP: Set the path to libz install prefix</span></span><br><span class="line"><span class="string">  --with-pcre-dir         ZIP: pcre install prefix</span></span><br><span class="line"><span class="string">  --with-libzip=DIR       ZIP: use libzip</span></span><br><span class="line"><span class="string">  --enable-mysqlnd        Enable mysqlnd explicitly, will be done implicitly</span></span><br><span class="line"><span class="string">                          when required by other extensions</span></span><br><span class="line"><span class="string">  --disable-mysqlnd-compression-support</span></span><br><span class="line"><span class="string">                          Disable support for the MySQL compressed protocol in mysqlnd</span></span><br><span class="line"><span class="string">  --with-zlib-dir=DIR     mysqlnd: Set the path to libz install prefix</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PEAR:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --with-pear=DIR         Install PEAR in DIR [PREFIX/lib/php]</span></span><br><span class="line"><span class="string">  --without-pear          Do not install PEAR</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Zend:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --enable-maintainer-zts Enable thread safety - for code maintainers only!!</span></span><br><span class="line"><span class="string">  --disable-inline-optimization</span></span><br><span class="line"><span class="string">                          If building zend_execute.lo fails, try this switch</span></span><br><span class="line"><span class="string">  --disable-zend-signals  whether to enable zend signal handling</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">TSRM:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  --with-tsrm-pth=pth-config</span></span><br><span class="line"><span class="string">                          Use GNU Pth</span></span><br><span class="line"><span class="string">  --with-tsrm-st          Use SGI'</span>s State Threads</span><br><span class="line">  --with-tsrm-pthreads    Use POSIX threads (default)</span><br><span class="line"></span><br><span class="line">Libtool:</span><br><span class="line"></span><br><span class="line">  --<span class="built_in">enable</span>-shared=PKGS    Build shared libraries default=yes</span><br><span class="line">  --<span class="built_in">enable</span>-static=PKGS    Build static libraries default=yes</span><br><span class="line">  --<span class="built_in">enable</span>-fast-install=PKGS</span><br><span class="line">                          Optimize <span class="keyword">for</span> fast installation default=yes</span><br><span class="line">  --with-gnu-ld           Assume the C compiler uses GNU ld default=no</span><br><span class="line">  --<span class="built_in">disable</span>-libtool-lock  Avoid locking (might <span class="built_in">break</span> parallel builds)</span><br><span class="line">  --with-pic              Try to use only PIC/non-PIC objects default=use both</span><br><span class="line">  --with-tags=TAGS        Include additional configurations automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Some influential environment variables:</span><br><span class="line">  CC          C compiler <span class="built_in">command</span></span><br><span class="line">  CFLAGS      C compiler flags</span><br><span class="line">  LDFLAGS     linker flags, e.g. -L&lt;lib dir&gt; <span class="keyword">if</span> you have libraries <span class="keyword">in</span> a</span><br><span class="line">              nonstandard directory &lt;lib dir&gt;</span><br><span class="line">  LIBS        libraries to pass to the linker, e.g. -l&lt;library&gt;</span><br><span class="line">  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I&lt;include dir&gt; <span class="keyword">if</span></span><br><span class="line">              you have headers <span class="keyword">in</span> a nonstandard directory &lt;include dir&gt;</span><br><span class="line">  CPP         C preprocessor</span><br><span class="line">  YACC        The `Yet Another Compiler Compiler<span class="string">' implementation to use.</span></span><br><span class="line"><span class="string">              Defaults to the first program found out of: `bison -y'</span>, `byacc<span class="string">',</span></span><br><span class="line"><span class="string">              `yacc'</span>.</span><br><span class="line">  YFLAGS      The list of arguments that will be passed by default to <span class="variable">$YACC</span>.</span><br><span class="line">              This script will default YFLAGS to the empty string to avoid a</span><br><span class="line">              default value of `-d<span class="string">' given by some make applications.</span></span><br><span class="line"><span class="string">  CXX         C++ compiler command</span></span><br><span class="line"><span class="string">  CXXFLAGS    C++ compiler flags</span></span><br><span class="line"><span class="string">  CXXCPP      C++ preprocessor</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Use these variables to override the choices made by `configure'</span> or to <span class="built_in">help</span></span><br><span class="line">it to find libraries and programs with nonstandard names/locations.</span><br><span class="line"></span><br><span class="line">Report bugs to the package provider.</span><br></pre></td></tr></table></figure><h2 id="php各参数配置详解"><a href="#php各参数配置详解" class="headerlink" title="php各参数配置详解"></a>php各参数配置详解</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">--prefix=/usr/<span class="built_in">local</span>/php                      //指定 php 安装目录 </span><br><span class="line">--with-apxs2=/usr/<span class="built_in">local</span>/apache/bin/apxs      //整合apache，</span><br><span class="line">                        //apxs功能是使用mod_so中的LoadModule指令，</span><br><span class="line">                       //加载指定模块到 apache，要求 apache 要打开SO模块</span><br><span class="line">--with-config-file-path=/usr/<span class="built_in">local</span>/php/etc    //指定php.ini位置</span><br><span class="line">--with-MySQL=/usr/<span class="built_in">local</span>/mysql                 //mysql安装目录，对mysql的支持</span><br><span class="line">--with-mysqli=/usr/<span class="built_in">local</span>/mysql/bin/mysql_config</span><br><span class="line">                      //mysqli扩展技术不仅可以调用MySQL的存储过程、处理MySQL事务，</span><br><span class="line">                      //而且还可以使访问数据库工作变得更加稳定。</span><br><span class="line">--<span class="built_in">enable</span>-safe-mode    //打开安全模式 </span><br><span class="line">--<span class="built_in">enable</span>-ftp          //打开ftp的支持 </span><br><span class="line">--<span class="built_in">enable</span>-zip          //打开对zip的支持 </span><br><span class="line"></span><br><span class="line">--with-bz2            //打开对bz2文件的支持 </span><br><span class="line">--with-jpeg-dir       //打开对jpeg图片的支持 </span><br><span class="line">--with-png-dir        //打开对png图片的支持 </span><br><span class="line">--with-freetype-dir   //打开对freetype字体库的支持 </span><br><span class="line">--without-iconv       //关闭iconv函数，各种字符集间的转换 </span><br><span class="line">--with-libXML-dir     //打开libxml2库的支持 </span><br><span class="line">--with-XMLrpc         //打开xml-rpc的c语言 </span><br><span class="line">--with-zlib-dir       //打开zlib库的支持 </span><br><span class="line">--with-gd             //打开gd库的支持 </span><br><span class="line">--<span class="built_in">enable</span>-gd-native-ttf //支持TrueType字符串函数库 </span><br><span class="line">--with-curl            //打开curl浏览工具的支持 </span><br><span class="line">--with-curlwrappers    //运用curl工具打开url流 </span><br><span class="line">--with-ttf             //打开freetype1.*的支持，可以不加了 </span><br><span class="line">--with-xsl             //打开XSLT 文件支持，扩展了libXML2库 ，需要libxslt软件 </span><br><span class="line">--with-gettext         //打开gnu 的gettext 支持，编码库用到 </span><br><span class="line">--with-pear            //打开pear命令的支持，PHP扩展用的 </span><br><span class="line">--<span class="built_in">enable</span>-calendar      //打开日历扩展功能 </span><br><span class="line">--<span class="built_in">enable</span>-mbstring      //多字节，字符串的支持 </span><br><span class="line">--<span class="built_in">enable</span>-bcmath        //打开图片大小调整,用到zabbix监控的时候用到了这个模块</span><br><span class="line">--<span class="built_in">enable</span>-sockets       //打开 sockets 支持</span><br><span class="line">--<span class="built_in">enable</span>-exif          //图片的元数据支持 </span><br><span class="line">--<span class="built_in">enable</span>-magic-quotes  //魔术引用的支持 </span><br><span class="line">--<span class="built_in">disable</span>-rpath        //关闭额外的运行库文件 </span><br><span class="line">--<span class="built_in">disable</span>-debug        //关闭调试模式 </span><br><span class="line">--with-mime-magic=/usr/share/file/magic.mime  //魔术头文件位置</span><br></pre></td></tr></table></figure><h2 id="CGI方式安装才用的参数"><a href="#CGI方式安装才用的参数" class="headerlink" title="CGI方式安装才用的参数"></a>CGI方式安装才用的参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">--<span class="built_in">enable</span>-fpm                 //打上PHP-fpm 补丁后才有这个参数，CGI方式安装的启动程序</span><br><span class="line">--<span class="built_in">enable</span>-fastCGI             //支持fastcgi方式启动PHP</span><br><span class="line">--<span class="built_in">enable</span>-force-CGI-redirect  //重定向方式启动PHP</span><br><span class="line">--with-ncurses         //支持ncurses 屏幕绘制以及基于文本终端的图形互动功能的动态库</span><br><span class="line">--<span class="built_in">enable</span>-pcntl         //freeTDS需要用到的，可能是链接mssql 才用到</span><br><span class="line">--with-mcrypt          //mcrypt算法的扩展</span><br><span class="line">--with-mhash           //mhash算法的扩展</span><br><span class="line"></span><br><span class="line">//以上函数库需要安装</span><br><span class="line"></span><br><span class="line">--with-gmp                     //应该是支持一种规范</span><br><span class="line">--<span class="built_in">enable</span>-inline-optimization   //优化线程</span><br><span class="line">--with-openssl                 //openssl的支持，加密传输时用到的</span><br><span class="line">--<span class="built_in">enable</span>-dbase                 //建立DBA 作为共享模块</span><br><span class="line">--with-pcre-dir=/usr/<span class="built_in">local</span>/bin/pcre-config       //perl的正则库案安装位置</span><br><span class="line">--<span class="built_in">disable</span>-dmalloc</span><br><span class="line">--with-gdbm            //dba的gdbm支持</span><br><span class="line">--<span class="built_in">enable</span>-sigchild</span><br><span class="line">--<span class="built_in">enable</span>-sysvsem</span><br><span class="line">--<span class="built_in">enable</span>-sysvshm</span><br><span class="line">--<span class="built_in">enable</span>-zend-multibyte  //支持zend的多字节</span><br><span class="line">--<span class="built_in">enable</span>-mbregex</span><br><span class="line">--<span class="built_in">enable</span>-wddx</span><br><span class="line">--<span class="built_in">enable</span>-shmop</span><br><span class="line">--<span class="built_in">enable</span>-soap</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>指定了–with-apxs2=/usr/local/apache/bin/apxs以后，就不要再激活–enable-fpm和–enable-fastCGI，apxs是以php module的模式加载PHP的。</li><li>Mysql在编译了Mysql开发library以后，可以不用指定mysql的路径。</li><li>PHP编译存在基础的依赖的关系，编译PHP首先需要安装XML扩展，因为php5核心默认打开了XML的支持，其他的基础库，相应需要：GD -&gt; zlib, Png, Jpg, 如果需要支持其他，仍需要根据实际情况编译扩展库，ttf库需要freetype库的支持。</li><li>–enable-magic-quotes，是一个极其不推荐的参数，当然，如果你需要PHP为你做这些底下的工作，实际上他也没有很彻底的解决问题。</li><li>–with-openssl，需要openssl库。mysqli是MySQL团队提供的MySQL驱动，具有很多实用的功能和典型特征。不过他不是MySQL于PHP平台最好的选择，PDO被证实，是一个简易、高并发性，而且易于创建和回收的标准接口。不过PDO也经历了5.3以前的内存溢出的问题，在5.3以后，在读取Oracle的LOB资源时，若不对内存进行限制，仍会内存溢出。<br>如果是产品模式，好像pear、shmop、ftp等，都不推荐使用，他们要做的事情，用C/C++，用Java，甚至其他脚本语言，都有很好很快速的选择，无需局限于使用PHP去实现。不熟悉的类库和不常用的库，也不推荐使用。magic-quote、session.auto_start、PHP服务器信息、PHP报错信息等在编译完成后，应该第一时间关闭，避免暴露服务器信息。</li><li>PHP对应的Web Server模式，Module、fastcgi、fpm只需要一种即可，服务器不是你的试验田。fastcgi可以选择Nginx和lighttpd，其实Nginx也是使用lighttpd的spwan-fcgi进行fcgi进程管理的。fpm是使用PHP自身去管理多进程，有点类似一个后端代理。无论什么模式，在发布产品服务器，都应该做进程和线程调优，做足够多的压力测试，找出最好的进程数组合。</li><li>选好一种PHP OPCode cache的扩展，这个也是很重要的，linux 2.6核心下，fcgi下，xcache有较好的实践经验，其他的在并发数增加以后，性能衰减严重。</li><li>如果真的想体验，宁可编译多几个PHP版本，也不要针对一个版本的PHP集合各种扩展，适应各种环境，这会让把你自己逼进窘境的。</li></ul><h2 id="需要单独安装的扩展"><a href="#需要单独安装的扩展" class="headerlink" title="需要单独安装的扩展"></a>需要单独安装的扩展</h2><ul><li>gd库。</li><li>ming的扩展。</li><li>mhash和mcrypt的扩展。</li></ul><p>详细选项上，除了上述的安装简介外，也可以在编译时加入其它的选项。<br><em>apache 模块</em><br>语法: –with-apache=DIR<br>说明: 用本选项可以让PHP以apache的模块方式使用，DIR 的字符串可以是 /usr/local/apache 或其它安装apache的目录<br>范例: –with-apache=/var/lib/apache</p><p><em>fhttpd 服务器模块</em><br>语法: –with-fhttpd=DIR<br>说明: 若使用 fttpd 服务器，可以使用本指令编译 PHP。用模块的方式配合 fttpd 服务器，可以有较好的效率。</p><p><em>Adabas D 数据库</em><br>语法: –with-adabas=DIR<br>说明: 数据库系统为 Adabas D 数据库时需要加本选项。关于 Adabas D 数据库的细节，可以参考 <a href="http://www.adabas.com。" target="_blank" rel="noopener">http://www.adabas.com。</a><br>范例: –with-adabas=/usr/local/adabasd</p><p><em>dBase 资料表</em><br>语法: –with-dbase<br>说明: 只要加本选项，不用其它的参数或函数库，PHP 就会让系统有存取 dBase 资料表的功能。</p><p><em>filePro 数据库</em><br>语法: –with-filepro<br>说明: 不用指定数据库路径及其它函数库等，可以读取 filePro 数据库 (唯读)。</p><p><em>mSQL 数据库</em><br>语法: –with-msql=DIR<br>说明: 提供存取 mSQL 数据库。更多的细节请参考 mSQL 的网站 <a href="http://www.hughes.com.au。" target="_blank" rel="noopener">http://www.hughes.com.au。</a><br>范例: –with-msql=/usr/local/Hughes</p><p><em>MySQL 数据库</em><br>语法: –with-mysql=DIR<br>说明: 提供存取 MySQL 数据库。更多的细节请参考 MySQL 的网站 <a href="http://www.tcx.se。" target="_blank" rel="noopener">http://www.tcx.se。</a><br>范例: –with-mysql=/usr/local/mysql</p><p><em>iODBC 数据库装置</em><br>语法: –with-iodbc=DIR<br>说明: 提供 ODBC 数据库装置，用来存取后端数据库。更多的细节请参考 iODBC 的网站 <a href="http://www.iodbc.org。" target="_blank" rel="noopener">http://www.iodbc.org。</a><br>范例: –with-iodbc=/usr/local/iodbc</p><p><em>OpenLink ODBC 数据库装置</em><br>语法: –with-openlink=DIR<br>说明: 使用 OpenLink ODBC 数据库装置，用来存取后端数据库。更多的细节请参考 OpenLink ODBC 的网站 <a href="http://www.openlinksw.com。" target="_blank" rel="noopener">http://www.openlinksw.com。</a><br>范例: –with-openlink=/usr/local/openlink</p><p><em>Oracle 数据库</em><br>语法: –with-oracle=DIR<br>说 明: 使用 Oracle 数据库。Oracle 的版本要在 7.3 版以上。您也可以在 PHP 程序中使用环境变量 ORACLE_HOME 来指定 Oracle 的路径。更多有关 Oracle 的信息请参考 Oracle 的网站 <a href="http://www.oracle.com。" target="_blank" rel="noopener">http://www.oracle.com。</a><br>范例: –with-oracle=/export/app/oracle/product/7.3.2</p><p><em>PostgreSQL 数据库</em><br>语法: –with-pgsql=DIR<br>说 明: 使用 PostgreSQL 数据库。更多有关 PostgreSQL 的信息请参考 PostgreSQL 的网站 <a href="http://www.postgreSQL.org" target="_blank" rel="noopener">http://www.postgreSQL.org</a> 或台湾的 Mirror 站 <a href="http://postgresql.ccit.edu.tw。" target="_blank" rel="noopener">http://postgresql.ccit.edu.tw。</a><br>范例: –with-pgsql=/usr/local/pgsql</p><p><em>Solid 数据库</em><br>语法: –with-solid=DIR<br>说明: 使用 Solid 数据库。更多有关 Solid 的信息请参考 Solid 的网站 <a href="http://www.solidtech.com。" target="_blank" rel="noopener">http://www.solidtech.com。</a><br>范例: –with-solid=/usr/local/solid</p><p><em>Sybase 数据库</em><br>语法: –with-sybase=DIR<br>说明: 使用 Sybase 数据库。更多有关 Sybase 的信息请参考 Sybase 的网站 <a href="http://www.sybase.com。" target="_blank" rel="noopener">http://www.sybase.com。</a><br>范例: –with-sybase=/home/sybase</p><p><em>Sybase-CT 数据库</em><br>语法: –with-sybase-ct=DIR<br>说明: 使用 Sybase-CT 数据库。<br>范例: –with-sybase-ct=/home/sybase</p><p><em>Velocis 数据库</em><br>语法: –with-velocis=DIR<br>说明: 使用 Velocis 数据库。有关 Velocis 数据库的进一步资料请参考 Raima 公司的网站 <a href="http://www.raima.com。" target="_blank" rel="noopener">http://www.raima.com。</a><br>范例: –with-velocis=/usr/local/velocis</p><p><em>自订 ODBC 数据库驱动程序</em><br>语法: –with-custom-odbc=DIR<br>说明: 使用自订的 ODBC 函数库。当然，在使用本方式时要指定 CUSTOM_ODBC_LIBS 及 CFLAGS 变量。例如在 QNX 机器上使用 Sybase SQL Anywhere 时可能要配置系统环境变量 CFLAGS=-DODBC_QNX、LDFLAGS=-lunix 及 CUSTOM_ODBC_LIBS=”-ldblib -lodbc”，并要在 PHP 配置加入 –with-custom-odbc=/usr/lib/sqlany50<br>范例: –with-custom-odbc=/usr/local/odbc</p><p><em>不使用 ODBC 数据库驱动程序</em><br>语法: –disable-unified-odbc<br>说 明: 使用本选项将使所有的 ODBC 数据库驱动程序不作用。本选项不用指定路径，而受本选项影响的选项有 –with-iodbc、–with-solid、–with-adabas、–with-velocis 及 –with-custom-odbc。</p><p><em>LDAP 目录协议</em><br>语法: –with-ldap=DIR<br>说明: 若要使用目录协议 (Lightweight Directory Access Protocol, LDAP) 则必须要打开本选项。有关 LDAP 的细节，可以参考 RFC 文件的 RFC1777 及 RFC1778。<br>范例: –with-ldap=/usr/local/ldap.</p><p><em>mcrypt 编码函数库</em><br>语法: –with-mcrypt=DIR<br>说明: 当安装了 mcrypt 函数库后，可在编译 PHP 时加入本选项，让程序可以使用编解码功能。<br>范例: –with-mcrypt=/usr/local/include</p><p><em>Sys V 信号</em><br>语法: –enable-sysvsem<br>说明: 要使用 SysV 的信号 (semaphores) 机制，则要打开本选项。</p><p><em>XML 支持</em><br>语法: –with-xml<br>说明: 打开本选项可以支持 James Clark’s 写的 XML 解析程序库。</p><p><em>维护模式</em><br>语法: –enable-maintainer-mode<br>说明: 本选项一般不会打开，除非是 PHP 开发人员比较有用。</p><p><em>正则表达式程序库</em><br>语法: –with-system-regex<br>说明: 若您需要额外的正则表达式功能，可以加入本选项。</p><p><em>PHP 配置文件</em><br>语法: –with-config-file-path=DIR<br>说明: 用来指定 php3.ini 或 php4.ini 的路径，供 PHP 初始化时使用。<br>范例: –with-config-file-path=/usr/local/lib</p><p><em>PHP 执行路径</em><br>语法: –with-exec-dir=DIR<br>说明: 有时为了系统的安全性考虑，会指定 PHP 程序一定要在哪个目录执行。<br>范例: –with-exec-dir=/usr/local/bin</p><p><em>调试模式</em><br>语法: –enable-debug<br>说明: 本选项一般不会使用，除非在开发 PHP 程序时比较有用。它可以显示额外的错误信息。</p><p><em>安全模式</em><br>语法: –enable-safe-mode<br>说明: 默认值是打开的，可以对系统安全提供比较多的保护。</p><p><em>变量追踪</em><br>语法: –enable-track-vars<br>说明: 让 PHP 能 追踪 HTTP_GET_VARS、HTTP_POST_VARS 及 HTTP_COOKIE_VARS 三个变量，一般是打开的。</p><p><em>自动加引入字符</em><br>语法: –enable-magic-quotes<br>说明: 可让程序在执行时自动加入反斜线的引入字符。</p><p><em>打开调试器</em><br>语法: –enable-debugger<br>说明: 打开内建的 PHP 调试器。目前本功能还在实验阶段，尚未成熟。</p><p><em>取消路径 (discard path)</em><br>语法: –enable-discard-path<br>说明: 打开这个选项，用户就不能透过浏览器读取 .htaccess 等和系统安全相关的文件。</p><p><em>高精确度数学函数</em><br>语法: –enable-bcmath<br>说明: 打开高精确度函数。必须要先安装本函数库，本选项方有效。</p><p><em>强制 CGI 重定向</em><br>语法: –enable-force-cgi-redirect<br>范 例: 若使用 CGI VERSION 模式来执行 PHP 的设，打开本选项会增加安全性。例如用户读 <a href="http://my.host/cgi-bin/php/secret/doc.html" target="_blank" rel="noopener">http://my.host/cgi-bin/php/secret/doc.html</a> 遇到比较了解 PHP 系统的黑客级用户可能会自已输入以下网址 <a href="http://my.host/secret/doc.html" target="_blank" rel="noopener">http://my.host/secret/doc.html</a> 来读取相关信息。若 PHP 和 Apache 编译在一起，让 PHP 变成 Apache 的一部份，则不需要加入本选项。</p><p><em>不使用短的标记</em><br>语法: –disable-short-tags<br>说明: 配置本选项后，PHP 的程序就不能使用短的标记，一定要用的长标记。</p><p><em>引入远端档宁</em><br>语法: –enable-url-includes<br>说明: 配置本选项可让 PHP 程序可以引入 (include) 远端的 HTTP 或 FTP 服务器中的文件。</p><p><em>关闭语法效果</em><br>语法: –disable-syntax-hl<br>说明: 使用本选项会关闭 PHP 语法的彩色效果。</p><p><em>函数库路径</em><br>语法: CPPFLAGS=-IDIR 及 LDFLAGS=-LDIR<br>说明: 若 PHP 在安全或编译所需的函数库在值得的路径，需要加入本选项，LDFLAGS 表示函数库的路径，CPPFLAGS 表示标头文件的路径。<br>范例: LDFLAGS=-L/my/lib/dir CPPFLAGS=-I/my/include/dir ./configure</p><h2 id="配置项代码"><a href="#配置项代码" class="headerlink" title="配置项代码"></a>配置项代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/php --with-config-file-path=/usr/<span class="built_in">local</span>/php  </span><br><span class="line">--<span class="built_in">enable</span>-mysqlnd --<span class="built_in">enable</span>-opcache --<span class="built_in">enable</span>-sockets --<span class="built_in">enable</span>-sysvmsg </span><br><span class="line">--<span class="built_in">enable</span>-sysvsem  --<span class="built_in">enable</span>-sysvshm --<span class="built_in">enable</span>-shmop --<span class="built_in">enable</span>-zip </span><br><span class="line">--<span class="built_in">enable</span>-ftp --<span class="built_in">enable</span>-soap --<span class="built_in">enable</span>-xml --<span class="built_in">enable</span>-mbstring --<span class="built_in">disable</span>-rpath </span><br><span class="line">--<span class="built_in">disable</span>-debug --<span class="built_in">disable</span>-fileinfo --with-mysql=mysqlnd </span><br><span class="line">--with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-pcre-regex </span><br><span class="line">--with-iconv --with-zlib --with-gd --with-openssl --with-xmlrpc </span><br><span class="line">--with-curl --with-imap-ssl --with-freetype-dir --<span class="built_in">enable</span>-fpm </span><br><span class="line">--<span class="built_in">enable</span>-pcntl --with-mcrypt --with-mhash</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LNMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>彻底删除CentOS上的yum方式安装的Nginx</title>
      <link href="2019/05/15/%E5%BD%BB%E5%BA%95%E5%88%A0%E9%99%A4CentOS%E4%B8%8A%E7%9A%84yum%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85%E7%9A%84Nginx/"/>
      <url>2019/05/15/%E5%BD%BB%E5%BA%95%E5%88%A0%E9%99%A4CentOS%E4%B8%8A%E7%9A%84yum%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85%E7%9A%84Nginx/</url>
      
        <content type="html"><![CDATA[<p>停止Nginx软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@****** ~]<span class="comment"># service nginx stop</span></span><br></pre></td></tr></table></figure><p>删除Nginx的自动启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@****** ~]<span class="comment"># chkconfig nginx off</span></span><br></pre></td></tr></table></figure><p>从源头删除Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@****** ~]<span class="comment"># rm -rf /usr/sbin/nginx</span></span><br><span class="line">[root@****** ~]<span class="comment"># rm -rf /etc/nginx</span></span><br><span class="line">[root@****** ~]<span class="comment"># rm -rf /etc/init.d/nginx</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>再使用yum清理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove nginx</span><br></pre></td></tr></table></figure><p>查看Nginx残留文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@****** ~]<span class="comment"># find / -name *nginx*</span></span><br></pre></td></tr></table></figure><p>然后<code>rm</code>即可</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 添加nginx到系统服务(service)</title>
      <link href="2019/05/15/CentOS-%E6%B7%BB%E5%8A%A0nginx%E5%88%B0%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1-service/"/>
      <url>2019/05/15/CentOS-%E6%B7%BB%E5%8A%A0nginx%E5%88%B0%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1-service/</url>
      
        <content type="html"><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>nginx源码安装完成后默认不会注册为系统服务，所以需要手工添加系统服务脚本。在/etc/init.d目录下新建nginx文件，并更改权限其即可。</p><h2 id="2-新建nginx文件"><a href="#2-新建nginx文件" class="headerlink" title="2. 新建nginx文件"></a>2. 新建nginx文件</h2><p>vim /etc/init.d/nginx<br>填写一下内容(根据自己的实际目录修改):</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/sh</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          nginx</span></span><br><span class="line"><span class="comment"># Required-Start:    $all</span></span><br><span class="line"><span class="comment"># Required-Stop:     $all</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: starts the nginx web server</span></span><br><span class="line"><span class="comment"># Description:       starts nginx using start-stop-daemon</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Author:   </span></span><br><span class="line"><span class="comment"># website:  </span></span><br><span class="line"> </span><br><span class="line">PATH=/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">NAME=nginx</span><br><span class="line">NGINX_BIN=/usr/<span class="built_in">local</span>/nginx/sbin/<span class="variable">$NAME</span></span><br><span class="line">CONFIGFILE=/usr/<span class="built_in">local</span>/nginx/conf/<span class="variable">$NAME</span>.conf</span><br><span class="line">PIDFILE=/usr/<span class="built_in">local</span>/nginx/logs/<span class="variable">$NAME</span>.pid</span><br><span class="line"> </span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">"Starting <span class="variable">$NAME</span>... "</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> netstat -tnpl | grep -q nginx;<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$NAME</span> (pid `pidof <span class="variable">$NAME</span>`) already running."</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">        <span class="variable">$NGINX_BIN</span> -c <span class="variable">$CONFIGFILE</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"$?"</span> != 0 ] ; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">" failed"</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">    stop)</span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">"Stoping <span class="variable">$NAME</span>... "</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> ! netstat -tnpl | grep -q nginx; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$NAME</span> is not running."</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">        <span class="variable">$NGINX_BIN</span> -s stop</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"$?"</span> != 0 ] ; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">" failed. Use force-quit"</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">    status)</span><br><span class="line">        <span class="keyword">if</span> netstat -tnpl | grep -q nginx; <span class="keyword">then</span></span><br><span class="line">            PID=`pidof nginx`</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$NAME</span> (pid <span class="variable">$PID</span>) is running..."</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$NAME</span> is stopped"</span></span><br><span class="line">            <span class="built_in">exit</span> 0</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">    force-quit)</span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">"Terminating <span class="variable">$NAME</span>... "</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> ! netstat -tnpl | grep -q nginx; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$NAME</span> is not running."</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">        <span class="built_in">kill</span> `pidof <span class="variable">$NAME</span>`</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"$?"</span> != 0 ] ; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">" failed"</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">    restart)</span><br><span class="line">        <span class="variable">$0</span> stop</span><br><span class="line">        sleep 1</span><br><span class="line">        <span class="variable">$0</span> start</span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">    reload)</span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">"Reload service <span class="variable">$NAME</span>... "</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> netstat -tnpl | grep -q nginx; <span class="keyword">then</span></span><br><span class="line">            <span class="variable">$NGINX_BIN</span> -s reload</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$NAME</span> is not running, can't reload."</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">    configtest)</span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">"Test <span class="variable">$NAME</span> configure files... "</span></span><br><span class="line"> </span><br><span class="line">        <span class="variable">$NGINX_BIN</span> -t</span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|force-quit|restart|reload|status|configtest&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>tip:<br>根据自己实际安装目录，修改这两行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NGINX_BIN=/usr/local/nginx/sbin/$NAME</span><br><span class="line">CONFIGFILE=/usr/local/nginx/conf/$NAME.conf</span><br><span class="line">PIDFILE=/usr/local/nginx/logs/$NAME.pid</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># nginx Startup script for the Nginx HTTP Server</span></span><br><span class="line"><span class="comment"># this script create it by caffreyxin at 2007.10.15.</span></span><br><span class="line"><span class="comment"># it is v.0.0.1 version.</span></span><br><span class="line"><span class="comment"># if you find any errors on this scripts, please contact caffreyxin.</span></span><br><span class="line"><span class="comment"># and send mail to xinyflove at sina dot com.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># chkconfig: - 85 15</span></span><br><span class="line"><span class="comment"># description: Nginx is a high-performance web and proxy server.</span></span><br><span class="line"><span class="comment">#              It has a lot of features, but it's not for everyone.</span></span><br><span class="line"><span class="comment"># processname: nginx</span></span><br><span class="line"><span class="comment"># pidfile: /var/run/nginx.pid</span></span><br><span class="line"><span class="comment"># config: /usr/local/nginx/conf/nginx.conf</span></span><br><span class="line"></span><br><span class="line">nginxd=/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br><span class="line">nginx_config=/usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">nginx_pid=/var/run/nginx.pid</span><br><span class="line"></span><br><span class="line">RETVAL=0</span><br><span class="line">prog=<span class="string">"nginx"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source function library.</span></span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source networking configuration.</span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check that networking is up.</span></span><br><span class="line">[ <span class="variable">$&#123;NETWORKING&#125;</span> = <span class="string">"no"</span> ] &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line">[ -x <span class="variable">$nginxd</span> ] || <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Start nginx daemons functions.</span></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> [ -e <span class="variable">$nginx_pid</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"nginx already running...."</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">        </span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Starting <span class="variable">$prog</span>: "</span></span><br><span class="line">    daemon <span class="variable">$nginxd</span> -c <span class="variable">$&#123;nginx_config&#125;</span></span><br><span class="line">    RETVAL=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    [ <span class="variable">$RETVAL</span> = 0 ] &amp;&amp; touch /var/lock/subsys/nginx</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$RETVAL</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Stop nginx daemons functions.</span></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span></span><br><span class="line">    killproc <span class="variable">$nginxd</span></span><br><span class="line">    RETVAL=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    [ <span class="variable">$RETVAL</span> = 0 ] &amp;&amp; rm -f /var/lock/subsys/nginx /var/run/nginx.pid</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># reload nginx service functions.</span></span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Reloading <span class="variable">$prog</span>: "</span></span><br><span class="line">    <span class="comment">#kill -HUP `cat $&#123;nginx_pid&#125;`</span></span><br><span class="line">    killproc <span class="variable">$nginxd</span> -HUP</span><br><span class="line">    RETVAL=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># See how we were called.</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">reload)</span><br><span class="line">        reload</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">restart)</span><br><span class="line">        stop</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">status)</span><br><span class="line">        status <span class="variable">$prog</span></span><br><span class="line">        RETVAL=$?</span><br><span class="line">        ;;</span><br><span class="line">*)</span><br><span class="line">        <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$prog</span> &#123;start|stop|restart|reload|status|help&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$RETVAL</span></span><br></pre></td></tr></table></figure><p>tip:<br>根据自己实际安装目录，修改这两行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginxd=/usr/local/nginx/sbin/nginx</span><br><span class="line">nginx_config=/usr/local/nginx/conf/nginx.conf</span><br><span class="line">nginx_pid=/var/run/nginx.pid</span><br></pre></td></tr></table></figure><h2 id="3-修改文件权限"><a href="#3-修改文件权限" class="headerlink" title="3. 修改文件权限"></a>3. 修改文件权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /etc/init.d/nginx</span><br></pre></td></tr></table></figure><h2 id="4-设置开机启动"><a href="#4-设置开机启动" class="headerlink" title="4. 设置开机启动"></a>4. 设置开机启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig nginx on</span><br></pre></td></tr></table></figure><h2 id="5-查看开机启动的服务"><a href="#5-查看开机启动的服务" class="headerlink" title="5. 查看开机启动的服务"></a>5. 查看开机启动的服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --list</span><br></pre></td></tr></table></figure><h2 id="6-备注"><a href="#6-备注" class="headerlink" title="6. 备注"></a>6. 备注</h2><p>启动服务：<code>service nginx start</code></p><p>停止服务：<code>service nginx stop</code></p><p>重启服务：<code>service nginx reload</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云数据盘挂载和卸载</title>
      <link href="2019/05/14/%E9%98%BF%E9%87%8C%E4%BA%91%E6%95%B0%E6%8D%AE%E7%9B%98%E6%8C%82%E8%BD%BD%E5%92%8C%E5%8D%B8%E8%BD%BD/"/>
      <url>2019/05/14/%E9%98%BF%E9%87%8C%E4%BA%91%E6%95%B0%E6%8D%AE%E7%9B%98%E6%8C%82%E8%BD%BD%E5%92%8C%E5%8D%B8%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<p>我们在阿里云买了一个数据盘，如果要使用这个数据盘，首先我们得先进行数据盘的挂载。</p><h2 id="数据盘的挂载"><a href="#数据盘的挂载" class="headerlink" title="数据盘的挂载"></a>数据盘的挂载</h2><h3 id="Setp1-检查阿里云服务器数据盘情况"><a href="#Setp1-检查阿里云服务器数据盘情况" class="headerlink" title="Setp1. 检查阿里云服务器数据盘情况"></a>Setp1. 检查阿里云服务器数据盘情况</h3><p>运行<code>fdisk -l</code>命令，检查当前VPS的数据硬盘情况</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@****** ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">Disk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x0008d73a</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vda1   *        2048    83884031    41940992   83  Linux</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 214.7 GB, 214748364800 bytes, 419430400 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br></pre></td></tr></table></figure><p><img src="/2019/05/14/阿里云数据盘挂载和卸载/20190514125447946.jpg" alt="在这里插入图片描述"><br>这里我们可以看到有200GB左右的数据盘没有挂载，这就是我们买的数据盘。</p><h3 id="Step2-进行分区"><a href="#Step2-进行分区" class="headerlink" title="Step2. 进行分区"></a>Step2. 进行分区</h3><p>运行<code>fdisk /dev/vdb</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@****** ~]<span class="comment"># fdisk /dev/vdb </span></span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">Building a new DOS disklabel with disk identifier 0x0fecfcde.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>):</span><br></pre></td></tr></table></figure></p><p>输入 <code>n</code>， 新建一个新分区<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p):</span><br></pre></td></tr></table></figure></p><p>出现两个菜单<code>e</code>表示扩展分区，<code>p</code>表示主分区，然后输入 <code>p</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Select (default p): p</span><br><span class="line">Partition number (1-4, default 1):</span><br></pre></td></tr></table></figure></p><p>输入<code>p</code>键出现提示：”Partition number (1-4): “选择主分区号<br>输入<code>1</code>表示第一个主分区<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Partition number (1-4, default 1): 1</span><br><span class="line">First sector (2048-419430399, default 2048):</span><br></pre></td></tr></table></figure></p><p>直接按回车表示1柱面开始分区<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">First sector (2048-419430399, default 2048): </span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-419430399, default 419430399):</span><br></pre></td></tr></table></figure></p><p>提示最后一个柱面或大小</p><ol><li>直接回车，表示剩余空间分给此主分区</li><li>输入+5620M 按回车，表示此分区为5G空间</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-419430399, default 419430399): </span><br><span class="line">Using default value 419430399</span><br><span class="line">Partition 1 of <span class="built_in">type</span> Linux and of size 200 GiB is <span class="built_in">set</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>):</span><br></pre></td></tr></table></figure><p>输入<code>p</code>查看一下分区，输入<code>w</code>保存退出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure></p><p>完毕之后，我们输入<code>fdisk -l</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@****** ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">Disk /dev/vda: 42.9 GB, 42949672960 bytes, 83886080 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x0008d73a</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vda1   *        2048    83884031    41940992   83  Linux</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 214.7 GB, 214748364800 bytes, 419430400 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x0fecfcde</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vdb1            2048   419430399   209714176   83  Linux</span><br></pre></td></tr></table></figure><p>正常是可以看到200GB已经完成分区为<code>/dev/vdb1</code></p><h3 id="Step3-格式化分区及挂载目录"><a href="#Step3-格式化分区及挂载目录" class="headerlink" title="Step3.  格式化分区及挂载目录"></a>Step3.  格式化分区及挂载目录</h3><p><strong>格式化挂载数据硬盘分区</strong><br>输入<code>mkfs.ext3 /dev/vdb1</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@****** ~]<span class="comment"># mkfs.ext3 /dev/vdb1</span></span><br><span class="line">mke2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Filesystem label=</span><br><span class="line">OS <span class="built_in">type</span>: Linux</span><br><span class="line">Block size=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">Fragment size=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">Stride=0 blocks, Stripe width=0 blocks</span><br><span class="line">13107200 inodes, 52428544 blocks</span><br><span class="line">2621427 blocks (5.00%) reserved <span class="keyword">for</span> the super user</span><br><span class="line">First data block=0</span><br><span class="line">Maximum filesystem blocks=4294967296</span><br><span class="line">1600 block groups</span><br><span class="line">32768 blocks per group, 32768 fragments per group</span><br><span class="line">8192 inodes per group</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, </span><br><span class="line">4096000, 7962624, 11239424, 20480000, 23887872</span><br><span class="line"></span><br><span class="line">Allocating group tables: <span class="keyword">done</span>                            </span><br><span class="line">Writing inode tables: <span class="keyword">done</span>                            </span><br><span class="line">Creating journal (32768 blocks): <span class="keyword">done</span></span><br><span class="line">Writing superblocks and filesystem accounting information: <span class="keyword">done</span></span><br></pre></td></tr></table></figure></p><p><strong>创建目录挂载</strong><br>我们要挂载<code>/data</code>目录下，原始目录没有此文件夹，我们先创建<code>mkdir /data</code></p><p>挂载/dev/vdb1<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/vdb1 /data</span><br></pre></td></tr></table></figure></p><p><strong>查看分区</strong><br>输入<code>df -h</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@******* ~]<span class="comment"># df -h</span></span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/vda1        40G  1.5G   36G   4% /</span><br><span class="line">devtmpfs        7.8G     0  7.8G   0% /dev</span><br><span class="line">tmpfs           7.8G     0  7.8G   0% /dev/shm</span><br><span class="line">tmpfs           7.8G  340K  7.8G   1% /run</span><br><span class="line">tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup</span><br><span class="line">tmpfs           1.6G     0  1.6G   0% /run/user/0</span><br><span class="line">/dev/vdb1       197G   60M  187G   1% /data</span><br></pre></td></tr></table></figure></p><p>我们可以看到/dev/vdb1挂载到/data目录下了</p><p>但是仅仅这样还不够，当重启这个节点之后，新分配的空间又没有挂载上去。所以，需要设置下，让其每次开机自动挂载。<br>执行命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'/dev/vdb1  /data ext3    defaults    0  0'</span> &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure></p><p>此刻，挂载完成。</p><h2 id="数据盘的卸载"><a href="#数据盘的卸载" class="headerlink" title="数据盘的卸载"></a>数据盘的卸载</h2><p>输入 <code>umount /dev/vdb1</code><br>如果提示设备忙，无法挂载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fuser -km /dev/vdb1</span><br><span class="line">umount /dev/vdb1</span><br></pre></td></tr></table></figure></p><p>再删除<code>/etc/fstab</code>文件中，如下的数据<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/vdb1  /data ext3    defaults    0  0</span><br></pre></td></tr></table></figure></p><p>此刻，卸载完成。</p><p>附上分区工具<code>fdisk</code>用法介绍<br>   fdisk命令参数介绍<br>   p、打印分区表。<br>   n、新建一个新分区。<br>   d、删除一个分区。<br>   q、退出不保存。<br>   w、把分区写进分区表，保存并退出。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP5.1 助手函数input()用法</title>
      <link href="2019/04/24/ThinkPHP5-1-%E5%8A%A9%E6%89%8B%E5%87%BD%E6%95%B0input-%E7%94%A8%E6%B3%95/"/>
      <url>2019/04/24/ThinkPHP5-1-%E5%8A%A9%E6%89%8B%E5%87%BD%E6%95%B0input-%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><strong>1.判断变量是否定义</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">input(&apos;?get.id&apos;);</span><br><span class="line">input(&apos;?post.name&apos;);</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>变量类型方法包括：</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>param</code></td><td>获取当前请求的变量</td></tr><tr><td><code>get</code></td><td>获取 <code>$_GET</code> 变量</td></tr><tr><td><code>post</code></td><td>获取 <code>$_POST</code> 变量</td></tr><tr><td><code>put</code></td><td>获取 <code>$_PUT</code> 变量</td></tr><tr><td><code>delete</code></td><td>获取 <code>$_DELETE</code> 变量</td></tr><tr><td><code>session</code></td><td>获取 <code>$_SESSION</code> 变量</td></tr><tr><td><code>cookie</code></td><td>获取 <code>$_COOKIE</code> 变量</td></tr><tr><td><code>request</code></td><td>获取 <code>$_REQUEST</code> 变量</td></tr><tr><td><code>server</code></td><td>获取 <code>$_SERVER</code> 变量</td></tr><tr><td><code>env</code></td><td>获取 <code>$_ENV</code> 变量</td></tr><tr><td><code>route</code></td><td>获取 路由（包括PATHINFO） 变量</td></tr><tr><td><code>file</code></td><td>获取 <code>$_FILE</code> 变量</td></tr></tbody></table><p><strong>2.获取PARAM参数</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">input(&apos;param.name&apos;); // 获取单个参数</span><br><span class="line">input(&apos;param.&apos;); // 获取全部参数</span><br><span class="line">// 下面是等效的</span><br><span class="line">input(&apos;name&apos;); </span><br><span class="line">input(&apos;&apos;);</span><br></pre></td></tr></table></figure></p><p><strong>3.获取GET参数</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 获取单个变量</span><br><span class="line">input(&apos;get.id&apos;);</span><br><span class="line">// 使用过滤方法获取 默认为空字符串</span><br><span class="line">input(&apos;get.name&apos;);</span><br><span class="line">// 获取全部变量</span><br><span class="line">input(&apos;get.&apos;);</span><br></pre></td></tr></table></figure></p><p><strong>4.使用过滤方法</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">input(&apos;get.name&apos;,&apos;&apos;,&apos;htmlspecialchars&apos;); // 获取get变量 并用htmlspecialchars函数过滤</span><br><span class="line">input(&apos;username&apos;,&apos;&apos;,&apos;strip_tags&apos;); // 获取param变量 并用strip_tags函数过滤</span><br><span class="line">input(&apos;post.name&apos;,&apos;&apos;,&apos;org\Filter::safeHtml&apos;); // 获取post变量 并用org\Filter类的safeHtml方法过滤</span><br></pre></td></tr></table></figure></p><p><strong>5.使用变量修饰符</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">input(&apos;get.id/d&apos;);</span><br><span class="line">input(&apos;post.name/s&apos;);</span><br><span class="line">input(&apos;post.ids/a&apos;);</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>修饰符</th><th>作用</th></tr></thead><tbody><tr><td><code>s</code></td><td>强制转换为字符串类型</td></tr><tr><td><code>d</code></td><td>强制转换为整形类型</td></tr><tr><td><code>b</code></td><td>强制转换为布尔类型</td></tr><tr><td><code>a</code></td><td>强制转换为数组类型</td></tr><tr><td><code>f</code></td><td>强制转换为浮点类型</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkPHP5.1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP5.1 开启自动写入时间戳</title>
      <link href="2019/04/23/ThinkPHP5-1-%E5%BC%80%E5%90%AF%E8%87%AA%E5%8A%A8%E5%86%99%E5%85%A5%E6%97%B6%E9%97%B4%E6%88%B3/"/>
      <url>2019/04/23/ThinkPHP5-1-%E5%BC%80%E5%90%AF%E8%87%AA%E5%8A%A8%E5%86%99%E5%85%A5%E6%97%B6%E9%97%B4%E6%88%B3/</url>
      
        <content type="html"><![CDATA[<p>全局配置开启/关闭自动写入时间戳<br>文件：<code>./config/database.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自动写入时间戳字段</span></span><br><span class="line"> <span class="string">'auto_timestamp'</span>  =&gt; <span class="keyword">false</span>,<span class="comment">// true 开启；false 关闭</span></span><br></pre></td></tr></table></figure><p>模型（model）中配置开启/关闭自动写入时间戳<br>文件：<code>././model/test.php</code></p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自动写入时间戳字段</span></span><br><span class="line"><span class="keyword">protected</span> $autoWriteTimestamp = <span class="keyword">true</span>;<span class="comment">// true 开启；false 关闭</span></span><br><span class="line"><span class="comment">// 创建时间字段自定义</span></span><br><span class="line"><span class="keyword">protected</span> $createTime = <span class="string">'created_time'</span>;<span class="comment">// 默认create_time</span></span><br><span class="line"><span class="comment">// 更新时间字段自定义</span></span><br><span class="line"><span class="keyword">protected</span> $updateTime = <span class="string">'modified_time'</span>;<span class="comment">// 默认update_time</span></span><br></pre></td></tr></table></figure><p>注意：</p><p><code>insert()</code>方法不支持自动写入创建时间和更新时间<br><code>save()</code>方法支持自动写入创建时间和更新时间<br><code>update()</code>方法不支持自动写入创建时间但支持自动写入更新时间</p><table><thead><tr><th>方法</th><th>自动写入创建时间</th><th>自动写入更新时间</th></tr></thead><tbody><tr><td><code>insert()</code></td><td>不支持</td><td>不支持</td></tr><tr><td><code>save()</code></td><td>支持</td><td>支持</td></tr><tr><td><code>update()</code></td><td>不支持</td><td>支持</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> ThinkPHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ThinkPHP5.1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git pull error: Your local changes to the following files would be overwritten by merge:</title>
      <link href="2019/04/19/git-pull-error-Your-local-changes-to-the-following-files-would-be-overwritten-by-merge/"/>
      <url>2019/04/19/git-pull-error-Your-local-changes-to-the-following-files-would-be-overwritten-by-merge/</url>
      
        <content type="html"><![CDATA[<p>一个项目，用家里和公司两台电脑开发，比如在公司修改了如下文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">├── a.php // 未修改</span><br><span class="line">├── b.php // 修改</span><br><span class="line">├── c.php // 新建</span><br></pre></td></tr></table></figure><a id="more"></a><p>忘记提交了，然后在家修改如下文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">├── a.php // 未修改</span><br><span class="line">├── b.php // 修改</span><br><span class="line">├── c.php // 新建</span><br></pre></td></tr></table></figure></p><p>并提交了。第二天来到公司<code>git pull</code>时候报错：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">error: Your <span class="built_in">local</span> changes to the following files would be overwritten by merge:</span><br><span class="line">b.php</span><br><span class="line">Please commit your changes or stash them before you merge.</span><br><span class="line">error: The following untracked working tree files would be overwritten by merge:</span><br><span class="line">c.php</span><br><span class="line">Please move or remove them before you merge.</span><br><span class="line">Aborting</span><br></pre></td></tr></table></figure></p><p><strong>解决方案1：如果你想保留公司本地修改的代码，并把git服务器上的代码pull到本地（公司本地昨天修改的代码将会被暂时封存起来）</strong></p><p>1.1代码贮藏<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure></p><p>1.2拉取版本库代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure></p><p>此时还是会报错：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">error: The following untracked working tree files would be overwritten by merge:</span><br><span class="line">        c.php</span><br><span class="line">Please move or remove them before you merge.</span><br><span class="line">Aborting</span><br></pre></td></tr></table></figure></p><p>因为文件c.php是新建文件，提示要把文件c.php先移走或删除，那么我们再把c.php移走，然后在拉取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Updating 9cccba7..ebfcf6d</span><br><span class="line">Fast-forward</span><br><span class="line"> b.php         |   2 +-</span><br><span class="line"> 10 files changed, 467 insertions(+), 13 deletions(-)</span><br><span class="line"> create mode 100644 c.php</span><br></pre></td></tr></table></figure><p>1.3取出贮藏，并把刚刚移走的文件移动回来<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure></p><p>然后可以使用<code>git diff -w +文件名</code> 来确认代码自动合并的情况.</p><p><strong>解决方案2：如果你想完全地覆盖本地的代码，只保留服务器端代码，则直接回退到上一个版本，再进行pull</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>其中git reset是针对版本,如果想针对文件回退本地修改,使用</p><p><code>git checkout HEAD [file]</code></p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axure8注册码，亲测可用</title>
      <link href="2019/04/16/Axure8%E6%B3%A8%E5%86%8C%E7%A0%81%EF%BC%8C%E4%BA%B2%E6%B5%8B%E5%8F%AF%E7%94%A8/"/>
      <url>2019/04/16/Axure8%E6%B3%A8%E5%86%8C%E7%A0%81%EF%BC%8C%E4%BA%B2%E6%B5%8B%E5%8F%AF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>转自 <a href="https://blog.csdn.net/a13103861409/article/details/89011082" target="_blank" rel="noopener">https://blog.csdn.net/a13103861409/article/details/89011082</a></p><p>用户名：<code>axureuser</code><br>序列号：<code>8wFfIX7a8hHq6yAy6T8zCz5R0NBKeVxo9IKu+kgKh79FL6IyPD6lK7G6+tqEV4LG</code></p><p>Licensee：<code>zdfans.com</code><br>Key：<code>gP5uuK2gH+iIVO3YFZwoKyxAdHpXRGNnZWN8Obntqv7++FF3pAz7dTu8B61ySxli</code></p><p>Licensee：<code>zdfans</code><br>Key：<code>fZw2VoYzXakllUuLVdTH13QYWnjD6NZrxgubQkaRyxD5+HNMqdr+WZKkaa6IoE5N</code></p><a id="more"></a><p>Licensee：<code>zd423</code><br>Key：<code>LrZoHQetrL7OK8XOVWgvTFn+XOR32hQkrxkYj0CkbDUsvvENp6GCS38B8GiOS1ec</code></p><p>Licensee：<code>Koshy</code><br>Key：<code>wTADPqxn3KChzJxLmUr5jTTitCgsfRkftQQ1yIG9HmK83MYSm7GPxLREGn+Ii6xY</code></p><p>Licensee：<code>University of Science and Technology of China (CLASSROOM)</code><br>Key：<code>DTXRAnPn1P65Rt0xB4eTQ+4bF5IUF0gu0X9XBEUhM4QxY0DRFJxYEmgh4nyh7RtL</code></p><p>Licensee:<code>IloveyouAxure</code></p><p>Key:<code>UChpuxwbDW6eAIaAf9UujEFSBwN3vpEz9snHvlCQVJGQy4p7WrCyKLLvV5QLvqva</code></p><p>Licensee:<code>米 业成 (STUDENT)</code><br>Key:<code>nFmqBBvEqdvbiUjy8NZiyWiRSg3yO+PtZ8c9wdwxWse4WprphvSu9sohAdpNnJK5</code></p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Axure8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 的 case when then 用法 和 null &#39;&#39; 的判断</title>
      <link href="2019/04/16/MySQL-%E7%9A%84-case-when-then-%E7%94%A8%E6%B3%95-%E5%92%8C-null-%E7%9A%84%E5%88%A4%E6%96%AD/"/>
      <url>2019/04/16/MySQL-%E7%9A%84-case-when-then-%E7%94%A8%E6%B3%95-%E5%92%8C-null-%E7%9A%84%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<p>表 <code>table_a</code> 有两个字段 <code>id</code> 和 <code>name</code> ，第1条记录的 <code>name</code> 为空串  <code>&#39;&#39;</code>， 第2条记录的<code>name</code> 为空  (<code>null</code>)  ，第3条记录的 <code>name</code> 为小明</p><p>现在要查询记录，并把没有值的<code>name</code>设置值为<code>未知</code></p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT (CASE name WHEN <span class="string">''</span> THEN <span class="string">'未知'</span> WHEN null THEN <span class="string">'未知'</span> ELSE name END) as name FROM table_a</span><br><span class="line">```bash</span><br><span class="line">结果为：</span><br></pre></td></tr></table></figure><p>未知<br>未知<br>小明<br><code>`</code></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 主题开发指南</title>
      <link href="2019/04/15/hexo-theme-guide/"/>
      <url>2019/04/15/hexo-theme-guide/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文记录开发一个Hexo主题的流程，尽量用简洁、通俗易懂的文字内容呈现给大家。</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>制作 Hexo 主题，除了需要了解 HTML / CSS / JavaScript 之外，还需要了解两个主要的技术。首先一个是模板引擎：Hexo支持主流的模板引擎，像 EJS / Jade / Swig 等；另外一个是 CSS 预处理：如 SASS / LESS / Stylus ；当然，这两个不用，直接使用 HTML / CSS 也是可以的，只不过可能效率会低一点。在本文中，选择使用如下两个：</p><ul><li>Stylus : <a href="http://stylus-lang.com/" target="_blank" rel="noopener">语法文档</a></li><li>Pug : <a href="http://jade-lang.com/tutorial/" target="_blank" rel="noopener">语法文档</a></li></ul><a id="more"></a><h2 id="搭建Hexo主题开发环境"><a href="#搭建Hexo主题开发环境" class="headerlink" title="搭建Hexo主题开发环境"></a>搭建Hexo主题开发环境</h2><p>首先需要搭建一个Hexo的博客环境。去<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>的官网，按提示安装<code>hexo-cli</code>，然后在本地创建一个Hexo博客的目录。它会预先置入一个默认主题<code>landspace</code>以及一篇默认的<code>hello world</code>文章。当然我们不是在<code>landspace</code>上修改，我们需要自己撰写。</p><p>主题在写的时候我们需要实时看到效果，而不是写完重新构建一遍才能看到效果，所以需要借助<code>hexo-server</code>和<code>hexo-browsersync</code>的帮助。</p><p>另外我们的主题需要<code>pug</code>和<code>stylus</code>的渲染引擎。</p><ul><li>hexo-server : 能够开启一个小型服务器，自动构建来展示hexo博客的页面。</li><li>hexo-browsersync : 能够在你修改了主题文件的时候自动帮你刷新浏览器，帮你省去刷新的动作。</li></ul><p>安装 <code>hexo-server</code>、<code>hexo-browsersync</code>、<code>pug</code>和<code>stylus</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-server hexo-browsersync hexo-renderer-jade hexo-renderer-stylus --save-dev</span><br></pre></td></tr></table></figure><blockquote><p>注意，新版的<code>hexo-renderer-jade</code>已经包括了处理<code>pug</code>的渲染引擎。</p></blockquote><h3 id="问题及解决"><a href="#问题及解决" class="headerlink" title="问题及解决"></a>问题及解决</h3><ol><li>安装了<code>hexo-browsersync</code>之后也不能实现修改<code>pug</code>文件之后刷新出修改后的结果。只能实现自动刷新，但是刷新了之后还是修改前的页面。在你的<code>node_modules</code>文件夹里找到<code>hexo-renderer-jade</code>的文件夹，然后将里面<code>lib/pug.js</code>（<code>jade</code>同理）的其中一行代码注释掉：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pugRender.compile = pugCompile</span></span><br></pre></td></tr></table></figure><p>使其能够达到预期的刷新并修改的效果.</p><h2 id="主题的基本结构"><a href="#主题的基本结构" class="headerlink" title="主题的基本结构"></a>主题的基本结构</h2><p>Hexo主题主要由以下几个页面组成：</p><ul><li><code>index</code> 首页</li><li><code>archive</code> 存档页</li><li><code>tag</code> 标签文章列表页</li><li><code>category</code> 分类文章列表页</li><li><code>post</code> 文章详情页</li><li><code>page</code> 页面详情页</li></ul><p>这些页面是Hexo在生成HTML文件时要用到的，全部放在<code>layout</code>文件夹中。由于这些页面里有很多代码是重复的（比如HTML文件的head部分、页面的顶部导航、底部版权部分等），为了修改方便，结构简洁，一般会将可重复的部分提出来，再利用模版引擎来引入。<br>此外，还有些JS/CSS/图片/favicon.ico一类的文件，不需要Hexo进行转换，直接就在HTML页面引用了，所以全部放在主题的<code>source</code>文件夹中。</p><h2 id="使用-yeoman-生成基础代码"><a href="#使用-yeoman-生成基础代码" class="headerlink" title="使用 yeoman 生成基础代码"></a>使用 yeoman 生成基础代码</h2><p>如果我们创建了一个主题文件夹后，一个一个的创建主题文件是不是很麻烦呢？现在有<code>yeoman</code>库，我们称之为“主题脚手架”，可以很方便的创建主题所需要的基本结构。</p><h3 id="1-安装-yeoman"><a href="#1-安装-yeoman" class="headerlink" title="1.安装 yeoman"></a>1.安装 yeoman</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install yo -g <span class="comment"># 全局安装</span></span><br></pre></td></tr></table></figure><h3 id="2-安装生成器的库"><a href="#2-安装生成器的库" class="headerlink" title="2.安装生成器的库"></a>2.安装生成器的库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install generator-hexo-theme -g <span class="comment"># 全局安装</span></span><br></pre></td></tr></table></figure><p>现在我们就拥有了一个可以生成主题目录结构的脚手架工具。</p><h3 id="3-创建主题目录"><a href="#3-创建主题目录" class="headerlink" title="3.创建主题目录"></a>3.创建主题目录</h3><p>然后到自己的博客目录之下，进入到 <code>themes</code> 目录，创建一个用主题名命名的新文件夹，比如<code>test</code>，进入新文件夹，先设置一下目录的权限，否则 yeoman 会提示权限不足：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 675 ./</span><br></pre></td></tr></table></figure><h3 id="4-生成主题基本结构"><a href="#4-生成主题基本结构" class="headerlink" title="4.生成主题基本结构"></a>4.生成主题基本结构</h3><p>执行如下命令，开始生成代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yo hexo-theme</span><br></pre></td></tr></table></figure><p>然后选择一些基本的配置，比如使用什么模板引擎，使用什么 CSS 预编译等，这里分别选择 pug 和 Stylus。完成之后，主题目录下就会生成一些如下结构的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml <span class="comment"># 主题配置文件</span></span><br><span class="line">├── layout <span class="comment"># 布局文件夹</span></span><br><span class="line">│   ├── archive.pug <span class="comment"># 归档页</span></span><br><span class="line">│   ├── category.pug <span class="comment"># 分类页</span></span><br><span class="line">│   ├── includes <span class="comment"># 复用的公共页</span></span><br><span class="line">│   │   ├── layout.pug <span class="comment"># 页面布局</span></span><br><span class="line">│   │   ├── pagination.pug <span class="comment"># 翻页模板</span></span><br><span class="line">│   │   └── recent-posts.pug <span class="comment"># 文章列表模板</span></span><br><span class="line">│   ├── index.pug <span class="comment"># 主页</span></span><br><span class="line">│   ├── page.pug <span class="comment"># 页面详情页</span></span><br><span class="line">│   ├── post.pug <span class="comment"># 文章详情页</span></span><br><span class="line">│   └── tag.pug <span class="comment"># 标签页</span></span><br><span class="line">└── <span class="built_in">source</span> <span class="comment"># 资源文件夹</span></span><br><span class="line">    ├── css <span class="comment"># CSS</span></span><br><span class="line">    │   └── test.styl</span><br><span class="line">    ├── favicon.ico <span class="comment"># 站点图标</span></span><br><span class="line">    └── js <span class="comment"># JS</span></span><br><span class="line">        └── test.js</span><br></pre></td></tr></table></figure><h3 id="使用新主题"><a href="#使用新主题" class="headerlink" title="使用新主题"></a>使用新主题</h3><p>在 Hexo 的主配置文件中使用新主题，到博客根目录下找到 <code>_config.yml</code> 文件，找到<code>theme</code>行，修改如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">test</span></span><br></pre></td></tr></table></figure><p> <code>hexo s</code> 启动博客，到浏览器看看效果吧。</p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql 1055 错误 SELECT list is not in GROUP BY clause and contains nonaggregated column</title>
      <link href="2019/04/04/Mysql-1055-%E9%94%99%E8%AF%AF-SELECT-list-is-not-in-GROUP-BY-clause-and-contains-nonaggregated-column/"/>
      <url>2019/04/04/Mysql-1055-%E9%94%99%E8%AF%AF-SELECT-list-is-not-in-GROUP-BY-clause-and-contains-nonaggregated-column/</url>
      
        <content type="html"><![CDATA[<p>使用 <code>GROUP BY</code> 语句出现错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[SQL]SELECT</span><br><span class="line">id,sq_resident_id</span><br><span class="line">FROM</span><br><span class="line">sq_resident_family_info</span><br><span class="line">GROUP BY sq_resident_id</span><br><span class="line"></span><br><span class="line">[Err] 1055 - Expression <span class="comment">#1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'xyzj_sql_0320.sq_resident_family_info.id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>可以看到我的SQL语句是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">id,sq_resident_id</span><br><span class="line">FROM</span><br><span class="line">sq_resident_family_info</span><br><span class="line">GROUP BY sq_resident_id</span><br></pre></td></tr></table></figure><p>查询资料得知，执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@global.sql_mode;</span><br></pre></td></tr></table></figure><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT @@sql_mode</span><br></pre></td></tr></table></figure></p><p>结果为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><p>含有 <code>ONLY_FULL_GROUP_BY</code>，说明设置了此模式。mysql5.7.5后，ONLY_FULL_GROUP_BY 默认为真，那么此时select中的字段必须出现在group by中。</p><p>那么在我的SQL语句中<code>select</code>了<code>id</code>和<code>sq_resident_id</code>，那么这两个字段都得在<code>GROUP_BY</code>中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">id,sq_resident_id</span><br><span class="line">FROM</span><br><span class="line">sq_resident_family_info</span><br><span class="line">GROUP BY sq_resident_id, id</span><br></pre></td></tr></table></figure><p>这样执行就不会报错了，但是我不需要分组<code>id</code>字段，去掉即可，然后我要统计<code>sq_resident_id</code>字段的重复值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">count(id), sq_resident_id</span><br><span class="line">FROM</span><br><span class="line">sq_resident_family_info</span><br><span class="line">GROUP BY</span><br><span class="line">sq_resident_id</span><br></pre></td></tr></table></figure><p>总结，如果 <code>sql_mode</code> 设置了 <code>ONLY_FULL_GROUP_BY</code> ，那么<code>select</code>字段要出现在<code>GROUP_BY</code>中</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>复制查询<code>sql_mode</code>的结果，去掉<code>ONLY_FULL_GROUP_BY,</code>，然后执行sql命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> sql_mode=<span class="string">'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">SESSION</span> sql_mode=<span class="string">'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'</span>;</span><br></pre></td></tr></table></figure><p><strong>注意：该方法仅用于临时修改，重启mysql后，以上设置失效。</strong></p><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>启动mysql时，增加sql_model选项，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --sql_mode=&quot;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot; [...其它选项]</span><br></pre></td></tr></table></figure><h3 id="方法3"><a href="#方法3" class="headerlink" title="方法3"></a>方法3</h3><p>Linux服务下，修改my.conf (Windows下修改my.ini),在<code>[mysqld]</code>节点下，最末尾添加<code>sql_mode</code>配置，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line">[其它节点配置]</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>建议使用第三种方法</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL错误 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql根据身份证号计算用户年龄并统计年龄段人数</title>
      <link href="2019/04/02/Mysql%E6%A0%B9%E6%8D%AE%E8%BA%AB%E4%BB%BD%E8%AF%81%E5%8F%B7%E8%AE%A1%E7%AE%97%E7%94%A8%E6%88%B7%E5%B9%B4%E9%BE%84%E5%B9%B6%E7%BB%9F%E8%AE%A1%E5%B9%B4%E9%BE%84%E6%AE%B5%E4%BA%BA%E6%95%B0/"/>
      <url>2019/04/02/Mysql%E6%A0%B9%E6%8D%AE%E8%BA%AB%E4%BB%BD%E8%AF%81%E5%8F%B7%E8%AE%A1%E7%AE%97%E7%94%A8%E6%88%B7%E5%B9%B4%E9%BE%84%E5%B9%B6%E7%BB%9F%E8%AE%A1%E5%B9%B4%E9%BE%84%E6%AE%B5%E4%BA%BA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>根据身份证号计算用户年龄SQL语句：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DATE_FORMAT(NOW(), <span class="string">'%Y'</span>) - SUBSTRING(<span class="string">'370687199005050000'</span>,7,4) AS age FROM table_name</span><br></pre></td></tr></table></figure></p><p>统计年龄段人数SQL语句：</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">(</span><br><span class="line">CASE</span><br><span class="line">WHEN age &lt; 50 THEN</span><br><span class="line"><span class="string">'50岁以下'</span></span><br><span class="line">WHEN age &lt; 60 THEN</span><br><span class="line"><span class="string">'50-59岁'</span></span><br><span class="line">WHEN age &lt; 70 THEN</span><br><span class="line"><span class="string">'60-69岁'</span></span><br><span class="line">WHEN age &lt; 80 THEN</span><br><span class="line"><span class="string">'70-79岁'</span></span><br><span class="line">ELSE</span><br><span class="line"><span class="string">'80岁以上'</span></span><br><span class="line">END</span><br><span class="line">) AS age_range,</span><br><span class="line">COUNT(age) AS count</span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">(</span><br><span class="line">DATE_FORMAT(NOW(), <span class="string">'%Y'</span>) - SUBSTRING(sq_party_card_id, 7, 4)</span><br><span class="line">) AS age</span><br><span class="line">FROM</span><br><span class="line">table_name</span><br><span class="line">) AS a</span><br><span class="line">GROUP BY</span><br><span class="line">age_range</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下使用svn创建仓库</title>
      <link href="2019/04/01/Linux%E4%B8%8B%E4%BD%BF%E7%94%A8svn%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93/"/>
      <url>2019/04/01/Linux%E4%B8%8B%E4%BD%BF%E7%94%A8svn%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>假设已经Linux搭建了svn服务器</p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>语法：<code>svnadmin create /directory</code><br>我是在 <code>/data/svnrepos</code>下新建myproject仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data</span><br><span class="line">mkdir svnrepos</span><br><span class="line">svnadmin create /data/svnrepos/myproject</span><br></pre></td></tr></table></figure><p>仓库创建成功以后，会出现一个仓库名字的文件夹 文件夹下面有以下几个文件和目录</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">myproject</span><br><span class="line">|-conf</span><br><span class="line">|-db</span><br><span class="line">|-format</span><br><span class="line">|-hooks</span><br><span class="line">|-locks</span><br><span class="line">|-README.txt</span><br></pre></td></tr></table></figure><p>其中conf文件夹下面包含三个重要文件 authz passwd svnserve.conf </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conf</span><br><span class="line">|-authz</span><br><span class="line">|-passwd</span><br><span class="line">|-svnserve.conf</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><h3 id="增加用户"><a href="#增加用户" class="headerlink" title="增加用户"></a>增加用户</h3><p>修改passwd文件<br>passwd的配置语法格式： 用户名=密码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi passwd</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### This file is an example password file for svnserve.</span></span><br><span class="line"><span class="comment">### Its format is similar to that of svnserve.conf. As shown in the</span></span><br><span class="line"><span class="comment">### example below it contains one section labelled [users].</span></span><br><span class="line"><span class="comment">### The name and password for each user follow, one account per line.</span></span><br><span class="line"></span><br><span class="line">[users]</span><br><span class="line"><span class="comment"># harry = harryssecret</span></span><br><span class="line"><span class="comment"># sally = sallyssecret</span></span><br><span class="line">xiaozhang = 123 <span class="comment">#修改处</span></span><br></pre></td></tr></table></figure></p><p>之后可以通过帐号xiaozhang密码123进行操作。</p><h3 id="配置用户权限"><a href="#配置用户权限" class="headerlink" title="配置用户权限"></a>配置用户权限</h3><p>修改authz文件<br>注意：</p><ul><li>权限配置文件中出现的用户名必须已在用户配置文件中定义。</li><li>对权限配置文件的修改立即生效，不必重启svn。</li></ul><p>用户组格式：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[groups]</span><br><span class="line">&lt;用户组名&gt; = &lt;用户1&gt;,&lt;用户2&gt;</span><br></pre></td></tr></table></figure></p><p>其中，1个用户组可以包含1个或多个用户，用户间以逗号分隔。<br>版本库目录格式：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[&lt;版本库&gt;:/项目/目录]</span><br><span class="line">@&lt;用户组名&gt; = &lt;权限&gt;</span><br><span class="line">&lt;用户名&gt; = &lt;权限&gt;</span><br></pre></td></tr></table></figure></p><p>其中，方框号内部分可以有多种写法:<br><code>/</code>表示根目录及以下。根目录是svnserve启动时指定的，我们指定为<code>/data/svnrepos/myproject</code>。这样，<code>/</code>就是表示对全部版本库设置权限。<br><code>repos1:/</code> 表示对版本库1设置权限<br><code>repos2:/a</code> 表示对版本库2中的a项目设置权限<br><code>repos2:/a/b</code> 表示对版本库2中的a项目的b目录设置权限<br>权限主体可以是用户组、用户或<em>，用户组在前面加@，</em>表示全部用户。权限可以是w、r、wr和空，空表示没有任何权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim authz </span></span><br><span class="line"><span class="comment">### This file is an example authorization file for svnserve.</span></span><br><span class="line"><span class="comment">### Its format is identical to that of mod_authz_svn authorization</span></span><br><span class="line"><span class="comment">### files.</span></span><br><span class="line"><span class="comment">### As shown below each section defines authorizations for the path and</span></span><br><span class="line"><span class="comment">### (optional) repository specified by the section name.</span></span><br><span class="line"><span class="comment">### The authorizations follow. An authorization line can refer to:</span></span><br><span class="line"><span class="comment">###  - a single user,</span></span><br><span class="line"><span class="comment">###  - a group of users defined in a special [groups] section,</span></span><br><span class="line"><span class="comment">###  - an alias defined in a special [aliases] section,</span></span><br><span class="line"><span class="comment">###  - all authenticated users, using the '$authenticated' token,</span></span><br><span class="line"><span class="comment">###  - only anonymous users, using the '$anonymous' token,</span></span><br><span class="line"><span class="comment">###  - anyone, using the '*' wildcard.</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment">### A match can be inverted by prefixing the rule with '~'. Rules can</span></span><br><span class="line"><span class="comment">### grant read ('r') access, read-write ('rw') access, or no access</span></span><br><span class="line"><span class="comment">### ('').</span></span><br><span class="line"></span><br><span class="line">[aliases]</span><br><span class="line"><span class="comment"># joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil, Ltd./OU=Research Institute/CN=Joe Average</span></span><br><span class="line"></span><br><span class="line">[groups]</span><br><span class="line"><span class="comment"># harry_and_sally = harry,sally</span></span><br><span class="line"><span class="comment"># harry_sally_and_joe = harry,sally,&amp;joe</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [/foo/bar]</span></span><br><span class="line"><span class="comment"># harry = rw</span></span><br><span class="line"><span class="comment"># &amp;joe = r</span></span><br><span class="line"><span class="comment"># * =</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [repository:/baz/fuz]</span></span><br><span class="line"><span class="comment"># @harry_and_sally = rw</span></span><br><span class="line"><span class="comment"># * = r</span></span><br><span class="line"></span><br><span class="line">[/] <span class="comment">#修改处</span></span><br><span class="line">xiaozhang = rw <span class="comment">#修改处</span></span><br></pre></td></tr></table></figure><p>意思是，在根目录下xiaozhang用户拥有读写权限。</p><h2 id="修改svn启动项参数"><a href="#修改svn启动项参数" class="headerlink" title="修改svn启动项参数"></a>修改svn启动项参数</h2><p>修改svnserve.conf文件<br>svn服务配置文件为版本库目录中的文件conf/svnserve.conf。该文件仅由一个[general]配置段组成</p><p><strong>[general]配置段中配置行格式如下：</strong><br>&lt;配置项&gt; = &lt;值&gt;</p><p><strong>配置项分为以下5项：</strong><br>1.<code>anon-access</code> 控制非鉴权用户访问版本库的权限。取值范围为”write”、”read”和”none”。<br>即”write”为可读可写，”read”为只读，”none”表示无访问权限。<br>缺省值：read</p><p>2.<code>auth-access</code> 控制鉴权用户访问版本库的权限。取值范围为”write”、”read”和”none”。<br>即”write”为可读可写，”read”为只读，”none”表示无访问权限。<br>缺省值：write</p><p>3.<code>password-db</code> 指定用户名口令文件名。除非指定绝对路径，否则文件位置为相对conf<br>目录的相对路径。<br>缺省值：passwd</p><p>4.<code>authz-db</code> 指定权限配置文件名，通过该文件可以实现以路径为基础的访问控制。<br>除非指定绝对路径，否则文件位置为相对conf目录的相对路径。<br>缺省值：authz</p><p>5.<code>realm</code> 指定版本库的认证域，即在登录时提示的认证域名称。若两个版本库的<br>认证域相同，建议使用相同的用户名口令数据文件。<br>缺省值：一个UUID(Universal Unique IDentifier，全局唯一标示)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim svnserve.conf </span></span><br><span class="line"><span class="comment">### This file controls the configuration of the svnserve daemon, if you</span></span><br><span class="line"><span class="comment">### use it to allow access to this repository.  (If you only allow</span></span><br><span class="line"><span class="comment">### access through http: and/or file: URLs, then this file is</span></span><br><span class="line"><span class="comment">### irrelevant.)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Visit http://subversion.tigris.org/ for more information.</span></span><br><span class="line"></span><br><span class="line">[general]</span><br><span class="line"><span class="comment">### These options control access to the repository for unauthenticated</span></span><br><span class="line"><span class="comment">### and authenticated users.  Valid values are "write", "read",</span></span><br><span class="line"><span class="comment">### and "none".  The sample settings below are the defaults.</span></span><br><span class="line">anon-access = none <span class="comment">#修改处</span></span><br><span class="line">auth-access = write <span class="comment">#修改处</span></span><br><span class="line"><span class="comment">### The password-db option controls the location of the password</span></span><br><span class="line"><span class="comment">### database file.  Unless you specify a path starting with a /,</span></span><br><span class="line"><span class="comment">### the file's location is relative to the directory containing</span></span><br><span class="line"><span class="comment">### this configuration file.</span></span><br><span class="line"><span class="comment">### If SASL is enabled (see below), this file will NOT be used.</span></span><br><span class="line"><span class="comment">### Uncomment the line below to use the default password file.</span></span><br><span class="line">password-db = passwd <span class="comment">#修改处</span></span><br><span class="line"><span class="comment">### The authz-db option controls the location of the authorization</span></span><br><span class="line"><span class="comment">### rules for path-based access control.  Unless you specify a path</span></span><br><span class="line"><span class="comment">### starting with a /, the file's location is relative to the the</span></span><br><span class="line"><span class="comment">### directory containing this file.  If you don't specify an</span></span><br><span class="line"><span class="comment">### authz-db, no path-based access control is done.</span></span><br><span class="line"><span class="comment">### Uncomment the line below to use the default authorization file.</span></span><br><span class="line">authz-db = authz <span class="comment">#修改处</span></span><br><span class="line"><span class="comment">### This option specifies the authentication realm of the repository.</span></span><br><span class="line"><span class="comment">### If two repositories have the same authentication realm, they should</span></span><br><span class="line"><span class="comment">### have the same password database, and vice versa.  The default realm</span></span><br><span class="line"><span class="comment">### is repository's uuid.</span></span><br><span class="line"><span class="comment"># realm = My First Repository</span></span><br><span class="line"></span><br><span class="line">[sasl]</span><br><span class="line"><span class="comment">### This option specifies whether you want to use the Cyrus SASL</span></span><br><span class="line"><span class="comment">### library for authentication. Default is false.</span></span><br><span class="line"><span class="comment">### This section will be ignored if svnserve is not built with Cyrus</span></span><br><span class="line"><span class="comment">### SASL support; to check, run 'svnserve --version' and look for a line</span></span><br><span class="line"><span class="comment">### reading 'Cyrus SASL authentication is available.'</span></span><br><span class="line"><span class="comment"># use-sasl = true</span></span><br><span class="line"><span class="comment">### These options specify the desired strength of the security layer</span></span><br><span class="line"><span class="comment">### that you want SASL to provide. 0 means no encryption, 1 means</span></span><br><span class="line"><span class="comment">### integrity-checking only, values larger than 1 are correlated</span></span><br><span class="line"><span class="comment">### to the effective key length for encryption (e.g. 128 means 128-bit</span></span><br><span class="line"><span class="comment">### encryption). The values below are the defaults.</span></span><br><span class="line"><span class="comment"># min-encryption = 0</span></span><br><span class="line"><span class="comment"># max-encryption = 256</span></span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><p>语法：<code>svnserve -d -r svn仓库目录</code><br><code>svnserve -d -r /data/svnrepos/myproject/</code><br>如果启动提示<code>svnserve: Can&#39;t bind server socket: Address already in use</code>，是由于已经启动了svn，你的配置文件应该已经生效了。</p><p>查看svn进程<br><code>ps -ef|grep svn</code></p><h2 id="访问svn服务"><a href="#访问svn服务" class="headerlink" title="访问svn服务"></a>访问svn服务</h2><p>使用svn客户端  输入地址  svn://ip/myproject 就可以访问到这个仓库。</p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SVN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Docker 安装</title>
      <link href="2019/03/30/Windows-Docker-%E5%AE%89%E8%A3%85/"/>
      <url>2019/03/30/Windows-Docker-%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="win7、win8-系统"><a href="#win7、win8-系统" class="headerlink" title="win7、win8 系统"></a>win7、win8 系统</h2><p>win7、win8 等需要利用 docker toolbox 来安装，国内可以使用阿里云的镜像来下载，下载地址：<a href="http://mirrors.aliyun.com/docker-toolbox/windows/docker-toolbox/" target="_blank" rel="noopener">http://mirrors.aliyun.com/docker-toolbox/windows/docker-toolbox/</a></p><p>docker toolbox 是一个工具集，它主要包含以下一些内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Docker CLI 客户端，用来运行docker引擎创建镜像和容器</span><br><span class="line">Docker Machine. 可以让你在windows的命令行中运行docker引擎命令</span><br><span class="line">Docker Compose. 用来运行docker-compose命令</span><br><span class="line">Kitematic. 这是Docker的GUI版本</span><br><span class="line">Docker QuickStart shell. 这是一个已经配置好Docker的命令行环境</span><br><span class="line">Oracle VM Virtualbox. 虚拟机</span><br></pre></td></tr></table></figure><a id="more"></a><p>下载完成之后直接点击安装（安装提示选择项中有Git，我本地已经安装，取消了选择），安装成功后，桌边会出现三个图标，入下图所示：</p><p><img src="/2019/03/30/Windows-Docker-安装/2019033011065449.png" alt="在这里插入图片描述"></p><p>点击 Docker QuickStart 图标来启动 Docker Toolbox 终端（本地提示选择bash.exe，因为安装的时候没有选择Git，右击Docker QuickStart 图标，选择 属性-&gt;快捷方式-&gt;目标 输入框中的bash.exe目录改成本地Git bash.exe目录）。<br>如果系统显示 User Account Control 窗口来运行 VirtualBox 修改你的电脑，选择 Yes（第一次启动可能需要下载boot2docker.iso）。<br><img src="/2019/03/30/Windows-Docker-安装/2019033013484865.jpg" alt="在这里插入图片描述"></p><p><code>$</code> 符号那你可以输入以下命令来执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ docker run hello-world</span><br><span class="line">Unable to find image <span class="string">'hello-world:latest'</span> locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">1b930d010525: Pull complete</span><br><span class="line">Digest: sha256:2557e3c07ed1e38f26e389462d03ed943586f744621577a99efb77324b0fe535</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the <span class="string">"hello-world"</span> image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image <span class="built_in">which</span> runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, <span class="built_in">which</span> sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure><h2 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h2><p>鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，我们可以需要配置加速器来解决，我使用的是网易的镜像地址：<code>http://hub-mirror.c.163.com。</code></p><p>新版的 Docker 使用 <code>/etc/docker/daemon.json（Linux）</code> 或者 <code>%programdata%\docker\config\daemon.json（Windows）</code> 来配置 Daemon。</p><p>请在该配置文件中加入（没有该文件的话，请先建一个）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"http://hub-mirror.c.163.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SVN被锁定 提示：svn is already locked 解决方案</title>
      <link href="2019/03/14/SVN%E8%A2%AB%E9%94%81%E5%AE%9A-%E6%8F%90%E7%A4%BA%EF%BC%9Asvn-is-already-locked-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>2019/03/14/SVN%E8%A2%AB%E9%94%81%E5%AE%9A-%E6%8F%90%E7%A4%BA%EF%BC%9Asvn-is-already-locked-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p>今天使用SVN，在项目根目录下，拉取项目代码的时候提示<code>svn is already locked</code>SVN被锁定错误，<br>解决方法：<br>在项目根目录，右击，选择<code>clean up</code><br><img src="/2019/03/14/SVN被锁定-提示：svn-is-already-locked-解决方案/2019031405455722.png" alt="在这里插入图片描述"></p><a id="more"></a><p>弹出框勾选<code>Break locks</code>点击ok</p><p><img src="/2019/03/14/SVN被锁定-提示：svn-is-already-locked-解决方案/2019031405475817.png" alt="在这里插入图片描述"></p><p>然后再次拉取项目代码，就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SVN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP报错 cURL error 60: SSL certificate problem: unable to get local issuer certific</title>
      <link href="2019/03/12/PHP%E6%8A%A5%E9%94%99-cURL-error-60-SSL-certificate-problem-unable-to-get-local-issuer-certific/"/>
      <url>2019/03/12/PHP%E6%8A%A5%E9%94%99-cURL-error-60-SSL-certificate-problem-unable-to-get-local-issuer-certific/</url>
      
        <content type="html"><![CDATA[<p>报错信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cURL error 60: SSL certificate problem: unable to get local issuer certific   ate (see http://curl.haxx.se/libcurl/c/libcurl-errors.html)</span><br></pre></td></tr></table></figure></p><p>解决方法：</p><a id="more"></a><p>要解决此错误，需要定义CURL证书颁发机构信息路径<br>要做到些,</p><ol><li>在这里下载最新的curl认可证书:<a href="https://curl.haxx.se/ca/cacert.pem" target="_blank" rel="noopener">https://curl.haxx.se/ca/cacert.pem</a></li><li>保存cacert.pem文件在一个可以引入的目录。</li><li>然后，在php.ini文件中，向下滚动到找到[curl]的位置。</li><li>您应该看到CURLOPT_CAINFO选项被注释掉了。取消注释并指向cacert.pem文件。你应该有这样一行:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl.cainfo = “证书目录\cacert.pem”</span><br></pre></td></tr></table></figure><p>保存并关闭php.ini。重新启动web服务器并再次尝试您的请求。<br>如果没有设置正确的位置，将会得到CURL 77错误。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cURL error 77: error setting certificate verify locations:</span><br><span class="line">    CAfile: certificate D:\phpStudy\PHPTutorial\php\php-7.2.1-nts\extras\ssl\</span><br><span class="line">  cacert.pem</span><br><span class="line">    CApath: none (see http://curl.haxx.se/libcurl/c/libcurl-errors.html)</span><br></pre></td></tr></table></figure><p>参考文档：<br><a href="https://github.com/yabacon/paystack-php/wiki/cURL-error-60:-SSL-certificate-problem:-unable-to-get-local-issuer-certificate-(see-http:--curl.haxx.se-libcurl-c-libcurl-errors.html)" target="_blank" rel="noopener">https://github.com/yabacon/paystack-php/wiki/cURL-error-60:-SSL-certificate-problem:-unable-to-get-local-issuer-certificate-(see-http:--curl.haxx.se-libcurl-c-libcurl-errors.html)</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cURL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lnmp1.5 安装 fileinfo 扩展</title>
      <link href="2019/02/25/lnmp1-5-%E5%AE%89%E8%A3%85-fileinfo-%E6%89%A9%E5%B1%95/"/>
      <url>2019/02/25/lnmp1-5-%E5%AE%89%E8%A3%85-fileinfo-%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<p>打开保存安装包目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br></pre></td></tr></table></figure></p><p>下载php5.6安装包（我使用的是php5.6.36，根据自己使用的php版本下载）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://cn.php.net/distributions/php-5.6.36.tar.gz</span><br></pre></td></tr></table></figure></p><p>解压php安装包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xvf php-5.6.36.tar.gz</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>进入扩展目录的fileinfo目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd php-5.6.36/ext/fileinfo</span><br></pre></td></tr></table></figure></p><p>配置安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">phpize</span><br><span class="line">./configure --with-php-config=/usr/local/php/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></p><p>完成后提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Build complete.</span><br><span class="line">Don&apos;t forget to run &apos;make test&apos;.</span><br><span class="line"></span><br><span class="line">Installing shared extensions:     /usr/local/php/lib/php/extensions/no-debug-non-zts-20131226/</span><br></pre></td></tr></table></figure></p><p>fileinfo扩展文件生成目录为<code>/usr/local/php/lib/php/extensions/no-debug-non-zts-20131226/</code></p><p>编辑php配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/php/etc/php.ini</span><br></pre></td></tr></table></figure></p><p>修添加如下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">extension=/usr/local/php/lib/php/extensions/no-debug-non-zts-20131226/fileinfo.so</span><br><span class="line"># 或</span><br><span class="line">extension=fileinfo.so</span><br></pre></td></tr></table></figure></p><p>重启lnmp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lnmp restart</span><br></pre></td></tr></table></figure></p><p><img src="/2019/02/25/lnmp1-5-安装-fileinfo-扩展/2019022512594030.png" alt="在这里插入图片描述"><br>搞定！</p><p>提示：<br>访问<a href="http://php.net/get/php-5.6.36.tar.gz/from/a/mirror可以通过变更版本号查看相应的镜像。" target="_blank" rel="noopener">http://php.net/get/php-5.6.36.tar.gz/from/a/mirror可以通过变更版本号查看相应的镜像。</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Warning: require(): open_basedir restriction in effect.</title>
      <link href="2019/02/25/Warning-require-open-basedir-restriction-in-effect/"/>
      <url>2019/02/25/Warning-require-open-basedir-restriction-in-effect/</url>
      
        <content type="html"><![CDATA[<p>php环境为lnmp一键安装包，php5.6。运行项目代码显示</p><p>Warning: require(): open_basedir restriction in effect. File(/mnt/hgfs/extraproject/yoga/simplewind/等信息</p><p>解决方案</p><a id="more"></a><p>修改<br><code>/usr/local/nginx/conf/fastcgi.conf</code></p><p>将<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;</span><br></pre></td></tr></table></figure></p><p>此行注释，重启nginx即可。</p><p>如果再不生效，则将<code>open_basedir</code>设置为NULL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=NULL&quot;;</span><br></pre></td></tr></table></figure></p><p>重启nginx</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>thinkcmf5 的 nginx 常用配置</title>
      <link href="2019/02/25/thinkcmf5-%E7%9A%84-nginx-%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
      <url>2019/02/25/thinkcmf5-%E7%9A%84-nginx-%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name 域名;</span><br><span class="line">        index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        root  /home/wwwroot/域名/public;</span><br><span class="line">    </span><br><span class="line">    location / &#123;</span><br><span class="line">          index  index.php index.html index.htm;</span><br><span class="line">          <span class="comment">#如果请求既不是一个文件，也不是一个目录，则执行一下重写规则</span></span><br><span class="line">          <span class="keyword">if</span> (!-e <span class="variable">$request_filename</span>)</span><br><span class="line">          &#123;</span><br><span class="line">             <span class="comment">#地址作为将参数rewrite到index.php上。</span></span><br><span class="line">             rewrite ^/(.*)$ /index.php?s=<span class="variable">$1</span>;</span><br><span class="line">             <span class="comment">#若是子目录则使用下面这句，将subdir改成目录名称即可。</span></span><br><span class="line">             <span class="comment">#rewrite ^/subdir/(.*)$ /subdir/index.php?s=$1;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ \.php(.*)$ &#123;</span><br><span class="line">            fastcgi_pass   unix:/tmp/php-cgi.sock;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            <span class="comment">#fastcgi_split_path_info ^(.+\.php)(.*)$;</span></span><br><span class="line">            <span class="comment">#fastcgi_param   PATH_INFO $fastcgi_path_info;</span></span><br><span class="line">            fastcgi_param  SCRIPT_FILENAME   <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /.well-known &#123;</span><br><span class="line">            allow all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /\.</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">#deny all;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        access_log  /home/wwwlogs/access.log2.log;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在Laravel(5.6版本)中创建包(package)</title>
      <link href="2019/02/15/%E5%A6%82%E4%BD%95%E5%9C%A8Laravel-5-6%E7%89%88%E6%9C%AC-%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%8C%85-package/"/>
      <url>2019/02/15/%E5%A6%82%E4%BD%95%E5%9C%A8Laravel-5-6%E7%89%88%E6%9C%AC-%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%8C%85-package/</url>
      
        <content type="html"><![CDATA[<p>良好软件设计的一个标志是代码的模块化和可维护性。在Laravel中，将几段代码分组到一个可以重用的逻辑模块中称为“包(package)”。</p><p>今天，我们来看看如何从头开始<strong>在Laravel 5.6中创建我们自己的包</strong>。别让这件事动摇你。创建一个包并不像看起来那么复杂。这里有几个简单的步骤，您可以使用它们创建自己的包。</p><p>当然，没有创建通用包的诀窍，因此作为一个示例，让我们尝试创建一个“To Do List”包。</p><p>在这个示例的过程中，我们将介绍迁移(migrations)、路由(routes)、视图(views)和对其他包的依赖关系等概念。</p><p>准备好开始了吗?我们开始吧!</p><a id="more"></a><h2 id="Step-1-安装-Laravel-5-6"><a href="#Step-1-安装-Laravel-5-6" class="headerlink" title="Step 1: 安装 Laravel 5.6"></a>Step 1: 安装 Laravel 5.6</h2><p>安装最新的Laravel版本或指定版本。为此，请转到项目目录并运行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project --prefer-dist laravel/laravel .</span><br></pre></td></tr></table></figure></p><p>详细的<a href="https://laravel.com/docs/5.6/installation#installation" title="文档" target="_blank" rel="noopener">Laravel文档</a>还介绍了其他选项。</p><h2 id="Step-2-创建文件夹结构"><a href="#Step-2-创建文件夹结构" class="headerlink" title="Step 2: 创建文件夹结构"></a>Step 2: 创建文件夹结构</h2><p>接下来，我们继续在项目目录中创建一个packages文件夹。命名包的约定如下<code>[创建者或供应商]/[包名]</code>。</p><p>例如，“laravel/framework”包的供应商是“laravel”，包名是“framework”。<br>另一个流行的包是“laravelcollective/html”包，这里的供应商是“laravelcollective”，包名是“html”。</p><p>类似地，让我们将包命名为“wisdmlabs/todolist”。在“packages”文件夹中创建如下文件夹:</p><ul><li>packages<ul><li>wisdmlabs<ul><li>todolist</li></ul></li></ul></li></ul><p>我们需要在package文件夹下创建一个“src”文件夹。</p><ul><li>packages<ul><li>wisdmlabs<ul><li>todolist<ul><li>src</li></ul></li></ul></li></ul></li></ul><h2 id="Step-3-创建-Composer-文件"><a href="#Step-3-创建-Composer-文件" class="headerlink" title="Step 3: 创建 Composer 文件"></a>Step 3: 创建 Composer 文件</h2><p>每个包都应该有一个“composer.json”文件，它将包含所有包及其依赖项。在“todolist”文件夹中运行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer init</span><br></pre></td></tr></table></figure><p>系统将提示您了解有关该包的详细信息。您可以通过按enter键跳过，它将接受默认值。您可以在稍后在“composer.json”文件中更改此信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;: &quot;wisdmlabs/todolist&quot;,</span><br><span class="line">    &quot;description&quot;: &quot;You can create the to-do-list of your task.&quot;,</span><br><span class="line">    &quot;authors&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;John Doe&quot;,</span><br><span class="line">            &quot;email&quot;: &quot;john.doe@wisdmlabs.com&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;minimum-stability&quot;: &quot;dev&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Step-4-从主要-Composer-JSON-文件加载这个包"><a href="#Step-4-从主要-Composer-JSON-文件加载这个包" class="headerlink" title="Step 4: 从主要 Composer.JSON 文件加载这个包"></a>Step 4: 从主要 Composer.JSON 文件加载这个包</h2><p>现在，这个“composer.json”文件用于当前根目录每个Laravel应用。我们需求我们的包对应用程序可见。</p><p>在autoload &gt; psr-4”添加我们的包的命名空间(namespace)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&quot;autoload&quot;: &#123;</span><br><span class="line">        &quot;classmap&quot;: [</span><br><span class="line">...</span><br><span class="line">        ],</span><br><span class="line">        &quot;psr-4&quot;: &#123;</span><br><span class="line">            &quot;App\\&quot;: &quot;app/&quot;,</span><br><span class="line">            &quot;Wisdmlabs\\Todolist\\&quot;: &quot;packages/wisdmlabs/todolist/src/&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><font color="red">这里要注意一下，”Wisdmlabs\Todolist\“中的大小写一定要跟后面使用的保持一致，否则会出现错误！！！</font><h2 id="Step-5-为包创建服务提供者"><a href="#Step-5-为包创建服务提供者" class="headerlink" title="Step 5: 为包创建服务提供者"></a>Step 5: 为包创建服务提供者</h2><p><strong>服务提供者</strong>是我们的包的访问点。该类维护与包相关的所有信息，如视图(views)、迁移(migration)和路由(routes)加载的位置。您可以在<a href="https://laravel.com/docs/5.6/packages#service-providers" title="官方的Laravel文档" target="_blank" rel="noopener">官方的Laravel文档</a>中了解更多关于服务提供商的信息。</p><p>让我们使用artisan命令创建一个服务提供者。运行以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:provider TodolistServiceProvider</span><br></pre></td></tr></table></figure><p>它将生成一个文件“TodolistServiceProvider.php”。可以在“app/Providers”目录下找到。现在把文件移到我们的包中，即在packages/wisdmlabs/todolist/scr文件夹中。不要忘记将文件的名称空间更改为“wisdmlabs\todolist”。</p><ul><li>packages<ul><li>wisdmlabs<ul><li>todolist<ul><li>src<ul><li>TodolistServiceProvider.php</li></ul></li></ul></li></ul></li></ul></li></ul><p>在该文件中，您将注意到两个函数boot()和register()。boot()函数用于初始化某些路由或添加事件侦听器。register()函数用于将我们的包绑定到app容器内的类。</p><p>但是在引导或注册包之前，我们需要在文件“config/app.php”中向服务提供者提供服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&apos;providers&apos; =&gt; [</span><br><span class="line">        /*</span><br><span class="line">         * Application Service Providers...</span><br><span class="line">         */</span><br><span class="line">         ...</span><br><span class="line">        App\Providers\RouteServiceProvider::class,</span><br><span class="line">        Wisdmlabs\Todolist\TodolistServiceProvider::class,</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure><h2 id="Step-6-创建迁移-Migration"><a href="#Step-6-创建迁移-Migration" class="headerlink" title="Step 6: 创建迁移(Migration)"></a>Step 6: 创建迁移(Migration)</h2><p>接下来，我们首先需要使用以下artisan命令创建迁移(migration):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:migration create_task_table --create=tasks</span><br></pre></td></tr></table></figure><p>是不是提示了 <code>Class &#39;Wisdmlabs\Todolist\TodolistServiceProvider&#39; not found</code> 这个错误？哈哈，要先执行性如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer dump-autoload</span><br></pre></td></tr></table></figure><p>在执行创建迁移命令，是不是成功了。</p><p>迁移被创建在这个位置<code>database/migrations/*_create_task_table.php</code>。我们将把这个迁移文件移到我们的包中<code>packages/wisdmlabs/todolist/src/migrations/*_create_task_table.php</code>。</p><p>现在，我们可以修改这个迁移文件，为我们的表添加列。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">use Illuminate\Support\Facades\Schema;</span><br><span class="line">use Illuminate\Database\Schema\Blueprint;</span><br><span class="line">use Illuminate\Database\Migrations\Migration;</span><br><span class="line"></span><br><span class="line">class CreateTaskTable extends Migration</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Run the migrations.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function up()</span><br><span class="line">    &#123;</span><br><span class="line">        Schema::create(&apos;tasks&apos;, function (Blueprint $table) &#123;</span><br><span class="line">            $table-&gt;increments(&apos;id&apos;);</span><br><span class="line">            $table-&gt;string(&apos;name&apos;);</span><br><span class="line">            $table-&gt;timestamps();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Reverse the migrations.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function down()</span><br><span class="line">    &#123;</span><br><span class="line">        Schema::dropIfExists(&apos;tasks&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Step-7-为表-Table-创建模型-Model"><a href="#Step-7-为表-Table-创建模型-Model" class="headerlink" title="Step 7: 为表(Table)创建模型(Model)"></a>Step 7: 为表(Table)创建模型(Model)</h2><p>完成上述操作后，我们将为表创建一个 eloquent 模型，以便使用 eloquent 的方法轻松地创建(create)、更新(update)和删除(delete)表中的数据。</p><p>运行以下artisan命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:model Task</span><br></pre></td></tr></table></figure><p>现在，移动“Task.php”文件从 app/Task.php 到我们的包文件夹 packages/wisdmlabs/todolist/src/Task.php。同样，不要忘记将文件的名称空间更改为“wisdmlabs\todolist”。</p><p>现在将必要的信息添加到模型(Task.php)中，如下所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace wisdmlabs\todolist;</span><br><span class="line"></span><br><span class="line">use Illuminate\Database\Eloquent\Model;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Model of the table tasks.</span><br><span class="line"> */</span><br><span class="line">class Task extends Model</span><br><span class="line">&#123;</span><br><span class="line">    protected $table = &apos;tasks&apos;;</span><br><span class="line"></span><br><span class="line">    protected $fillable = [</span><br><span class="line">        &apos;name&apos;,</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Step-8-创建一个控制器-Controller"><a href="#Step-8-创建一个控制器-Controller" class="headerlink" title="Step 8: 创建一个控制器(Controller)"></a>Step 8: 创建一个控制器(Controller)</h2><p>让我们通过运行artisan命令来创建控制器:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:controller TaskController</span><br></pre></td></tr></table></figure><p>接下来，将控制器(TaskController)从 app/Http/Controllers/TaskController.php 移动到 packages/wisdmlabs/todolist/TaskController.php，并将名称空间更改为“wisdmlabs\todolist”。</p><p>我们的控制器将为我们的to-do-list包提供必要的方法。这是主文件，将包含所有逻辑。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace wisdmlabs\todolist;</span><br><span class="line"></span><br><span class="line">use App\Http\Controllers\Controller;</span><br><span class="line">use Illuminate\Http\Request;</span><br><span class="line">use Wisdmlabs\Todolist\Task;</span><br><span class="line"></span><br><span class="line">class TaskController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        return redirect()-&gt;route(&apos;task.create&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function create()</span><br><span class="line">    &#123;</span><br><span class="line">        $tasks = Task::all();</span><br><span class="line">        $submit = &apos;Add&apos;;</span><br><span class="line">        return view(&apos;wisdmlabs.todolist.list&apos;, compact(&apos;tasks&apos;, &apos;submit&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function store()</span><br><span class="line">    &#123;</span><br><span class="line">        $input = Request::all();</span><br><span class="line">        Task::create($input);</span><br><span class="line">        return redirect()-&gt;route(&apos;task.create&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function edit($id)</span><br><span class="line">    &#123;</span><br><span class="line">        $tasks = Task::all();</span><br><span class="line">        $task = $tasks-&gt;find($id);</span><br><span class="line">        $submit = &apos;Update&apos;;</span><br><span class="line">        return view(&apos;wisdmlabs.todolist.list&apos;, compact(&apos;tasks&apos;, &apos;task&apos;, &apos;submit&apos;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function update($id)</span><br><span class="line">    &#123;</span><br><span class="line">        $input = Request::all();</span><br><span class="line">        $task = Task::findOrFail($id);</span><br><span class="line">        $task-&gt;update($input);</span><br><span class="line">        return redirect()-&gt;route(&apos;task.create&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function destroy($id)</span><br><span class="line">    &#123;</span><br><span class="line">        $task = Task::findOrFail($id);</span><br><span class="line">        $task-&gt;delete();</span><br><span class="line">        return redirect()-&gt;route(&apos;task.create&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Step-9-创建路由文件-Routes"><a href="#Step-9-创建路由文件-Routes" class="headerlink" title="Step 9: 创建路由文件(Routes)"></a>Step 9: 创建路由文件(Routes)</h2><p>在 “wisdmlabs/todolist/src” 文件夹中创建一个新文件，并命名为 “routes.php”。定义我们将在包中使用的路由。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">Route::resource(&apos;/task&apos;, &apos;Wisdmlabs\Todolist\TaskController&apos;);</span><br></pre></td></tr></table></figure><h2 id="Step-10-创建视图-Views"><a href="#Step-10-创建视图-Views" class="headerlink" title="Step 10: 创建视图(Views)"></a>Step 10: 创建视图(Views)</h2><p>要创建视图，我们必须在 “wisdmlabs/todolist/src/” 下创建一个 “views” 文件夹。现在，为该文件夹下的每个必需视图创建一个文件。</p><p>我们将创建两个视图: 1)app.blade——用于每个待办事项 和 2)列表。刀片-用于待办事项列表。</p><p>在app.blade.php下添加的内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;TO DO List&lt;/title&gt;</span><br><span class="line">    &lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        @yield(&apos;content&apos;)</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;https://code.jquery.com/jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>在list.blade.php下添加以下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">@extends(&apos;wisdmlabs.todolist.app&apos;)</span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    @if(isset($task))</span><br><span class="line">        &lt;h3&gt;Edit : &lt;/h3&gt;</span><br><span class="line">        &#123;!! Form::model($task, [&apos;route&apos; =&gt; [&apos;task.update&apos;, $task-&gt;id], &apos;method&apos; =&gt; &apos;patch&apos;]) !!&#125;</span><br><span class="line">    @else</span><br><span class="line">        &lt;h3&gt;Add New Task : &lt;/h3&gt;</span><br><span class="line">        &#123;!! Form::open([&apos;route&apos; =&gt; &apos;task.store&apos;]) !!&#125;</span><br><span class="line">    @endif</span><br><span class="line">        &lt;div class=&quot;form-inline&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                &#123;!! Form::text(&apos;name&apos;,null,[&apos;class&apos; =&gt; &apos;form-control&apos;]) !!&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">                &#123;!! Form::submit($submit, [&apos;class&apos; =&gt; &apos;btn btn-primary form-control&apos;]) !!&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &#123;!! Form::close() !!&#125;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;h4&gt;Tasks To Do : &lt;/h4&gt;</span><br><span class="line">    &lt;table class=&quot;table table-bordered table-striped&quot;&gt;</span><br><span class="line">        &lt;thead&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th&gt;Name&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;Action&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/thead&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">            @foreach($tasks as $task)</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td&gt;&#123;&#123; $task-&gt;name &#125;&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &#123;!! Form::open([&apos;route&apos; =&gt; [&apos;task.destroy&apos;, $task-&gt;id], &apos;method&apos; =&gt; &apos;delete&apos;]) !!&#125;</span><br><span class="line">                            &lt;div class=&apos;btn-group&apos;&gt;</span><br><span class="line">                                &lt;a href=&quot;&#123;!! route(&apos;task.edit&apos;, [$task-&gt;id]) !!&#125;&quot; class=&apos;btn btn-default btn-xs&apos;&gt;&lt;i class=&quot;glyphicon glyphicon-edit&quot;&gt;&lt;/i&gt;&lt;/a&gt;</span><br><span class="line">                                &#123;!! Form::button(&apos;&lt;i class=&quot;glyphicon glyphicon-trash&quot;&gt;&lt;/i&gt;&apos;, [&apos;type&apos; =&gt; &apos;submit&apos;, &apos;class&apos; =&gt; &apos;btn btn-danger btn-xs&apos;, &apos;onclick&apos; =&gt; &quot;return confirm(&apos;Are you sure?&apos;)&quot;]) !!&#125;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &#123;!! Form::close() !!&#125;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            @endforeach</span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">@endsection</span><br></pre></td></tr></table></figure><h2 id="Step-11-更新服务提供者以加载包"><a href="#Step-11-更新服务提供者以加载包" class="headerlink" title="Step 11:更新服务提供者以加载包"></a>Step 11:更新服务提供者以加载包</h2><p>我们已经到了倒数第二步——加载路由、迁移、视图等等。如果希望包的用户能够编辑视图，那么可以在服务提供者中发布视图。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace wisdmlabs\todolist;</span><br><span class="line"></span><br><span class="line">use Illuminate\Support\ServiceProvider;</span><br><span class="line"></span><br><span class="line">class TodolistServiceProvider extends ServiceProvider</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * Bootstrap services.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function boot()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;loadRoutesFrom(__DIR__.&apos;/routes.php&apos;);</span><br><span class="line">        $this-&gt;loadMigrationsFrom(__DIR__.&apos;/migrations&apos;);</span><br><span class="line">        $this-&gt;loadViewsFrom(__DIR__.&apos;/views&apos;, &apos;todolist&apos;);</span><br><span class="line">        $this-&gt;publishes([</span><br><span class="line">            __DIR__.&apos;/views&apos; =&gt; base_path(&apos;resources/views/wisdmlabs/todolist&apos;),</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Register services.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function register()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;app-&gt;make(&apos;Wisdmlabs\Todolist\TaskController&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在您可以通过artisan命令发布视图:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan vendor:publish</span><br></pre></td></tr></table></figure><p>会出现如下选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Which provider or tag&apos;s files would you like to publish?:</span><br><span class="line">  [0] Publish files from all providers and tags listed below</span><br><span class="line">  [1] Provider: Fideloper\Proxy\TrustedProxyServiceProvider</span><br><span class="line">  [2] Provider: Illuminate\Mail\MailServiceProvider</span><br><span class="line">  [3] Provider: Illuminate\Notifications\NotificationServiceProvider</span><br><span class="line">  [4] Provider: Illuminate\Pagination\PaginationServiceProvider</span><br><span class="line">  [5] Provider: Laravel\Tinker\TinkerServiceProvider</span><br><span class="line">  [6] Provider: wisdmlabs\todolist\TodolistServiceProvider</span><br><span class="line">  [7] Tag: laravel-mail</span><br><span class="line">  [8] Tag: laravel-notifications</span><br><span class="line">  [9] Tag: laravel-pagination</span><br></pre></td></tr></table></figure><p>我们输入 6 回车，提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Copied Directory [\packages\wisdmlabs\todolist\src\views] To [\resources\views\wisdmlabs\todolist]</span><br><span class="line">Publishing complete.</span><br></pre></td></tr></table></figure><p>上面的命令将在views文件夹 “/resources/views/wissdmlabs/todolist/” 下创建包的文件夹。现在，用户可以更改屏幕的视图。</p><ul><li>views<ul><li>wisdmlabs<ul><li>todolist<ul><li>app.blade.php</li><li>list.blade.php</li></ul></li></ul></li></ul></li></ul><h2 id="Step-12-更新编写器文件"><a href="#Step-12-更新编写器文件" class="headerlink" title="Step 12:更新编写器文件"></a>Step 12:更新编写器文件</h2><p>在最后一步中，我们在包中包含了 “laravelcollective/html package”。为此，我们必须在我们的包 “composition .json” 中添加包的依赖项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;: &quot;wisdmlabs/todolist&quot;,</span><br><span class="line">    &quot;description&quot;: &quot;You can create the to-do-list of your task.&quot;,</span><br><span class="line">    &quot;authors&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;John Doe&quot;,</span><br><span class="line">            &quot;email&quot;: &quot;john.doe@wisdmlabs.com&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;minimum-stability&quot;: &quot;dev&quot;,</span><br><span class="line">    &quot;require&quot;: &#123;</span><br><span class="line">        &quot;laravelcollective/html&quot;: &quot;^5.5&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;extra&quot;: &#123;</span><br><span class="line">        &quot;laravel&quot;: &#123;</span><br><span class="line">            &quot;providers&quot;: [</span><br><span class="line">                &quot;wisdmlabs\\todolist\\TodolistServiceProvider&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;autoload&quot;: &#123;</span><br><span class="line">        &quot;psr-4&quot;: &#123;</span><br><span class="line">            &quot;Wisdmlabs\\Todolist\\&quot;: &quot;src/&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以添加 extra 对象在 “composer.json”，它会加载我们的包，这样用户就不用添加我们的 package 在 “config/app” provider 数组中。包将自动加载。</p><p>转载 <a href="https://wisdmlabs.com/blog/create-package-laravel/" target="_blank" rel="noopener">https://wisdmlabs.com/blog/create-package-laravel/</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> package </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel artisan 常用命令</title>
      <link href="2019/02/15/Laravel-artisan-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2019/02/15/Laravel-artisan-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="1-创建一个服务提供者"><a href="#1-创建一个服务提供者" class="headerlink" title="1.创建一个服务提供者"></a>1.创建一个服务提供者</h2><p>语法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:provider 定义的类名(e.g. Route)+ServiceProvider</span><br></pre></td></tr></table></figure></p><p>生成位置：<br>app/Providers/定义的类名ServiceProvider.php</p><hr><a id="more"></a><h2 id="2-创建迁移-Migration"><a href="#2-创建迁移-Migration" class="headerlink" title="2.创建迁移(Migration)"></a>2.创建迁移(Migration)</h2><p>2.1 语法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:migration create_表名(或表名相关e.g. user)_table --create=表名(e.g. users)</span><br></pre></td></tr></table></figure></p><p>生成位置：<br>database/migrations/日期<em>create</em>表名(或表名相关)_table.php</p><p>2.2 创建存放队列任务的 jobs 表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan queue:table</span><br></pre></td></tr></table></figure><p>2.3 运行数据库迁移命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure></p><hr><h2 id="3-为表-Table-创建模型-Model"><a href="#3-为表-Table-创建模型-Model" class="headerlink" title="3.为表(Table)创建模型(Model)"></a>3.为表(Table)创建模型(Model)</h2><p>3.1 语法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:model 模型名称(跟表名相关 e.g. User)</span><br></pre></td></tr></table></figure></p><p>生成位置：<br>app/模型名称(跟表名相关).php</p><p>3.2 创建模型同时创建对应的迁移文件(添加<code>--migration</code>参数)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:model Models/Tag --migration</span><br></pre></td></tr></table></figure><p>或<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:model -m Models/Post</span><br></pre></td></tr></table></figure></p><hr><h2 id="4-创建一个控制器-Controller"><a href="#4-创建一个控制器-Controller" class="headerlink" title="4.创建一个控制器(Controller)"></a>4.创建一个控制器(Controller)</h2><p>4.1 语法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:controller 定义的类名(e.g. Route)+Controller</span><br></pre></td></tr></table></figure></p><p>生成位置：<br>app/Http/Controllers/定义的类名Controller.php</p><p>4.2 如果在app/Http/Controllers/目录中的指定文件夹下创建控制器 语法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:controller 文件夹名/定义的类名(e.g. Route)+Controller</span><br></pre></td></tr></table></figure></p><p>生成位置：<br>app/Http/Controllers/文件夹名/定义的类名Controller.php</p><p>4.3 创建Rest风格资源控制器（带有index、create、store、edit、update、destroy、show方法）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:controller PhotoController --resource</span><br></pre></td></tr></table></figure></p><hr><h2 id="5-创建表单请求类"><a href="#5-创建表单请求类" class="headerlink" title="5.创建表单请求类:"></a>5.创建表单请求类:</h2><p>语法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:request TagCreateRequest</span><br></pre></td></tr></table></figure></p><p>生成位置：<br>app/Http/Requests/TagCreateRequest.php</p><hr><h2 id="6-为-Tag-模型创建模型工厂"><a href="#6-为-Tag-模型创建模型工厂" class="headerlink" title="6.为 Tag 模型创建模型工厂:"></a>6.为 Tag 模型创建模型工厂:</h2><p>语法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:factory TagFactory --model=Models/Tag</span><br></pre></td></tr></table></figure></p><p>生成位置：<br>database/factories/TagFactory.php</p><hr><h2 id="7-创建可邮寄类"><a href="#7-创建可邮寄类" class="headerlink" title="7.创建可邮寄类:"></a>7.创建可邮寄类:</h2><p>语法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:mail TestMail</span><br></pre></td></tr></table></figure></p><p>生成位置：<br>app/Mail/TestMail.php</p><hr><h2 id="8-发布视图"><a href="#8-发布视图" class="headerlink" title="8.发布视图:"></a>8.发布视图:</h2><p>语法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan vendor:publish</span><br></pre></td></tr></table></figure></p><p>会提示要选择选项。</p><p>使用 Artisan 命令 <code>vendor:publish</code> 时通过引用标签名来分开发布这每个组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config组名</span></span><br><span class="line">php artisan vendor:publish --tag=config</span><br></pre></td></tr></table></figure><p>当使用者执行 <code>vendor:publish</code> 命令时，前端资源将会被拷贝到指定位置，由于需要在每次包更新时覆盖前端资源，可以使用 <code>--force</code> 标识：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan vendor:publish --tag=public --force</span><br></pre></td></tr></table></figure><hr><h2 id="9-创建一个新的填充类文件"><a href="#9-创建一个新的填充类文件" class="headerlink" title="9.创建一个新的填充类文件"></a>9.创建一个新的填充类文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:seeder PostsTableSeeder</span><br></pre></td></tr></table></figure><p>database/seeds/PostsTableSeeder.php</p><hr><h2 id="10-测试数据填充到数据库"><a href="#10-测试数据填充到数据库" class="headerlink" title="10.测试数据填充到数据库"></a>10.测试数据填充到数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan db:seed</span><br></pre></td></tr></table></figure><hr><h2 id="11-要处理队列中的任务，需要手动运行-Artisan-命令"><a href="#11-要处理队列中的任务，需要手动运行-Artisan-命令" class="headerlink" title="11.要处理队列中的任务，需要手动运行 Artisan 命令"></a>11.要处理队列中的任务，需要手动运行 Artisan 命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan queue:work</span><br></pre></td></tr></table></figure><hr><h2 id="12-使用-Php-Artisan-Tinker-创建后台用户"><a href="#12-使用-Php-Artisan-Tinker-创建后台用户" class="headerlink" title="12.使用 Php Artisan Tinker 创建后台用户"></a>12.使用 Php Artisan Tinker 创建后台用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">D:\phpStudy\PHPTutorial\WWW\myproject\laravel-blog&gt;php artisan tinker</span><br><span class="line">Psy Shell v0.9.9 (PHP 7.2.1 â€” cli) by Justin Hileman</span><br><span class="line">&gt;&gt;&gt; use App\User;</span><br><span class="line">&gt;&gt;&gt; <span class="variable">$user</span> = new User;</span><br><span class="line">=&gt; App\User &#123;<span class="comment">#2932&#125;</span></span><br><span class="line">&gt;&gt;&gt; <span class="variable">$user</span>-&gt;name = <span class="string">'PeakXin'</span>;</span><br><span class="line">=&gt; <span class="string">"PeakXin"</span></span><br><span class="line">&gt;&gt;&gt; <span class="variable">$user</span>-&gt;email = <span class="string">'xinyflove@sina.com'</span>;</span><br><span class="line">=&gt; <span class="string">"xinyflove@sina.com"</span></span><br><span class="line">&gt;&gt;&gt; <span class="variable">$user</span>-&gt;password = bcrypt(<span class="string">'123456'</span>);</span><br><span class="line">=&gt; <span class="string">"<span class="variable">$2y</span><span class="variable">$10</span><span class="variable">$QEeKft9419oeneUOsqqsrueuqMmkBu3q73TniYYk1wGERbj1Hh4W</span>."</span></span><br><span class="line">&gt;&gt;&gt; <span class="variable">$user</span>-&gt;save();</span><br><span class="line">=&gt; <span class="literal">true</span></span><br><span class="line">&gt;&gt;&gt; <span class="built_in">exit</span></span><br><span class="line">Exit:  Goodbye</span><br></pre></td></tr></table></figure><hr><h2 id="13-清理缓存"><a href="#13-清理缓存" class="headerlink" title="13.清理缓存"></a>13.清理缓存</h2><p>清除应用程序缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php artisan cache:clear</span><br></pre></td></tr></table></figure><p>清除应用程序缓存(程序中运行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Route::get(&apos;/clear-cache&apos;, function() &#123;</span><br><span class="line"></span><br><span class="line">    Artisan::call(&apos;cache:clear&apos;);</span><br><span class="line"></span><br><span class="line">    return &quot;Cache is cleared&quot;;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>清除路由缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php artisan route：cache</span><br></pre></td></tr></table></figure><p>清除配置缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php artisan config：cache</span><br></pre></td></tr></table></figure><p>清除已编译的视图文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php artisan view:clear</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> artisan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel 执行 php artisan migrate 报错 SQLSTATE[42S01]</title>
      <link href="2019/02/15/Laravel-%E6%89%A7%E8%A1%8C-php-artisan-migrate-%E6%8A%A5%E9%94%99-SQLSTATE-42S01/"/>
      <url>2019/02/15/Laravel-%E6%89%A7%E8%A1%8C-php-artisan-migrate-%E6%8A%A5%E9%94%99-SQLSTATE-42S01/</url>
      
        <content type="html"><![CDATA[<p>Laravel 执行 <code>php artisan migrate</code> 命令时，报错:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Database\QueryException  : SQLSTATE[42S01]: Base table or view already exists: 1050 Table <span class="string">'users'</span> already exists (SQL: create table `users` (`id` int unsigned not null auto_increment primary key,</span><br><span class="line">`name` varchar(255) not null, `email` varchar(255) not null, `password` varchar(255) not null, `remember_token` varchar(100) null, `created_at` timestamp null, `updated_at` timestamp null) default character <span class="built_in">set</span></span><br><span class="line"> utf8mb4 collate <span class="string">'utf8mb4_unicode_ci'</span>)</span><br></pre></td></tr></table></figure><a id="more"></a><p>这是因为Laravel 5.4以后的版本默认使用utf8mb4字符集，该字符集支持在数据库中存储“表情符号”。如果你运行MySQL v5.7.7或者更高版本，则不需要做任何事情。</p><p><strong>解决方法一，使用 <code>utf8</code> 替代 <code>utf8mb4</code></strong></p><p>这可能不是理想的，但如果你不关心“utf8mb4”，你可以去你的 <code>config/database.php</code> 文件替换 <code>charset</code> 和 <code>collation</code> 为 <code>utf8</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&apos;charset&apos; =&gt; &apos;utf8mb4&apos;,</span><br><span class="line">&apos;collation&apos; =&gt; &apos;utf8mb4_unicode_ci&apos;,</span><br></pre></td></tr></table></figure><p>to<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&apos;charset&apos; =&gt; &apos;utf8&apos;,</span><br><span class="line">&apos;collation&apos; =&gt; &apos;utf8_unicode_ci&apos;,</span><br></pre></td></tr></table></figure></p><p>然后执行命令 <code>composer dump-autoload</code>， 再执行 <code>php artisan migrate</code> 就不会报错了。</p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> artisan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel where 多条件查询</title>
      <link href="2019/02/12/Laravel-where-%E5%A4%9A%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/"/>
      <url>2019/02/12/Laravel-where-%E5%A4%9A%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<p>在查询数据中，会有多个过滤条件，有的还需要或(<code>or</code>)，下面以Laravel数据库操作中的 <strong>查询构建器</strong> 为例，分情况说明如何组装查询语句。</p><h2 id="多条and过滤条件"><a href="#多条and过滤条件" class="headerlink" title="多条and过滤条件"></a>多条and过滤条件</h2><p>代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$result</span> = DB::table(<span class="string">'table_name'</span>)</span><br><span class="line">                -&gt;<span class="built_in">where</span>(array(</span><br><span class="line">                    array(<span class="string">'field1'</span>, <span class="string">'='</span>, <span class="string">'value1'</span>),</span><br><span class="line">                    array(<span class="string">'field2'</span>, <span class="string">'='</span>,  <span class="string">'value2'</span>)</span><br><span class="line">                ))</span><br><span class="line">                -&gt;get();</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>实际执行的是：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from `table_name` <span class="built_in">where</span> (`field1` = <span class="string">'value1'</span> and `field2` = <span class="string">'value2'</span>)</span><br></pre></td></tr></table></figure></p><h2 id="多条and和or过滤条件"><a href="#多条and和or过滤条件" class="headerlink" title="多条and和or过滤条件"></a>多条and和or过滤条件</h2><p>代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$result</span> = DB::table(<span class="string">'table_name'</span>)</span><br><span class="line">                -&gt;<span class="built_in">where</span>(array(</span><br><span class="line">                    array(<span class="string">'field1'</span>, <span class="string">'='</span>, <span class="string">'value1'</span>),</span><br><span class="line">                    array(<span class="string">'field2'</span>, <span class="string">'='</span>,  <span class="string">'value2'</span>)</span><br><span class="line">                ))</span><br><span class="line">-&gt;orWwhere(array(</span><br><span class="line">                    array(<span class="string">'field1'</span>, <span class="string">'='</span>, <span class="string">'value1'</span>),</span><br><span class="line">                    array(<span class="string">'field2'</span>, <span class="string">'='</span>,  <span class="string">'value2'</span>)</span><br><span class="line">                ))</span><br><span class="line">                -&gt;get();</span><br></pre></td></tr></table></figure></p><p>实际执行的是：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from `table_name` <span class="built_in">where</span> (`field1` = <span class="string">'value1'</span> and `field2` = <span class="string">'value2'</span>) or (`field1` = <span class="string">'value1'</span> and `field2` = <span class="string">'value2'</span>)</span><br></pre></td></tr></table></figure></p><h2 id="多条and和or过滤条件并有公共的and条件"><a href="#多条and和or过滤条件并有公共的and条件" class="headerlink" title="多条and和or过滤条件并有公共的and条件"></a>多条and和or过滤条件并有公共的and条件</h2><p>代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$result</span> = DB::table(<span class="string">'table_name'</span>)</span><br><span class="line">                -&gt;<span class="built_in">where</span>(<span class="string">'field1'</span>, <span class="string">'value1'</span>)</span><br><span class="line">                -&gt;<span class="built_in">where</span>(<span class="keyword">function</span>(<span class="variable">$query</span>)&#123;</span><br><span class="line">                    <span class="variable">$query</span>-&gt;<span class="built_in">where</span>(array(</span><br><span class="line">                        array(<span class="string">'field2'</span>, <span class="string">'='</span>, <span class="string">'value2'</span>),</span><br><span class="line">                        array(<span class="string">'field3'</span>, <span class="string">'='</span>, <span class="string">'value3'</span>)</span><br><span class="line">                    ))-&gt;orWhere(<span class="keyword">function</span> (<span class="variable">$query</span>)&#123;</span><br><span class="line">                        <span class="variable">$query</span>-&gt;<span class="built_in">where</span>(array(</span><br><span class="line">                            array(<span class="string">'field2'</span>, <span class="string">'='</span>, <span class="string">'value2'</span>),</span><br><span class="line">                            array(<span class="string">'field3'</span>, <span class="string">'='</span>, <span class="string">'value3'</span>)</span><br><span class="line">                        ));</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;)</span><br><span class="line">                -&gt;get();</span><br></pre></td></tr></table></figure></p><p>实际执行的是：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from `table_name` <span class="built_in">where</span> `field1` = <span class="string">'value1'</span> and ((`field2` = <span class="string">'value2'</span> and `field3` = <span class="string">'value3'</span>) or ((`field2` = <span class="string">'value2'</span> and `field3` = <span class="string">'value3'</span>)))</span><br></pre></td></tr></table></figure></p><h2 id="多条and和or过滤条件并有公共的and条件并有参数传递"><a href="#多条and和or过滤条件并有公共的and条件并有参数传递" class="headerlink" title="多条and和or过滤条件并有公共的and条件并有参数传递"></a>多条and和or过滤条件并有公共的and条件并有参数传递</h2><p>代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$result</span> = DB::table(<span class="string">'table_name'</span>)</span><br><span class="line">                -&gt;<span class="built_in">where</span>(<span class="string">'field1'</span>, <span class="string">'value1'</span>)</span><br><span class="line">                -&gt;<span class="built_in">where</span>(<span class="keyword">function</span>(<span class="variable">$query</span>)use(<span class="variable">$value2</span>,<span class="variable">$value3</span>)&#123;</span><br><span class="line">                    <span class="variable">$query</span>-&gt;<span class="built_in">where</span>(array(</span><br><span class="line">                        array(<span class="string">'field2'</span>, <span class="string">'='</span>, <span class="variable">$value2</span>),</span><br><span class="line">                        array(<span class="string">'field3'</span>, <span class="string">'='</span>, <span class="variable">$value3</span>)</span><br><span class="line">                    ))-&gt;orWhere(<span class="keyword">function</span> (<span class="variable">$query</span>)use(<span class="variable">$value2</span>,<span class="variable">$value3</span>)&#123;</span><br><span class="line">                        <span class="variable">$query</span>-&gt;<span class="built_in">where</span>(array(</span><br><span class="line">                            array(<span class="string">'field2'</span>, <span class="string">'='</span>, <span class="variable">$value2</span>),</span><br><span class="line">                            array(<span class="string">'field3'</span>, <span class="string">'='</span>, <span class="variable">$value3</span>)</span><br><span class="line">                        ));</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;)</span><br><span class="line">                -&gt;get();</span><br></pre></td></tr></table></figure></p><p>实际执行的是：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from `table_name` <span class="built_in">where</span> `field1` = <span class="string">'value1'</span> and ((`field2` = <span class="string">'value2'</span> and `field3` = <span class="string">'value3'</span>) or ((`field2` = <span class="string">'value2'</span> and `field3` = <span class="string">'value3'</span>)))</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 如何撤销修改</title>
      <link href="2019/02/11/Git-%E5%A6%82%E4%BD%95%E6%92%A4%E9%94%80%E4%BF%AE%E6%94%B9/"/>
      <url>2019/02/11/Git-%E5%A6%82%E4%BD%95%E6%92%A4%E9%94%80%E4%BF%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="工作区撤销修改"><a href="#工作区撤销修改" class="headerlink" title="工作区撤销修改"></a>工作区撤销修改</h2><p>我们在工作区修改了文件内容，还没有添加（git add）到缓存区，想要撤销修改，使用 <code>git checkout -- file</code> 命令  </p><p><strong>撤销修改指定文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- filename</span><br></pre></td></tr></table></figure></p><p><strong>撤销修改全部文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout .</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装VirtualBox后 VMware桥接模式的虚拟机无法联网</title>
      <link href="2019/01/21/%E5%AE%89%E8%A3%85VirtualBox%E5%90%8E-VMware%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%97%A0%E6%B3%95%E8%81%94%E7%BD%91/"/>
      <url>2019/01/21/%E5%AE%89%E8%A3%85VirtualBox%E5%90%8E-VMware%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%97%A0%E6%B3%95%E8%81%94%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<p>在安装了 VirtualBox 后，VMware原本通过桥接模式联网的机器，无法获得正常IP。经过查询资料，发现原因是 VMware 桥接到 VirtualBox 的虚拟网卡了<br><img src="/2019/01/21/安装VirtualBox后-VMware桥接模式的虚拟机无法联网/2019012102303436.png" alt></p><p><strong>解决方法：</strong></p><a id="more"></a><p>将 VirtualBox 虚拟网卡的 VMware Bridge Protocol 勾选去掉即可。<br>因为打开这个选项，就意味着这个网卡是可以被 VMware 桥接的。WMware 默认桥接第一个可以被桥接的网卡，打开这个选项后，这个网卡就成了第一个可以被桥接的网卡，而物理网卡就成了第二个。关闭它，让vmware桥接正常的物理网卡即可。</p><p><img src="/2019/01/21/安装VirtualBox后-VMware桥接模式的虚拟机无法联网/2019012102392270.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMWare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMWare VMnet8 的配置使用</title>
      <link href="2019/01/18/VMWare-VMnet8-%E7%9A%84%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8/"/>
      <url>2019/01/18/VMWare-VMnet8-%E7%9A%84%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>本文是以windows系统下来解析VMnet8 的配置使用。<br>我们安装 VMware Workstation 后，在宿主机（物理电脑）上会多出两个网卡，VMnet1、VMnet8 如图：<br><a href="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808005038.png"><img src="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808005038.png" alt></a><br>（由于我用不到VMNet1，所以给它禁用了）</p><a id="more"></a><p>在虚拟机设置里会多出一个配置 VMnet0 如图：<br>step1. 编辑-&gt;虚拟网络编辑器<br><a href="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808054052.png"><img src="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808054052.png" alt></a></p><p>step2. 更改设置（否则VMnet0不展示），然后提示框选择 是 按钮<br><a href="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808065149.png"><img src="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808065149.png" alt></a></p><p>然后看到VMnet0<br><a href="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808095622.png"><img src="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808095622.png" alt></a></p><p><strong>接下来我们分别对VMnet0、VMnet1、VMnet8说明：</strong></p><h3 id="1-VMnet0"><a href="#1-VMnet0" class="headerlink" title="1. VMnet0"></a>1. VMnet0</h3><p><strong>模式：</strong><br>使用桥接模式，安装VM后，在VM里建立虚拟机 默认 就是该模式。<br><strong>描述：</strong><br>安装虚拟机系统后不需要调整网络，物理网络中的 “路由” 所包含的DHCP服务器会自动识别该虚拟机并为其分配IP地址；<br>如果没有路由，可以自己手动在系统分配，原则是和宿主机在同一网段并指向相同的网关即可通信。<br><strong>场景：</strong><br>如果你只是需要一台虚拟机可以和宿主互通，并可以访问外网，此模式即可。</p><h3 id="2-VMnet1"><a href="#2-VMnet1" class="headerlink" title="2. VMnet1"></a>2. VMnet1</h3><p><strong>模式：</strong><br>使用的是host-only的链接模式<br><strong>描述：</strong><br>虚拟机只能与主机构成内部通信，无法对外网进行访问。<br><strong>场景：</strong><br>如果你只是需要一台虚拟机可以和宿主互通，并不需要访问外网，此模式即可。</p><h3 id="3-VMnet8"><a href="#3-VMnet8" class="headerlink" title="3. VMnet8"></a>3. VMnet8</h3><p><strong>模式：</strong><br>使用的是NAT网络模式<br><strong>描述：</strong><br>虚拟机能与主机通信，并且可以访问外网。<br><strong>场景：</strong><br>在宿主机安装多台虚拟机，和宿主组成一个小局域网，宿主机，虚拟机之间都可以互相通信，虚拟机也可访问外网，例如 搭建 hadoop 集群，分布式服务</p><h2 id="VMnet8-设置步骤"><a href="#VMnet8-设置步骤" class="headerlink" title="VMnet8 设置步骤"></a>VMnet8 设置步骤</h2><h3 id="1-修改VMware-虚拟网络编辑器-WMnet8-子网IP和子网掩码"><a href="#1-修改VMware-虚拟网络编辑器-WMnet8-子网IP和子网掩码" class="headerlink" title="1. 修改VMware 虚拟网络编辑器 WMnet8 子网IP和子网掩码"></a>1. 修改VMware 虚拟网络编辑器 WMnet8 子网IP和子网掩码</h3><p>在虚拟网络编辑器弹出框 选中 WMnet8，修改子网IP为<code>192.168.100.0</code> 子网掩码为<code>255.255.255.0</code><br><a href="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808333571.png"><img src="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808333571.png" alt></a></p><h4 id="1-1-修改-DHCP-服务器"><a href="#1-1-修改-DHCP-服务器" class="headerlink" title="1.1 修改 DHCP 服务器"></a>1.1 修改 DHCP 服务器</h4><p>如果不需要自动分配ip地址可以把 使用本地DHCP服务将IP地址分配给虚拟机(D) 前对勾取消。<br>点击 DHCP设置，配置起始IP地址和结束IP地址，IP地址范围不能含有<strong>子网IP</strong>和<strong>网关IP</strong><br>如果有需要可以配置租用时间</p><p><a href="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808400618.png"><img src="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808400618.png" alt></a></p><h4 id="1-2-修改网关IP地址"><a href="#1-2-修改网关IP地址" class="headerlink" title="1.2 修改网关IP地址"></a>1.2 修改网关IP地址</h4><p>点击 NAT设置 ，修改网关IP为192.168.100.2，注意网关IP不能包含在DHCP起始IP和结束IP地址中。</p><h4 id="1-3-完成配置"><a href="#1-3-完成配置" class="headerlink" title="1.3 完成配置"></a>1.3 完成配置</h4><p>最后点击 应用、完成，结束配置</p><h3 id="2-修改VMnet8网卡信息"><a href="#2-修改VMnet8网卡信息" class="headerlink" title="2. 修改VMnet8网卡信息"></a>2. 修改VMnet8网卡信息</h3><p><a href="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808491986.png"><img src="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808491986.png" alt></a></p><h3 id="3-配置虚拟机网卡信息"><a href="#3-配置虚拟机网卡信息" class="headerlink" title="3. 配置虚拟机网卡信息"></a>3. 配置虚拟机网卡信息</h3><p>这里我是用的是CentOS桌面版系统，方便查看信息，网卡我设置的是自动获取IP地址，看一下我打开虚拟机后，网卡信息</p><p><a href="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808544183.png"><img src="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808544183.png" alt></a></p><p>是不是跟之前配置的预期效果一直，而且可以连接外网</p><p><a href="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808560199.png"><img src="/2019/01/18/VMWare-VMnet8-的配置使用/2019011808560199.png" alt></a></p><p>我们也可以手动设置网卡信息。<br>到此，我们的虚拟网络环境就配置好了 。</p><p><strong>简单介绍下 VMnet8 原理</strong></p><p>VMWare安装后，会给宿主机安装 VMnet8 网卡，同时虚拟出一套VMnet8 使用的虚拟路由（包含交换机 和 虚拟DHCP服务器）<br>主机和虚拟机实际上都是通过虚拟路由通信，虚拟路由通过宿主使得其他虚拟机也可以访问外网<br>如下图：<br><a href="/2019/01/18/VMWare-VMnet8-的配置使用/2019011809105377.png"><img src="/2019/01/18/VMWare-VMnet8-的配置使用/2019011809105377.png" alt></a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMWare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 GitHub clone laravel项目 运行错误：Whoops, looks like something went wrong.</title>
      <link href="2019/01/07/%E5%9C%A8-GitHub-clone-laravel%E9%A1%B9%E7%9B%AE-%E8%BF%90%E8%A1%8C%E9%94%99%E8%AF%AF%EF%BC%9AWhoops-looks-like-something-went-wrong/"/>
      <url>2019/01/07/%E5%9C%A8-GitHub-clone-laravel%E9%A1%B9%E7%9B%AE-%E8%BF%90%E8%A1%8C%E9%94%99%E8%AF%AF%EF%BC%9AWhoops-looks-like-something-went-wrong/</url>
      
        <content type="html"><![CDATA[<p>在 GitHub仓库 clone 一个laravel项目</p><p>git clone <code>https://github.com/xinyflove/laravel-blog.git</code></p><p>克隆下来的项目是没有<code>vendor</code>目录的，我们需要在项目根目录下运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer install</span><br></pre></td></tr></table></figure><a id="more"></a><p>从<code>composer.json</code> 获取 Composer 依赖</p><p>然后我们运行项目，出现这样的错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Whoops, looks like something went wrong.</span><br></pre></td></tr></table></figure><p>因为我们克隆下来的项目是没有<code>.env</code>配置文件的，我们新建一个<code>.env</code>文件，把<code>.env.example</code>文件内容复制过来。再次运行项目，发现还是提示错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RuntimeException</span><br><span class="line">No application encryption key has been specified.</span><br></pre></td></tr></table></figure><p>这里是因为没有配置<code>.env</code>文件中的<code>APP_KEY</code>值，我们在项目根目录下运行<code>php artisan key:generate</code> 获取新的<code>APP_KEY</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php artisan key:generate</span><br><span class="line">Application key [base64:sAoczMBghBPzGxg916GHoO1GvuVm6vafgFqdPsXU/E4=] <span class="built_in">set</span> succes</span><br><span class="line">sfully.</span><br></pre></td></tr></table></figure><p>然后运行项目，正常运行。</p>]]></content>
      
      
      <categories>
          
          <category> PHP框架 </category>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel报错 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>

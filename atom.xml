<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Peak Xin</title>
  
  <subtitle>小峰的博客</subtitle>
  <link href="https://xinyufeng.net/atom.xml" rel="self"/>
  
  <link href="https://xinyufeng.net/"/>
  <updated>2022-12-15T07:45:43.837Z</updated>
  <id>https://xinyufeng.net/</id>
  
  <author>
    <name>Peak Xin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP 多维数组转为树结构</title>
    <link href="https://xinyufeng.net/2022/12/15/PHP-%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BD%AC%E4%B8%BA%E6%A0%91%E7%BB%93%E6%9E%84/"/>
    <id>https://xinyufeng.net/2022/12/15/PHP-%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BD%AC%E4%B8%BA%E6%A0%91%E7%BB%93%E6%9E%84/</id>
    <published>2022-12-15T07:34:01.000Z</published>
    <updated>2022-12-15T07:45:43.837Z</updated>
    
    <content type="html"><![CDATA[<p>在项目中我们会遇到获取存在父子级关系的数组，并需要根据上下级关系以树结构的形式展示的情况</p><p>比如获取分类列表，类似如下数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$data</span> = [</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">13</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类2-2-2&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">9</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">1</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类1&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">0</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">2</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类1-1&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">1</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">3</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类1-2&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">1</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">4</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类1-1-1&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">2</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">5</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类1-1-2&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">2</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">6</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类1-2-1&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">3</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">7</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类2&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">0</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">8</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类2-1&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">7</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">9</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类2-2&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">7</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">10</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类2-1-1&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">8</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">11</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类2-1-2&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">8</span>],</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>=&gt;<span class="number">12</span>, <span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;分类2-2-1&#x27;</span>, <span class="string">&#x27;pid&#x27;</span>=&gt;<span class="number">9</span>],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><span id="more"></span><p>实现方法代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将返回的数据集转换成树</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  array   $list  数据集</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  string  $pk    主键</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  string  $pid   父节点名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  string  $child 子节点名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  integer $root  根节点ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array          转换后的树</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">list_to_tree</span>(<span class="params"><span class="variable">$list</span>, <span class="variable">$pk</span> = <span class="string">&#x27;id&#x27;</span>, <span class="variable">$pid</span> = <span class="string">&#x27;pid&#x27;</span>, <span class="variable">$child</span> = <span class="string">&#x27;child&#x27;</span>, <span class="variable">$root</span>=<span class="number">0</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$tree</span> = <span class="keyword">array</span>();<span class="comment">// 创建Tree</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$list</span>)) &#123;</span><br><span class="line">        <span class="comment">// 创建基于主键的数组引用</span></span><br><span class="line">        <span class="variable">$refer</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$list</span> <span class="keyword">as</span> <span class="variable">$index</span> =&gt; <span class="variable">$data</span>) &#123;</span><br><span class="line"><span class="comment">/*基于主键的新数组与之前的数组地址一样，修改其中一个数组的数据另一个也会变*/</span></span><br><span class="line">            <span class="variable">$refer</span>[<span class="variable">$data</span>[<span class="variable">$pk</span>]] =&amp; <span class="variable">$list</span>[<span class="variable">$index</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$list</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$data</span>) &#123;</span><br><span class="line">            <span class="comment">// 判断是否存在parent</span></span><br><span class="line">            <span class="variable">$parentId</span> = <span class="variable">$data</span>[<span class="variable">$pid</span>];</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$root</span> == <span class="variable">$parentId</span>) &#123;</span><br><span class="line">                <span class="variable">$tree</span>[<span class="variable">$data</span>[<span class="variable">$pk</span>]] =&amp; <span class="variable">$list</span>[<span class="variable">$key</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$refer</span>[<span class="variable">$parentId</span>])) &#123;</span><br><span class="line">                    <span class="variable">$parent</span> =&amp; <span class="variable">$refer</span>[<span class="variable">$parentId</span>];</span><br><span class="line">                    <span class="variable">$parent</span>[<span class="variable">$child</span>][] =&amp; <span class="variable">$list</span>[<span class="variable">$key</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$tree</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;<span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">list_to_tree</span>(<span class="variable">$data</span>));</span><br></pre></td></tr></table></figure><p>主要思路概况是，把要遍历的数组，创建基于主键的数组引用。把要生成的树结构数组也数组引用</p><p>比如案例中的 <code>$refer[13] === $list[0]</code>,<code>$tree[13] === $refer[13]</code>，利用了多个变量指向同地址，其中一个参数改变了数据，另外的参数数据也会改变。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在项目中我们会遇到获取存在父子级关系的数组，并需要根据上下级关系以树结构的形式展示的情况&lt;/p&gt;
&lt;p&gt;比如获取分类列表，类似如下数据&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$data&lt;/span&gt; = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类2-2-2&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类1&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类1-1&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类1-2&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类1-1-1&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类1-1-2&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类1-2-1&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类2&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类2-1&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类2-2&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类2-1-1&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类2-1-2&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;分类2-2-1&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="后端开发" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="PHP" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/PHP/"/>
    
    
    <category term="PHP技巧" scheme="https://xinyufeng.net/tags/PHP%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Linux环境安装nvm</title>
    <link href="https://xinyufeng.net/2022/10/18/Linux%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85nvm/"/>
    <id>https://xinyufeng.net/2022/10/18/Linux%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85nvm/</id>
    <published>2022-10-18T02:24:41.000Z</published>
    <updated>2022-10-18T02:37:00.089Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>nvm是一个管理node多版本的工具<br>系统为CentOS7</p></blockquote><ol><li>下载nvm安装包</li></ol><p>官方下载：<a href="https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.2.tar.gz">https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.2.tar.gz</a></p><ol start="2"><li>加压nvm压缩包</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 进入文件下载目录</span><br><span class="line">[root@localhost ~]<span class="comment"># cd /usr/local/src</span></span><br><span class="line">// 解压文件到 root/.nvm</span><br><span class="line">[root@localhost ~]<span class="comment"># tar -zxvf nvm-0.39.2.tar.gz --strip-components 1  -C /root/.nvm</span></span><br></pre></td></tr></table></figure><span id="more"></span><ol start="3"><li>配置环境</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vi ~/.bashrc</span></span><br></pre></td></tr></table></figure><p>在<code>~/.bashrc</code>的末尾，添加如下语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/.nvm&quot;</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span>  <span class="comment"># This loads nvm bash_completion</span></span><br></pre></td></tr></table></figure><p><code>wq</code>保存文件并退出</p><ol start="4"><li>配置生效(重启配置)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># source ~/.bashrc</span></span><br></pre></td></tr></table></figure><ol start="5"><li>验证nvm是否安装成功</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># nvm -v</span></span><br><span class="line">0.39.2</span><br><span class="line">[root@localhost ~]<span class="comment"># nvm --version</span></span><br><span class="line">0.39.2</span><br></pre></td></tr></table></figure><p><strong>常用操作</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#nvm常用命令</span></span><br><span class="line">nvm ls-remote           // 查看目前线上所能安装的所有 node 版本</span><br><span class="line">nvm install 12.22.12    // 安装node</span><br><span class="line">nvm uninstall 14.13.2   // 移除 node</span><br><span class="line">nvm use 14.13.2         // 使用 node </span><br><span class="line">nvm <span class="built_in">ls</span>                  // 查看目前已安装的 node 及当前所使用的 node</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;nvm是一个管理node多版本的工具&lt;br&gt;系统为CentOS7&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;下载nvm安装包&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;官方下载：&lt;a href=&quot;https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.2.tar.gz&quot;&gt;https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.2.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;加压nvm压缩包&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 进入文件下载目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# cd /usr/local/src&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 解压文件到 root/.nvm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# tar -zxvf nvm-0.39.2.tar.gz --strip-components 1  -C /root/.nvm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Nodejs" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Nodejs/"/>
    
    
    <category term="nvm" scheme="https://xinyufeng.net/tags/nvm/"/>
    
    <category term="Nodejs" scheme="https://xinyufeng.net/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 创建定时任务</title>
    <link href="https://xinyufeng.net/2022/08/30/Yii2-%E5%88%9B%E5%BB%BA%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>https://xinyufeng.net/2022/08/30/Yii2-%E5%88%9B%E5%BB%BA%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</id>
    <published>2022-08-30T06:20:49.000Z</published>
    <updated>2022-08-30T07:38:50.480Z</updated>
    
    <content type="html"><![CDATA[<p>在我们项目开发中，需要使用定时任务来完成批处理业务，下面通过Yii2框架来实现定时任务</p><p>Yii2框架定时任务代码统一放在 <code>./console</code> 目录下</p><h2 id="简单的定时任务脚步文件"><a href="#简单的定时任务脚步文件" class="headerlink" title="简单的定时任务脚步文件"></a>简单的定时任务脚步文件</h2><p>首先在<code>console/controller目录下</code>创建一个定时任务控制器<code>TestController.php</code></p><span id="more"></span><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">console</span>\<span class="title class_">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">console</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行测试脚本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionDo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hello test console&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在控制台运行命令<code>php yii</code>，会看到<code>test</code>控制下的<code>do</code>方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">······</span><br><span class="line">- test</span><br><span class="line">    test/do                        执行测试脚本</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行脚步命令<code>php yii 控制器名/方法名</code>，会输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php yii <span class="built_in">test</span>/do</span><br><span class="line">hello <span class="built_in">test</span> console</span><br></pre></td></tr></table></figure><p>这就完成了一个简单的定时任务脚步控制器</p><h2 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h2><p>如果需要传递参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">console</span>\<span class="title class_">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">console</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> integer 接收的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$param1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 接收的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$param2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $actionID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">options</span>(<span class="params"><span class="variable">$actionID</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;param1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;param2&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行测试脚本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionDo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;param1 . PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;param2 . PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>param1</code>和<code>param2</code>就是参数，执行脚步命令<code>php yii 控制器名/方法名 --参数= ····</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php yii <span class="built_in">test</span>/do --param1=123 --param2=hello</span><br><span class="line">123</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><h2 id="设置参数别名"><a href="#设置参数别名" class="headerlink" title="设置参数别名"></a>设置参数别名</h2><p>如果需要给参数设置别名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">console</span>\<span class="title class_">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">console</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> integer 接收的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$param1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 接收的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$param2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $actionID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">options</span>(<span class="params"><span class="variable">$actionID</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;param1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;param2&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 参数设置别名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">optionAliases</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;p1&#x27;</span> =&gt; <span class="string">&#x27;param1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;p2&#x27;</span> =&gt; <span class="string">&#x27;param2&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行测试脚本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionDo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;param1 . PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;param2 . PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>p1</code>和<code>p2</code>就是参数的别名，执行脚步命令<code>php yii 控制器名/方法名 --参数= ····</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php yii <span class="built_in">test</span>/do -p1=123 -p2=hello</span><br><span class="line">123</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><blockquote><p>注意：设置参数别名后，使用别名参数用一个横杆（-）链接。</p></blockquote><h2 id="在Linux配置crontab"><a href="#在Linux配置crontab" class="headerlink" title="在Linux配置crontab"></a>在Linux配置crontab</h2><p>执行命令<code>crontab -e</code>，我们以每分钟执行一次为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * /usr/bin/php /var/www/html/yii2-project/yii <span class="built_in">test</span>/do &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>其中</p><ul><li><code>/usr/bin/php</code> 是php运行文件</li><li><code>/var/www/html/yii2-project/yii</code> 项目目录中的yii 文件</li><li><code>test/do</code> 是执行脚步命令</li><li><code>&gt;/dev/null 2&gt;&amp;1</code> 这么写就行哈，可自行查找</li></ul><p>保存退出即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在我们项目开发中，需要使用定时任务来完成批处理业务，下面通过Yii2框架来实现定时任务&lt;/p&gt;
&lt;p&gt;Yii2框架定时任务代码统一放在 &lt;code&gt;./console&lt;/code&gt; 目录下&lt;/p&gt;
&lt;h2 id=&quot;简单的定时任务脚步文件&quot;&gt;&lt;a href=&quot;#简单的定时任务脚步文件&quot; class=&quot;headerlink&quot; title=&quot;简单的定时任务脚步文件&quot;&gt;&lt;/a&gt;简单的定时任务脚步文件&lt;/h2&gt;&lt;p&gt;首先在&lt;code&gt;console/controller目录下&lt;/code&gt;创建一个定时任务控制器&lt;code&gt;TestController.php&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
    <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap3 实现穿梭框</title>
    <link href="https://xinyufeng.net/2022/08/23/Bootstrap3-%E5%AE%9E%E7%8E%B0%E7%A9%BF%E6%A2%AD%E6%A1%86/"/>
    <id>https://xinyufeng.net/2022/08/23/Bootstrap3-%E5%AE%9E%E7%8E%B0%E7%A9%BF%E6%A2%AD%E6%A1%86/</id>
    <published>2022-08-23T01:22:43.000Z</published>
    <updated>2022-08-23T01:24:47.676Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Bootstrap3 框架实现穿梭框代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap3 穿梭框<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://cdn.jsdelivr.cn/npm/html5shiv@3.7.3/dist/html5shiv.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://cdn.jsdelivr.cn/npm/respond.js@1.4.2/dest/respond.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>Bootstrap3 穿梭框<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-bordered dchannel-table&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;item-default&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;width: 50%;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;sel_all_area&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span> <span class="attr">size</span>=<span class="string">&quot;10&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;width: 50px;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-small&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn_select_all_area&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-forward&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-small&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn_choose_selected_area&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-small&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn_remove_selected_area&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn-small&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn_remove_all_area&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-backward&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;width: 50%;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;sel_selected_areas&quot;</span>  <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span> <span class="attr">size</span>=<span class="string">&quot;10&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;&quot;</span>&gt;</span></span><br><span class="line">                    </span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> all_area = $(<span class="string">&quot;#sel_all_area&quot;</span>), selected_areas = $(<span class="string">&quot;#sel_selected_areas&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#btn_select_all_area&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> selectedAreaArray = [];</span></span><br><span class="line"><span class="language-javascript">                all_area.<span class="title function_">find</span>(<span class="string">&quot;option&quot;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    selectedAreaArray[i] = $(<span class="variable language_">this</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">                    $(<span class="variable language_">this</span>).<span class="title function_">appendTo</span>(selected_areas);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">doSubmit</span>(<span class="string">&#x27;add&#x27;</span>, selectedAreaArray.<span class="title function_">toString</span>());</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#btn_choose_selected_area&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> selectedAreaArray = [];</span></span><br><span class="line"><span class="language-javascript">                all_area.<span class="title function_">find</span>(<span class="string">&quot;option:selected&quot;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    selectedAreaArray[i] = $(<span class="variable language_">this</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">                    $(<span class="variable language_">this</span>).<span class="title function_">appendTo</span>(selected_areas);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">doSubmit</span>(<span class="string">&#x27;add&#x27;</span>, selectedAreaArray.<span class="title function_">toString</span>());</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#btn_remove_selected_area&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> selectedAreaArray = [];</span></span><br><span class="line"><span class="language-javascript">                selected_areas.<span class="title function_">find</span>(<span class="string">&quot;option:selected&quot;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    selectedAreaArray[i] = $(<span class="variable language_">this</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">                     $(<span class="variable language_">this</span>).<span class="title function_">appendTo</span>(all_area);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">doSubmit</span>(<span class="string">&#x27;del&#x27;</span>, selectedAreaArray.<span class="title function_">toString</span>());</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#btn_remove_all_area&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> selectedAreaArray = [];</span></span><br><span class="line"><span class="language-javascript">                selected_areas.<span class="title function_">find</span>(<span class="string">&quot;option&quot;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    selectedAreaArray[i] = $(<span class="variable language_">this</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">                     $(<span class="variable language_">this</span>).<span class="title function_">appendTo</span>(all_area);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">doSubmit</span>(<span class="string">&#x27;del&#x27;</span>, selectedAreaArray.<span class="title function_">toString</span>());</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">doSubmit</span>(<span class="params">select_type, key</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`更新 类型: <span class="subst">$&#123;select_type&#125;</span>, KEY: <span class="subst">$&#123;key&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用 Bootstrap3 框架实现穿梭框代码&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Bootstrap" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Bootstrap/"/>
    
    
    <category term="Bootstrap" scheme="https://xinyufeng.net/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 缓存操作</title>
    <link href="https://xinyufeng.net/2022/04/29/Laravel-%E7%BC%93%E5%AD%98%E6%93%8D%E4%BD%9C/"/>
    <id>https://xinyufeng.net/2022/04/29/Laravel-%E7%BC%93%E5%AD%98%E6%93%8D%E4%BD%9C/</id>
    <published>2022-04-29T03:18:42.000Z</published>
    <updated>2022-04-29T05:33:28.324Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel为不同的缓存系统封装了统一的API，缓存配置文件<code>./config/cache.php</code></p><p><strong>主要的缓存类型(驱动)</strong></p><ul><li>file - 文件，默认使用</li><li>memcached - memcached</li><li>redis - redis</li><li>database - 数据库</li></ul><p>默认laravel支持缓存介质：<code>apc</code>, <code>array</code>, <code>database</code>, <code>file</code>, <code>memcached</code>, <code>redis</code></p><p>在配置文件<code>.env</code>中修改驱动类型</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CACHE_DRIVER=file</span><br></pre></td></tr></table></figure><h2 id="设置缓存"><a href="#设置缓存" class="headerlink" title="设置缓存"></a>设置缓存</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Cache</span>; <span class="comment">// Cache门面</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 如果key不存在则添加成功，如果key存在，返回false</span></span><br><span class="line"><span class="title class_">Cache</span>::<span class="title function_ invoke__">add</span>(<span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;value&#x27;</span>, <span class="variable">$seconds</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 不管key值是否存，都可以设置成功</span></span><br><span class="line"><span class="title class_">Cache</span>::<span class="title function_ invoke__">put</span>(<span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;value&#x27;</span>, <span class="variable">$seconds</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置永久缓存</span></span><br><span class="line"><span class="title class_">Cache</span>::<span class="title function_ invoke__">forever</span>(<span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;value&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>文件所生成的地方在 <code>./storage/framework/cache/data/</code> 目录下</p></blockquote><h2 id="获取缓存数据"><a href="#获取缓存数据" class="headerlink" title="获取缓存数据"></a>获取缓存数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value</span> = <span class="title class_">Cache</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;key&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span> = <span class="title class_">Cache</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;default&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span> = <span class="title class_">Cache</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;key&#x27;</span>, function()&#123;&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取的同时并存储</span></span><br><span class="line"><span class="variable">$value</span> = <span class="title class_">Cache</span>::<span class="title function_ invoke__">remember</span>(<span class="string">&#x27;users&#x27;</span>, <span class="variable">$minutes</span>, function () &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;key不存的时候返回的数据&#x27;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="检查缓存项是否存在"><a href="#检查缓存项是否存在" class="headerlink" title="检查缓存项是否存在"></a>检查缓存项是否存在</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查缓存的key值是否存在，存在返回true否则返回false</span></span><br><span class="line"><span class="title class_">Cache</span>::<span class="title function_ invoke__">has</span>(<span class="string">&#x27;key&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="删除缓存数据"><a href="#删除缓存数据" class="headerlink" title="删除缓存数据"></a>删除缓存数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先获取再删除</span></span><br><span class="line"><span class="variable">$value</span> = <span class="title class_">Cache</span>::<span class="title function_ invoke__">pull</span>(<span class="string">&#x27;key&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除单个</span></span><br><span class="line"><span class="title class_">Cache</span>::<span class="title function_ invoke__">forget</span>(<span class="string">&#x27;key&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除所有的缓存</span></span><br><span class="line"><span class="title class_">Cache</span>::<span class="title function_ invoke__">flush</span>();</span><br></pre></td></tr></table></figure><h2 id="缓存辅助函数"><a href="#缓存辅助函数" class="headerlink" title="缓存辅助函数"></a>缓存辅助函数</h2><p>除了使用 <code>Cache</code> 门面或缓存契约，还可以使用全局的 <code>cache()</code> 函数来通过缓存获取和存储数据。当带有一个字符串参数的 <code>cache()</code> 函数被调用时，会返回给定键对应的缓存值（取值）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">cache</span>(<span class="string">&#x27;key&#x27;</span>);</span><br></pre></td></tr></table></figure><p>如果你提供了键值对数组和一个过期时间给该函数，则会在指定的有效期内存储缓存值（存储）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">cache</span>([<span class="string">&#x27;key&#x27;</span> =&gt; <span class="string">&#x27;value&#x27;</span>], <span class="variable">$seconds</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">cache</span>([<span class="string">&#x27;key&#x27;</span> =&gt; <span class="string">&#x27;value&#x27;</span>], <span class="title function_ invoke__">now</span>()-&gt;<span class="title function_ invoke__">addMinutes</span>(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><p><code>cache()</code> 函数不带任何参数被调用时会返回 Illuminate\Contracts\Cache\Factory 实现的实例，从而允许你调用其它缓存方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">cache</span>()-&gt;<span class="title function_ invoke__">remember</span>(<span class="string">&#x27;users&#x27;</span>, <span class="variable">$seconds</span>, function () &#123;</span><br><span class="line">    <span class="keyword">return</span> DB::<span class="title function_ invoke__">table</span>(<span class="string">&#x27;users&#x27;</span>)-&gt;<span class="title function_ invoke__">get</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Laravel为不同的缓存系统封装了统一的API，缓存配置文件&lt;code&gt;./config/cache.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要的缓存类型(驱动)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;file - 文件，默认使用&lt;/li&gt;
&lt;li&gt;memcached - memcached&lt;/li&gt;
&lt;li&gt;redis - redis&lt;/li&gt;
&lt;li&gt;database - 数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;默认laravel支持缓存介质：&lt;code&gt;apc&lt;/code&gt;, &lt;code&gt;array&lt;/code&gt;, &lt;code&gt;database&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;memcached&lt;/code&gt;, &lt;code&gt;redis&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在配置文件&lt;code&gt;.env&lt;/code&gt;中修改驱动类型&lt;/p&gt;</summary>
    
    
    
    <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
    <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 表单验证 validate 规则参数</title>
    <link href="https://xinyufeng.net/2022/04/28/Laravel-%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81-validate-%E8%A7%84%E5%88%99%E5%8F%82%E6%95%B0/"/>
    <id>https://xinyufeng.net/2022/04/28/Laravel-%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81-validate-%E8%A7%84%E5%88%99%E5%8F%82%E6%95%B0/</id>
    <published>2022-04-28T04:58:13.000Z</published>
    <updated>2022-04-28T05:29:31.734Z</updated>
    
    <content type="html"><![CDATA[<p><strong>简单的表单验证1</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// request() 与 $request等同</span></span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">validate</span>(<span class="title function_ invoke__">request</span>(), [</span><br><span class="line">        <span class="string">&#x27;title&#x27;</span> =&gt; <span class="string">&#x27;required|string&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;required|string&#x27;</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证通过</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p><strong>简单的表单验证2</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// request() 与 $request等同</span></span><br><span class="line">    <span class="variable">$req_params</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">all</span>();</span><br><span class="line">    <span class="variable">$validator</span> = <span class="title class_">Validator</span>::<span class="title function_ invoke__">make</span>(<span class="variable">$req_params</span>, [</span><br><span class="line">        <span class="string">&#x27;title&#x27;</span> =&gt; <span class="string">&#x27;required|string&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;content&#x27;</span> =&gt; <span class="string">&#x27;required|string&#x27;</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$validator</span>-&gt;<span class="title function_ invoke__">fails</span>()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;验证失败&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证通过</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证规则"><a href="#验证规则" class="headerlink" title="验证规则"></a>验证规则</h2><table><thead><tr><th>规则</th><th>说明</th></tr></thead><tbody><tr><td>required</td><td>验证字段必须出现在输入数据中，不能为空</td></tr><tr><td>present</td><td>验证字段必须出现在输入数据中，可以为空</td></tr><tr><td>filled</td><td>验证字段可不在输入数据中，当验证字段出现在数据中时，不能为空</td></tr><tr><td>nullable</td><td>验证字段的值可以为 <code>null</code></td></tr><tr><td>accepted</td><td>验证的字段必须为 yes、 on、 1、或 true</td></tr><tr><td>active_url</td><td>相当于使用了 PHP 函数 dns_get_record，验证的字段必须具有有效的 A 或 AAAA 记录</td></tr><tr><td>after:date</td><td>验证的字段必须是给定日期后的值。这个日期将会通过 PHP 函数 strtotime 来验证<br>&#96;’start_date’ &#x3D;&gt; ‘required</td></tr><tr><td>after_or_equal:date</td><td>验证的字段必须等于给定日期或之后的值。更多信息请参见 after 规则</td></tr><tr><td>alpha</td><td>验证的字段必须完全是字母的字符</td></tr><tr><td>alpha_dash</td><td>验证的字段可能具有字母、数字、破折号（ - ）以及下划线（ _ ）</td></tr><tr><td>alpha_num</td><td>验证的字段必须完全是字母、数字</td></tr><tr><td>array</td><td>验证的字段必须是一个 PHP 数组</td></tr><tr><td>before:date</td><td>验证的字段必须是给定日期之前的值。这个日期将会通过 PHP 函数 strtotime 来验证</td></tr><tr><td>before_or_equal:date</td><td>验证的字段必须等于给定日期或之前的值。这个日期将会使用 PHP 函数 strtotime 来验证</td></tr><tr><td>between:min,max</td><td>验证的字段的大小必须在给定的 min 和 max 之间。字符串、数字、数组或是文件大小的计算方式都用 size 方法进行评估<br>当需要验证表单数据中数字的大小时，在验证规则中一定要加入 Numeric 或 Integer 其一，size、between、max、min这些验证才会起作用</td></tr><tr><td>boolean</td><td>验证的字段必须能够被转换为布尔值。可接受的参数为 true、false、1、0、“1” 以及 “0”</td></tr><tr><td>confirmed</td><td>验证的字段必须和 foo_confirmation 的字段值一致。例如，如果要验证的字段是 password，输入中必须存在匹配的 password_confirmation 字段</td></tr><tr><td>date</td><td>验证的字段值必须是通过 PHP 函数 strtotime 校验的有效日期</td></tr><tr><td>date_equals:date</td><td>验证的字段必须等于给定的日期。该日期会被传递到 PHP 函数 strtotime</td></tr><tr><td>date_format:format</td><td>验证的字段必须与给定的格式相匹配。你应该只使用 date 或 date_format 其中一个用于验证，而不应该同时使用两者</td></tr><tr><td>different:field</td><td>验证的字段值必须与字段 (field) 的值不同</td></tr><tr><td>digits:value</td><td>验证的字段必须是数字，并且必须具有确切的值</td></tr><tr><td>digits_between:min,max</td><td>验证的字段的长度必须在给定的 min 和 max 之间</td></tr><tr><td>dimensions</td><td>验证的文件必须是图片并且图片比例必须符合规则<br><code>&#39;avatar&#39; =&gt; &#39;dimensions:min_width=100,min_height=200&#39;</code><br>可用的规则为： min_width、 max_width 、 min_height 、 max_height 、 width 、 height 、 ratio<br>比例应该使用宽度除以高度的方式来约束。这样可以通过 3&#x2F;2 这样的语句或像 1.5 这样的浮点的约束<br><code>&#39;avatar&#39; =&gt; &#39;dimensions:ratio=3/2&#39;</code><br>由于此规则需要多个参数，因此你可以 Rule::dimensions 方法来构造可读性高的规则<br><code>use Illuminate\Validation\Rule;</code><br><code>Validator::make($data, [</code><br><code>&#39;avatar&#39; =&gt; [</code><br><code>&#39;required&#39;,</code><br><code>Rule::dimensions()-&gt;maxWidth(1000)-&gt;maxHeight(500)-&gt;ratio(3 / 2),</code><br><code>],</code><br><code>]);</code></td></tr><tr><td>distinct</td><td>验证数组时，指定的字段不能有任何重复值<br><code>‘foo.*.id’ =&gt; ‘distinct’</code></td></tr><tr><td>email</td><td>验证的字段必须符合 e-mail 地址格式</td></tr><tr><td>exists:table,column</td><td>验证的字段必须存在于给定的数据库表中</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="空值"><a href="#空值" class="headerlink" title="空值"></a>空值</h2><p>在 Laravel 中，一个字段满足下面任何一条都将被视为空值：</p><ul><li><code>null</code></li><li>空字符串 ‘ ‘</li><li>空数组 <code>[ ]</code> 或空 <code>countable</code> 对象</li><li>无路径的上传文件</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;简单的表单验证1&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;store&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;Request &lt;span class=&quot;variable&quot;&gt;$request&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// request() 与 $request等同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&quot;title function_ invoke__&quot;&gt;validate&lt;/span&gt;(&lt;span class=&quot;title function_ invoke__&quot;&gt;request&lt;/span&gt;(), [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;#x27;title&amp;#x27;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;required|string&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;required|string&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 验证通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
    <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 模型的 scope 普通用法和全局用法</title>
    <link href="https://xinyufeng.net/2022/04/28/Laravel-%E6%A8%A1%E5%9E%8B%E7%9A%84-scope-%E6%99%AE%E9%80%9A%E7%94%A8%E6%B3%95%E5%92%8C%E5%85%A8%E5%B1%80%E7%94%A8%E6%B3%95/"/>
    <id>https://xinyufeng.net/2022/04/28/Laravel-%E6%A8%A1%E5%9E%8B%E7%9A%84-scope-%E6%99%AE%E9%80%9A%E7%94%A8%E6%B3%95%E5%92%8C%E5%85%A8%E5%B1%80%E7%94%A8%E6%B3%95/</id>
    <published>2022-04-28T02:47:07.000Z</published>
    <updated>2022-04-28T02:56:04.489Z</updated>
    
    <content type="html"><![CDATA[<p>在数据查询中经常会使用条件查询，这些查询条件有些是相同的，<code>scope</code>可以实现这些相同条件查询的复用。</p><h2 id="普通-scope"><a href="#普通-scope" class="headerlink" title="普通 scope"></a>普通 <code>scope</code></h2><p><strong>定义</strong></p><p>方法名为 <code>scope</code> + 首字母大写单词 (这个可以随便定义)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">scopeStatus</span>(<span class="params"><span class="variable">$query</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$query</span>-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;status&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p><strong>使用</strong></p><p>其中调用去掉 <code>scope</code> 后，首字母小写的那个函数。</p><p>scopeStatus () 调用 status ()。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">status</span>()-&gt;<span class="title function_ invoke__">get</span>();</span><br></pre></td></tr></table></figure><h2 id="全局-scope"><a href="#全局-scope" class="headerlink" title="全局 scope"></a>全局 <code>scope</code></h2><p>我们需要重新定义 <code>boot</code> 方法，集成父类 <code>boot</code> 以后，添加全局 <code>scope</code>，这样默认就已经全局使用了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">parent</span>::<span class="title function_ invoke__">boot</span>(); <span class="comment">// <span class="doctag">TODO:</span> Change the autogenerated stub</span></span><br><span class="line">    <span class="built_in">static</span>::<span class="title function_ invoke__">addGlobalScope</span>(<span class="string">&#x27;avaiable&#x27;</span>,function (Builder <span class="variable">$builder</span>)&#123;</span><br><span class="line">        <span class="variable">$builder</span>-&gt;<span class="title function_ invoke__">whereIn</span>(<span class="string">&#x27;status&#x27;</span>, [<span class="number">0</span>, <span class="number">1</span>]);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们有的时候有的查询是不需要这个全局 <code>scope</code> 的时候，我们只需要去掉就可以。</p><p>使用 <code>withOutGlobalScope()</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Post</span>::<span class="title function_ invoke__">withOutGlobalScope</span>(<span class="string">&#x27;avaiable&#x27;</span>)-&gt;<span class="title function_ invoke__">get</span>();</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;在数据查询中经常会使用条件查询，这些查询条件有些是相同的，&lt;code&gt;scope&lt;/code&gt;可以实现这些相同条件查询的复用。&lt;/p&gt;
&lt;h2 id=&quot;普通-scope&quot;&gt;&lt;a href=&quot;#普通-scope&quot; class=&quot;headerlink&quot; title=&quot;普通 scope&quot;&gt;&lt;/a&gt;普通 &lt;code&gt;scope&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方法名为 &lt;code&gt;scope&lt;/code&gt; + 首字母大写单词 (这个可以随便定义)&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;scopeStatus&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$query&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$query&lt;/span&gt;-&amp;gt;&lt;span class=&quot;title function_ invoke__&quot;&gt;where&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;status&amp;#x27;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
    <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 实现软删除</title>
    <link href="https://xinyufeng.net/2022/04/28/Laravel-%E5%AE%9E%E7%8E%B0%E8%BD%AF%E5%88%A0%E9%99%A4/"/>
    <id>https://xinyufeng.net/2022/04/28/Laravel-%E5%AE%9E%E7%8E%B0%E8%BD%AF%E5%88%A0%E9%99%A4/</id>
    <published>2022-04-28T01:38:06.000Z</published>
    <updated>2022-04-28T02:47:25.027Z</updated>
    
    <content type="html"><![CDATA[<p>软删除就是逻辑删除，数据保留单标记上删除状态，一般我们会用删除时间来作为标记，这样标记状态有了，删除时间也有了。</p><h2 id="用Laravel-自带的-Eloquent-ORM-来实现软删除。"><a href="#用Laravel-自带的-Eloquent-ORM-来实现软删除。" class="headerlink" title="用Laravel 自带的 Eloquent ORM 来实现软删除。"></a>用Laravel 自带的 Eloquent ORM 来实现软删除。</h2><ol><li>首先在数据迁移文件中添加<code>删除时间</code>字段</li></ol><p><code>./database/migrations/2014_10_12_000000_create_users_table.php</code></p><span id="more"></span><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Migrations</span>\<span class="title">Migration</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Schema</span>\<span class="title">Blueprint</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="class"><span class="keyword">class</span> <span class="keyword">extends</span> <span class="title">Migration</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Run the migrations.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title class_">Schema</span>::<span class="title function_ invoke__">create</span>(<span class="string">&#x27;users&#x27;</span>, function (Blueprint <span class="variable">$table</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">id</span>();</span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="keyword">string</span>(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="keyword">string</span>(<span class="string">&#x27;email&#x27;</span>)-&gt;<span class="title function_ invoke__">unique</span>();</span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">timestamp</span>(<span class="string">&#x27;email_verified_at&#x27;</span>)-&gt;<span class="title function_ invoke__">nullable</span>();</span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="keyword">string</span>(<span class="string">&#x27;password&#x27;</span>);</span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">rememberToken</span>();</span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">timestamps</span>();</span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">softDeletes</span>()-&gt;<span class="title function_ invoke__">comment</span>(<span class="string">&#x27;删除时间&#x27;</span>);<span class="comment">// 默认添加 deleted_at 字段</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Reverse the migrations.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title class_">Schema</span>::<span class="title function_ invoke__">dropIfExists</span>(<span class="string">&#x27;users&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>执行 <code>php artisan migrate</code> 运行迁移文件</p></li><li><p>修改对应的数据模型</p></li></ol><p><code>./app/Models/User.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">SoftDeletes</span>;<span class="comment">// 开启软删除</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$guarded</span> = [];<span class="comment">// 不可以注入的字段数据，使用create方法才有效</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>软删除方法</li></ol><p>直接调用<code>delete()</code>方法或者<code>destroy()</code>方法即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">destroy</span>(<span class="variable">$id</span>);</span><br></pre></td></tr></table></figure><blockquote><p>这时候查询的数据自动添加过滤条件 <code>deleted_at = NULL</code></p></blockquote><ol start="5"><li>恢复删除</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">onlyTrashed</span>()-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;id&#x27;</span>, <span class="variable">$id</span>)-&gt;<span class="title function_ invoke__">restore</span>();</span><br></pre></td></tr></table></figure><ol start="5"><li>永久删除</li></ol><p>直接删除数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">forceDeleted</span>(<span class="variable">$id</span>);</span><br></pre></td></tr></table></figure><h2 id="查询包含已删除的数据"><a href="#查询包含已删除的数据" class="headerlink" title="查询包含已删除的数据"></a>查询包含已删除的数据</h2><p>使用 <code>withTrashed()</code>可以查询出包含已删除的数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">withTrashed</span>()-&gt;<span class="title function_ invoke__">get</span>();</span><br></pre></td></tr></table></figure><h2 id="只查询已删除的数据"><a href="#只查询已删除的数据" class="headerlink" title="只查询已删除的数据"></a>只查询已删除的数据</h2><p>使用 <code>onlyTrashed()</code>可以只查询出已删除的数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">User</span>::<span class="title function_ invoke__">onlyTrashed</span>()-&gt;<span class="title function_ invoke__">get</span>();</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;软删除就是逻辑删除，数据保留单标记上删除状态，一般我们会用删除时间来作为标记，这样标记状态有了，删除时间也有了。&lt;/p&gt;
&lt;h2 id=&quot;用Laravel-自带的-Eloquent-ORM-来实现软删除。&quot;&gt;&lt;a href=&quot;#用Laravel-自带的-Eloquent-ORM-来实现软删除。&quot; class=&quot;headerlink&quot; title=&quot;用Laravel 自带的 Eloquent ORM 来实现软删除。&quot;&gt;&lt;/a&gt;用Laravel 自带的 Eloquent ORM 来实现软删除。&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;首先在数据迁移文件中添加&lt;code&gt;删除时间&lt;/code&gt;字段&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;./database/migrations/2014_10_12_000000_create_users_table.php&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
    <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 导入数据</title>
    <link href="https://xinyufeng.net/2022/04/18/MySQL-%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/"/>
    <id>https://xinyufeng.net/2022/04/18/MySQL-%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/</id>
    <published>2022-04-18T01:42:05.000Z</published>
    <updated>2022-04-24T02:21:23.353Z</updated>
    
    <content type="html"><![CDATA[<p>给大家介绍几种常用简单的MySQL导入数据命令</p><ol><li>MySQL命令导入</li></ol><p>使用 mysql 命令导入语法格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mysql -u用户名 -p 表名 &lt; /要导入的文件路径.sql </span></span><br><span class="line">Enter password: 输入密码</span><br></pre></td></tr></table></figure><p>实例：</p><p>使用 mysql 命令导入语法格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mysql -uroot -p test &lt; /usr/local/src/test.sql </span></span><br><span class="line">Enter password: 123123</span><br></pre></td></tr></table></figure><p>以上命令将将备份的整个数据库 test.sql 导入。</p><ol start="2"><li>source 命令导入</li></ol><p>source 命令导入数据库需要先登录到数库终端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database db1;      <span class="comment"># 创建数据库</span></span><br><span class="line">mysql&gt; use db1;                  <span class="comment"># 使用已创建的数据库 </span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> names utf8;           <span class="comment"># 设置编码</span></span><br><span class="line">mysql&gt; <span class="built_in">source</span>/usr/local/src/db1.sql  <span class="comment"># 导入备份数据库</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;给大家介绍几种常用简单的MySQL导入数据命令&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MySQL命令导入&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用 mysql 命令导入语法格式为：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="数据库" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
    <category term="MySQL命令" scheme="https://xinyufeng.net/tags/MySQL%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Antd Vue table 设置rowClassName不生效的问题</title>
    <link href="https://xinyufeng.net/2022/04/14/Antd-Vue-table-%E8%AE%BE%E7%BD%AErowClassName%E4%B8%8D%E7%94%9F%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://xinyufeng.net/2022/04/14/Antd-Vue-table-%E8%AE%BE%E7%BD%AErowClassName%E4%B8%8D%E7%94%9F%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2022-04-14T02:39:27.000Z</published>
    <updated>2022-04-14T08:46:30.711Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Antd Vue table 利用 <code>rowClassName</code> 自定义带斑马纹的表格，设置后并未生效</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-table</span><br><span class="line">    <span class="keyword">class</span>=<span class="string">&quot;ant-table-striped&quot;</span></span><br><span class="line">    size=<span class="string">&quot;middle&quot;</span></span><br><span class="line">    :columns=<span class="string">&quot;columns&quot;</span></span><br><span class="line">    :dataSource=<span class="string">&quot;data&quot;</span></span><br><span class="line">    :rowClassName=<span class="string">&quot;(_record, index) =&gt; (index % 2 === 1 ? &#x27;table-striped&#x27; : null)&quot;</span></span><br><span class="line">    bordered</span><br><span class="line">  /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.ant-table-striped .table-striped td &#123;</span><br><span class="line">  background-color: #fafafa;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>原因是这样的样式不能放在<code>scoped</code>中，应写在全局样式中</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;less&quot;&gt;</span><br><span class="line">.ant-table-striped .table-striped td &#123;</span><br><span class="line">  background-color: #fafafa;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>改成这样后样式生效</p><blockquote><p>注意，这样可能会影响到其他组件中<code>class</code>为<code>.ant-table-striped .table-striped td</code>的样式</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用 Antd Vue table 利用 &lt;code&gt;rowClassName&lt;/code&gt; 自定义带斑马纹的表格，设置后并未生效&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;a-table&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;ant-table-striped&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size=&lt;span class=&quot;string&quot;&gt;&amp;quot;middle&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :columns=&lt;span class=&quot;string&quot;&gt;&amp;quot;columns&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :dataSource=&lt;span class=&quot;string&quot;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :rowClassName=&lt;span class=&quot;string&quot;&gt;&amp;quot;(_record, index) =&amp;gt; (index % 2 === 1 ? &amp;#x27;table-striped&amp;#x27; : null)&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bordered&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style scoped lang=&amp;quot;less&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.ant-table-striped .table-striped td &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  background-color: #fafafa;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;原因是这样的样式不能放在&lt;code&gt;scoped&lt;/code&gt;中，应写在全局样式中&lt;/p&gt;</summary>
    
    
    
    <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Vue" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/"/>
    
    
    <category term="Vue教程" scheme="https://xinyufeng.net/tags/Vue%E6%95%99%E7%A8%8B/"/>
    
    <category term="AntD Vue" scheme="https://xinyufeng.net/tags/AntD-Vue/"/>
    
  </entry>
  
  <entry>
    <title>浏览器 Cookie 的使用</title>
    <link href="https://xinyufeng.net/2022/04/12/%E6%B5%8F%E8%A7%88%E5%99%A8-Cookie-%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://xinyufeng.net/2022/04/12/%E6%B5%8F%E8%A7%88%E5%99%A8-Cookie-%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2022-04-12T07:31:11.000Z</published>
    <updated>2022-04-12T07:52:18.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cookie介绍"><a href="#Cookie介绍" class="headerlink" title="Cookie介绍"></a>Cookie介绍</h2><p>主要用于存储访问过的网站数据，把浏览器的信息存储到本地电脑中，实现客户端和服务器端的通讯。</p><h2 id="Cookie特点"><a href="#Cookie特点" class="headerlink" title="Cookie特点"></a>Cookie特点</h2><ul><li>以文本形式保存(.txt)</li><li>Cookie存储信息不安全（不能存放重要的信息）</li><li>Cookie中有域（domain）和路径的概念,浏览器是一个比较安全的环境，所以不同的域之间不能直接访问（js的同源策略限制）</li></ul><span id="more"></span><h2 id="Cookie的常用属性"><a href="#Cookie的常用属性" class="headerlink" title="Cookie的常用属性"></a>Cookie的常用属性</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Name：cookie的名字(键)</span><br><span class="line">Value：cookie存放的值</span><br><span class="line">Expires：指cookie过期的时间（该时间为世界时间  UTC时间）也称为格林威治时间</span><br><span class="line">Max-Age: 指cookie最大的存活有效期（单位：秒）</span><br><span class="line">Domain: 指的是cookie当前的域</span><br><span class="line">Path:指cookie当前的路径</span><br><span class="line">Size: 指cookie存放的大小</span><br><span class="line">Secure: 指cooke的安全属性</span><br></pre></td></tr></table></figure><h2 id="JavaScript操作Cookie"><a href="#JavaScript操作Cookie" class="headerlink" title="JavaScript操作Cookie"></a>JavaScript操作Cookie</h2><ol><li>document.cookie 属性创建、读取、删除 cookie</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">cookie</span>=<span class="string">&#x27;name=Peak&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>设置cookie失效时间</li></ol><p>设置一个10分钟后失效的Cookie</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">setCookie</span>(<span class="params">name, value, expire</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> expires = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() + loginRes.<span class="property">data</span>.<span class="property">expire</span> * <span class="number">1000</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">cookie</span> = <span class="string">`<span class="subst">$&#123;name&#125;</span>=<span class="subst">$&#123;value&#125;</span>;expires=<span class="subst">$&#123;expires&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">setCookie</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;Peak&#x27;</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure><blockquote><p>注意：过期时间是格林威治时间（UTC时间）</p></blockquote><ol start="3"><li>提前清除cookie</li></ol><p>把过期时间设置为小于当前时间即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setCookie</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;Peak&#x27;</span>, -<span class="number">1</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Cookie介绍&quot;&gt;&lt;a href=&quot;#Cookie介绍&quot; class=&quot;headerlink&quot; title=&quot;Cookie介绍&quot;&gt;&lt;/a&gt;Cookie介绍&lt;/h2&gt;&lt;p&gt;主要用于存储访问过的网站数据，把浏览器的信息存储到本地电脑中，实现客户端和服务器端的通讯。&lt;/p&gt;
&lt;h2 id=&quot;Cookie特点&quot;&gt;&lt;a href=&quot;#Cookie特点&quot; class=&quot;headerlink&quot; title=&quot;Cookie特点&quot;&gt;&lt;/a&gt;Cookie特点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;以文本形式保存(.txt)&lt;/li&gt;
&lt;li&gt;Cookie存储信息不安全（不能存放重要的信息）&lt;/li&gt;
&lt;li&gt;Cookie中有域（domain）和路径的概念,浏览器是一个比较安全的环境，所以不同的域之间不能直接访问（js的同源策略限制）&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="前端开发" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="JavaScript" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/JavaScript/"/>
    
    
    <category term="JS方法" scheme="https://xinyufeng.net/tags/JS%E6%96%B9%E6%B3%95/"/>
    
    <category term="JS技巧" scheme="https://xinyufeng.net/tags/JS%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Vue 中的代理proxy配置</title>
    <link href="https://xinyufeng.net/2022/04/08/Vue-%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%90%86proxy%E9%85%8D%E7%BD%AE/"/>
    <id>https://xinyufeng.net/2022/04/08/Vue-%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%90%86proxy%E9%85%8D%E7%BD%AE/</id>
    <published>2022-04-08T01:06:57.000Z</published>
    <updated>2022-04-08T02:02:03.093Z</updated>
    
    <content type="html"><![CDATA[<p>我们本地开发调试一般是 <code>npm run serve</code> 或 <code>yarn serve</code>，然后打开 <code>localhost:8080</code>（本机的IP），此时如果调用后端接口，可能会产生跨域，那如何解决呢？</p><p><strong>解决跨域的方案</strong></p><ol><li>jsonp<ul><li>只支持GET请求，JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。</li></ul></li><li>cors<ul><li>CORS支持所有类型的HTTP请求，是跨域HTTP请求的根本解决方案</li></ul></li><li>Node中间件代理(两次跨域)<ul><li>通过同源策略对服务器不加限制。</li></ul></li><li>Nginx反向代理<ul><li>通过同源策略对服务器不加限制。</li></ul></li></ol><p>日常工作中，生产环境用得比较多的跨域方案是cors和nginx反向代理。<br>本地项目中调试用的最多的就是 node 代理，当然像 nginx、charles（抓包工具）做代理也可以，只要你会配置。</p><span id="more"></span><p>vue 中的 <code>proxy</code> 就是利用了 Node 代理，原理是因为服务器端没有跨域，使用的是 <a href="https://github.com/chimurai/http-proxy-middleware">http-proxy-middleware</a> 这个模块（这个模块相当于是node.js的一个插件）</p><p><strong>案例</strong></p><ol><li>你要调取的接口是 <code>http://dev.com/api/test</code>，然后你可以在本地调 <code>http://localhost:8080/api/test</code>，如<code>axios.get(&#39;/api/test&#39;)</code></li></ol><p>配置代理后，会做如下转发：</p><p><code>http://localhost:8080/api/test</code> -&gt; <code>http://dev.com/api/test</code><br><code>http://localhost:8080/admin/api/test</code> -&gt; <code>http://dev.com/admin/api/test</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue-cli3.0 里面的 vue.config.js做配置</span></span><br><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://dev.com&#x27;</span>,<span class="comment">// 后端接口域名</span></span><br><span class="line">        <span class="attr">ws</span>: <span class="literal">true</span>,<span class="comment">//如果要代理 websockets，配置这个参数</span></span><br><span class="line">        <span class="attr">secure</span>: <span class="literal">false</span>,<span class="comment">// 如果是https接口，需要配置这个参数</span></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,<span class="comment">// 是否跨域</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ol start="2"><li>当你调后端接口的命名没有统一给接口前加 <code>/api</code> 这类的标识，那么你可以自己加，也就是你可以在本地调 <code>http://localhost:8080/api/test</code>，如<code>axios.get(&#39;/api/test&#39;)</code>，而你要的目标接口是 <code>http://dev.com/test</code>，你就可以用 <code>pathRewrite</code>，遇到 <code>/api</code> 就去找代理 <code>http://dev.com/test</code> 并且把 <code>/api</code> 重写为 <code>/</code>。</li></ol><p>所以转发效果就是：</p><p><code>http://localhost:8080/api/test</code> -&gt; <code>http://dev.com/test</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue-cli3.0 里面的 vue.config.js做配置</span></span><br><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://dev.com&#x27;</span>,<span class="comment">// 后端接口域名</span></span><br><span class="line">        <span class="attr">ws</span>: <span class="literal">true</span>,<span class="comment">//如果要代理 websockets，配置这个参数</span></span><br><span class="line">        <span class="attr">secure</span>: <span class="literal">false</span>,<span class="comment">// 如果是https接口，需要配置这个参数</span></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,<span class="comment">// 是否跨域</span></span><br><span class="line">        <span class="attr">pathRewrite</span>:&#123;<span class="comment">// 路径重写</span></span><br><span class="line">            <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;/&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ol start="3"><li>对所有的接口都代理的，不止是检测到 <code>/api</code> 的接口，比如：</li></ol><p><code>http://localhost:8080/api/test</code> -&gt; <code>http://dev.com/api/test</code><br><code>http://localhost:8080/test</code> -&gt; <code>http://dev.com/test</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: <span class="string">&#x27;http:///dev.com&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>常用的devServer配置</strong></p><p><a href="https://webpack.docschina.org/configuration/dev-server/">DevServer配置文档</a></p><ol><li>devServer.disableHostCheck</li></ol><p>当设置为<code>true</code>时，此选项将绕过主机检查。不建议这样做，因为不检查主机的应用程序容易受到DNS重新绑定攻击。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">disableHostCheck</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>devServer.publicPath</li></ol><p>假设服务器在<code>http://localhost:8080</code>下运行，<code>output.filename</code>设置为<code>bundle.js</code>。默认情况下，<code>devServer.publicPath</code>是<code>/</code>，所以你的包可以作为<code>http://localhost:8080/bundle.js</code> 使用。将<code>devServer.publicPath</code>更改为 <code>/assets/</code> 就变为 <code>http://localhost:8080/assets/bundle.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">publicPath</span>: <span class="string">&#x27;/assets/&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>确保devServer.publicPath始终以正斜杠开头和结尾。</p></blockquote><p><strong>常用vue&#x2F;cli3的配置</strong></p><p><a href="https://cli.vuejs.org/zh/config/">vue&#x2F;cli3配置文档</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;我们本地开发调试一般是 &lt;code&gt;npm run serve&lt;/code&gt; 或 &lt;code&gt;yarn serve&lt;/code&gt;，然后打开 &lt;code&gt;localhost:8080&lt;/code&gt;（本机的IP），此时如果调用后端接口，可能会产生跨域，那如何解决呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决跨域的方案&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;jsonp&lt;ul&gt;
&lt;li&gt;只支持GET请求，JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cors&lt;ul&gt;
&lt;li&gt;CORS支持所有类型的HTTP请求，是跨域HTTP请求的根本解决方案&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node中间件代理(两次跨域)&lt;ul&gt;
&lt;li&gt;通过同源策略对服务器不加限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Nginx反向代理&lt;ul&gt;
&lt;li&gt;通过同源策略对服务器不加限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;日常工作中，生产环境用得比较多的跨域方案是cors和nginx反向代理。&lt;br&gt;本地项目中调试用的最多的就是 node 代理，当然像 nginx、charles（抓包工具）做代理也可以，只要你会配置。&lt;/p&gt;</summary>
    
    
    
    <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Vue" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/"/>
    
    
    <category term="Vue教程" scheme="https://xinyufeng.net/tags/Vue%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Vue Antd Admin 跨域代理配置</title>
    <link href="https://xinyufeng.net/2022/04/07/Vue-Antd-Admin-%E8%B7%A8%E5%9F%9F%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/"/>
    <id>https://xinyufeng.net/2022/04/07/Vue-Antd-Admin-%E8%B7%A8%E5%9F%9F%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</id>
    <published>2022-04-07T05:07:19.000Z</published>
    <updated>2022-04-08T02:02:07.405Z</updated>
    
    <content type="html"><![CDATA[<ol><li>修改文件 <code>src\services\api.js</code></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//跨域代理前缀</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">API_PROXY_PREFIX</span>=<span class="string">&#x27;/adminapi&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">BASE_URL</span> = process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span> ? process.<span class="property">env</span>.<span class="property">VUE_APP_API_BASE_URL</span> : <span class="variable constant_">API_PROXY_PREFIX</span></span><br><span class="line"><span class="comment">//const BASE_URL = process.env.VUE_APP_API_BASE_URL</span></span><br></pre></td></tr></table></figure><ol start="2"><li>修改文件<code>vue.config.js</code></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/adminapi&#x27;</span>: &#123; <span class="comment">//此处要与 /services/api.js 中的 API_PROXY_PREFIX 值保持一致</span></span><br><span class="line">        <span class="attr">target</span>: process.<span class="property">env</span>.<span class="property">VUE_APP_API_BASE_URL</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123;</span><br><span class="line">          <span class="string">&#x27;^/adminapi&#x27;</span>: <span class="string">&#x27;/&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启<code>yarn serve</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;修改文件 &lt;code&gt;src\services\api.js&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Vue" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/"/>
    
    
    <category term="Vue教程" scheme="https://xinyufeng.net/tags/Vue%E6%95%99%E7%A8%8B/"/>
    
    <category term="Vue技巧" scheme="https://xinyufeng.net/tags/Vue%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2模型的关联模型使用</title>
    <link href="https://xinyufeng.net/2022/04/06/Yii2%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%85%B3%E8%81%94%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8/"/>
    <id>https://xinyufeng.net/2022/04/06/Yii2%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%85%B3%E8%81%94%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8/</id>
    <published>2022-04-06T07:55:21.000Z</published>
    <updated>2022-04-06T08:14:44.492Z</updated>
    
    <content type="html"><![CDATA[<p><code>Active Record</code> 可以将相关数据集中进来， 使其可以通过原始数据轻松访问。 例如，客户数据与订单数据相关 因为一个客户可能已经存放了一个或多个订单。这种关系通过适当的声明， 你可以使用 <code>$customer-&gt;orders</code> 表达式访问客户的订单信息 这表达式将返回包含 <code>Order Active Record</code> 实例的客户订单信息的数组。</p><p><strong>声明关联关系</strong></p><p>你必须先在 <code>Active Record</code> 类中定义关联关系，才能使用 <code>Active Record</code> 的关联数据。 简单地为每个需要定义关联关系声明一个 关联方法 即可，如下所示，</p><span id="more"></span><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Customer</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getOrders</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">hasMany</span>(<span class="title class_">Order</span>::<span class="title function_ invoke__">className</span>(), [<span class="string">&#x27;customer_id&#x27;</span> =&gt; <span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCustomer</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">hasOne</span>(<span class="title class_">Customer</span>::<span class="title function_ invoke__">className</span>(), [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="string">&#x27;customer_id&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述的代码中，我们为 <code>Customer</code> 类声明了一个 <code>orders</code> 关联， 和为 <code>Order</code> 声明了一个 <code>customer</code> 关联。</p><p>每个关联方法必须这样命名：<code>getXyz</code>。然后我们通过 <code>xyz</code>（首字母小写）调用这个关联名。 请注意关联名是<em>大小写敏感</em>的。</p><p>当声明一个关联关系的时候，必须指定好以下的信息：</p><ul><li>关联的对应关系：通过调用 <code>hasMany()</code> 或者 <code>hasOne()</code> 指定。在上面的例子中，您可以很容易看出这样的关联声明： 一个客户可以有很多订单，而每个订单只有一个客户。</li><li>相关联 <code>Active Record</code> 类名：用来指定为 <code>hasMany()</code> 或者 <code>hasOne()</code> 方法的第一个参数。 推荐的做法是调用 <code>Xyz::className()</code> 来获取类名称的字符串，以便您 可以使用 IDE 的自动补全，以及让编译阶段的错误检测生效。</li><li>两组数据的关联列：用以指定两组数据相关的列（<code>hasOne()</code>&#x2F;<code>hasMany()</code> 的第二个参数）。 数组的值填的是主数据的列（当前要声明关联的 <code>Active Record</code> 类为主数据）， 而数组的键要填的是相关数据的列。</li></ul><p>一个简单的口诀，先附表的主键，后主表的主键。 正如上面的例子，<code>customer_id</code> 是 <code>Order</code> 的属性，而 <code>id</code>是 <code>Customer</code> 的属性。 （译者注：<code>hasMany()</code> 的第二个参数，这个数组键值顺序不要弄反了）</p><p><strong>访问关联数据</strong></p><p>定义了关联关系后，你就可以通过关联名访问相应的关联数据了。就像 访问一个由关联方法定义的对象一样，具体概念请查看 属性。 因此，现在我们可以称它为 关联属性 了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SELECT * FROM `customer` WHERE `id` = 123</span></span><br><span class="line"><span class="variable">$customer</span> = <span class="title class_">Customer</span>::<span class="title function_ invoke__">findOne</span>(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// SELECT * FROM `order` WHERE `customer_id` = 123</span></span><br><span class="line"><span class="comment">// $orders 是由 Order 类组成的数组</span></span><br><span class="line"><span class="variable">$orders</span> = <span class="variable">$customer</span>-&gt;orders;</span><br></pre></td></tr></table></figure><blockquote><p>提示： 当你通过 <code>getter</code> 方法 <code>getXyz()</code> 声明了一个叫 <code>xyz</code> 的关联属性，你就可以像 属性 那样访问 <code>xyz</code>。注意这个命名是<em>区分大小写</em>的。</p></blockquote><p>如果使用 <code>hasMany() </code>声明关联关系，则访问此关联属性 将返回相关的 <code>Active Record</code> 实例的数组； 如果使用 <code>hasOne()</code> 声明关联关系，访问此关联属性 将返回相关的 <code>Active Record</code> 实例，如果没有找到相关数据的话，则返回 <code>null</code>。</p><p>当你第一次访问关联属性时，将执行 SQL 语句获取数据，如 上面的例子所示。如果再次访问相同的属性，将返回先前的结果，而不会重新执行 SQL 语句。要强制重新执行 SQL 语句，你应该先 <code>unset</code> 这个关联属性， 如：<code>unset($ customer-&gt; orders)</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$customer</span>-&gt;orders; <span class="comment">// 获得 `Order` 对象的数组</span></span><br><span class="line"><span class="variable">$customer</span>-&gt;<span class="title function_ invoke__">getOrders</span>(); <span class="comment">// 返回 ActiveQuery 类的实例</span></span><br></pre></td></tr></table></figure><p><strong>设置别名</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCustomer</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">hasOne</span>(<span class="title class_">Customer</span>::<span class="title function_ invoke__">className</span>(), [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="string">&#x27;customer_id&#x27;</span>])-&gt;<span class="title function_ invoke__">alias</span>(<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关联查询 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$order</span> = <span class="title class_">Order</span>::<span class="title function_ invoke__">find</span>()-&gt;<span class="title function_ invoke__">joinWith</span>(<span class="string">&#x27;customer&#x27;</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">where</span>([<span class="string">&#x27;filter1&#x27;</span>=&gt;<span class="variable">$filter1</span>, <span class="string">&#x27;filter2&#x27;</span>=&gt;<span class="variable">$filter2</span>])</span><br><span class="line">            -&gt;<span class="title function_ invoke__">andWhere</span>([<span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;c.filter3&#x27;</span>, <span class="variable">$filter3</span>])</span><br><span class="line">            -&gt;<span class="title function_ invoke__">andWhere</span>([<span class="string">&#x27;&lt;=&#x27;</span>, <span class="string">&#x27;cfilter4&#x27;</span>, <span class="variable">$filter4</span>])</span><br><span class="line">            -&gt;<span class="title function_ invoke__">one</span>();</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;Active Record&lt;/code&gt; 可以将相关数据集中进来， 使其可以通过原始数据轻松访问。 例如，客户数据与订单数据相关 因为一个客户可能已经存放了一个或多个订单。这种关系通过适当的声明， 你可以使用 &lt;code&gt;$customer-&amp;gt;orders&lt;/code&gt; 表达式访问客户的订单信息 这表达式将返回包含 &lt;code&gt;Order Active Record&lt;/code&gt; 实例的客户订单信息的数组。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;声明关联关系&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你必须先在 &lt;code&gt;Active Record&lt;/code&gt; 类中定义关联关系，才能使用 &lt;code&gt;Active Record&lt;/code&gt; 的关联数据。 简单地为每个需要定义关联关系声明一个 关联方法 即可，如下所示，&lt;/p&gt;</summary>
    
    
    
    <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
    <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>MySQL5.7.26错误问题 mysqld.exe: Error while setting value &#39;STRICT_TRANS_TABLES, NO_ZERO_IN_DATE, NO_ZERO_DATE, ERROR_FOR_DIVISION_BY_ZERO, NO_AUTO_CREATE_USER, NO_ENGINE_SUBSTITUTION&#39; to &#39;sql_mode&#39;</title>
    <link href="https://xinyufeng.net/2022/03/28/MySQL5-7-26%E9%94%99%E8%AF%AF%E9%97%AE%E9%A2%98-mysqld-exe-Error-while-setting-value-STRICT-TRANS-TABLES-NO-ZERO-IN-DATE-NO-ZERO-DATE-ERROR-FOR-DIVISION-BY-ZERO-NO-AUTO-CREATE-USER-NO-ENGINE-SUBSTITUTION-to-sql-mode/"/>
    <id>https://xinyufeng.net/2022/03/28/MySQL5-7-26%E9%94%99%E8%AF%AF%E9%97%AE%E9%A2%98-mysqld-exe-Error-while-setting-value-STRICT-TRANS-TABLES-NO-ZERO-IN-DATE-NO-ZERO-DATE-ERROR-FOR-DIVISION-BY-ZERO-NO-AUTO-CREATE-USER-NO-ENGINE-SUBSTITUTION-to-sql-mode/</id>
    <published>2022-03-28T01:56:34.000Z</published>
    <updated>2022-03-28T02:02:19.606Z</updated>
    
    <content type="html"><![CDATA[<p>这样的问题出现，是因为MySQL的配置文件<code>my.ini</code>中<code>sql_mode</code>的值，逗号后面加上了空格导致的无法启动，需要手动删除空格就可以了。</p><p><code>my.ini</code>原来部分代码：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tmp_table_size</span>=<span class="number">64</span>M</span><br><span class="line"><span class="attr">wait_timeout</span>=<span class="number">120</span></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES, NO_ZERO_IN_DATE, NO_ZERO_DATE, ERROR_FOR_DIVISION_BY_ZERO, NO_AUTO_CREATE_USER, NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><p><code>my.ini</code>修改后代码：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tmp_table_size</span>=<span class="number">64</span>M</span><br><span class="line"><span class="attr">wait_timeout</span>=<span class="number">120</span></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><p>重启即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这样的问题出现，是因为MySQL的配置文件&lt;code&gt;my.ini&lt;/code&gt;中&lt;code&gt;sql_mode&lt;/code&gt;的值，逗号后面加上了空格导致的无法启动，需要手动删除空格就可以了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;my.ini&lt;/code&gt;原来部分代码：&lt;/p&gt;
&lt;fi</summary>
      
    
    
    
    <category term="数据库" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
    <category term="MySQL错误" scheme="https://xinyufeng.net/tags/MySQL%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>JS 倒计时定时器</title>
    <link href="https://xinyufeng.net/2022/03/04/JS-%E5%80%92%E8%AE%A1%E6%97%B6%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
    <id>https://xinyufeng.net/2022/03/04/JS-%E5%80%92%E8%AE%A1%E6%97%B6%E5%AE%9A%E6%97%B6%E5%99%A8/</id>
    <published>2022-03-04T01:38:20.000Z</published>
    <updated>2022-03-04T01:41:13.381Z</updated>
    
    <content type="html"><![CDATA[<p>JS 60秒倒计时代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>倒计时定时器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.main</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-direction</span>: row;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#timer</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;timer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;startBtn&quot;</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> startBtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;startBtn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> timerNode = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;timer&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> senond = <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">timer</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            startBtn.<span class="property">style</span> = <span class="string">&quot;display:none&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            senond = <span class="number">60</span>;</span></span><br><span class="line"><span class="language-javascript">            timerNode.<span class="property">innerText</span> = senond;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> setTimer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    senond--;</span></span><br><span class="line"><span class="language-javascript">                    timerNode.<span class="property">innerText</span> = senond;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(senond);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (senond &lt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">resolve</span>(setTimer);</span></span><br><span class="line"><span class="language-javascript">                        startBtn.<span class="property">style</span> = <span class="string">&quot;display:block&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">            promise.<span class="title function_">then</span>(<span class="function">(<span class="params">setTimer</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="built_in">clearInterval</span>(setTimer);</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        startBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, timer, <span class="literal">false</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;JS 60秒倒计时代码&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp</summary>
      
    
    
    
    <category term="前端开发" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="JavaScript" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/JavaScript/"/>
    
    
    <category term="JS技巧" scheme="https://xinyufeng.net/tags/JS%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>PHP GD库转换输出为base64</title>
    <link href="https://xinyufeng.net/2022/01/11/PHP-GD%E5%BA%93%E8%BD%AC%E6%8D%A2%E8%BE%93%E5%87%BA%E4%B8%BAbase64/"/>
    <id>https://xinyufeng.net/2022/01/11/PHP-GD%E5%BA%93%E8%BD%AC%E6%8D%A2%E8%BE%93%E5%87%BA%E4%B8%BAbase64/</id>
    <published>2022-01-11T05:12:56.000Z</published>
    <updated>2022-01-11T06:41:13.553Z</updated>
    
    <content type="html"><![CDATA[<p>使用GD库的 <code>imagejpeg()</code> &#x2F; <code>imagepng()</code> 处理图片，它们直接写入所述图像数据，以输出流（或文件）。</p><p>如果你想获取图片文件内容则通过如下方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// $img = 要处理的图像资源;</span></span><br><span class="line"><span class="title function_ invoke__">ob_start</span>();<span class="comment">// 打开输出控制缓冲</span></span><br><span class="line"><span class="title function_ invoke__">imagepng</span>(<span class="variable">$img</span>);<span class="comment">// 显示PNG图像</span></span><br><span class="line"><span class="variable">$image_data</span> = <span class="title function_ invoke__">ob_get_contents</span>();<span class="comment">// 返回输出缓冲区的内容</span></span><br><span class="line"><span class="title function_ invoke__">imagedestroy</span>(<span class="variable">$img</span>);<span class="comment">// 释放与 image 关联的内存</span></span><br><span class="line"><span class="title function_ invoke__">ob_end_clean</span>();<span class="comment">// 清空（擦除）缓冲区并关闭输出缓冲</span></span><br></pre></td></tr></table></figure><p><code>$image_data</code>得到的数据就是图片文件的数据内容 或者 直接返回 <code>ob_end_clean()</code>是一样的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用GD库的 &lt;code&gt;imagejpeg()&lt;/code&gt; &amp;#x2F; &lt;code&gt;imagepng()&lt;/code&gt; 处理图片，它们直接写入所述图像数据，以输出流（或文件）。&lt;/p&gt;
&lt;p&gt;如果你想获取图片文件内容则通过如下方法：&lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    <category term="后端开发" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="PHP" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/PHP/"/>
    
    
    <category term="GD库" scheme="https://xinyufeng.net/tags/GD%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>windows下本地搭建https服务器</title>
    <link href="https://xinyufeng.net/2021/11/30/windows%E4%B8%8B%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BAhttps%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://xinyufeng.net/2021/11/30/windows%E4%B8%8B%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BAhttps%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2021-11-30T07:27:52.000Z</published>
    <updated>2021-12-01T01:31:10.663Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h2><ul><li>使用git的命令行工具或者<code>cmder</code></li><li>注意使用<code>cmd</code>命令行是不行的, <code>cmd</code>命令行并不能识别<code>openssl</code>命令</li></ul><p><strong>openssl genrsa 命令介绍</strong></p><p><code>openssl genrsa</code> 命令是会用来生成 RSA 私有秘钥，不会生成公钥，因为公钥提取自私钥。生成时是可以指定私钥<em>长度</em>和<em>密码保护</em>。<br>如果需要查看公钥或生成公钥，可以使用 <code>openssl rsa</code> 命令。</p><h2 id="创建私钥"><a href="#创建私钥" class="headerlink" title="创建私钥"></a>创建私钥</h2><blockquote><p>生成秘钥是生成证书的前提</p></blockquote><span id="more"></span><p>生成长度为 1024 的秘钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ openssl genrsa -out certificate.key 1024</span><br><span class="line">Generating RSA private key, 1024 bit long modulus (2 primes)</span><br><span class="line">...+++++</span><br><span class="line">...............................................+++++</span><br><span class="line">e is 65537 (0x010001)</span><br></pre></td></tr></table></figure><h2 id="创建证书请求"><a href="#创建证书请求" class="headerlink" title="创建证书请求"></a>创建证书请求</h2><p>需要输入一些列信息，最重要的是<code>Common Name</code>表示要使用https访问的域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ openssl req -new -out certificate.csr -key certificate.key</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">&#x27;.&#x27;</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [AU]:CN</span><br><span class="line">State or Province Name (full name) [Some-State]:ShanDong</span><br><span class="line">Locality Name (eg, city) []:QingDao</span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:</span><br><span class="line">Organizational Unit Name (eg, section) []:</span><br><span class="line">Common Name (e.g. server FQDN or YOUR name) []:chisheng.xin</span><br><span class="line">Email Address []:</span><br><span class="line"></span><br><span class="line">Please enter the following <span class="string">&#x27;extra&#x27;</span> attributes</span><br><span class="line">to be sent with your certificate request</span><br><span class="line">A challenge password []:123456</span><br><span class="line">An optional company name []:</span><br></pre></td></tr></table></figure><h2 id="签署服务器证书"><a href="#签署服务器证书" class="headerlink" title="签署服务器证书"></a>签署服务器证书</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ openssl x509 -req -in certificate.csr -out certificate.pem -signkey certificate.key -days 3650</span><br><span class="line">Signature ok</span><br><span class="line">subject=C = CN, ST = ShanDong, L = QingDao, O = Internet Widgits Pty Ltd, CN = chisheng.xin</span><br><span class="line">Getting Private key</span><br></pre></td></tr></table></figure><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><p>我这里使用的是PHPstudy配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen        443 ssl;</span><br><span class="line">ssl_certificate D:/phpstudy_pro/Extensions/Nginx1.15.11/conf/ssl/certificate.pem;</span><br><span class="line">ssl_certificate_key D:/phpstudy_pro/Extensions/Nginx1.15.11/conf/ssl/certificate.key;</span><br><span class="line">ssl_session_timeout 5m;</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">        server_name  chisheng.xin;</span><br><span class="line">        root   <span class="string">&quot;D:/phpstudy_pro/WWW/chisheng.xin&quot;</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">            index index.php index.html error/index.html;</span><br><span class="line">            error_page 400 /error/400.html;</span><br><span class="line">            error_page 403 /error/403.html;</span><br><span class="line">            error_page 404 /error/404.html;</span><br><span class="line">            error_page 500 /error/500.html;</span><br><span class="line">            error_page 501 /error/501.html;</span><br><span class="line">            error_page 502 /error/502.html;</span><br><span class="line">            error_page 503 /error/503.html;</span><br><span class="line">            error_page 504 /error/504.html;</span><br><span class="line">            error_page 505 /error/505.html;</span><br><span class="line">            error_page 506 /error/506.html;</span><br><span class="line">            error_page 507 /error/507.html;</span><br><span class="line">            error_page 509 /error/509.html;</span><br><span class="line">            error_page 510 /error/510.html;</span><br><span class="line">            include D:/phpstudy_pro/WWW/chisheng.xin/nginx.htaccess;</span><br><span class="line">            autoindex  off;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ \.php(.*)$ &#123;</span><br><span class="line">            fastcgi_pass   127.0.0.1:9004;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;</span><br><span class="line">            fastcgi_param  SCRIPT_FILENAME  $document_root<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            fastcgi_param  PATH_INFO  <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">            fastcgi_param  PATH_TRANSLATED  $document_root<span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">            include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后重启Nginx</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;使用工具&quot;&gt;&lt;a href=&quot;#使用工具&quot; class=&quot;headerlink&quot; title=&quot;使用工具&quot;&gt;&lt;/a&gt;使用工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用git的命令行工具或者&lt;code&gt;cmder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;注意使用&lt;code&gt;cmd&lt;/code&gt;命令行是不行的, &lt;code&gt;cmd&lt;/code&gt;命令行并不能识别&lt;code&gt;openssl&lt;/code&gt;命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;openssl genrsa 命令介绍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;openssl genrsa&lt;/code&gt; 命令是会用来生成 RSA 私有秘钥，不会生成公钥，因为公钥提取自私钥。生成时是可以指定私钥&lt;em&gt;长度&lt;/em&gt;和&lt;em&gt;密码保护&lt;/em&gt;。&lt;br&gt;如果需要查看公钥或生成公钥，可以使用 &lt;code&gt;openssl rsa&lt;/code&gt; 命令。&lt;/p&gt;
&lt;h2 id=&quot;创建私钥&quot;&gt;&lt;a href=&quot;#创建私钥&quot; class=&quot;headerlink&quot; title=&quot;创建私钥&quot;&gt;&lt;/a&gt;创建私钥&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;生成秘钥是生成证书的前提&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="运维" scheme="https://xinyufeng.net/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="SSL证书" scheme="https://xinyufeng.net/tags/SSL%E8%AF%81%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 自定义省市区三级联动挂件</title>
    <link href="https://xinyufeng.net/2021/11/26/Yii2-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E6%8C%82%E4%BB%B6/"/>
    <id>https://xinyufeng.net/2021/11/26/Yii2-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E6%8C%82%E4%BB%B6/</id>
    <published>2021-11-26T08:38:48.000Z</published>
    <updated>2021-11-29T07:47:26.209Z</updated>
    
    <content type="html"><![CDATA[<p>废话不多说直接上车</p><ol><li>创建地区表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `region`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `region`  (</span><br><span class="line">  `region_id` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;地区ID号&#x27;</span>,</span><br><span class="line">  `parent_id` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;地区父级ID&#x27;</span>,</span><br><span class="line">  `region_name` <span class="type">varchar</span>(<span class="number">120</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;地区名称&#x27;</span>,</span><br><span class="line">  `region_type` tinyint(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">2</span> COMMENT <span class="string">&#x27;地区级别&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`region_id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `parent_id`(`parent_id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `region_name`(`region_name`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `region_type`(`region_type`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `agency_id`(`agency_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">659009509</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_unicode_ci COMMENT <span class="operator">=</span> <span class="string">&#x27;地区&#x27;</span> ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>创建 Region Model 文件</li></ol><p><code>/common/models/Region.php</code></p><span id="more"></span><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">common</span>\<span class="title class_">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">ArrayHelper</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Region</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#123;&#123;%region&#125;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [[<span class="string">&#x27;region_name&#x27;</span>], <span class="string">&#x27;required&#x27;</span>],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;region_id&#x27;</span> =&gt; <span class="string">&#x27;地区ID&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;parent_id&#x27;</span> =&gt; <span class="string">&#x27;地区父级ID&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;region_name&#x27;</span> =&gt; <span class="string">&#x27;地区名称&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;region_type&#x27;</span> =&gt; <span class="string">&#x27;地区级别&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $parent_id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getRegion</span>(<span class="params"><span class="variable">$parent_id</span>=<span class="number">1</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$regions</span> = <span class="built_in">static</span>::<span class="title function_ invoke__">find</span>()-&gt;<span class="title function_ invoke__">where</span>([<span class="string">&#x27;parent_id&#x27;</span>=&gt;<span class="variable">$parent_id</span>])-&gt;<span class="title function_ invoke__">asArray</span>()-&gt;<span class="title function_ invoke__">all</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">ArrayHelper</span>::<span class="title function_ invoke__">map</span>(<span class="variable">$regions</span>, <span class="string">&#x27;region_id&#x27;</span>, <span class="string">&#x27;region_name&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>创建ajax异步获取地区数据链接方法</li></ol><p><code>/backend/controllers/common/AjaxController.php</code>，这个自行定义，只要可以调用就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">backend</span>\<span class="title class_">controllers</span>\<span class="title class_">common</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">backend</span>\<span class="title">controllers</span>\<span class="title">BaseController</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Region</span> <span class="keyword">as</span> <span class="title">RegionModel</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">Html</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Response</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ajax联动接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AjaxController</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//免认证方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">allowAction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 地区联动查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionGetRegion</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$parent_id</span> = <span class="title class_">Yii</span>::<span class="variable">$app</span>-&gt;request-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;parent_id&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="variable">$regions</span> = <span class="title class_">RegionModel</span>::<span class="title function_ invoke__">getRegion</span>(<span class="variable">$parent_id</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$result</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$regions</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>)&#123;</span><br><span class="line">            <span class="variable">$result</span> .= <span class="title class_">Html</span>::<span class="title function_ invoke__">tag</span>(<span class="string">&#x27;option&#x27;</span>, <span class="variable">$val</span>, [<span class="string">&#x27;value&#x27;</span> =&gt; <span class="variable">$key</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>创建地区三级联动挂件</li></ol><p><code>/common/widgets/Region.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">common</span>\<span class="title class_">widgets</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">InvalidParamException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Widget</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">ArrayHelper</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">Html</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Region</span> <span class="keyword">extends</span> <span class="title">Widget</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$model</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 此属性不用处理</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$attribute</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 外层属性配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$options</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 省份配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$province</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 城市配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$city</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 县/区配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$district</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> mixed 数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$url</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;model) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InvalidParamException</span>(<span class="string">&#x27;model不能为null!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;province) || <span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;city)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InvalidParamException</span>(<span class="string">&#x27;province和city不能为空！&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$cityId</span> = <span class="title class_">Html</span>::<span class="title function_ invoke__">getInputId</span>(<span class="variable">$this</span>-&gt;model, <span class="variable">$this</span>-&gt;city[<span class="string">&#x27;attribute&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;city[<span class="string">&#x27;options&#x27;</span>][<span class="string">&#x27;prompt&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;city[<span class="string">&#x27;options&#x27;</span>][<span class="string">&#x27;prompt&#x27;</span>] = <span class="string">&#x27;选择城市&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$cityDefault</span> = <span class="title class_">Html</span>::<span class="title function_ invoke__">renderSelectOptions</span>(<span class="string">&#x27;city&#x27;</span>, [<span class="string">&#x27;&#x27;</span> =&gt; <span class="variable">$this</span>-&gt;city[<span class="string">&#x27;options&#x27;</span>][<span class="string">&#x27;prompt&#x27;</span>]]);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$joinChar</span> = <span class="title function_ invoke__">strripos</span>(<span class="variable">$this</span>-&gt;url, <span class="string">&#x27;?&#x27;</span>) ? <span class="string">&#x27;&amp;&#x27;</span> : <span class="string">&#x27;?&#x27;</span>;</span><br><span class="line">        <span class="variable">$url</span> = <span class="variable language_">$this</span>-&gt;url . <span class="variable">$joinChar</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;district)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;district[<span class="string">&#x27;options&#x27;</span>][<span class="string">&#x27;prompt&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;district[<span class="string">&#x27;options&#x27;</span>][<span class="string">&#x27;prompt&#x27;</span>] = <span class="string">&#x27;选择县/区&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$districtId</span> = <span class="title class_">Html</span>::<span class="title function_ invoke__">getInputId</span>(<span class="variable">$this</span>-&gt;model, <span class="variable">$this</span>-&gt;district[<span class="string">&#x27;attribute&#x27;</span>]);</span><br><span class="line">            <span class="variable">$districtDefault</span> = <span class="title class_">Html</span>::<span class="title function_ invoke__">renderSelectOptions</span>(<span class="string">&#x27;district&#x27;</span>, [<span class="string">&#x27;&#x27;</span> =&gt; <span class="variable">$this</span>-&gt;district[<span class="string">&#x27;options&#x27;</span>][<span class="string">&#x27;prompt&#x27;</span>]]);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;city[<span class="string">&#x27;options&#x27;</span>] = <span class="title class_">ArrayHelper</span>::<span class="title function_ invoke__">merge</span>(<span class="variable">$this</span>-&gt;city[<span class="string">&#x27;options&#x27;</span>], [</span><br><span class="line">                <span class="string">&#x27;onchange&#x27;</span> =&gt; <span class="string">&quot;</span></span><br><span class="line"><span class="string">                    if($(this).val() != &#x27;&#x27;)&#123;</span></span><br><span class="line"><span class="string">                        $.get(&#x27;<span class="subst">&#123;$url&#125;</span>parent_id=&#x27;+$(this).val(), function(data) &#123;</span></span><br><span class="line"><span class="string">                            $(&#x27;#<span class="subst">&#123;$districtId&#125;</span>&#x27;).html(&#x27;<span class="subst">&#123;$districtDefault&#125;</span>&#x27;+data);</span></span><br><span class="line"><span class="string">                        &#125;)</span></span><br><span class="line"><span class="string">                    &#125;else&#123;</span></span><br><span class="line"><span class="string">                        $(&#x27;#<span class="subst">&#123;$districtId&#125;</span>&#x27;).html(&#x27;<span class="subst">&#123;$districtDefault&#125;</span>&#x27;);</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &quot;</span></span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$provinceOnchangeHtml</span> = <span class="string">&quot;</span></span><br><span class="line"><span class="string">                if($(this).val()!=&#x27;&#x27;)&#123;</span></span><br><span class="line"><span class="string">                    $.get(&#x27;<span class="subst">&#123;$url&#125;</span>parent_id=&#x27;+$(this).val(), function(data) &#123;</span></span><br><span class="line"><span class="string">                        $(&#x27;#<span class="subst">&#123;$cityId&#125;</span>&#x27;).html(&#x27;<span class="subst">&#123;$cityDefault&#125;</span>&#x27;+data);</span></span><br><span class="line"><span class="string">                    &#125;)</span></span><br><span class="line"><span class="string">                &#125;else&#123;</span></span><br><span class="line"><span class="string">                    $(&#x27;#<span class="subst">&#123;$cityId&#125;</span>&#x27;).html(&#x27;<span class="subst">&#123;$cityDefault&#125;</span>&#x27;);</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$districtId</span>)) &#123;</span><br><span class="line">            <span class="variable">$provinceOnchangeHtml</span> .= <span class="string">&quot;$(&#x27;#<span class="subst">&#123;$districtId&#125;</span>&#x27;).html(&#x27;<span class="subst">&#123;$districtDefault&#125;</span>&#x27;);&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;province[<span class="string">&#x27;options&#x27;</span>] = <span class="title class_">ArrayHelper</span>::<span class="title function_ invoke__">merge</span>(<span class="variable">$this</span>-&gt;province[<span class="string">&#x27;options&#x27;</span>], [</span><br><span class="line">            <span class="string">&#x27;onchange&#x27;</span> =&gt; <span class="variable">$provinceOnchangeHtml</span></span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$output</span>[] = <span class="title class_">Html</span>::<span class="title function_ invoke__">activeDropDownList</span>(<span class="variable">$this</span>-&gt;model, <span class="variable">$this</span>-&gt;province[<span class="string">&#x27;attribute&#x27;</span>], <span class="variable">$this</span>-&gt;province[<span class="string">&#x27;items&#x27;</span>],</span><br><span class="line">            <span class="variable">$this</span>-&gt;province[<span class="string">&#x27;options&#x27;</span>]);</span><br><span class="line">        <span class="variable">$output</span>[] = <span class="title class_">Html</span>::<span class="title function_ invoke__">activeDropDownList</span>(<span class="variable">$this</span>-&gt;model, <span class="variable">$this</span>-&gt;city[<span class="string">&#x27;attribute&#x27;</span>], <span class="variable">$this</span>-&gt;city[<span class="string">&#x27;items&#x27;</span>],</span><br><span class="line">            <span class="variable">$this</span>-&gt;city[<span class="string">&#x27;options&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;district)) &#123;</span><br><span class="line">            <span class="variable">$output</span>[] = <span class="title class_">Html</span>::<span class="title function_ invoke__">activeDropDownList</span>(<span class="variable">$this</span>-&gt;model, <span class="variable">$this</span>-&gt;district[<span class="string">&#x27;attribute&#x27;</span>], <span class="variable">$this</span>-&gt;district[<span class="string">&#x27;items&#x27;</span>],</span><br><span class="line">                <span class="variable">$this</span>-&gt;district[<span class="string">&#x27;options&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Html</span>::<span class="title function_ invoke__">tag</span>(<span class="string">&#x27;div&#x27;</span>, @<span class="title function_ invoke__">implode</span>(<span class="string">&quot;\n&quot;</span>, <span class="variable">$output</span>), <span class="variable">$this</span>-&gt;options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>视图文件添加地区挂件</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Region</span> <span class="keyword">as</span> <span class="title">RegionModel</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">widgets</span>\<span class="title">Region</span> <span class="keyword">as</span> <span class="title">RegionWidget</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?=</span><span class="variable">$form</span>-&gt;<span class="title function_ invoke__">field</span>(<span class="variable">$model</span>, <span class="string">&#x27;city&#x27;</span>)-&gt;<span class="title function_ invoke__">widget</span>(<span class="title class_">RegionWidget</span>::<span class="title function_ invoke__">className</span>(), [</span><br><span class="line">        <span class="string">&#x27;options&#x27;</span> =&gt; [<span class="string">&#x27;class&#x27;</span>=&gt;<span class="string">&#x27;c-md-4&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;model&#x27;</span> =&gt; <span class="variable">$model</span>,</span><br><span class="line">        <span class="string">&#x27;url&#x27;</span> =&gt; <span class="title class_">Url</span>::<span class="title function_ invoke__">toRoute</span>([<span class="string">&#x27;/common/ajax/get-region&#x27;</span>]),</span><br><span class="line">        <span class="string">&#x27;province&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;attribute&#x27;</span> =&gt; <span class="string">&#x27;province&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;items&#x27;</span> =&gt; <span class="title class_">RegionModel</span>::<span class="title function_ invoke__">getRegion</span>(),</span><br><span class="line">            <span class="string">&#x27;options&#x27;</span> =&gt; [<span class="string">&#x27;class&#x27;</span>=&gt;<span class="string">&#x27;form-control c-md-3 inline&#x27;</span>, <span class="string">&#x27;prompt&#x27;</span>=&gt;<span class="string">&#x27;选择省份&#x27;</span>]</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;city&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;attribute&#x27;</span> =&gt; <span class="string">&#x27;city&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;items&#x27;</span> =&gt; <span class="title class_">RegionModel</span>::<span class="title function_ invoke__">getRegion</span>(<span class="variable">$model</span>[<span class="string">&#x27;province&#x27;</span>]),</span><br><span class="line">            <span class="string">&#x27;options&#x27;</span> =&gt; [<span class="string">&#x27;class&#x27;</span>=&gt;<span class="string">&#x27;form-control c-md-3 inline&#x27;</span>, <span class="string">&#x27;prompt&#x27;</span>=&gt;<span class="string">&#x27;选择城市&#x27;</span>]</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;district&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;attribute&#x27;</span> =&gt; <span class="string">&#x27;district&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;items&#x27;</span> =&gt; <span class="title class_">RegionModel</span>::<span class="title function_ invoke__">getRegion</span>(<span class="variable">$model</span>[<span class="string">&#x27;city&#x27;</span>]),</span><br><span class="line">            <span class="string">&#x27;options&#x27;</span> =&gt; [<span class="string">&#x27;class&#x27;</span>=&gt;<span class="string">&#x27;form-control c-md-3 inline&#x27;</span>, <span class="string">&#x27;prompt&#x27;</span>=&gt;<span class="string">&#x27;选择县/区&#x27;</span>]</span><br><span class="line">        ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Tip： </p><ol><li><code>Url::toRoute([&#39;/common/ajax/get-region&#39;])</code>生成的链接，调用是第3步的方法</li><li><code>&#39;attribute&#39; =&gt; &#39;province&#39;</code> 在<code>$model</code>模型添加 <code>province</code>字段</li><li><code>&#39;attribute&#39; =&gt; &#39;city&#39;</code> 在<code>$model</code>模型添加 <code>city</code>字段</li><li><code>&#39;attribute&#39; =&gt; &#39;district&#39;</code> 在<code>$model</code>模型添加 <code>district</code>字段</li></ol></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;废话不多说直接上车&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建地区表结构&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; IF &lt;span class=&quot;keyword&quot;&gt;EXISTS&lt;/span&gt; `region`;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; `region`  (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `region_id` &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) UNSIGNED &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT COMMENT &lt;span class=&quot;string&quot;&gt;&amp;#x27;地区ID号&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `parent_id` &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) UNSIGNED &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; COMMENT &lt;span class=&quot;string&quot;&gt;&amp;#x27;地区父级ID&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `region_name` &lt;span class=&quot;type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;) &lt;span class=&quot;type&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; utf8mb4 &lt;span class=&quot;keyword&quot;&gt;COLLATE&lt;/span&gt; utf8mb4_unicode_ci &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; COMMENT &lt;span class=&quot;string&quot;&gt;&amp;#x27;地区名称&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `region_type` tinyint(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; COMMENT &lt;span class=&quot;string&quot;&gt;&amp;#x27;地区级别&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;PRIMARY&lt;/span&gt; KEY (`region_id`) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  INDEX `parent_id`(`parent_id`) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  INDEX `region_name`(`region_name`) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  INDEX `region_type`(`region_type`) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  INDEX `agency_id`(`agency_id`) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) ENGINE &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; InnoDB AUTO_INCREMENT &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;659009509&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; utf8mb4 &lt;span class=&quot;keyword&quot;&gt;COLLATE&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; utf8mb4_unicode_ci COMMENT &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;地区&amp;#x27;&lt;/span&gt; ROW_FORMAT &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Dynamic&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;创建 Region Model 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;/common/models/Region.php&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
    <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 ActiveRecord多表关联和多表关联搜索的实现</title>
    <link href="https://xinyufeng.net/2021/11/23/Yii2-ActiveRecord%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E5%92%8C%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E6%90%9C%E7%B4%A2%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://xinyufeng.net/2021/11/23/Yii2-ActiveRecord%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E5%92%8C%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E6%90%9C%E7%B4%A2%E7%9A%84%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-11-23T05:21:34.000Z</published>
    <updated>2021-11-23T05:56:03.132Z</updated>
    
    <content type="html"><![CDATA[<p>需求：假设我们有一张商品表goods和一张商品分类表categories，通过商品分类简称搜索商品列表</p><p>goods表AR</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title class_">common</span>\<span class="title class_">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Goods</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#123;&#123;%goods&#125;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span> =&gt; <span class="string">&#x27;商品ID&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="string">&#x27;商品标题&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;cid&#x27;</span> =&gt; <span class="string">&#x27;商品分类ID&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;created_at&#x27;</span> =&gt; <span class="string">&#x27;添加时间&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;updated_at&#x27;</span> =&gt; <span class="string">&#x27;修改时间&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 与商品分类表关联</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCategory</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">hasOne</span>(<span class="title class_">Category</span>::<span class="title function_ invoke__">className</span>(), [<span class="string">&#x27;id&#x27;</span>=&gt;<span class="string">&#x27;cid&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>categories表AR</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title class_">common</span>\<span class="title class_">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Category</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#123;&#123;%categories&#125;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span> =&gt; <span class="string">&#x27;商品分类ID&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span> =&gt; <span class="string">&#x27;商品分类标题&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;short_title&#x27;</span> =&gt; <span class="string">&#x27;商品分类简称&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;created_at&#x27;</span> =&gt; <span class="string">&#x27;添加时间&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;updated_at&#x27;</span> =&gt; <span class="string">&#x27;修改时间&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>商品搜索模型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">common</span>\<span class="title class_">models</span>\<span class="title class_">search</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">data</span>\<span class="title">ActiveDataProvider</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Goods</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsSearch</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$title</span>;<span class="comment">// 商品标题</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$short_title</span>;<span class="comment">// 商品分类简称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//检索规则</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [[<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;short_title&#x27;</span>], <span class="string">&#x27;string&#x27;</span>],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//搜索函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"><span class="variable">$params</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$query</span> = <span class="title class_">Goods</span>::<span class="title function_ invoke__">find</span>()-&gt;<span class="title function_ invoke__">joinWith</span>([<span class="string">&#x27;category&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">load</span>(<span class="variable">$params</span>) &amp;&amp; <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">validate</span>()) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;title)) <span class="variable">$query</span>-&gt;<span class="title function_ invoke__">andFilterWhere</span>([<span class="string">&#x27;goods.title&#x27;</span> =&gt; <span class="variable">$this</span>-&gt;title]);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;short_title)) <span class="variable">$query</span>-&gt;<span class="title function_ invoke__">andFilterWhere</span>([<span class="string">&#x27;category.short_title&#x27;</span> =&gt; <span class="variable">$this</span>-&gt;status]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$dataProvider</span> = <span class="keyword">new</span> <span class="title class_">ActiveDataProvider</span>([</span><br><span class="line">            <span class="string">&#x27;query&#x27;</span> =&gt; <span class="variable">$query</span>,</span><br><span class="line">            <span class="string">&#x27;sort&#x27;</span> =&gt; [</span><br><span class="line">                <span class="string">&#x27;defaultOrder&#x27;</span> =&gt; [</span><br><span class="line">                    <span class="string">&#x27;id&#x27;</span> =&gt; SORT_DESC,</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&#x27;pagination&#x27;</span> =&gt; [</span><br><span class="line">                <span class="string">&#x27;pageSize&#x27;</span> =&gt; <span class="number">15</span>,</span><br><span class="line">            ],</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$dataProvider</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;需求：假设我们有一张商品表goods和一张商品分类表categories，通过商品分类简称搜索商品列表&lt;/p&gt;
&lt;p&gt;goods表AR&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;common&lt;/span&gt;\&lt;span class=&quot;title class_&quot;&gt;models&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Yii&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;yii&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;db&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;ActiveRecord&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Goods&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ActiveRecord&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * &amp;#123;&lt;span class=&quot;doctag&quot;&gt;@inheritdoc&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tableName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#123;&amp;#123;%goods&amp;#125;&amp;#125;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * &amp;#123;&lt;span class=&quot;doctag&quot;&gt;@inheritdoc&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;attributeLabels&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;商品ID&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;#x27;title&amp;#x27;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;商品标题&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;#x27;cid&amp;#x27;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;商品分类ID&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;#x27;created_at&amp;#x27;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;添加时间&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;#x27;updated_at&amp;#x27;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;修改时间&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * 与商品分类表关联&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getCategory&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;variable language_&quot;&gt;$this&lt;/span&gt;-&amp;gt;&lt;span class=&quot;title function_ invoke__&quot;&gt;hasOne&lt;/span&gt;(&lt;span class=&quot;title class_&quot;&gt;Category&lt;/span&gt;::&lt;span class=&quot;title function_ invoke__&quot;&gt;className&lt;/span&gt;(), [&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&amp;#x27;cid&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
    <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
</feed>

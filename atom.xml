<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Peak Xin</title>
  
  <subtitle>小峰的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xinyufeng.net/"/>
  <updated>2023-05-18T06:00:31.805Z</updated>
  <id>https://xinyufeng.net/</id>
  
  <author>
    <name>Peak Xin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在微信实现链接的分享</title>
    <link href="https://xinyufeng.net/2023/05/18/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%AE%9E%E7%8E%B0%E9%93%BE%E6%8E%A5%E7%9A%84%E5%88%86%E4%BA%AB/"/>
    <id>https://xinyufeng.net/2023/05/18/在微信实现链接的分享/</id>
    <published>2023-05-18T05:28:31.000Z</published>
    <updated>2023-05-18T06:00:31.805Z</updated>
    
    <content type="html"><![CDATA[<p>微信分享会使用到微信JS-SDK，所以需要再微信公众号后台配置<strong>JS接口安全域名</strong></p><p>微信官方关于<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#112" target="_blank" rel="noopener">分享接口开发文档</a></p><p>实现代码如下：</p><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>微信分享<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../static/lib/jquery/1.12.4/jquery.min.js"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入jweixin js文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//res2.wx.qq.com/open/js/jweixin-1.6.0.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">getWxConfig</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 获取微信配置参数</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 当前网页的URL，不包含#及其后面部分，要注意当前URL一定是正确的且已经在 JS接口安全域名 配置过</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> url = <span class="built_in">window</span>.location.href.split(<span class="string">'#'</span>)[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">                    type: <span class="string">"POST"</span>,</span></span><br><span class="line"><span class="javascript">                    url: <span class="string">"获取微信签名等其他配置参数的链接，自行处理"</span>,</span></span><br><span class="line"><span class="javascript">                    dataType: <span class="string">"json"</span>,</span></span><br><span class="line">                    data: &#123;url: url&#125;,</span><br><span class="line"><span class="javascript">                    success: <span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line">                        if (response.errorCode == 0) &#123;</span><br><span class="line">                            resolve(response.data);</span><br><span class="line"><span class="javascript">                        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line">                            reject(response.msg);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    error: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(e);</span></span><br><span class="line">                        reject(e.statusText);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">wxShare</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> res = <span class="keyword">await</span> getSignature();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> &#123;timestamp, nonceStr, appId, signature&#125; = res;</span></span><br><span class="line">            wx.config(&#123;</span><br><span class="line"><span class="javascript">                debug: <span class="literal">true</span>, <span class="comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span></span><br><span class="line"><span class="javascript">                appId: appId, <span class="comment">// 必填，公众号的唯一标识</span></span></span><br><span class="line"><span class="javascript">                timestamp: timestamp, <span class="comment">// 必填，生成签名的时间戳</span></span></span><br><span class="line"><span class="javascript">                nonceStr: nonceStr, <span class="comment">// 必填，生成签名的随机串</span></span></span><br><span class="line"><span class="javascript">                signature: signature, <span class="comment">// 必填，签名</span></span></span><br><span class="line"><span class="javascript">                jsApiList: [<span class="string">"onMenuShareTimeline"</span>, <span class="string">"onMenuShareAppMessage"</span>] <span class="comment">// 必填，需要使用的JS接口列表</span></span></span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line"><span class="javascript">            wx.ready(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line">                wx.onMenuShareTimeline(&#123;</span><br><span class="line"><span class="javascript">                    title: <span class="string">'测试分享朋友圈'</span>, <span class="comment">// 分享标题</span></span></span><br><span class="line"><span class="javascript">                    link: url,<span class="comment">// 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span></span></span><br><span class="line"><span class="javascript">                    imgUrl: <span class="string">'logo.jpg'</span>,<span class="comment">// 分享图标</span></span></span><br><span class="line"><span class="javascript">                    success: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 设置成功</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">'用户点击了分享后执行的回调函数1'</span>);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                wx.onMenuShareAppMessage(&#123;</span><br><span class="line"><span class="javascript">                    title: <span class="string">'测试分享朋友'</span>, <span class="comment">// 分享标题</span></span></span><br><span class="line"><span class="javascript">                    desc: <span class="string">'一个测试的分享'</span>, <span class="comment">// 分享描述</span></span></span><br><span class="line"><span class="javascript">                    link: url, <span class="comment">// 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致</span></span></span><br><span class="line"><span class="javascript">                    imgUrl: <span class="string">'logo.jpg'</span>, <span class="comment">// 分享图标</span></span></span><br><span class="line"><span class="javascript">                    type: <span class="string">""</span>, <span class="comment">// 分享类型,music、video或link，不填默认为link</span></span></span><br><span class="line"><span class="javascript">                    dataUrl: <span class="string">""</span>, <span class="comment">// 如果type是music或video，则要提供数据链接，默认为空</span></span></span><br><span class="line"><span class="javascript">                    success: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 设置成功</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">'用户点击了分享后执行的回调函数2'</span>);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        wxShare();</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;微信分享会使用到微信JS-SDK，所以需要再微信公众号后台配置&lt;strong&gt;JS接口安全域名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;微信官方关于&lt;a href=&quot;https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#112&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;分享接口开发文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;实现代码如下：&lt;/p&gt;
    
    </summary>
    
      <category term="微信开发" scheme="https://xinyufeng.net/categories/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91/"/>
    
      <category term="微信公众号" scheme="https://xinyufeng.net/categories/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
    
      <category term="微信公众号" scheme="https://xinyufeng.net/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>记录 ThinkCMF 框架 X2.2.3 版本漏洞发现与解决</title>
    <link href="https://xinyufeng.net/2023/03/23/%E8%AE%B0%E5%BD%95-ThinkCMF-%E6%A1%86%E6%9E%B6-X2-2-3-%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E4%B8%8E%E8%A7%A3%E5%86%B3/"/>
    <id>https://xinyufeng.net/2023/03/23/记录-ThinkCMF-框架-X2-2-3-版本漏洞发现与解决/</id>
    <published>2023-03-23T11:25:31.000Z</published>
    <updated>2023-03-23T11:48:24.188Z</updated>
    
    <content type="html"><![CDATA[<p>接到网警通知，说网站有安全漏洞，根据网警提供的检测报告，经过各种尝试，终于复现了，现在记录这一激动人心的时刻</p><p>网站是基于ThinkCMF框架搭建的，查看版本是<code>X2.2.3</code>，根据网警提供的检测报告在postman工具上操作复现漏洞情况</p><ul><li>使用POST方式请求首页链接地址</li><li>使用form-data提交参数</li><li>参数<code>content=&lt;php&gt;die(assert(&#39;ev&#39;.&#39;a&#39;.&#39;l(&quot;&#39;.&#39;e&#39;.&#39;va&#39;.&#39;l(bas&#39;.&#39;e64_de&#39;.&#39;code(\&quot;cGhwaW5mbygpOw==\&quot;));;return 1;&quot;)&#39;))&lt;/php&gt;</code></li><li>参数<code>a=fetch</code></li></ul><p>点击发送，看看结果，意不意外惊不惊喜！</p><a id="more"></a><p><a href="/2023/03/23/记录-ThinkCMF-框架-X2-2-3-版本漏洞发现与解决/1.png"><img src="/2023/03/23/记录-ThinkCMF-框架-X2-2-3-版本漏洞发现与解决/1.png" alt></a></p><p>居然打印出了<code>phpinfo()</code></p><p>那找解决方法吧，升级框架肯定是不现实的，好歹是找了解决方案</p><p>原因是构造<code>a</code>参数的<code>fetch</code>方法和<code>display</code>方法导致了这个漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 加载模板和页面输出 可以返回输出内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $templateFile 模板文件名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $charset 模板输出字符集</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $contentType 输出类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $content 模板输出内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">($templateFile = <span class="string">''</span>, $charset = <span class="string">''</span>, $contentType = <span class="string">''</span>, $content = <span class="string">''</span>, $prefix = <span class="string">''</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">parent</span>::display(<span class="keyword">$this</span>-&gt;parseTemplate($templateFile), $charset, $contentType,$content,$prefix);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取输出页面内容</span></span><br><span class="line"><span class="comment"> * 调用内置的模板引擎fetch方法，</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $templateFile 指定要调用的模板文件</span></span><br><span class="line"><span class="comment"> * 默认为空 由系统自动定位模板文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $content 模板输出内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $prefix 模板缓存前缀*</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fetch</span><span class="params">($templateFile=<span class="string">''</span>,$content=<span class="string">''</span>,$prefix=<span class="string">''</span>)</span></span>&#123;</span><br><span class="line">    $templateFile = <span class="keyword">empty</span>($content)?<span class="keyword">$this</span>-&gt;parseTemplate($templateFile):<span class="string">''</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">parent</span>::fetch($templateFile,$content,$prefix);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将<code>HomebaseController.class.php</code>和<code>AdminbaseController.class.php</code>类中<code>display</code>和<code>fetch</code>函数修饰符改为<code>protected</code></p><p>因为它的这两个方法是公用的，我们需要把它改为私用的，这样才可以不被前端的用户去任意的利用。</p><p>修复后，再次访问，解决了</p><p><a href="/2023/03/23/记录-ThinkCMF-框架-X2-2-3-版本漏洞发现与解决/2.png"><img src="/2023/03/23/记录-ThinkCMF-框架-X2-2-3-版本漏洞发现与解决/2.png" alt></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接到网警通知，说网站有安全漏洞，根据网警提供的检测报告，经过各种尝试，终于复现了，现在记录这一激动人心的时刻&lt;/p&gt;
&lt;p&gt;网站是基于ThinkCMF框架搭建的，查看版本是&lt;code&gt;X2.2.3&lt;/code&gt;，根据网警提供的检测报告在postman工具上操作复现漏洞情况&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用POST方式请求首页链接地址&lt;/li&gt;
&lt;li&gt;使用form-data提交参数&lt;/li&gt;
&lt;li&gt;参数&lt;code&gt;content=&amp;lt;php&amp;gt;die(assert(&amp;#39;ev&amp;#39;.&amp;#39;a&amp;#39;.&amp;#39;l(&amp;quot;&amp;#39;.&amp;#39;e&amp;#39;.&amp;#39;va&amp;#39;.&amp;#39;l(bas&amp;#39;.&amp;#39;e64_de&amp;#39;.&amp;#39;code(\&amp;quot;cGhwaW5mbygpOw==\&amp;quot;));;return 1;&amp;quot;)&amp;#39;))&amp;lt;/php&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;参数&lt;code&gt;a=fetch&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点击发送，看看结果，意不意外惊不惊喜！&lt;/p&gt;
    
    </summary>
    
      <category term="安全漏洞" scheme="https://xinyufeng.net/categories/%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="安全漏洞" scheme="https://xinyufeng.net/tags/%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 模型关联查询已物理删除的数据设置默认值</title>
    <link href="https://xinyufeng.net/2023/03/16/Laravel-%E6%A8%A1%E5%9E%8B%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E5%B7%B2%E7%89%A9%E7%90%86%E5%88%A0%E9%99%A4%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E5%80%BC/"/>
    <id>https://xinyufeng.net/2023/03/16/Laravel-模型关联查询已物理删除的数据设置默认值/</id>
    <published>2023-03-16T02:30:09.000Z</published>
    <updated>2023-03-16T02:38:13.741Z</updated>
    
    <content type="html"><![CDATA[<p>在使用Laravel模型关联数据时，会遇到关联查询到的数据已被删除，会导致查询结果为<code>null</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.......</span><br><span class="line">&quot;created_at&quot;: &quot;2023-02-15 16:01:40&quot;,</span><br><span class="line">&quot;updated_at&quot;: &quot;2023-02-15 16:03:22&quot;,</span><br><span class="line">&quot;category&quot;: null,</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><p>如果想要保证查询结果不会出现<code>null</code>，可以使用 Laravel 的「Eloquent」 ORM 中的「withDefault」方法来设置默认值。例如：</p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">category</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(Category::class, <span class="string">'id'</span>, <span class="string">'cate_id'</span>)-&gt;withDefault();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，即使没有找到匹配的记录，您也可以得到一个具有默认值的结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.......</span><br><span class="line">&quot;created_at&quot;: &quot;2023-02-15 16:01:40&quot;,</span><br><span class="line">&quot;updated_at&quot;: &quot;2023-02-15 16:03:22&quot;,</span><br><span class="line">&quot;category&quot;:&#123;</span><br><span class="line">    &quot;id&quot;: 437</span><br><span class="line">&#125;</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><p>如果我们还想要默认分类名称值（分类名称字段我定义的是<code>name</code>）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">category</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(Category::class, <span class="string">'id'</span>, <span class="string">'cate_id'</span>)-&gt;withDefault([<span class="string">'name'</span>=&gt;<span class="string">'分类已删除'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，查询结果是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.......</span><br><span class="line">&quot;created_at&quot;: &quot;2023-02-15 16:01:40&quot;,</span><br><span class="line">&quot;updated_at&quot;: &quot;2023-02-15 16:03:22&quot;,</span><br><span class="line">&quot;category&quot;:&#123;</span><br><span class="line">    &quot;id&quot;: 437,</span><br><span class="line">    &quot;name&quot;: &quot;分类已删除&quot;</span><br><span class="line">&#125;</span><br><span class="line">.......</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用Laravel模型关联数据时，会遇到关联查询到的数据已被删除，会导致查询结果为&lt;code&gt;null&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;created_at&amp;quot;: &amp;quot;2023-02-15 16:01:40&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;updated_at&amp;quot;: &amp;quot;2023-02-15 16:03:22&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;category&amp;quot;: null,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.......&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果想要保证查询结果不会出现&lt;code&gt;null&lt;/code&gt;，可以使用 Laravel 的「Eloquent」 ORM 中的「withDefault」方法来设置默认值。例如：&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
      <category term="Laravel模型" scheme="https://xinyufeng.net/tags/Laravel%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>Laravel安装laravel-wechat实现微信授权登录</title>
    <link href="https://xinyufeng.net/2023/02/22/Laravel%E5%AE%89%E8%A3%85laravel-wechat%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95/"/>
    <id>https://xinyufeng.net/2023/02/22/Laravel安装laravel-wechat实现微信授权登录/</id>
    <published>2023-02-22T01:42:52.000Z</published>
    <updated>2023-03-16T02:27:22.455Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用composer安装laravel-wechat"><a href="#使用composer安装laravel-wechat" class="headerlink" title="使用composer安装laravel-wechat"></a>使用composer安装<code>laravel-wechat</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require <span class="string">"overtrue/laravel-wechat"</span></span><br></pre></td></tr></table></figure><p>如果需要安装指定版本</p><ol><li>安装不超过<code>4.0</code>的版本最新版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require <span class="string">"overtrue/laravel-wechat:~4.0"</span></span><br></pre></td></tr></table></figure><ol start="2"><li>安装不超过<code>4</code>的版本最新版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require <span class="string">"overtrue/laravel-wechat:^4.0"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>建议laravel5.4安装<code>4.0</code>版本</p><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>如果是Laravel5.4（含）以下版本，需要手动注册ServiceProvider 和 Facade</p><p>在config/app.php文件编辑</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'providers'</span> =&gt; [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    Overtrue\LaravelWeChat\ServiceProvider::class,</span><br><span class="line">],</span><br><span class="line"><span class="string">'aliases'</span> =&gt; [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="string">'EasyWeChat'</span> =&gt; Overtrue\LaravelWeChat\Facade::class,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>创建配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan vendor:publish --provider=<span class="string">"Overtrue\LaravelWeChat\ServiceProvider"</span></span><br></pre></td></tr></table></figure><p>会生成<code>config/wechat.php</code>文件</p><h2 id="在-env文件添加配置参数"><a href="#在-env文件添加配置参数" class="headerlink" title="在.env文件添加配置参数"></a>在.env文件添加配置参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WECHAT_OFFICIAL_ACCOUNT_APPID=</span><br><span class="line">WECHAT_OFFICIAL_ACCOUNT_SECRET=</span><br><span class="line">WECHAT_OFFICIAL_ACCOUNT_TOKEN=</span><br><span class="line">WECHAT_OFFICIAL_ACCOUNT_AES_KEY=</span><br></pre></td></tr></table></figure><p>WECHAT_OFFICIAL_ACCOUNT_APPID：微信公众号AppID<br>WECHAT_OFFICIAL_ACCOUNT_SECRET：微信公众号AppSecret<br>WECHAT_OFFICIAL_ACCOUNT_TOKEN：微信公众号Token<br>WECHAT_OFFICIAL_ACCOUNT_AES_KEY：微信公众号EncodingAESKey</p><h2 id="定义路由"><a href="#定义路由" class="headerlink" title="定义路由"></a>定义路由</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::any(<span class="string">'wechat'</span>, <span class="string">'WeChatController@serve'</span>);</span><br></pre></td></tr></table></figure><blockquote><p>一定是 Route::any, 因为微信服务端认证的时候是 GET, 接收用户消息时是 POST ！</p></blockquote><h2 id="创建控制器"><a href="#创建控制器" class="headerlink" title="创建控制器"></a>创建控制器</h2><p><code>app/Http/Controllers/WeChatController.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Log</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeChatController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">serve</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Log::info(<span class="string">'request arrived'</span>);</span><br><span class="line"></span><br><span class="line">        $app = app(<span class="string">'wechat.official_account'</span>);</span><br><span class="line">        $app-&gt;server-&gt;push(<span class="function"><span class="keyword">function</span><span class="params">($message)</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"欢迎关注！"</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $app-&gt;server-&gt;serve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用composer安装laravel-wechat&quot;&gt;&lt;a href=&quot;#使用composer安装laravel-wechat&quot; class=&quot;headerlink&quot; title=&quot;使用composer安装laravel-wechat&quot;&gt;&lt;/a&gt;使用composer安装&lt;code&gt;laravel-wechat&lt;/code&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;composer require &lt;span class=&quot;string&quot;&gt;&quot;overtrue/laravel-wechat&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果需要安装指定版本&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装不超过&lt;code&gt;4.0&lt;/code&gt;的版本最新版本&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;composer require &lt;span class=&quot;string&quot;&gt;&quot;overtrue/laravel-wechat:~4.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;安装不超过&lt;code&gt;4&lt;/code&gt;的版本最新版本&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;composer require &lt;span class=&quot;string&quot;&gt;&quot;overtrue/laravel-wechat:^4.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
      <category term="composer扩展" scheme="https://xinyufeng.net/tags/composer%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置location语法规则</title>
    <link href="https://xinyufeng.net/2023/01/28/Nginx%E9%85%8D%E7%BD%AElocation%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99/"/>
    <id>https://xinyufeng.net/2023/01/28/Nginx配置location语法规则/</id>
    <published>2023-01-28T01:51:11.000Z</published>
    <updated>2023-01-28T07:06:10.330Z</updated>
    
    <content type="html"><![CDATA[<h2 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h2><p>基本语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location [=|~|~*|^~|@] /uri/ &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修饰符释义：</p><table><thead><tr><th style="text-align:center">修饰符</th><th>释义</th></tr></thead><tbody><tr><td style="text-align:center"><code>=</code></td><td>表示精确匹配后面的url</td></tr><tr><td style="text-align:center"><code>~</code></td><td>表示正则匹配，但是区分大小写</td></tr><tr><td style="text-align:center"><code>~*</code></td><td>表示正则匹配，不区分大小写</td></tr><tr><td style="text-align:center"><code>^~</code></td><td>表示普通字符匹配，如果该选项匹配，只匹配该选项，不匹配别的选项，一般用来匹配目录</td></tr><tr><td style="text-align:center"><code>@</code></td><td>“@” 定义一个命名的 location，使用在内部定向时，例如 error_page</td></tr><tr><td style="text-align:center"><code>/</code></td><td>通用匹配，任何请求都会匹配到</td></tr></tbody></table><p>上述匹配规则的优先匹配顺序：</p><a id="more"></a><ul><li><code>=</code> 前缀的指令严格匹配这个查询。如果找到，停止搜索；</li><li>所有剩下的常规字符串，最长的匹配。如果这个匹配使用 ^~ 前缀，搜索停止；</li><li>正则表达式，在配置文件中定义的顺序；</li><li>如果第 3 条规则<code>~*</code>产生匹配的话，结果被使用。否则，使用第 2 条规则<code>~</code>的结果。</li></ul><h2 id="匹配案例"><a href="#匹配案例" class="headerlink" title="匹配案例"></a>匹配案例</h2><h3 id="通过精确匹配"><a href="#通过精确匹配" class="headerlink" title="通过精确匹配"></a>通过精确匹配</h3><p>配置文件内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location /test.html &#123;</span><br><span class="line">        root /www/wwwroot/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location = /test.html &#123;</span><br><span class="line">        root /www/wwwroot/nginx/test.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两个location匹配条件一样，都是/test.html，但是第二个为精确匹配到静态文件路径，因此第一个不会执行，会执行第二个。</p><p>指定静态资源路径用的关键字<code>root</code>，还可以用<code>alias</code>，那么<code>root</code>和<code>alias</code>的区别是什么？</p><ul><li>用<code>root</code>属性指定的值是要加入到最终路径中的，匹配条件会拼接到路径中</li><li>用<code>alias</code>属性指定的值不需要加入到最终路径中</li></ul><p>根据上述配置文件内容，请求的条件为<code>test.html</code>，通过<code>root</code>指定的路径为<code>/www/wwwroot/nginx/html</code>，因此在匹配的时候，这个路径下就必须要有<code>test.html</code>这个文件才可以，否则就会找不到而报错，如果用<code>alias</code>，那么通过浏览器进行请求的时候，<code>alias</code>也是指定到<code>/www/wwwroot/nginx/html</code>路径下，但是会匹配默认的<code>index.html</code>，而无须强制匹配<code>test.html</code>，但是此时就不能使用<code>=</code>来进行精确匹配，现在将<code>root</code>改为<code>alias</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location /test.html &#123;</span><br><span class="line">        alias /www/wwwroot/nginx/html/;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：alias指定的路径结尾要加<code>/</code></p></blockquote><p>来个<code>root</code>和<code>alias</code>的区别例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location /html/ &#123;</span><br><span class="line">        root /www/wwwroot/nginx;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 <code>域名/html</code> 的时候，将跳转到<code>/www/wwwroot/nginx/html/</code>目录下的<code>index.html</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location /html_alias/ &#123;</span><br><span class="line">        alias /www/wwwroot/nginx/html/;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 <code>域名/html_alias</code> 的时候，将跳转到<code>/www/wwwroot/nginx/html/</code>目录下的<code>index.html</code>文件</p><h3 id="通过-方式实现匹配"><a href="#通过-方式实现匹配" class="headerlink" title="通过^~方式实现匹配"></a>通过^~方式实现匹配</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location ^~ /a/ &#123;</span><br><span class="line">        return 111;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /a/b/ &#123;</span><br><span class="line">        return 222;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果访问 <code>域名/a</code> 返回 <code>111</code></li><li>如果访问 <code>域名/a/b</code> 返回 <code>222</code></li><li>如果访问 <code>域名/a/b/sdf</code> 返回 <code>222</code></li></ul><p>从结果看，两条规则同时被匹配成功，但是第二条规则比较长，因此第二条规则优先被匹配，如果^~匹配成功了，那么表示阻断正则表达式，不再进行正则匹配。</p><h3 id="通过-方式实现匹配-1"><a href="#通过-方式实现匹配-1" class="headerlink" title="通过~方式实现匹配"></a>通过~方式实现匹配</h3><p>在匹配最长规则的时候，除了通过^~来实现匹配，还有通过普通匹配来实现。</p><p>当最长规则是通过普通匹配的时候，将会继续正则匹配， 只要有一个正则成功，则使用这个正则的location，停止继续匹配，返回结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location ^~ /a/ &#123;</span><br><span class="line">        return 111;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /a/b/ &#123;</span><br><span class="line">        return 222;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ /a/b/ &#123;#区分大小写的正则匹配</span><br><span class="line">        return 333;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果访问 <code>域名/a</code> 返回 <code>111</code></li><li>如果访问 <code>域名/a/b</code> 返回 <code>333</code></li><li>如果访问 <code>域名/a/b/sdf</code> 返回 <code>333</code></li></ul><p>从结果看，可以看出请求<code>/a/b/</code>的时候，首先会到达第二条规则(最长规则)，由于第二条规则为普通匹配(不是<code>^~</code>匹配)，因此会继续去匹配正则，也就是第三条规则，因此最终返回<code>333</code>。</p><h3 id="通过-方式实现匹配-2"><a href="#通过-方式实现匹配-2" class="headerlink" title="通过~*方式实现匹配"></a>通过~*方式实现匹配</h3><p><code>~*</code> 表示不区分大小写的正则匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location ^~ /a/ &#123;</span><br><span class="line">        return 111;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /a/b/ &#123;</span><br><span class="line">        return 222;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~* /a/b/ &#123;#不区分大小写的正则匹配</span><br><span class="line">        return 333;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果访问 <code>域名/a/b/sdf</code> 返回 <code>333</code></li><li>如果访问 <code>域名/A/B/sdf</code> 返回 <code>333</code></li></ul><p>从结果看，无论匹配的是大写还是小写，都会返回<code>333</code></p><p>常用方法还有匹配图片后缀，并返回指定信息，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location ~* \.(gif|jpg|png) &#123;#不区分大小写，并以gif|jpg|png后缀结尾</span><br><span class="line">        return 444;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果访问 <code>域名/a.jpg</code> 返回 <code>444</code></li><li>如果访问 <code>域名/A.JPG</code> 返回 <code>444</code></li></ul><h3 id="通过-实现通用匹配"><a href="#通过-实现通用匹配" class="headerlink" title="通过/ 实现通用匹配"></a>通过/ 实现通用匹配</h3><ol><li>proxy_pass（代理转发）最后面没有斜杠,匹配路径有斜杠(/aaa/)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location /aaa/ &#123;</span><br><span class="line">        proxy_pass  http://127.0.0.1:8081;</span><br><span class="line">        proxy_rediect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>proxy_pass最后面没有斜杠<code>/</code>，此时通过浏览器请求http://域名/aaa/，那么实际访问的地址就是 <a href="http://127.0.0.1:8081/aaa/，会将匹配路径/aaa一起加过去。" target="_blank" rel="noopener">http://127.0.0.1:8081/aaa/，会将匹配路径/aaa一起加过去。</a></p><ol start="2"><li>proxy_pass最后面有斜杠<code>/</code>，匹配路径也有斜杠(/aaa/)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location /aaa/ &#123;</span><br><span class="line">        proxy_pass  http://127.0.0.1:8081/;</span><br><span class="line">        proxy_rediect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>proxy_pass最后面有斜杠<code>/</code>，此时通过浏览器请求http://域名/aaa/，那么实际访问的地址就是 <a href="http://127.0.0.1:8081，会将/aaa抛弃的。" target="_blank" rel="noopener">http://127.0.0.1:8081，会将/aaa抛弃的。</a></p><ol start="3"><li>proxy_pass后面还有其他路径但是最后没有 <code>/</code>， 匹配路径也有斜杠(/aaa/)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location /aaa/ &#123;</span><br><span class="line">        proxy_pass  http://127.0.0.1:8081/bbb;</span><br><span class="line">        proxy_rediect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时通过浏览器访问http://域名/aaa/index.html，实际请求的是<a href="http://127.0.0.1:8081/bbbindex.html(注意位置是默认路径下，不是`bbb`路径下，如果proxy_pass的路径为`/bbb/ccc`，那么实际请求的就是`bbb`路径下的`cccindex.html`)" target="_blank" rel="noopener">http://127.0.0.1:8081/bbbindex.html(注意位置是默认路径下，不是`bbb`路径下，如果proxy_pass的路径为`/bbb/ccc`，那么实际请求的就是`bbb`路径下的`cccindex.html`)</a></p><ol start="4"><li>proxy_pass后面还有其他路径但是最后有 <code>/</code>， 匹配路径也有斜杠(/aaa/)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location /aaa/ &#123;</span><br><span class="line">        proxy_pass  http://127.0.0.1:8081/bbb/;</span><br><span class="line">        proxy_rediect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时通过浏览器访问：http://域名/aaa/index.html，实际访问的是<a href="http://127.0.0.1:8081/bbb/index.html" target="_blank" rel="noopener">http://127.0.0.1:8081/bbb/index.html</a></p><ol start="5"><li>location匹配路径末尾没有 <code>/</code>，proxy_pass后面也没有<code>/</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    location /aaa &#123;</span><br><span class="line">        proxy_pass  http://127.0.0.1:8081;</span><br><span class="line">        proxy_rediect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时访问http://域名/aaa，默认将请求到<a href="http://127.0.0.1:8081/aaa/index.html的内容" target="_blank" rel="noopener">http://127.0.0.1:8081/aaa/index.html的内容</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;语法规则&quot;&gt;&lt;a href=&quot;#语法规则&quot; class=&quot;headerlink&quot; title=&quot;语法规则&quot;&gt;&lt;/a&gt;语法规则&lt;/h2&gt;&lt;p&gt;基本语法：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;location [=|~|~*|^~|@] /uri/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修饰符释义：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;修饰符&lt;/th&gt;
&lt;th&gt;释义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示精确匹配后面的url&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;~&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示正则匹配，但是区分大小写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;~*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示正则匹配，不区分大小写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;^~&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示普通字符匹配，如果该选项匹配，只匹配该选项，不匹配别的选项，一般用来匹配目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;@&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;“@” 定义一个命名的 location，使用在内部定向时，例如 error_page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;/&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;通用匹配，任何请求都会匹配到&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;上述匹配规则的优先匹配顺序：&lt;/p&gt;
    
    </summary>
    
      <category term="服务器" scheme="https://xinyufeng.net/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Nginx" scheme="https://xinyufeng.net/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://xinyufeng.net/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>PHP 多维数组转为树结构</title>
    <link href="https://xinyufeng.net/2022/12/15/PHP-%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BD%AC%E4%B8%BA%E6%A0%91%E7%BB%93%E6%9E%84/"/>
    <id>https://xinyufeng.net/2022/12/15/PHP-多维数组转为树结构/</id>
    <published>2022-12-15T07:34:01.000Z</published>
    <updated>2022-12-15T07:45:43.837Z</updated>
    
    <content type="html"><![CDATA[<p>在项目中我们会遇到获取存在父子级关系的数组，并需要根据上下级关系以树结构的形式展示的情况</p><p>比如获取分类列表，类似如下数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$data = [</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">13</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类2-2-2'</span>, <span class="string">'pid'</span>=&gt;<span class="number">9</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">1</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类1'</span>, <span class="string">'pid'</span>=&gt;<span class="number">0</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">2</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类1-1'</span>, <span class="string">'pid'</span>=&gt;<span class="number">1</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">3</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类1-2'</span>, <span class="string">'pid'</span>=&gt;<span class="number">1</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">4</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类1-1-1'</span>, <span class="string">'pid'</span>=&gt;<span class="number">2</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">5</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类1-1-2'</span>, <span class="string">'pid'</span>=&gt;<span class="number">2</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">6</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类1-2-1'</span>, <span class="string">'pid'</span>=&gt;<span class="number">3</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">7</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类2'</span>, <span class="string">'pid'</span>=&gt;<span class="number">0</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">8</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类2-1'</span>, <span class="string">'pid'</span>=&gt;<span class="number">7</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">9</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类2-2'</span>, <span class="string">'pid'</span>=&gt;<span class="number">7</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">10</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类2-1-1'</span>, <span class="string">'pid'</span>=&gt;<span class="number">8</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">11</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类2-1-2'</span>, <span class="string">'pid'</span>=&gt;<span class="number">8</span>],</span><br><span class="line">[<span class="string">'id'</span>=&gt;<span class="number">12</span>, <span class="string">'name'</span>=&gt;<span class="string">'分类2-2-1'</span>, <span class="string">'pid'</span>=&gt;<span class="number">9</span>],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><a id="more"></a><p>实现方法代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将返回的数据集转换成树</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  array   $list  数据集</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  string  $pk    主键</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  string  $pid   父节点名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  string  $child 子节点名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  integer $root  根节点ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array          转换后的树</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">list_to_tree</span><span class="params">($list, $pk = <span class="string">'id'</span>, $pid = <span class="string">'pid'</span>, $child = <span class="string">'child'</span>, $root=<span class="number">0</span>)</span> </span>&#123;</span><br><span class="line">    $tree = <span class="keyword">array</span>();<span class="comment">// 创建Tree</span></span><br><span class="line">    <span class="keyword">if</span>(is_array($list)) &#123;</span><br><span class="line">        <span class="comment">// 创建基于主键的数组引用</span></span><br><span class="line">        $refer = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span> ($list <span class="keyword">as</span> $index =&gt; $data) &#123;</span><br><span class="line"><span class="comment">/*基于主键的新数组与之前的数组地址一样，修改其中一个数组的数据另一个也会变*/</span></span><br><span class="line">            $refer[$data[$pk]] =&amp; $list[$index];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($list <span class="keyword">as</span> $key =&gt; $data) &#123;</span><br><span class="line">            <span class="comment">// 判断是否存在parent</span></span><br><span class="line">            $parentId = $data[$pid];</span><br><span class="line">            <span class="keyword">if</span> ($root == $parentId) &#123;</span><br><span class="line">                $tree[$data[$pk]] =&amp; $list[$key];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">isset</span>($refer[$parentId])) &#123;</span><br><span class="line">                    $parent =&amp; $refer[$parentId];</span><br><span class="line">                    $parent[$child][] =&amp; $list[$key];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>;var_dump(list_to_tree($data));</span><br></pre></td></tr></table></figure><p>主要思路概况是，把要遍历的数组，创建基于主键的数组引用。把要生成的树结构数组也数组引用</p><p>比如案例中的 <code>$refer[13] === $list[0]</code>,<code>$tree[13] === $refer[13]</code>，利用了多个变量指向同地址，其中一个参数改变了数据，另外的参数数据也会改变。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在项目中我们会遇到获取存在父子级关系的数组，并需要根据上下级关系以树结构的形式展示的情况&lt;/p&gt;
&lt;p&gt;比如获取分类列表，类似如下数据&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$data = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类2-2-2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类1-1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类1-2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类1-1-1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类1-1-2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类1-2-1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类2-1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类2-2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类2-1-1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类2-1-2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;分类2-2-1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pid&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="后端开发" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="PHP" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/PHP/"/>
    
    
      <category term="PHP技巧" scheme="https://xinyufeng.net/tags/PHP%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Linux环境安装nvm</title>
    <link href="https://xinyufeng.net/2022/10/18/Linux%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85nvm/"/>
    <id>https://xinyufeng.net/2022/10/18/Linux环境安装nvm/</id>
    <published>2022-10-18T02:24:41.000Z</published>
    <updated>2022-10-18T02:37:00.089Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>nvm是一个管理node多版本的工具<br>系统为CentOS7</p></blockquote><ol><li>下载nvm安装包</li></ol><p>官方下载：<a href="https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.2.tar.gz" target="_blank" rel="noopener">https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.2.tar.gz</a></p><ol start="2"><li>加压nvm压缩包</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 进入文件下载目录</span><br><span class="line">[root@localhost ~]<span class="comment"># cd /usr/local/src</span></span><br><span class="line">// 解压文件到 root/.nvm</span><br><span class="line">[root@localhost ~]<span class="comment"># tar -zxvf nvm-0.39.2.tar.gz --strip-components 1  -C /root/.nvm</span></span><br></pre></td></tr></table></figure><a id="more"></a><ol start="3"><li>配置环境</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vi ~/.bashrc</span></span><br></pre></td></tr></table></figure><p>在<code>~/.bashrc</code>的末尾，添加如下语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"<span class="variable">$HOME</span>/.nvm"</span></span><br><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/bash_completion"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/bash_completion"</span>  <span class="comment"># This loads nvm bash_completion</span></span><br></pre></td></tr></table></figure><p><code>wq</code>保存文件并退出</p><ol start="4"><li>配置生效(重启配置)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># source ~/.bashrc</span></span><br></pre></td></tr></table></figure><ol start="5"><li>验证nvm是否安装成功</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># nvm -v</span></span><br><span class="line">0.39.2</span><br><span class="line">[root@localhost ~]<span class="comment"># nvm --version</span></span><br><span class="line">0.39.2</span><br></pre></td></tr></table></figure><p><strong>常用操作</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#nvm常用命令</span></span><br><span class="line">nvm ls-remote           // 查看目前线上所能安装的所有 node 版本</span><br><span class="line">nvm install 12.22.12    // 安装node</span><br><span class="line">nvm uninstall 14.13.2   // 移除 node</span><br><span class="line">nvm use 14.13.2         // 使用 node </span><br><span class="line">nvm ls                  // 查看目前已安装的 node 及当前所使用的 node</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;nvm是一个管理node多版本的工具&lt;br&gt;系统为CentOS7&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;下载nvm安装包&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;官方下载：&lt;a href=&quot;https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.2.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.2.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;加压nvm压缩包&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 进入文件下载目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# cd /usr/local/src&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 解压文件到 root/.nvm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# tar -zxvf nvm-0.39.2.tar.gz --strip-components 1  -C /root/.nvm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Nodejs" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Nodejs/"/>
    
    
      <category term="nvm" scheme="https://xinyufeng.net/tags/nvm/"/>
    
      <category term="Nodejs" scheme="https://xinyufeng.net/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 创建定时任务</title>
    <link href="https://xinyufeng.net/2022/08/30/Yii2-%E5%88%9B%E5%BB%BA%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>https://xinyufeng.net/2022/08/30/Yii2-创建定时任务/</id>
    <published>2022-08-30T06:20:49.000Z</published>
    <updated>2022-08-30T07:38:50.480Z</updated>
    
    <content type="html"><![CDATA[<p>在我们项目开发中，需要使用定时任务来完成批处理业务，下面通过Yii2框架来实现定时任务</p><p>Yii2框架定时任务代码统一放在 <code>./console</code> 目录下</p><h2 id="简单的定时任务脚步文件"><a href="#简单的定时任务脚步文件" class="headerlink" title="简单的定时任务脚步文件"></a>简单的定时任务脚步文件</h2><p>首先在<code>console/controller目录下</code>创建一个定时任务控制器<code>TestController.php</code></p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">console</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">console</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行测试脚本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionDo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'hello test console'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在控制台运行命令<code>php yii</code>，会看到<code>test</code>控制下的<code>do</code>方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">······</span><br><span class="line">- test</span><br><span class="line">    test/do                        执行测试脚本</span><br></pre></td></tr></table></figure><p>执行脚步命令<code>php yii 控制器名/方法名</code>，会输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php yii <span class="built_in">test</span>/<span class="keyword">do</span></span><br><span class="line">hello <span class="built_in">test</span> console</span><br></pre></td></tr></table></figure><p>这就完成了一个简单的定时任务脚步控制器</p><h2 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h2><p>如果需要传递参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">console</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">console</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> integer 接收的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $param1;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 接收的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $param2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $actionID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">options</span><span class="params">($actionID)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'param1'</span>,</span><br><span class="line">            <span class="string">'param2'</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行测试脚本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionDo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;param1 . PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;param2 . PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>param1</code>和<code>param2</code>就是参数，执行脚步命令<code>php yii 控制器名/方法名 --参数= ····</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php yii <span class="built_in">test</span>/<span class="keyword">do</span> --param1=123 --param2=hello</span><br><span class="line">123</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><h2 id="设置参数别名"><a href="#设置参数别名" class="headerlink" title="设置参数别名"></a>设置参数别名</h2><p>如果需要给参数设置别名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">console</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">console</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> integer 接收的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $param1;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 接收的参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $param2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $actionID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">options</span><span class="params">($actionID)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'param1'</span>,</span><br><span class="line">            <span class="string">'param2'</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 参数设置别名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">optionAliases</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'p1'</span> =&gt; <span class="string">'param1'</span>,</span><br><span class="line">            <span class="string">'p2'</span> =&gt; <span class="string">'param2'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行测试脚本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionDo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;param1 . PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;param2 . PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>p1</code>和<code>p2</code>就是参数的别名，执行脚步命令<code>php yii 控制器名/方法名 --参数= ····</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php yii <span class="built_in">test</span>/<span class="keyword">do</span> -p1=123 -p2=hello</span><br><span class="line">123</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><blockquote><p>注意：设置参数别名后，使用别名参数用一个横杆（-）链接。</p></blockquote><h2 id="在Linux配置crontab"><a href="#在Linux配置crontab" class="headerlink" title="在Linux配置crontab"></a>在Linux配置crontab</h2><p>执行命令<code>crontab -e</code>，我们以每分钟执行一次为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * /usr/bin/php /var/www/html/yii2-project/yii <span class="built_in">test</span>/<span class="keyword">do</span> &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>其中</p><ul><li><code>/usr/bin/php</code> 是php运行文件</li><li><code>/var/www/html/yii2-project/yii</code> 项目目录中的yii 文件</li><li><code>test/do</code> 是执行脚步命令</li><li><code>&gt;/dev/null 2&gt;&amp;1</code> 这么写就行哈，可自行查找</li></ul><p>保存退出即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我们项目开发中，需要使用定时任务来完成批处理业务，下面通过Yii2框架来实现定时任务&lt;/p&gt;
&lt;p&gt;Yii2框架定时任务代码统一放在 &lt;code&gt;./console&lt;/code&gt; 目录下&lt;/p&gt;
&lt;h2 id=&quot;简单的定时任务脚步文件&quot;&gt;&lt;a href=&quot;#简单的定时任务脚步文件&quot; class=&quot;headerlink&quot; title=&quot;简单的定时任务脚步文件&quot;&gt;&lt;/a&gt;简单的定时任务脚步文件&lt;/h2&gt;&lt;p&gt;首先在&lt;code&gt;console/controller目录下&lt;/code&gt;创建一个定时任务控制器&lt;code&gt;TestController.php&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap3 实现穿梭框</title>
    <link href="https://xinyufeng.net/2022/08/23/Bootstrap3-%E5%AE%9E%E7%8E%B0%E7%A9%BF%E6%A2%AD%E6%A1%86/"/>
    <id>https://xinyufeng.net/2022/08/23/Bootstrap3-实现穿梭框/</id>
    <published>2022-08-23T01:22:43.000Z</published>
    <updated>2022-08-23T01:24:47.676Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Bootstrap3 框架实现穿梭框代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap3 穿梭框<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.cn/npm/html5shiv@3.7.3/dist/html5shiv.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.cn/npm/respond.js@1.4.2/dest/respond.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span>Bootstrap3 穿梭框<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered dchannel-table"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"item-default"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width: 50%;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"sel_all_area"</span> <span class="attr">multiple</span>=<span class="string">"multiple"</span> <span class="attr">size</span>=<span class="string">"10"</span> <span class="attr">style</span>=<span class="string">"width:100%;"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width: 50px;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-small"</span> <span class="attr">id</span>=<span class="string">"btn_select_all_area"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-forward"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-small"</span> <span class="attr">id</span>=<span class="string">"btn_choose_selected_area"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-small"</span> <span class="attr">id</span>=<span class="string">"btn_remove_selected_area"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-left"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-small"</span> <span class="attr">id</span>=<span class="string">"btn_remove_all_area"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-backward"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width: 50%;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"sel_selected_areas"</span>  <span class="attr">multiple</span>=<span class="string">"multiple"</span> <span class="attr">size</span>=<span class="string">"10"</span> <span class="attr">style</span>=<span class="string">"width:100%;"</span>&gt;</span></span><br><span class="line">                    </span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> all_area = $(<span class="string">"#sel_all_area"</span>), selected_areas = $(<span class="string">"#sel_selected_areas"</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#btn_select_all_area"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> selectedAreaArray = [];</span></span><br><span class="line"><span class="javascript">                all_area.find(<span class="string">"option"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    selectedAreaArray[i] = $(<span class="keyword">this</span>).val();</span></span><br><span class="line"><span class="javascript">                    $(<span class="keyword">this</span>).appendTo(selected_areas);</span></span><br><span class="line">                &#125;);</span><br><span class="line"><span class="javascript">                doSubmit(<span class="string">'add'</span>, selectedAreaArray.toString());</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            $(<span class="string">"#btn_choose_selected_area"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> selectedAreaArray = [];</span></span><br><span class="line"><span class="javascript">                all_area.find(<span class="string">"option:selected"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    selectedAreaArray[i] = $(<span class="keyword">this</span>).val();</span></span><br><span class="line"><span class="javascript">                    $(<span class="keyword">this</span>).appendTo(selected_areas);</span></span><br><span class="line">                &#125;);</span><br><span class="line"><span class="javascript">                doSubmit(<span class="string">'add'</span>, selectedAreaArray.toString());</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            $(<span class="string">"#btn_remove_selected_area"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> selectedAreaArray = [];</span></span><br><span class="line"><span class="javascript">                selected_areas.find(<span class="string">"option:selected"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    selectedAreaArray[i] = $(<span class="keyword">this</span>).val();</span></span><br><span class="line"><span class="javascript">                     $(<span class="keyword">this</span>).appendTo(all_area);</span></span><br><span class="line">                &#125;);</span><br><span class="line"><span class="javascript">                doSubmit(<span class="string">'del'</span>, selectedAreaArray.toString());</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            $(<span class="string">"#btn_remove_all_area"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> selectedAreaArray = [];</span></span><br><span class="line"><span class="javascript">                selected_areas.find(<span class="string">"option"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    selectedAreaArray[i] = $(<span class="keyword">this</span>).val();</span></span><br><span class="line"><span class="javascript">                     $(<span class="keyword">this</span>).appendTo(all_area);</span></span><br><span class="line">                &#125;);</span><br><span class="line"><span class="javascript">                doSubmit(<span class="string">'del'</span>, selectedAreaArray.toString());</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">    </span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">doSubmit</span>(<span class="params">select_type, key</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">`更新 类型: <span class="subst">$&#123;select_type&#125;</span>, KEY: <span class="subst">$&#123;key&#125;</span>`</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用 Bootstrap3 框架实现穿梭框代码&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Bootstrap" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Bootstrap/"/>
    
    
      <category term="Bootstrap" scheme="https://xinyufeng.net/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 缓存操作</title>
    <link href="https://xinyufeng.net/2022/04/29/Laravel-%E7%BC%93%E5%AD%98%E6%93%8D%E4%BD%9C/"/>
    <id>https://xinyufeng.net/2022/04/29/Laravel-缓存操作/</id>
    <published>2022-04-29T03:18:42.000Z</published>
    <updated>2022-04-29T05:33:28.324Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel为不同的缓存系统封装了统一的API，缓存配置文件<code>./config/cache.php</code></p><p><strong>主要的缓存类型(驱动)</strong></p><ul><li>file - 文件，默认使用</li><li>memcached - memcached</li><li>redis - redis</li><li>database - 数据库</li></ul><p>默认laravel支持缓存介质：<code>apc</code>, <code>array</code>, <code>database</code>, <code>file</code>, <code>memcached</code>, <code>redis</code></p><p>在配置文件<code>.env</code>中修改驱动类型</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CACHE_DRIVER=file</span><br></pre></td></tr></table></figure><h2 id="设置缓存"><a href="#设置缓存" class="headerlink" title="设置缓存"></a>设置缓存</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Cache</span>; <span class="comment">// Cache门面</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 如果key不存在则添加成功，如果key存在，返回false</span></span><br><span class="line">Cache::add(<span class="string">'key'</span>, <span class="string">'value'</span>, $seconds);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 不管key值是否存，都可以设置成功</span></span><br><span class="line">Cache::put(<span class="string">'key'</span>, <span class="string">'value'</span>, $seconds);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置永久缓存</span></span><br><span class="line">Cache::forever(<span class="string">'key'</span>, <span class="string">'value'</span>);</span><br></pre></td></tr></table></figure><blockquote><p>文件所生成的地方在 <code>./storage/framework/cache/data/</code> 目录下</p></blockquote><h2 id="获取缓存数据"><a href="#获取缓存数据" class="headerlink" title="获取缓存数据"></a>获取缓存数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$value = Cache::get(<span class="string">'key'</span>);</span><br><span class="line"></span><br><span class="line">$value = Cache::get(<span class="string">'key'</span>, <span class="string">'default'</span>);</span><br><span class="line"></span><br><span class="line">$value = Cache::get(<span class="string">'key'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取的同时并存储</span></span><br><span class="line">$value = Cache::remember(<span class="string">'users'</span>, $minutes, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'key不存的时候返回的数据'</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="检查缓存项是否存在"><a href="#检查缓存项是否存在" class="headerlink" title="检查缓存项是否存在"></a>检查缓存项是否存在</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查缓存的key值是否存在，存在返回true否则返回false</span></span><br><span class="line">Cache::has(<span class="string">'key'</span>)</span><br></pre></td></tr></table></figure><h2 id="删除缓存数据"><a href="#删除缓存数据" class="headerlink" title="删除缓存数据"></a>删除缓存数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先获取再删除</span></span><br><span class="line">$value = Cache::pull(<span class="string">'key'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除单个</span></span><br><span class="line">Cache::forget(<span class="string">'key'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除所有的缓存</span></span><br><span class="line">Cache::flush();</span><br></pre></td></tr></table></figure><h2 id="缓存辅助函数"><a href="#缓存辅助函数" class="headerlink" title="缓存辅助函数"></a>缓存辅助函数</h2><p>除了使用 <code>Cache</code> 门面或缓存契约，还可以使用全局的 <code>cache()</code> 函数来通过缓存获取和存储数据。当带有一个字符串参数的 <code>cache()</code> 函数被调用时，会返回给定键对应的缓存值（取值）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$value = cache(<span class="string">'key'</span>);</span><br></pre></td></tr></table></figure><p>如果你提供了键值对数组和一个过期时间给该函数，则会在指定的有效期内存储缓存值（存储）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cache([<span class="string">'key'</span> =&gt; <span class="string">'value'</span>], $seconds);</span><br><span class="line"></span><br><span class="line">cache([<span class="string">'key'</span> =&gt; <span class="string">'value'</span>], now()-&gt;addMinutes(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><p><code>cache()</code> 函数不带任何参数被调用时会返回 Illuminate\Contracts\Cache\Factory 实现的实例，从而允许你调用其它缓存方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cache()-&gt;remember(<span class="string">'users'</span>, $seconds, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> DB::table(<span class="string">'users'</span>)-&gt;get();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Laravel为不同的缓存系统封装了统一的API，缓存配置文件&lt;code&gt;./config/cache.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要的缓存类型(驱动)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;file - 文件，默认使用&lt;/li&gt;
&lt;li&gt;memcached - memcached&lt;/li&gt;
&lt;li&gt;redis - redis&lt;/li&gt;
&lt;li&gt;database - 数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;默认laravel支持缓存介质：&lt;code&gt;apc&lt;/code&gt;, &lt;code&gt;array&lt;/code&gt;, &lt;code&gt;database&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;memcached&lt;/code&gt;, &lt;code&gt;redis&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在配置文件&lt;code&gt;.env&lt;/code&gt;中修改驱动类型&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
      <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 表单验证 validate 规则参数</title>
    <link href="https://xinyufeng.net/2022/04/28/Laravel-%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81-validate-%E8%A7%84%E5%88%99%E5%8F%82%E6%95%B0/"/>
    <id>https://xinyufeng.net/2022/04/28/Laravel-表单验证-validate-规则参数/</id>
    <published>2022-04-28T04:58:13.000Z</published>
    <updated>2022-04-28T05:29:31.734Z</updated>
    
    <content type="html"><![CDATA[<p><strong>简单的表单验证1</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// request() 与 $request等同</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;validate(request(), [</span><br><span class="line">        <span class="string">'title'</span> =&gt; <span class="string">'required|string'</span>,</span><br><span class="line">        <span class="string">'content'</span> =&gt; <span class="string">'required|string'</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证通过</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>简单的表单验证2</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// request() 与 $request等同</span></span><br><span class="line">    $req_params = $request-&gt;all();</span><br><span class="line">    $validator = Validator::make($req_params, [</span><br><span class="line">        <span class="string">'title'</span> =&gt; <span class="string">'required|string'</span>,</span><br><span class="line">        <span class="string">'content'</span> =&gt; <span class="string">'required|string'</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($validator-&gt;fails()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'验证失败'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证通过</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证规则"><a href="#验证规则" class="headerlink" title="验证规则"></a>验证规则</h2><table><thead><tr><th>规则</th><th>说明</th></tr></thead><tbody><tr><td>required</td><td>验证字段必须出现在输入数据中，不能为空</td></tr><tr><td>present</td><td>验证字段必须出现在输入数据中，可以为空</td></tr><tr><td>filled</td><td>验证字段可不在输入数据中，当验证字段出现在数据中时，不能为空</td></tr><tr><td>nullable</td><td>验证字段的值可以为 <code>null</code></td></tr><tr><td>accepted</td><td>验证的字段必须为 yes、 on、 1、或 true</td></tr><tr><td>active_url</td><td>相当于使用了 PHP 函数 dns_get_record，验证的字段必须具有有效的 A 或 AAAA 记录</td></tr><tr><td>after:date</td><td>验证的字段必须是给定日期后的值。这个日期将会通过 PHP 函数 strtotime 来验证<br>`’start_date’ =&gt; ‘required</td><td>date</td><td>after:tomorrow’<code>&lt;br&gt;你也可以指定其它的字段来比较日期</code>‘finish_date’ =&gt; ‘required</td><td>date</td><td>after:start_date’`</td></tr><tr><td>after_or_equal:date</td><td>验证的字段必须等于给定日期或之后的值。更多信息请参见 after 规则</td></tr><tr><td>alpha</td><td>验证的字段必须完全是字母的字符</td></tr><tr><td>alpha_dash</td><td>验证的字段可能具有字母、数字、破折号（ - ）以及下划线（ _ ）</td></tr><tr><td>alpha_num</td><td>验证的字段必须完全是字母、数字</td></tr><tr><td>array</td><td>验证的字段必须是一个 PHP 数组</td></tr><tr><td>before:date</td><td>验证的字段必须是给定日期之前的值。这个日期将会通过 PHP 函数 strtotime 来验证</td></tr><tr><td>before_or_equal:date</td><td>验证的字段必须等于给定日期或之前的值。这个日期将会使用 PHP 函数 strtotime 来验证</td></tr><tr><td>between:min,max</td><td>验证的字段的大小必须在给定的 min 和 max 之间。字符串、数字、数组或是文件大小的计算方式都用 size 方法进行评估<br>当需要验证表单数据中数字的大小时，在验证规则中一定要加入 Numeric 或 Integer 其一，size、between、max、min这些验证才会起作用</td></tr><tr><td>boolean</td><td>验证的字段必须能够被转换为布尔值。可接受的参数为 true、false、1、0、“1” 以及 “0”</td></tr><tr><td>confirmed</td><td>验证的字段必须和 foo_confirmation 的字段值一致。例如，如果要验证的字段是 password，输入中必须存在匹配的 password_confirmation 字段</td></tr><tr><td>date</td><td>验证的字段值必须是通过 PHP 函数 strtotime 校验的有效日期</td></tr><tr><td>date_equals:date</td><td>验证的字段必须等于给定的日期。该日期会被传递到 PHP 函数 strtotime</td></tr><tr><td>date_format:format</td><td>验证的字段必须与给定的格式相匹配。你应该只使用 date 或 date_format 其中一个用于验证，而不应该同时使用两者</td></tr><tr><td>different:field</td><td>验证的字段值必须与字段 (field) 的值不同</td></tr><tr><td>digits:value</td><td>验证的字段必须是数字，并且必须具有确切的值</td></tr><tr><td>digits_between:min,max</td><td>验证的字段的长度必须在给定的 min 和 max 之间</td></tr><tr><td>dimensions</td><td>验证的文件必须是图片并且图片比例必须符合规则<br><code>&#39;avatar&#39; =&gt; &#39;dimensions:min_width=100,min_height=200&#39;</code><br>可用的规则为： min_width、 max_width 、 min_height 、 max_height 、 width 、 height 、 ratio<br>比例应该使用宽度除以高度的方式来约束。这样可以通过 3/2 这样的语句或像 1.5 这样的浮点的约束<br><code>&#39;avatar&#39; =&gt; &#39;dimensions:ratio=3/2&#39;</code><br>由于此规则需要多个参数，因此你可以 Rule::dimensions 方法来构造可读性高的规则<br><code>use Illuminate\Validation\Rule;</code><br><code>Validator::make($data, [</code><br><code>&#39;avatar&#39; =&gt; [</code><br><code>&#39;required&#39;,</code><br><code>Rule::dimensions()-&gt;maxWidth(1000)-&gt;maxHeight(500)-&gt;ratio(3 / 2),</code><br><code>],</code><br><code>]);</code></td></tr><tr><td>distinct</td><td>验证数组时，指定的字段不能有任何重复值<br><code>‘foo.*.id’ =&gt; ‘distinct’</code></td></tr><tr><td>email</td><td>验证的字段必须符合 e-mail 地址格式</td></tr><tr><td>exists:table,column</td><td>验证的字段必须存在于给定的数据库表中</td></tr><tr><td></td></tr></tbody></table><h2 id="空值"><a href="#空值" class="headerlink" title="空值"></a>空值</h2><p>在 Laravel 中，一个字段满足下面任何一条都将被视为空值：</p><ul><li><code>null</code></li><li>空字符串 ‘ ‘</li><li>空数组 <code>[ ]</code> 或空 <code>countable</code> 对象</li><li>无路径的上传文件</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;简单的表单验证1&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Request $request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// request() 与 $request等同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;validate(request(), [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;title&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;required|string&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;content&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;required|string&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 验证通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
      <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 模型的 scope 普通用法和全局用法</title>
    <link href="https://xinyufeng.net/2022/04/28/Laravel-%E6%A8%A1%E5%9E%8B%E7%9A%84-scope-%E6%99%AE%E9%80%9A%E7%94%A8%E6%B3%95%E5%92%8C%E5%85%A8%E5%B1%80%E7%94%A8%E6%B3%95/"/>
    <id>https://xinyufeng.net/2022/04/28/Laravel-模型的-scope-普通用法和全局用法/</id>
    <published>2022-04-28T02:47:07.000Z</published>
    <updated>2022-04-28T02:56:04.489Z</updated>
    
    <content type="html"><![CDATA[<p>在数据查询中经常会使用条件查询，这些查询条件有些是相同的，<code>scope</code>可以实现这些相同条件查询的复用。</p><h2 id="普通-scope"><a href="#普通-scope" class="headerlink" title="普通 scope"></a>普通 <code>scope</code></h2><p><strong>定义</strong></p><p>方法名为 <code>scope</code> + 首字母大写单词 (这个可以随便定义)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">scopeStatus</span><span class="params">($query)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $query-&gt;where(<span class="string">'status'</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>使用</strong></p><p>其中调用去掉 <code>scope</code> 后，首字母小写的那个函数。</p><p>scopeStatus () 调用 status ()。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::status()-&gt;get();</span><br></pre></td></tr></table></figure><h2 id="全局-scope"><a href="#全局-scope" class="headerlink" title="全局 scope"></a>全局 <code>scope</code></h2><p>我们需要重新定义 <code>boot</code> 方法，集成父类 <code>boot</code> 以后，添加全局 <code>scope</code>，这样默认就已经全局使用了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">parent</span>::boot(); <span class="comment">// <span class="doctag">TODO:</span> Change the autogenerated stub</span></span><br><span class="line">    <span class="keyword">static</span>::addGlobalScope(<span class="string">'avaiable'</span>,<span class="function"><span class="keyword">function</span> <span class="params">(Builder $builder)</span></span>&#123;</span><br><span class="line">        $builder-&gt;whereIn(<span class="string">'status'</span>, [<span class="number">0</span>, <span class="number">1</span>]);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们有的时候有的查询是不需要这个全局 <code>scope</code> 的时候，我们只需要去掉就可以。</p><p>使用 <code>withOutGlobalScope()</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Post::withOutGlobalScope(<span class="string">'avaiable'</span>)-&gt;get();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在数据查询中经常会使用条件查询，这些查询条件有些是相同的，&lt;code&gt;scope&lt;/code&gt;可以实现这些相同条件查询的复用。&lt;/p&gt;
&lt;h2 id=&quot;普通-scope&quot;&gt;&lt;a href=&quot;#普通-scope&quot; class=&quot;headerlink&quot; title=&quot;普通 scope&quot;&gt;&lt;/a&gt;普通 &lt;code&gt;scope&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方法名为 &lt;code&gt;scope&lt;/code&gt; + 首字母大写单词 (这个可以随便定义)&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;scopeStatus&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($query)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $query-&amp;gt;where(&lt;span class=&quot;string&quot;&gt;&#39;status&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
      <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 实现软删除</title>
    <link href="https://xinyufeng.net/2022/04/28/Laravel-%E5%AE%9E%E7%8E%B0%E8%BD%AF%E5%88%A0%E9%99%A4/"/>
    <id>https://xinyufeng.net/2022/04/28/Laravel-实现软删除/</id>
    <published>2022-04-28T01:38:06.000Z</published>
    <updated>2022-04-28T02:47:25.027Z</updated>
    
    <content type="html"><![CDATA[<p>软删除就是逻辑删除，数据保留单标记上删除状态，一般我们会用删除时间来作为标记，这样标记状态有了，删除时间也有了。</p><h2 id="用Laravel-自带的-Eloquent-ORM-来实现软删除。"><a href="#用Laravel-自带的-Eloquent-ORM-来实现软删除。" class="headerlink" title="用Laravel 自带的 Eloquent ORM 来实现软删除。"></a>用Laravel 自带的 Eloquent ORM 来实现软删除。</h2><ol><li>首先在数据迁移文件中添加<code>删除时间</code>字段</li></ol><p><code>./database/migrations/2014_10_12_000000_create_users_table.php</code></p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Migrations</span>\<span class="title">Migration</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Schema</span>\<span class="title">Blueprint</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="class"><span class="keyword">class</span> <span class="keyword">extends</span> <span class="title">Migration</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Run the migrations.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::create(<span class="string">'users'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</span><br><span class="line">            $table-&gt;id();</span><br><span class="line">            $table-&gt;string(<span class="string">'name'</span>);</span><br><span class="line">            $table-&gt;string(<span class="string">'email'</span>)-&gt;unique();</span><br><span class="line">            $table-&gt;timestamp(<span class="string">'email_verified_at'</span>)-&gt;nullable();</span><br><span class="line">            $table-&gt;string(<span class="string">'password'</span>);</span><br><span class="line">            $table-&gt;rememberToken();</span><br><span class="line">            $table-&gt;timestamps();</span><br><span class="line">            $table-&gt;softDeletes()-&gt;comment(<span class="string">'删除时间'</span>);<span class="comment">// 默认添加 deleted_at 字段</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Reverse the migrations.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::dropIfExists(<span class="string">'users'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>执行 <code>php artisan migrate</code> 运行迁移文件</p></li><li><p>修改对应的数据模型</p></li></ol><p><code>./app/Models/User.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">SoftDeletes</span>;<span class="comment">// 开启软删除</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $guarded = [];<span class="comment">// 不可以注入的字段数据，使用create方法才有效</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>软删除方法</li></ol><p>直接调用<code>delete()</code>方法或者<code>destroy()</code>方法即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::destroy($id);</span><br></pre></td></tr></table></figure><blockquote><p>这时候查询的数据自动添加过滤条件 <code>deleted_at = NULL</code></p></blockquote><ol start="5"><li>恢复删除</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::onlyTrashed()-&gt;where(<span class="string">'id'</span>, $id)-&gt;restore();</span><br></pre></td></tr></table></figure><ol start="5"><li>永久删除</li></ol><p>直接删除数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::forceDeleted($id);</span><br></pre></td></tr></table></figure><h2 id="查询包含已删除的数据"><a href="#查询包含已删除的数据" class="headerlink" title="查询包含已删除的数据"></a>查询包含已删除的数据</h2><p>使用 <code>withTrashed()</code>可以查询出包含已删除的数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::withTrashed()-&gt;get();</span><br></pre></td></tr></table></figure><h2 id="只查询已删除的数据"><a href="#只查询已删除的数据" class="headerlink" title="只查询已删除的数据"></a>只查询已删除的数据</h2><p>使用 <code>onlyTrashed()</code>可以只查询出已删除的数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::onlyTrashed()-&gt;get();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;软删除就是逻辑删除，数据保留单标记上删除状态，一般我们会用删除时间来作为标记，这样标记状态有了，删除时间也有了。&lt;/p&gt;
&lt;h2 id=&quot;用Laravel-自带的-Eloquent-ORM-来实现软删除。&quot;&gt;&lt;a href=&quot;#用Laravel-自带的-Eloquent-ORM-来实现软删除。&quot; class=&quot;headerlink&quot; title=&quot;用Laravel 自带的 Eloquent ORM 来实现软删除。&quot;&gt;&lt;/a&gt;用Laravel 自带的 Eloquent ORM 来实现软删除。&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;首先在数据迁移文件中添加&lt;code&gt;删除时间&lt;/code&gt;字段&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;./database/migrations/2014_10_12_000000_create_users_table.php&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
      <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 导入数据</title>
    <link href="https://xinyufeng.net/2022/04/18/MySQL-%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/"/>
    <id>https://xinyufeng.net/2022/04/18/MySQL-导入数据/</id>
    <published>2022-04-18T01:42:05.000Z</published>
    <updated>2022-04-24T02:21:23.353Z</updated>
    
    <content type="html"><![CDATA[<p>给大家介绍几种常用简单的MySQL导入数据命令</p><ol><li>MySQL命令导入</li></ol><p>使用 mysql 命令导入语法格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mysql -u用户名 -p 表名 &lt; /要导入的文件路径.sql </span></span><br><span class="line">Enter password: 输入密码</span><br></pre></td></tr></table></figure><p>实例：</p><p>使用 mysql 命令导入语法格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mysql -uroot -p test &lt; /usr/local/src/test.sql </span></span><br><span class="line">Enter password: 123123</span><br></pre></td></tr></table></figure><p>以上命令将将备份的整个数据库 test.sql 导入。</p><ol start="2"><li>source 命令导入</li></ol><p>source 命令导入数据库需要先登录到数库终端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database db1;      <span class="comment"># 创建数据库</span></span><br><span class="line">mysql&gt; use db1;                  <span class="comment"># 使用已创建的数据库 </span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> names utf8;           <span class="comment"># 设置编码</span></span><br><span class="line">mysql&gt; <span class="built_in">source</span>/usr/<span class="built_in">local</span>/src/db1.sql  <span class="comment"># 导入备份数据库</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给大家介绍几种常用简单的MySQL导入数据命令&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MySQL命令导入&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用 mysql 命令导入语法格式为：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="数据库" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL命令" scheme="https://xinyufeng.net/tags/MySQL%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Antd Vue table 设置rowClassName不生效的问题</title>
    <link href="https://xinyufeng.net/2022/04/14/Antd-Vue-table-%E8%AE%BE%E7%BD%AErowClassName%E4%B8%8D%E7%94%9F%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://xinyufeng.net/2022/04/14/Antd-Vue-table-设置rowClassName不生效的问题/</id>
    <published>2022-04-14T02:39:27.000Z</published>
    <updated>2022-04-14T08:46:30.711Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Antd Vue table 利用 <code>rowClassName</code> 自定义带斑马纹的表格，设置后并未生效</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-table</span><br><span class="line">    <span class="class"><span class="keyword">class</span></span>=<span class="string">"ant-table-striped"</span></span><br><span class="line">    size=<span class="string">"middle"</span></span><br><span class="line">    :columns=<span class="string">"columns"</span></span><br><span class="line">    :dataSource=<span class="string">"data"</span></span><br><span class="line">    :rowClassName=<span class="string">"(_record, index) =&gt; (index % 2 === 1 ? 'table-striped' : null)"</span></span><br><span class="line">    bordered</span><br><span class="line">  /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.ant-table-striped .table-striped td &#123;</span><br><span class="line">  background-color: #fafafa;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>原因是这样的样式不能放在<code>scoped</code>中，应写在全局样式中</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;less&quot;&gt;</span><br><span class="line">.ant-table-striped .table-striped td &#123;</span><br><span class="line">  background-color: #fafafa;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>改成这样后样式生效</p><blockquote><p>注意，这样可能会影响到其他组件中<code>class</code>为<code>.ant-table-striped .table-striped td</code>的样式</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 Antd Vue table 利用 &lt;code&gt;rowClassName&lt;/code&gt; 自定义带斑马纹的表格，设置后并未生效&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;a-table&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ant-table-striped&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size=&lt;span class=&quot;string&quot;&gt;&quot;middle&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :columns=&lt;span class=&quot;string&quot;&gt;&quot;columns&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :dataSource=&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :rowClassName=&lt;span class=&quot;string&quot;&gt;&quot;(_record, index) =&amp;gt; (index % 2 === 1 ? &#39;table-striped&#39; : null)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bordered&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style scoped lang=&amp;quot;less&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.ant-table-striped .table-striped td &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  background-color: #fafafa;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原因是这样的样式不能放在&lt;code&gt;scoped&lt;/code&gt;中，应写在全局样式中&lt;/p&gt;
    
    </summary>
    
      <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Vue" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/"/>
    
    
      <category term="Vue教程" scheme="https://xinyufeng.net/tags/Vue%E6%95%99%E7%A8%8B/"/>
    
      <category term="AntD Vue" scheme="https://xinyufeng.net/tags/AntD-Vue/"/>
    
  </entry>
  
  <entry>
    <title>浏览器 Cookie 的使用</title>
    <link href="https://xinyufeng.net/2022/04/12/%E6%B5%8F%E8%A7%88%E5%99%A8-Cookie-%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://xinyufeng.net/2022/04/12/浏览器-Cookie-的使用/</id>
    <published>2022-04-12T07:31:11.000Z</published>
    <updated>2022-04-12T07:52:18.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cookie介绍"><a href="#Cookie介绍" class="headerlink" title="Cookie介绍"></a>Cookie介绍</h2><p>主要用于存储访问过的网站数据，把浏览器的信息存储到本地电脑中，实现客户端和服务器端的通讯。</p><h2 id="Cookie特点"><a href="#Cookie特点" class="headerlink" title="Cookie特点"></a>Cookie特点</h2><ul><li>以文本形式保存(.txt)</li><li>Cookie存储信息不安全（不能存放重要的信息）</li><li>Cookie中有域（domain）和路径的概念,浏览器是一个比较安全的环境，所以不同的域之间不能直接访问（js的同源策略限制）</li></ul><a id="more"></a><h2 id="Cookie的常用属性"><a href="#Cookie的常用属性" class="headerlink" title="Cookie的常用属性"></a>Cookie的常用属性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Name：cookie的名字(键)</span><br><span class="line">Value：cookie存放的值</span><br><span class="line">Expires：指cookie过期的时间（该时间为世界时间  UTC时间）也称为格林威治时间</span><br><span class="line">Max-Age: 指cookie最大的存活有效期（单位：秒）</span><br><span class="line">Domain: 指的是cookie当前的域</span><br><span class="line">Path:指cookie当前的路径</span><br><span class="line">Size: 指cookie存放的大小</span><br><span class="line">Secure: 指cooke的安全属性</span><br></pre></td></tr></table></figure><h2 id="JavaScript操作Cookie"><a href="#JavaScript操作Cookie" class="headerlink" title="JavaScript操作Cookie"></a>JavaScript操作Cookie</h2><ol><li>document.cookie 属性创建、读取、删除 cookie</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.cookie=<span class="string">'name=Peak'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.cookie);</span><br></pre></td></tr></table></figure><ol start="2"><li>设置cookie失效时间</li></ol><p>设置一个10分钟后失效的Cookie</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">name, value, expire</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> expires = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">new</span> <span class="built_in">Date</span>().getTime() + loginRes.data.expire * <span class="number">1000</span>);</span><br><span class="line">    <span class="built_in">document</span>.cookie = <span class="string">`<span class="subst">$&#123;name&#125;</span>=<span class="subst">$&#123;value&#125;</span>;expires=<span class="subst">$&#123;expires&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br><span class="line">setCookie(<span class="string">'name'</span>, <span class="string">'Peak'</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure><blockquote><p>注意：过期时间是格林威治时间（UTC时间）</p></blockquote><ol start="3"><li>提前清除cookie</li></ol><p>把过期时间设置为小于当前时间即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setCookie(<span class="string">'name'</span>, <span class="string">'Peak'</span>, <span class="number">-1</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Cookie介绍&quot;&gt;&lt;a href=&quot;#Cookie介绍&quot; class=&quot;headerlink&quot; title=&quot;Cookie介绍&quot;&gt;&lt;/a&gt;Cookie介绍&lt;/h2&gt;&lt;p&gt;主要用于存储访问过的网站数据，把浏览器的信息存储到本地电脑中，实现客户端和服务器端的通讯。&lt;/p&gt;
&lt;h2 id=&quot;Cookie特点&quot;&gt;&lt;a href=&quot;#Cookie特点&quot; class=&quot;headerlink&quot; title=&quot;Cookie特点&quot;&gt;&lt;/a&gt;Cookie特点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;以文本形式保存(.txt)&lt;/li&gt;
&lt;li&gt;Cookie存储信息不安全（不能存放重要的信息）&lt;/li&gt;
&lt;li&gt;Cookie中有域（domain）和路径的概念,浏览器是一个比较安全的环境，所以不同的域之间不能直接访问（js的同源策略限制）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端开发" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="JavaScript" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/JavaScript/"/>
    
    
      <category term="JS方法" scheme="https://xinyufeng.net/tags/JS%E6%96%B9%E6%B3%95/"/>
    
      <category term="JS技巧" scheme="https://xinyufeng.net/tags/JS%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Vue 中的代理proxy配置</title>
    <link href="https://xinyufeng.net/2022/04/08/Vue-%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%90%86proxy%E9%85%8D%E7%BD%AE/"/>
    <id>https://xinyufeng.net/2022/04/08/Vue-中的代理proxy配置/</id>
    <published>2022-04-08T01:06:57.000Z</published>
    <updated>2022-04-08T02:02:03.093Z</updated>
    
    <content type="html"><![CDATA[<p>我们本地开发调试一般是 <code>npm run serve</code> 或 <code>yarn serve</code>，然后打开 <code>localhost:8080</code>（本机的IP），此时如果调用后端接口，可能会产生跨域，那如何解决呢？</p><p><strong>解决跨域的方案</strong></p><ol><li>jsonp<ul><li>只支持GET请求，JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。</li></ul></li><li>cors<ul><li>CORS支持所有类型的HTTP请求，是跨域HTTP请求的根本解决方案</li></ul></li><li>Node中间件代理(两次跨域)<ul><li>通过同源策略对服务器不加限制。</li></ul></li><li>Nginx反向代理<ul><li>通过同源策略对服务器不加限制。</li></ul></li></ol><p>日常工作中，生产环境用得比较多的跨域方案是cors和nginx反向代理。<br>本地项目中调试用的最多的就是 node 代理，当然像 nginx、charles（抓包工具）做代理也可以，只要你会配置。<br><a id="more"></a></p><p>vue 中的 <code>proxy</code> 就是利用了 Node 代理，原理是因为服务器端没有跨域，使用的是 <a href="https://github.com/chimurai/http-proxy-middleware" target="_blank" rel="noopener">http-proxy-middleware</a> 这个模块（这个模块相当于是node.js的一个插件）</p><p><strong>案例</strong></p><ol><li>你要调取的接口是 <code>http://dev.com/api/test</code>，然后你可以在本地调 <code>http://localhost:8080/api/test</code>，如<code>axios.get(&#39;/api/test&#39;)</code></li></ol><p>配置代理后，会做如下转发：</p><p><code>http://localhost:8080/api/test</code> -&gt; <code>http://dev.com/api/test</code><br><code>http://localhost:8080/admin/api/test</code> -&gt; <code>http://dev.com/admin/api/test</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue-cli3.0 里面的 vue.config.js做配置</span></span><br><span class="line">devServer: &#123;</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      <span class="string">'/api'</span>: &#123;</span><br><span class="line">        target: <span class="string">'http://dev.com'</span>,<span class="comment">// 后端接口域名</span></span><br><span class="line">        ws: <span class="literal">true</span>,<span class="comment">//如果要代理 websockets，配置这个参数</span></span><br><span class="line">        secure: <span class="literal">false</span>,<span class="comment">// 如果是https接口，需要配置这个参数</span></span><br><span class="line">        changeOrigin: <span class="literal">true</span>,<span class="comment">// 是否跨域</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ol start="2"><li>当你调后端接口的命名没有统一给接口前加 <code>/api</code> 这类的标识，那么你可以自己加，也就是你可以在本地调 <code>http://localhost:8080/api/test</code>，如<code>axios.get(&#39;/api/test&#39;)</code>，而你要的目标接口是 <code>http://dev.com/test</code>，你就可以用 <code>pathRewrite</code>，遇到 <code>/api</code> 就去找代理 <code>http://dev.com/test</code> 并且把 <code>/api</code> 重写为 <code>/</code>。</li></ol><p>所以转发效果就是：</p><p><code>http://localhost:8080/api/test</code> -&gt; <code>http://dev.com/test</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue-cli3.0 里面的 vue.config.js做配置</span></span><br><span class="line">devServer: &#123;</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      <span class="string">'/api'</span>: &#123;</span><br><span class="line">        target: <span class="string">'http://dev.com'</span>,<span class="comment">// 后端接口域名</span></span><br><span class="line">        ws: <span class="literal">true</span>,<span class="comment">//如果要代理 websockets，配置这个参数</span></span><br><span class="line">        secure: <span class="literal">false</span>,<span class="comment">// 如果是https接口，需要配置这个参数</span></span><br><span class="line">        changeOrigin: <span class="literal">true</span>,<span class="comment">// 是否跨域</span></span><br><span class="line">        pathRewrite:&#123;<span class="comment">// 路径重写</span></span><br><span class="line">            <span class="string">'^/api'</span>: <span class="string">'/'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ol start="3"><li>对所有的接口都代理的，不止是检测到 <code>/api</code> 的接口，比如：</li></ol><p><code>http://localhost:8080/api/test</code> -&gt; <code>http://dev.com/api/test</code><br><code>http://localhost:8080/test</code> -&gt; <code>http://dev.com/test</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">    proxy: <span class="string">'http:///dev.com'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>常用的devServer配置</strong></p><p><a href="https://webpack.docschina.org/configuration/dev-server/" target="_blank" rel="noopener">DevServer配置文档</a></p><ol><li>devServer.disableHostCheck</li></ol><p>当设置为<code>true</code>时，此选项将绕过主机检查。不建议这样做，因为不检查主机的应用程序容易受到DNS重新绑定攻击。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">    disableHostCheck: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>devServer.publicPath</li></ol><p>假设服务器在<code>http://localhost:8080</code>下运行，<code>output.filename</code>设置为<code>bundle.js</code>。默认情况下，<code>devServer.publicPath</code>是<code>/</code>，所以你的包可以作为<code>http://localhost:8080/bundle.js</code> 使用。将<code>devServer.publicPath</code>更改为 <code>/assets/</code> 就变为 <code>http://localhost:8080/assets/bundle.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">    publicPath: <span class="string">'/assets/'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>确保devServer.publicPath始终以正斜杠开头和结尾。</p></blockquote><p><strong>常用vue/cli3的配置</strong></p><p><a href="https://cli.vuejs.org/zh/config/" target="_blank" rel="noopener">vue/cli3配置文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们本地开发调试一般是 &lt;code&gt;npm run serve&lt;/code&gt; 或 &lt;code&gt;yarn serve&lt;/code&gt;，然后打开 &lt;code&gt;localhost:8080&lt;/code&gt;（本机的IP），此时如果调用后端接口，可能会产生跨域，那如何解决呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决跨域的方案&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;jsonp&lt;ul&gt;
&lt;li&gt;只支持GET请求，JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cors&lt;ul&gt;
&lt;li&gt;CORS支持所有类型的HTTP请求，是跨域HTTP请求的根本解决方案&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node中间件代理(两次跨域)&lt;ul&gt;
&lt;li&gt;通过同源策略对服务器不加限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Nginx反向代理&lt;ul&gt;
&lt;li&gt;通过同源策略对服务器不加限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;日常工作中，生产环境用得比较多的跨域方案是cors和nginx反向代理。&lt;br&gt;本地项目中调试用的最多的就是 node 代理，当然像 nginx、charles（抓包工具）做代理也可以，只要你会配置。&lt;br&gt;
    
    </summary>
    
      <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Vue" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/"/>
    
    
      <category term="Vue教程" scheme="https://xinyufeng.net/tags/Vue%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Vue Antd Admin 跨域代理配置</title>
    <link href="https://xinyufeng.net/2022/04/07/Vue-Antd-Admin-%E8%B7%A8%E5%9F%9F%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/"/>
    <id>https://xinyufeng.net/2022/04/07/Vue-Antd-Admin-跨域代理配置/</id>
    <published>2022-04-07T05:07:19.000Z</published>
    <updated>2022-04-08T02:02:07.405Z</updated>
    
    <content type="html"><![CDATA[<ol><li>修改文件 <code>src\services\api.js</code></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//跨域代理前缀</span></span><br><span class="line"><span class="keyword">const</span> API_PROXY_PREFIX=<span class="string">'/adminapi'</span></span><br><span class="line"><span class="keyword">const</span> BASE_URL = process.env.NODE_ENV === <span class="string">'production'</span> ? process.env.VUE_APP_API_BASE_URL : API_PROXY_PREFIX</span><br><span class="line"><span class="comment">//const BASE_URL = process.env.VUE_APP_API_BASE_URL</span></span><br></pre></td></tr></table></figure><ol start="2"><li>修改文件<code>vue.config.js</code></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      <span class="string">'/adminapi'</span>: &#123; <span class="comment">//此处要与 /services/api.js 中的 API_PROXY_PREFIX 值保持一致</span></span><br><span class="line">        target: process.env.VUE_APP_API_BASE_URL,</span><br><span class="line">        changeOrigin: <span class="literal">true</span>,</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          <span class="string">'^/adminapi'</span>: <span class="string">'/'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启<code>yarn serve</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;修改文件 &lt;code&gt;src\services\api.js&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas
      
    
    </summary>
    
      <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Vue" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/"/>
    
    
      <category term="Vue教程" scheme="https://xinyufeng.net/tags/Vue%E6%95%99%E7%A8%8B/"/>
    
      <category term="Vue技巧" scheme="https://xinyufeng.net/tags/Vue%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2模型的关联模型使用</title>
    <link href="https://xinyufeng.net/2022/04/06/Yii2%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%85%B3%E8%81%94%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8/"/>
    <id>https://xinyufeng.net/2022/04/06/Yii2模型的关联模型使用/</id>
    <published>2022-04-06T07:55:21.000Z</published>
    <updated>2022-04-06T08:14:44.492Z</updated>
    
    <content type="html"><![CDATA[<p><code>Active Record</code> 可以将相关数据集中进来， 使其可以通过原始数据轻松访问。 例如，客户数据与订单数据相关 因为一个客户可能已经存放了一个或多个订单。这种关系通过适当的声明， 你可以使用 <code>$customer-&gt;orders</code> 表达式访问客户的订单信息 这表达式将返回包含 <code>Order Active Record</code> 实例的客户订单信息的数组。</p><p><strong>声明关联关系</strong></p><p>你必须先在 <code>Active Record</code> 类中定义关联关系，才能使用 <code>Active Record</code> 的关联数据。 简单地为每个需要定义关联关系声明一个 关联方法 即可，如下所示，</p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Customer</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getOrders</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(Order::className(), [<span class="string">'customer_id'</span> =&gt; <span class="string">'id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCustomer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(Customer::className(), [<span class="string">'id'</span> =&gt; <span class="string">'customer_id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述的代码中，我们为 <code>Customer</code> 类声明了一个 <code>orders</code> 关联， 和为 <code>Order</code> 声明了一个 <code>customer</code> 关联。</p><p>每个关联方法必须这样命名：<code>getXyz</code>。然后我们通过 <code>xyz</code>（首字母小写）调用这个关联名。 请注意关联名是<em>大小写敏感</em>的。</p><p>当声明一个关联关系的时候，必须指定好以下的信息：</p><ul><li>关联的对应关系：通过调用 <code>hasMany()</code> 或者 <code>hasOne()</code> 指定。在上面的例子中，您可以很容易看出这样的关联声明： 一个客户可以有很多订单，而每个订单只有一个客户。</li><li>相关联 <code>Active Record</code> 类名：用来指定为 <code>hasMany()</code> 或者 <code>hasOne()</code> 方法的第一个参数。 推荐的做法是调用 <code>Xyz::className()</code> 来获取类名称的字符串，以便您 可以使用 IDE 的自动补全，以及让编译阶段的错误检测生效。</li><li>两组数据的关联列：用以指定两组数据相关的列（<code>hasOne()</code>/<code>hasMany()</code> 的第二个参数）。 数组的值填的是主数据的列（当前要声明关联的 <code>Active Record</code> 类为主数据）， 而数组的键要填的是相关数据的列。</li></ul><p>一个简单的口诀，先附表的主键，后主表的主键。 正如上面的例子，<code>customer_id</code> 是 <code>Order</code> 的属性，而 <code>id</code>是 <code>Customer</code> 的属性。 （译者注：<code>hasMany()</code> 的第二个参数，这个数组键值顺序不要弄反了）</p><p><strong>访问关联数据</strong></p><p>定义了关联关系后，你就可以通过关联名访问相应的关联数据了。就像 访问一个由关联方法定义的对象一样，具体概念请查看 属性。 因此，现在我们可以称它为 关联属性 了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SELECT * FROM `customer` WHERE `id` = 123</span></span><br><span class="line">$customer = Customer::findOne(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// SELECT * FROM `order` WHERE `customer_id` = 123</span></span><br><span class="line"><span class="comment">// $orders 是由 Order 类组成的数组</span></span><br><span class="line">$orders = $customer-&gt;orders;</span><br></pre></td></tr></table></figure><blockquote><p>提示： 当你通过 <code>getter</code> 方法 <code>getXyz()</code> 声明了一个叫 <code>xyz</code> 的关联属性，你就可以像 属性 那样访问 <code>xyz</code>。注意这个命名是<em>区分大小写</em>的。</p></blockquote><p>如果使用 <code>hasMany()</code>声明关联关系，则访问此关联属性 将返回相关的 <code>Active Record</code> 实例的数组； 如果使用 <code>hasOne()</code> 声明关联关系，访问此关联属性 将返回相关的 <code>Active Record</code> 实例，如果没有找到相关数据的话，则返回 <code>null</code>。</p><p>当你第一次访问关联属性时，将执行 SQL 语句获取数据，如 上面的例子所示。如果再次访问相同的属性，将返回先前的结果，而不会重新执行 SQL 语句。要强制重新执行 SQL 语句，你应该先 <code>unset</code> 这个关联属性， 如：<code>unset($ customer-&gt; orders)</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$customer-&gt;orders; <span class="comment">// 获得 `Order` 对象的数组</span></span><br><span class="line">$customer-&gt;getOrders(); <span class="comment">// 返回 ActiveQuery 类的实例</span></span><br></pre></td></tr></table></figure><p><strong>设置别名</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCustomer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(Customer::className(), [<span class="string">'id'</span> =&gt; <span class="string">'customer_id'</span>])-&gt;alias(<span class="string">'c'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关联查询 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$order = Order::find()-&gt;joinWith(<span class="string">'customer'</span>)</span><br><span class="line">            -&gt;where([<span class="string">'filter1'</span>=&gt;$filter1, <span class="string">'filter2'</span>=&gt;$filter2])</span><br><span class="line">            -&gt;andWhere([<span class="string">'='</span>, <span class="string">'c.filter3'</span>, $filter3])</span><br><span class="line">            -&gt;andWhere([<span class="string">'&lt;='</span>, <span class="string">'cfilter4'</span>, $filter4])</span><br><span class="line">            -&gt;one();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Active Record&lt;/code&gt; 可以将相关数据集中进来， 使其可以通过原始数据轻松访问。 例如，客户数据与订单数据相关 因为一个客户可能已经存放了一个或多个订单。这种关系通过适当的声明， 你可以使用 &lt;code&gt;$customer-&amp;gt;orders&lt;/code&gt; 表达式访问客户的订单信息 这表达式将返回包含 &lt;code&gt;Order Active Record&lt;/code&gt; 实例的客户订单信息的数组。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;声明关联关系&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你必须先在 &lt;code&gt;Active Record&lt;/code&gt; 类中定义关联关系，才能使用 &lt;code&gt;Active Record&lt;/code&gt; 的关联数据。 简单地为每个需要定义关联关系声明一个 关联方法 即可，如下所示，&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>MySQL5.7.26错误问题 mysqld.exe: Error while setting value &#39;STRICT_TRANS_TABLES, NO_ZERO_IN_DATE, NO_ZERO_DATE, ERROR_FOR_DIVISION_BY_ZERO, NO_AUTO_CREATE_USER, NO_ENGINE_SUBSTITUTION&#39; to &#39;sql_mode&#39;</title>
    <link href="https://xinyufeng.net/2022/03/28/MySQL5-7-26%E9%94%99%E8%AF%AF%E9%97%AE%E9%A2%98-mysqld-exe-Error-while-setting-value-STRICT-TRANS-TABLES-NO-ZERO-IN-DATE-NO-ZERO-DATE-ERROR-FOR-DIVISION-BY-ZERO-NO-AUTO-CREATE-USER-NO-ENGINE-SUBSTITUTION-to-sql-mode/"/>
    <id>https://xinyufeng.net/2022/03/28/MySQL5-7-26错误问题-mysqld-exe-Error-while-setting-value-STRICT-TRANS-TABLES-NO-ZERO-IN-DATE-NO-ZERO-DATE-ERROR-FOR-DIVISION-BY-ZERO-NO-AUTO-CREATE-USER-NO-ENGINE-SUBSTITUTION-to-sql-mode/</id>
    <published>2022-03-28T01:56:34.000Z</published>
    <updated>2022-03-28T02:02:19.606Z</updated>
    
    <content type="html"><![CDATA[<p>这样的问题出现，是因为MySQL的配置文件<code>my.ini</code>中<code>sql_mode</code>的值，逗号后面加上了空格导致的无法启动，需要手动删除空格就可以了。</p><p><code>my.ini</code>原来部分代码：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tmp_table_size</span>=<span class="number">64</span>M</span><br><span class="line"><span class="attr">wait_timeout</span>=<span class="number">120</span></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES, NO_ZERO_IN_DATE, NO_ZERO_DATE, ERROR_FOR_DIVISION_BY_ZERO, NO_AUTO_CREATE_USER, NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><p><code>my.ini</code>修改后代码：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tmp_table_size</span>=<span class="number">64</span>M</span><br><span class="line"><span class="attr">wait_timeout</span>=<span class="number">120</span></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><p>重启即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这样的问题出现，是因为MySQL的配置文件&lt;code&gt;my.ini&lt;/code&gt;中&lt;code&gt;sql_mode&lt;/code&gt;的值，逗号后面加上了空格导致的无法启动，需要手动删除空格就可以了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;my.ini&lt;/code&gt;原来部分代码：&lt;/p&gt;
&lt;fi
      
    
    </summary>
    
      <category term="数据库" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL错误" scheme="https://xinyufeng.net/tags/MySQL%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
</feed>

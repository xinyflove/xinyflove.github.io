<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Peak Xin</title>
  
  <subtitle>小峰的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xinyufeng.net/"/>
  <updated>2022-04-29T05:33:28.324Z</updated>
  <id>https://xinyufeng.net/</id>
  
  <author>
    <name>Peak Xin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Laravel 缓存操作</title>
    <link href="https://xinyufeng.net/2022/04/29/Laravel-%E7%BC%93%E5%AD%98%E6%93%8D%E4%BD%9C/"/>
    <id>https://xinyufeng.net/2022/04/29/Laravel-缓存操作/</id>
    <published>2022-04-29T03:18:42.000Z</published>
    <updated>2022-04-29T05:33:28.324Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel为不同的缓存系统封装了统一的API，缓存配置文件<code>./config/cache.php</code></p><p><strong>主要的缓存类型(驱动)</strong></p><ul><li>file - 文件，默认使用</li><li>memcached - memcached</li><li>redis - redis</li><li>database - 数据库</li></ul><p>默认laravel支持缓存介质：<code>apc</code>, <code>array</code>, <code>database</code>, <code>file</code>, <code>memcached</code>, <code>redis</code></p><p>在配置文件<code>.env</code>中修改驱动类型</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CACHE_DRIVER=file</span><br></pre></td></tr></table></figure><h2 id="设置缓存"><a href="#设置缓存" class="headerlink" title="设置缓存"></a>设置缓存</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Cache</span>; <span class="comment">// Cache门面</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 如果key不存在则添加成功，如果key存在，返回false</span></span><br><span class="line">Cache::add(<span class="string">'key'</span>, <span class="string">'value'</span>, $seconds);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 不管key值是否存，都可以设置成功</span></span><br><span class="line">Cache::put(<span class="string">'key'</span>, <span class="string">'value'</span>, $seconds);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置永久缓存</span></span><br><span class="line">Cache::forever(<span class="string">'key'</span>, <span class="string">'value'</span>);</span><br></pre></td></tr></table></figure><blockquote><p>文件所生成的地方在 <code>./storage/framework/cache/data/</code> 目录下</p></blockquote><h2 id="获取缓存数据"><a href="#获取缓存数据" class="headerlink" title="获取缓存数据"></a>获取缓存数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$value = Cache::get(<span class="string">'key'</span>);</span><br><span class="line"></span><br><span class="line">$value = Cache::get(<span class="string">'key'</span>, <span class="string">'default'</span>);</span><br><span class="line"></span><br><span class="line">$value = Cache::get(<span class="string">'key'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取的同时并存储</span></span><br><span class="line">$value = Cache::remember(<span class="string">'users'</span>, $minutes, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'key不存的时候返回的数据'</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="检查缓存项是否存在"><a href="#检查缓存项是否存在" class="headerlink" title="检查缓存项是否存在"></a>检查缓存项是否存在</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查缓存的key值是否存在，存在返回true否则返回false</span></span><br><span class="line">Cache::has(<span class="string">'key'</span>)</span><br></pre></td></tr></table></figure><h2 id="删除缓存数据"><a href="#删除缓存数据" class="headerlink" title="删除缓存数据"></a>删除缓存数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先获取再删除</span></span><br><span class="line">$value = Cache::pull(<span class="string">'key'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除单个</span></span><br><span class="line">Cache::forget(<span class="string">'key'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除所有的缓存</span></span><br><span class="line">Cache::flush();</span><br></pre></td></tr></table></figure><h2 id="缓存辅助函数"><a href="#缓存辅助函数" class="headerlink" title="缓存辅助函数"></a>缓存辅助函数</h2><p>除了使用 <code>Cache</code> 门面或缓存契约，还可以使用全局的 <code>cache()</code> 函数来通过缓存获取和存储数据。当带有一个字符串参数的 <code>cache()</code> 函数被调用时，会返回给定键对应的缓存值（取值）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$value = cache(<span class="string">'key'</span>);</span><br></pre></td></tr></table></figure><p>如果你提供了键值对数组和一个过期时间给该函数，则会在指定的有效期内存储缓存值（存储）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cache([<span class="string">'key'</span> =&gt; <span class="string">'value'</span>], $seconds);</span><br><span class="line"></span><br><span class="line">cache([<span class="string">'key'</span> =&gt; <span class="string">'value'</span>], now()-&gt;addMinutes(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><p><code>cache()</code> 函数不带任何参数被调用时会返回 Illuminate\Contracts\Cache\Factory 实现的实例，从而允许你调用其它缓存方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cache()-&gt;remember(<span class="string">'users'</span>, $seconds, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> DB::table(<span class="string">'users'</span>)-&gt;get();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Laravel为不同的缓存系统封装了统一的API，缓存配置文件&lt;code&gt;./config/cache.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要的缓存类型(驱动)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;file - 文件，默认使用&lt;/li&gt;
&lt;li&gt;memcached - memcached&lt;/li&gt;
&lt;li&gt;redis - redis&lt;/li&gt;
&lt;li&gt;database - 数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;默认laravel支持缓存介质：&lt;code&gt;apc&lt;/code&gt;, &lt;code&gt;array&lt;/code&gt;, &lt;code&gt;database&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;memcached&lt;/code&gt;, &lt;code&gt;redis&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在配置文件&lt;code&gt;.env&lt;/code&gt;中修改驱动类型&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
      <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 表单验证 validate 规则参数</title>
    <link href="https://xinyufeng.net/2022/04/28/Laravel-%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81-validate-%E8%A7%84%E5%88%99%E5%8F%82%E6%95%B0/"/>
    <id>https://xinyufeng.net/2022/04/28/Laravel-表单验证-validate-规则参数/</id>
    <published>2022-04-28T04:58:13.000Z</published>
    <updated>2022-04-28T05:29:31.734Z</updated>
    
    <content type="html"><![CDATA[<p><strong>简单的表单验证1</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// request() 与 $request等同</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;validate(request(), [</span><br><span class="line">        <span class="string">'title'</span> =&gt; <span class="string">'required|string'</span>,</span><br><span class="line">        <span class="string">'content'</span> =&gt; <span class="string">'required|string'</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证通过</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>简单的表单验证2</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// request() 与 $request等同</span></span><br><span class="line">    $req_params = $request-&gt;all();</span><br><span class="line">    $validator = Validator::make($req_params, [</span><br><span class="line">        <span class="string">'title'</span> =&gt; <span class="string">'required|string'</span>,</span><br><span class="line">        <span class="string">'content'</span> =&gt; <span class="string">'required|string'</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($validator-&gt;fails()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'验证失败'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证通过</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证规则"><a href="#验证规则" class="headerlink" title="验证规则"></a>验证规则</h2><table><thead><tr><th>规则</th><th>说明</th></tr></thead><tbody><tr><td>required</td><td>验证字段必须出现在输入数据中，不能为空</td></tr><tr><td>present</td><td>验证字段必须出现在输入数据中，可以为空</td></tr><tr><td>filled</td><td>验证字段可不在输入数据中，当验证字段出现在数据中时，不能为空</td></tr><tr><td>nullable</td><td>验证字段的值可以为 <code>null</code></td></tr><tr><td>accepted</td><td>验证的字段必须为 yes、 on、 1、或 true</td></tr><tr><td>active_url</td><td>相当于使用了 PHP 函数 dns_get_record，验证的字段必须具有有效的 A 或 AAAA 记录</td></tr><tr><td>after:date</td><td>验证的字段必须是给定日期后的值。这个日期将会通过 PHP 函数 strtotime 来验证<br>`’start_date’ =&gt; ‘required</td><td>date</td><td>after:tomorrow’<code>&lt;br&gt;你也可以指定其它的字段来比较日期</code>‘finish_date’ =&gt; ‘required</td><td>date</td><td>after:start_date’`</td></tr><tr><td>after_or_equal:date</td><td>验证的字段必须等于给定日期或之后的值。更多信息请参见 after 规则</td></tr><tr><td>alpha</td><td>验证的字段必须完全是字母的字符</td></tr><tr><td>alpha_dash</td><td>验证的字段可能具有字母、数字、破折号（ - ）以及下划线（ _ ）</td></tr><tr><td>alpha_num</td><td>验证的字段必须完全是字母、数字</td></tr><tr><td>array</td><td>验证的字段必须是一个 PHP 数组</td></tr><tr><td>before:date</td><td>验证的字段必须是给定日期之前的值。这个日期将会通过 PHP 函数 strtotime 来验证</td></tr><tr><td>before_or_equal:date</td><td>验证的字段必须等于给定日期或之前的值。这个日期将会使用 PHP 函数 strtotime 来验证</td></tr><tr><td>between:min,max</td><td>验证的字段的大小必须在给定的 min 和 max 之间。字符串、数字、数组或是文件大小的计算方式都用 size 方法进行评估<br>当需要验证表单数据中数字的大小时，在验证规则中一定要加入 Numeric 或 Integer 其一，size、between、max、min这些验证才会起作用</td></tr><tr><td>boolean</td><td>验证的字段必须能够被转换为布尔值。可接受的参数为 true、false、1、0、“1” 以及 “0”</td></tr><tr><td>confirmed</td><td>验证的字段必须和 foo_confirmation 的字段值一致。例如，如果要验证的字段是 password，输入中必须存在匹配的 password_confirmation 字段</td></tr><tr><td>date</td><td>验证的字段值必须是通过 PHP 函数 strtotime 校验的有效日期</td></tr><tr><td>date_equals:date</td><td>验证的字段必须等于给定的日期。该日期会被传递到 PHP 函数 strtotime</td></tr><tr><td>date_format:format</td><td>验证的字段必须与给定的格式相匹配。你应该只使用 date 或 date_format 其中一个用于验证，而不应该同时使用两者</td></tr><tr><td>different:field</td><td>验证的字段值必须与字段 (field) 的值不同</td></tr><tr><td>digits:value</td><td>验证的字段必须是数字，并且必须具有确切的值</td></tr><tr><td>digits_between:min,max</td><td>验证的字段的长度必须在给定的 min 和 max 之间</td></tr><tr><td>dimensions</td><td>验证的文件必须是图片并且图片比例必须符合规则<br><code>&#39;avatar&#39; =&gt; &#39;dimensions:min_width=100,min_height=200&#39;</code><br>可用的规则为： min_width、 max_width 、 min_height 、 max_height 、 width 、 height 、 ratio<br>比例应该使用宽度除以高度的方式来约束。这样可以通过 3/2 这样的语句或像 1.5 这样的浮点的约束<br><code>&#39;avatar&#39; =&gt; &#39;dimensions:ratio=3/2&#39;</code><br>由于此规则需要多个参数，因此你可以 Rule::dimensions 方法来构造可读性高的规则<br><code>use Illuminate\Validation\Rule;</code><br><code>Validator::make($data, [</code><br><code>&#39;avatar&#39; =&gt; [</code><br><code>&#39;required&#39;,</code><br><code>Rule::dimensions()-&gt;maxWidth(1000)-&gt;maxHeight(500)-&gt;ratio(3 / 2),</code><br><code>],</code><br><code>]);</code></td></tr><tr><td>distinct</td><td>验证数组时，指定的字段不能有任何重复值<br><code>‘foo.*.id’ =&gt; ‘distinct’</code></td></tr><tr><td>email</td><td>验证的字段必须符合 e-mail 地址格式</td></tr><tr><td>exists:table,column</td><td>验证的字段必须存在于给定的数据库表中</td></tr><tr><td></td></tr></tbody></table><h2 id="空值"><a href="#空值" class="headerlink" title="空值"></a>空值</h2><p>在 Laravel 中，一个字段满足下面任何一条都将被视为空值：</p><ul><li><code>null</code></li><li>空字符串 ‘ ‘</li><li>空数组 <code>[ ]</code> 或空 <code>countable</code> 对象</li><li>无路径的上传文件</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;简单的表单验证1&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Request $request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// request() 与 $request等同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;validate(request(), [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;title&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;required|string&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;content&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;required|string&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 验证通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
      <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 模型的 scope 普通用法和全局用法</title>
    <link href="https://xinyufeng.net/2022/04/28/Laravel-%E6%A8%A1%E5%9E%8B%E7%9A%84-scope-%E6%99%AE%E9%80%9A%E7%94%A8%E6%B3%95%E5%92%8C%E5%85%A8%E5%B1%80%E7%94%A8%E6%B3%95/"/>
    <id>https://xinyufeng.net/2022/04/28/Laravel-模型的-scope-普通用法和全局用法/</id>
    <published>2022-04-28T02:47:07.000Z</published>
    <updated>2022-04-28T02:56:04.489Z</updated>
    
    <content type="html"><![CDATA[<p>在数据查询中经常会使用条件查询，这些查询条件有些是相同的，<code>scope</code>可以实现这些相同条件查询的复用。</p><h2 id="普通-scope"><a href="#普通-scope" class="headerlink" title="普通 scope"></a>普通 <code>scope</code></h2><p><strong>定义</strong></p><p>方法名为 <code>scope</code> + 首字母大写单词 (这个可以随便定义)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">scopeStatus</span><span class="params">($query)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $query-&gt;where(<span class="string">'status'</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>使用</strong></p><p>其中调用去掉 <code>scope</code> 后，首字母小写的那个函数。</p><p>scopeStatus () 调用 status ()。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::status()-&gt;get();</span><br></pre></td></tr></table></figure><h2 id="全局-scope"><a href="#全局-scope" class="headerlink" title="全局 scope"></a>全局 <code>scope</code></h2><p>我们需要重新定义 <code>boot</code> 方法，集成父类 <code>boot</code> 以后，添加全局 <code>scope</code>，这样默认就已经全局使用了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">parent</span>::boot(); <span class="comment">// <span class="doctag">TODO:</span> Change the autogenerated stub</span></span><br><span class="line">    <span class="keyword">static</span>::addGlobalScope(<span class="string">'avaiable'</span>,<span class="function"><span class="keyword">function</span> <span class="params">(Builder $builder)</span></span>&#123;</span><br><span class="line">        $builder-&gt;whereIn(<span class="string">'status'</span>, [<span class="number">0</span>, <span class="number">1</span>]);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们有的时候有的查询是不需要这个全局 <code>scope</code> 的时候，我们只需要去掉就可以。</p><p>使用 <code>withOutGlobalScope()</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Post::withOutGlobalScope(<span class="string">'avaiable'</span>)-&gt;get();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在数据查询中经常会使用条件查询，这些查询条件有些是相同的，&lt;code&gt;scope&lt;/code&gt;可以实现这些相同条件查询的复用。&lt;/p&gt;
&lt;h2 id=&quot;普通-scope&quot;&gt;&lt;a href=&quot;#普通-scope&quot; class=&quot;headerlink&quot; title=&quot;普通 scope&quot;&gt;&lt;/a&gt;普通 &lt;code&gt;scope&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方法名为 &lt;code&gt;scope&lt;/code&gt; + 首字母大写单词 (这个可以随便定义)&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;scopeStatus&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($query)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $query-&amp;gt;where(&lt;span class=&quot;string&quot;&gt;&#39;status&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
      <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 实现软删除</title>
    <link href="https://xinyufeng.net/2022/04/28/Laravel-%E5%AE%9E%E7%8E%B0%E8%BD%AF%E5%88%A0%E9%99%A4/"/>
    <id>https://xinyufeng.net/2022/04/28/Laravel-实现软删除/</id>
    <published>2022-04-28T01:38:06.000Z</published>
    <updated>2022-04-28T02:47:25.027Z</updated>
    
    <content type="html"><![CDATA[<p>软删除就是逻辑删除，数据保留单标记上删除状态，一般我们会用删除时间来作为标记，这样标记状态有了，删除时间也有了。</p><h2 id="用Laravel-自带的-Eloquent-ORM-来实现软删除。"><a href="#用Laravel-自带的-Eloquent-ORM-来实现软删除。" class="headerlink" title="用Laravel 自带的 Eloquent ORM 来实现软删除。"></a>用Laravel 自带的 Eloquent ORM 来实现软删除。</h2><ol><li>首先在数据迁移文件中添加<code>删除时间</code>字段</li></ol><p><code>./database/migrations/2014_10_12_000000_create_users_table.php</code></p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Migrations</span>\<span class="title">Migration</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Schema</span>\<span class="title">Blueprint</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="class"><span class="keyword">class</span> <span class="keyword">extends</span> <span class="title">Migration</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Run the migrations.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::create(<span class="string">'users'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</span><br><span class="line">            $table-&gt;id();</span><br><span class="line">            $table-&gt;string(<span class="string">'name'</span>);</span><br><span class="line">            $table-&gt;string(<span class="string">'email'</span>)-&gt;unique();</span><br><span class="line">            $table-&gt;timestamp(<span class="string">'email_verified_at'</span>)-&gt;nullable();</span><br><span class="line">            $table-&gt;string(<span class="string">'password'</span>);</span><br><span class="line">            $table-&gt;rememberToken();</span><br><span class="line">            $table-&gt;timestamps();</span><br><span class="line">            $table-&gt;softDeletes()-&gt;comment(<span class="string">'删除时间'</span>);<span class="comment">// 默认添加 deleted_at 字段</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Reverse the migrations.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::dropIfExists(<span class="string">'users'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>执行 <code>php artisan migrate</code> 运行迁移文件</p></li><li><p>修改对应的数据模型</p></li></ol><p><code>./app/Models/User.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">SoftDeletes</span>;<span class="comment">// 开启软删除</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $guarded = [];<span class="comment">// 不可以注入的字段数据，使用create方法才有效</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>软删除方法</li></ol><p>直接调用<code>delete()</code>方法或者<code>destroy()</code>方法即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::destroy($id);</span><br></pre></td></tr></table></figure><blockquote><p>这时候查询的数据自动添加过滤条件 <code>deleted_at = NULL</code></p></blockquote><ol start="5"><li>恢复删除</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::onlyTrashed()-&gt;where(<span class="string">'id'</span>, $id)-&gt;restore();</span><br></pre></td></tr></table></figure><ol start="5"><li>永久删除</li></ol><p>直接删除数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::forceDeleted($id);</span><br></pre></td></tr></table></figure><h2 id="查询包含已删除的数据"><a href="#查询包含已删除的数据" class="headerlink" title="查询包含已删除的数据"></a>查询包含已删除的数据</h2><p>使用 <code>withTrashed()</code>可以查询出包含已删除的数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::withTrashed()-&gt;get();</span><br></pre></td></tr></table></figure><h2 id="只查询已删除的数据"><a href="#只查询已删除的数据" class="headerlink" title="只查询已删除的数据"></a>只查询已删除的数据</h2><p>使用 <code>onlyTrashed()</code>可以只查询出已删除的数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User::onlyTrashed()-&gt;get();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;软删除就是逻辑删除，数据保留单标记上删除状态，一般我们会用删除时间来作为标记，这样标记状态有了，删除时间也有了。&lt;/p&gt;
&lt;h2 id=&quot;用Laravel-自带的-Eloquent-ORM-来实现软删除。&quot;&gt;&lt;a href=&quot;#用Laravel-自带的-Eloquent-ORM-来实现软删除。&quot; class=&quot;headerlink&quot; title=&quot;用Laravel 自带的 Eloquent ORM 来实现软删除。&quot;&gt;&lt;/a&gt;用Laravel 自带的 Eloquent ORM 来实现软删除。&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;首先在数据迁移文件中添加&lt;code&gt;删除时间&lt;/code&gt;字段&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;./database/migrations/2014_10_12_000000_create_users_table.php&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Laravel" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Laravel/"/>
    
    
      <category term="Laravel技巧" scheme="https://xinyufeng.net/tags/Laravel%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 导入数据</title>
    <link href="https://xinyufeng.net/2022/04/18/MySQL-%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/"/>
    <id>https://xinyufeng.net/2022/04/18/MySQL-导入数据/</id>
    <published>2022-04-18T01:42:05.000Z</published>
    <updated>2022-04-24T02:21:23.353Z</updated>
    
    <content type="html"><![CDATA[<p>给大家介绍几种常用简单的MySQL导入数据命令</p><ol><li>MySQL命令导入</li></ol><p>使用 mysql 命令导入语法格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mysql -u用户名 -p 表名 &lt; /要导入的文件路径.sql </span></span><br><span class="line">Enter password: 输入密码</span><br></pre></td></tr></table></figure><p>实例：</p><p>使用 mysql 命令导入语法格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mysql -uroot -p test &lt; /usr/local/src/test.sql </span></span><br><span class="line">Enter password: 123123</span><br></pre></td></tr></table></figure><p>以上命令将将备份的整个数据库 test.sql 导入。</p><ol start="2"><li>source 命令导入</li></ol><p>source 命令导入数据库需要先登录到数库终端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database db1;      <span class="comment"># 创建数据库</span></span><br><span class="line">mysql&gt; use db1;                  <span class="comment"># 使用已创建的数据库 </span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> names utf8;           <span class="comment"># 设置编码</span></span><br><span class="line">mysql&gt; <span class="built_in">source</span>/usr/<span class="built_in">local</span>/src/db1.sql  <span class="comment"># 导入备份数据库</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给大家介绍几种常用简单的MySQL导入数据命令&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MySQL命令导入&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用 mysql 命令导入语法格式为：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="数据库" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL命令" scheme="https://xinyufeng.net/tags/MySQL%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Antd Vue table 设置rowClassName不生效的问题</title>
    <link href="https://xinyufeng.net/2022/04/14/Antd-Vue-table-%E8%AE%BE%E7%BD%AErowClassName%E4%B8%8D%E7%94%9F%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://xinyufeng.net/2022/04/14/Antd-Vue-table-设置rowClassName不生效的问题/</id>
    <published>2022-04-14T02:39:27.000Z</published>
    <updated>2022-04-14T08:46:30.711Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Antd Vue table 利用 <code>rowClassName</code> 自定义带斑马纹的表格，设置后并未生效</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-table</span><br><span class="line">    <span class="class"><span class="keyword">class</span></span>=<span class="string">"ant-table-striped"</span></span><br><span class="line">    size=<span class="string">"middle"</span></span><br><span class="line">    :columns=<span class="string">"columns"</span></span><br><span class="line">    :dataSource=<span class="string">"data"</span></span><br><span class="line">    :rowClassName=<span class="string">"(_record, index) =&gt; (index % 2 === 1 ? 'table-striped' : null)"</span></span><br><span class="line">    bordered</span><br><span class="line">  /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.ant-table-striped .table-striped td &#123;</span><br><span class="line">  background-color: #fafafa;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>原因是这样的样式不能放在<code>scoped</code>中，应写在全局样式中</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;less&quot;&gt;</span><br><span class="line">.ant-table-striped .table-striped td &#123;</span><br><span class="line">  background-color: #fafafa;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>改成这样后样式生效</p><blockquote><p>注意，这样可能会影响到其他组件中<code>class</code>为<code>.ant-table-striped .table-striped td</code>的样式</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 Antd Vue table 利用 &lt;code&gt;rowClassName&lt;/code&gt; 自定义带斑马纹的表格，设置后并未生效&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;a-table&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ant-table-striped&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size=&lt;span class=&quot;string&quot;&gt;&quot;middle&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :columns=&lt;span class=&quot;string&quot;&gt;&quot;columns&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :dataSource=&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :rowClassName=&lt;span class=&quot;string&quot;&gt;&quot;(_record, index) =&amp;gt; (index % 2 === 1 ? &#39;table-striped&#39; : null)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bordered&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style scoped lang=&amp;quot;less&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.ant-table-striped .table-striped td &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  background-color: #fafafa;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原因是这样的样式不能放在&lt;code&gt;scoped&lt;/code&gt;中，应写在全局样式中&lt;/p&gt;
    
    </summary>
    
      <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Vue" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/"/>
    
    
      <category term="Vue教程" scheme="https://xinyufeng.net/tags/Vue%E6%95%99%E7%A8%8B/"/>
    
      <category term="AntD Vue" scheme="https://xinyufeng.net/tags/AntD-Vue/"/>
    
  </entry>
  
  <entry>
    <title>浏览器 Cookie 的使用</title>
    <link href="https://xinyufeng.net/2022/04/12/%E6%B5%8F%E8%A7%88%E5%99%A8-Cookie-%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://xinyufeng.net/2022/04/12/浏览器-Cookie-的使用/</id>
    <published>2022-04-12T07:31:11.000Z</published>
    <updated>2022-04-12T07:52:18.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cookie介绍"><a href="#Cookie介绍" class="headerlink" title="Cookie介绍"></a>Cookie介绍</h2><p>主要用于存储访问过的网站数据，把浏览器的信息存储到本地电脑中，实现客户端和服务器端的通讯。</p><h2 id="Cookie特点"><a href="#Cookie特点" class="headerlink" title="Cookie特点"></a>Cookie特点</h2><ul><li>以文本形式保存(.txt)</li><li>Cookie存储信息不安全（不能存放重要的信息）</li><li>Cookie中有域（domain）和路径的概念,浏览器是一个比较安全的环境，所以不同的域之间不能直接访问（js的同源策略限制）</li></ul><a id="more"></a><h2 id="Cookie的常用属性"><a href="#Cookie的常用属性" class="headerlink" title="Cookie的常用属性"></a>Cookie的常用属性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Name：cookie的名字(键)</span><br><span class="line">Value：cookie存放的值</span><br><span class="line">Expires：指cookie过期的时间（该时间为世界时间  UTC时间）也称为格林威治时间</span><br><span class="line">Max-Age: 指cookie最大的存活有效期（单位：秒）</span><br><span class="line">Domain: 指的是cookie当前的域</span><br><span class="line">Path:指cookie当前的路径</span><br><span class="line">Size: 指cookie存放的大小</span><br><span class="line">Secure: 指cooke的安全属性</span><br></pre></td></tr></table></figure><h2 id="JavaScript操作Cookie"><a href="#JavaScript操作Cookie" class="headerlink" title="JavaScript操作Cookie"></a>JavaScript操作Cookie</h2><ol><li>document.cookie 属性创建、读取、删除 cookie</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.cookie=<span class="string">'name=Peak'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.cookie);</span><br></pre></td></tr></table></figure><ol start="2"><li>设置cookie失效时间</li></ol><p>设置一个10分钟后失效的Cookie</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">name, value, expire</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> expires = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">new</span> <span class="built_in">Date</span>().getTime() + loginRes.data.expire * <span class="number">1000</span>);</span><br><span class="line">    <span class="built_in">document</span>.cookie = <span class="string">`<span class="subst">$&#123;name&#125;</span>=<span class="subst">$&#123;value&#125;</span>;expires=<span class="subst">$&#123;expires&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br><span class="line">setCookie(<span class="string">'name'</span>, <span class="string">'Peak'</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure><blockquote><p>注意：过期时间是格林威治时间（UTC时间）</p></blockquote><ol start="3"><li>提前清除cookie</li></ol><p>把过期时间设置为小于当前时间即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setCookie(<span class="string">'name'</span>, <span class="string">'Peak'</span>, <span class="number">-1</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Cookie介绍&quot;&gt;&lt;a href=&quot;#Cookie介绍&quot; class=&quot;headerlink&quot; title=&quot;Cookie介绍&quot;&gt;&lt;/a&gt;Cookie介绍&lt;/h2&gt;&lt;p&gt;主要用于存储访问过的网站数据，把浏览器的信息存储到本地电脑中，实现客户端和服务器端的通讯。&lt;/p&gt;
&lt;h2 id=&quot;Cookie特点&quot;&gt;&lt;a href=&quot;#Cookie特点&quot; class=&quot;headerlink&quot; title=&quot;Cookie特点&quot;&gt;&lt;/a&gt;Cookie特点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;以文本形式保存(.txt)&lt;/li&gt;
&lt;li&gt;Cookie存储信息不安全（不能存放重要的信息）&lt;/li&gt;
&lt;li&gt;Cookie中有域（domain）和路径的概念,浏览器是一个比较安全的环境，所以不同的域之间不能直接访问（js的同源策略限制）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端开发" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="JavaScript" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/JavaScript/"/>
    
    
      <category term="JS方法" scheme="https://xinyufeng.net/tags/JS%E6%96%B9%E6%B3%95/"/>
    
      <category term="JS技巧" scheme="https://xinyufeng.net/tags/JS%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Vue 中的代理proxy配置</title>
    <link href="https://xinyufeng.net/2022/04/08/Vue-%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%90%86proxy%E9%85%8D%E7%BD%AE/"/>
    <id>https://xinyufeng.net/2022/04/08/Vue-中的代理proxy配置/</id>
    <published>2022-04-08T01:06:57.000Z</published>
    <updated>2022-04-08T02:02:03.093Z</updated>
    
    <content type="html"><![CDATA[<p>我们本地开发调试一般是 <code>npm run serve</code> 或 <code>yarn serve</code>，然后打开 <code>localhost:8080</code>（本机的IP），此时如果调用后端接口，可能会产生跨域，那如何解决呢？</p><p><strong>解决跨域的方案</strong></p><ol><li>jsonp<ul><li>只支持GET请求，JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。</li></ul></li><li>cors<ul><li>CORS支持所有类型的HTTP请求，是跨域HTTP请求的根本解决方案</li></ul></li><li>Node中间件代理(两次跨域)<ul><li>通过同源策略对服务器不加限制。</li></ul></li><li>Nginx反向代理<ul><li>通过同源策略对服务器不加限制。</li></ul></li></ol><p>日常工作中，生产环境用得比较多的跨域方案是cors和nginx反向代理。<br>本地项目中调试用的最多的就是 node 代理，当然像 nginx、charles（抓包工具）做代理也可以，只要你会配置。<br><a id="more"></a></p><p>vue 中的 <code>proxy</code> 就是利用了 Node 代理，原理是因为服务器端没有跨域，使用的是 <a href="https://github.com/chimurai/http-proxy-middleware" target="_blank" rel="noopener">http-proxy-middleware</a> 这个模块（这个模块相当于是node.js的一个插件）</p><p><strong>案例</strong></p><ol><li>你要调取的接口是 <code>http://dev.com/api/test</code>，然后你可以在本地调 <code>http://localhost:8080/api/test</code>，如<code>axios.get(&#39;/api/test&#39;)</code></li></ol><p>配置代理后，会做如下转发：</p><p><code>http://localhost:8080/api/test</code> -&gt; <code>http://dev.com/api/test</code><br><code>http://localhost:8080/admin/api/test</code> -&gt; <code>http://dev.com/admin/api/test</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue-cli3.0 里面的 vue.config.js做配置</span></span><br><span class="line">devServer: &#123;</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      <span class="string">'/api'</span>: &#123;</span><br><span class="line">        target: <span class="string">'http://dev.com'</span>,<span class="comment">// 后端接口域名</span></span><br><span class="line">        ws: <span class="literal">true</span>,<span class="comment">//如果要代理 websockets，配置这个参数</span></span><br><span class="line">        secure: <span class="literal">false</span>,<span class="comment">// 如果是https接口，需要配置这个参数</span></span><br><span class="line">        changeOrigin: <span class="literal">true</span>,<span class="comment">// 是否跨域</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ol start="2"><li>当你调后端接口的命名没有统一给接口前加 <code>/api</code> 这类的标识，那么你可以自己加，也就是你可以在本地调 <code>http://localhost:8080/api/test</code>，如<code>axios.get(&#39;/api/test&#39;)</code>，而你要的目标接口是 <code>http://dev.com/test</code>，你就可以用 <code>pathRewrite</code>，遇到 <code>/api</code> 就去找代理 <code>http://dev.com/test</code> 并且把 <code>/api</code> 重写为 <code>/</code>。</li></ol><p>所以转发效果就是：</p><p><code>http://localhost:8080/api/test</code> -&gt; <code>http://dev.com/test</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue-cli3.0 里面的 vue.config.js做配置</span></span><br><span class="line">devServer: &#123;</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      <span class="string">'/api'</span>: &#123;</span><br><span class="line">        target: <span class="string">'http://dev.com'</span>,<span class="comment">// 后端接口域名</span></span><br><span class="line">        ws: <span class="literal">true</span>,<span class="comment">//如果要代理 websockets，配置这个参数</span></span><br><span class="line">        secure: <span class="literal">false</span>,<span class="comment">// 如果是https接口，需要配置这个参数</span></span><br><span class="line">        changeOrigin: <span class="literal">true</span>,<span class="comment">// 是否跨域</span></span><br><span class="line">        pathRewrite:&#123;<span class="comment">// 路径重写</span></span><br><span class="line">            <span class="string">'^/api'</span>: <span class="string">'/'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ol start="3"><li>对所有的接口都代理的，不止是检测到 <code>/api</code> 的接口，比如：</li></ol><p><code>http://localhost:8080/api/test</code> -&gt; <code>http://dev.com/api/test</code><br><code>http://localhost:8080/test</code> -&gt; <code>http://dev.com/test</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">    proxy: <span class="string">'http:///dev.com'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>常用的devServer配置</strong></p><p><a href="https://webpack.docschina.org/configuration/dev-server/" target="_blank" rel="noopener">DevServer配置文档</a></p><ol><li>devServer.disableHostCheck</li></ol><p>当设置为<code>true</code>时，此选项将绕过主机检查。不建议这样做，因为不检查主机的应用程序容易受到DNS重新绑定攻击。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">    disableHostCheck: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>devServer.publicPath</li></ol><p>假设服务器在<code>http://localhost:8080</code>下运行，<code>output.filename</code>设置为<code>bundle.js</code>。默认情况下，<code>devServer.publicPath</code>是<code>/</code>，所以你的包可以作为<code>http://localhost:8080/bundle.js</code> 使用。将<code>devServer.publicPath</code>更改为 <code>/assets/</code> 就变为 <code>http://localhost:8080/assets/bundle.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">    publicPath: <span class="string">'/assets/'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>确保devServer.publicPath始终以正斜杠开头和结尾。</p></blockquote><p><strong>常用vue/cli3的配置</strong></p><p><a href="https://cli.vuejs.org/zh/config/" target="_blank" rel="noopener">vue/cli3配置文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们本地开发调试一般是 &lt;code&gt;npm run serve&lt;/code&gt; 或 &lt;code&gt;yarn serve&lt;/code&gt;，然后打开 &lt;code&gt;localhost:8080&lt;/code&gt;（本机的IP），此时如果调用后端接口，可能会产生跨域，那如何解决呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决跨域的方案&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;jsonp&lt;ul&gt;
&lt;li&gt;只支持GET请求，JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cors&lt;ul&gt;
&lt;li&gt;CORS支持所有类型的HTTP请求，是跨域HTTP请求的根本解决方案&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node中间件代理(两次跨域)&lt;ul&gt;
&lt;li&gt;通过同源策略对服务器不加限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Nginx反向代理&lt;ul&gt;
&lt;li&gt;通过同源策略对服务器不加限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;日常工作中，生产环境用得比较多的跨域方案是cors和nginx反向代理。&lt;br&gt;本地项目中调试用的最多的就是 node 代理，当然像 nginx、charles（抓包工具）做代理也可以，只要你会配置。&lt;br&gt;
    
    </summary>
    
      <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Vue" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/"/>
    
    
      <category term="Vue教程" scheme="https://xinyufeng.net/tags/Vue%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Vue Antd Admin 跨域代理配置</title>
    <link href="https://xinyufeng.net/2022/04/07/Vue-Antd-Admin-%E8%B7%A8%E5%9F%9F%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/"/>
    <id>https://xinyufeng.net/2022/04/07/Vue-Antd-Admin-跨域代理配置/</id>
    <published>2022-04-07T05:07:19.000Z</published>
    <updated>2022-04-08T02:02:07.405Z</updated>
    
    <content type="html"><![CDATA[<ol><li>修改文件 <code>src\services\api.js</code></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//跨域代理前缀</span></span><br><span class="line"><span class="keyword">const</span> API_PROXY_PREFIX=<span class="string">'/adminapi'</span></span><br><span class="line"><span class="keyword">const</span> BASE_URL = process.env.NODE_ENV === <span class="string">'production'</span> ? process.env.VUE_APP_API_BASE_URL : API_PROXY_PREFIX</span><br><span class="line"><span class="comment">//const BASE_URL = process.env.VUE_APP_API_BASE_URL</span></span><br></pre></td></tr></table></figure><ol start="2"><li>修改文件<code>vue.config.js</code></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      <span class="string">'/adminapi'</span>: &#123; <span class="comment">//此处要与 /services/api.js 中的 API_PROXY_PREFIX 值保持一致</span></span><br><span class="line">        target: process.env.VUE_APP_API_BASE_URL,</span><br><span class="line">        changeOrigin: <span class="literal">true</span>,</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          <span class="string">'^/adminapi'</span>: <span class="string">'/'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启<code>yarn serve</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;修改文件 &lt;code&gt;src\services\api.js&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas
      
    
    </summary>
    
      <category term="前端框架" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Vue" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/Vue/"/>
    
    
      <category term="Vue教程" scheme="https://xinyufeng.net/tags/Vue%E6%95%99%E7%A8%8B/"/>
    
      <category term="Vue技巧" scheme="https://xinyufeng.net/tags/Vue%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2模型的关联模型使用</title>
    <link href="https://xinyufeng.net/2022/04/06/Yii2%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%85%B3%E8%81%94%E6%A8%A1%E5%9E%8B%E4%BD%BF%E7%94%A8/"/>
    <id>https://xinyufeng.net/2022/04/06/Yii2模型的关联模型使用/</id>
    <published>2022-04-06T07:55:21.000Z</published>
    <updated>2022-04-06T08:14:44.492Z</updated>
    
    <content type="html"><![CDATA[<p><code>Active Record</code> 可以将相关数据集中进来， 使其可以通过原始数据轻松访问。 例如，客户数据与订单数据相关 因为一个客户可能已经存放了一个或多个订单。这种关系通过适当的声明， 你可以使用 <code>$customer-&gt;orders</code> 表达式访问客户的订单信息 这表达式将返回包含 <code>Order Active Record</code> 实例的客户订单信息的数组。</p><p><strong>声明关联关系</strong></p><p>你必须先在 <code>Active Record</code> 类中定义关联关系，才能使用 <code>Active Record</code> 的关联数据。 简单地为每个需要定义关联关系声明一个 关联方法 即可，如下所示，</p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Customer</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getOrders</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(Order::className(), [<span class="string">'customer_id'</span> =&gt; <span class="string">'id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCustomer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(Customer::className(), [<span class="string">'id'</span> =&gt; <span class="string">'customer_id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述的代码中，我们为 <code>Customer</code> 类声明了一个 <code>orders</code> 关联， 和为 <code>Order</code> 声明了一个 <code>customer</code> 关联。</p><p>每个关联方法必须这样命名：<code>getXyz</code>。然后我们通过 <code>xyz</code>（首字母小写）调用这个关联名。 请注意关联名是<em>大小写敏感</em>的。</p><p>当声明一个关联关系的时候，必须指定好以下的信息：</p><ul><li>关联的对应关系：通过调用 <code>hasMany()</code> 或者 <code>hasOne()</code> 指定。在上面的例子中，您可以很容易看出这样的关联声明： 一个客户可以有很多订单，而每个订单只有一个客户。</li><li>相关联 <code>Active Record</code> 类名：用来指定为 <code>hasMany()</code> 或者 <code>hasOne()</code> 方法的第一个参数。 推荐的做法是调用 <code>Xyz::className()</code> 来获取类名称的字符串，以便您 可以使用 IDE 的自动补全，以及让编译阶段的错误检测生效。</li><li>两组数据的关联列：用以指定两组数据相关的列（<code>hasOne()</code>/<code>hasMany()</code> 的第二个参数）。 数组的值填的是主数据的列（当前要声明关联的 <code>Active Record</code> 类为主数据）， 而数组的键要填的是相关数据的列。</li></ul><p>一个简单的口诀，先附表的主键，后主表的主键。 正如上面的例子，<code>customer_id</code> 是 <code>Order</code> 的属性，而 <code>id</code>是 <code>Customer</code> 的属性。 （译者注：<code>hasMany()</code> 的第二个参数，这个数组键值顺序不要弄反了）</p><p><strong>访问关联数据</strong></p><p>定义了关联关系后，你就可以通过关联名访问相应的关联数据了。就像 访问一个由关联方法定义的对象一样，具体概念请查看 属性。 因此，现在我们可以称它为 关联属性 了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SELECT * FROM `customer` WHERE `id` = 123</span></span><br><span class="line">$customer = Customer::findOne(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// SELECT * FROM `order` WHERE `customer_id` = 123</span></span><br><span class="line"><span class="comment">// $orders 是由 Order 类组成的数组</span></span><br><span class="line">$orders = $customer-&gt;orders;</span><br></pre></td></tr></table></figure><blockquote><p>提示： 当你通过 <code>getter</code> 方法 <code>getXyz()</code> 声明了一个叫 <code>xyz</code> 的关联属性，你就可以像 属性 那样访问 <code>xyz</code>。注意这个命名是<em>区分大小写</em>的。</p></blockquote><p>如果使用 <code>hasMany()</code>声明关联关系，则访问此关联属性 将返回相关的 <code>Active Record</code> 实例的数组； 如果使用 <code>hasOne()</code> 声明关联关系，访问此关联属性 将返回相关的 <code>Active Record</code> 实例，如果没有找到相关数据的话，则返回 <code>null</code>。</p><p>当你第一次访问关联属性时，将执行 SQL 语句获取数据，如 上面的例子所示。如果再次访问相同的属性，将返回先前的结果，而不会重新执行 SQL 语句。要强制重新执行 SQL 语句，你应该先 <code>unset</code> 这个关联属性， 如：<code>unset($ customer-&gt; orders)</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$customer-&gt;orders; <span class="comment">// 获得 `Order` 对象的数组</span></span><br><span class="line">$customer-&gt;getOrders(); <span class="comment">// 返回 ActiveQuery 类的实例</span></span><br></pre></td></tr></table></figure><p><strong>设置别名</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCustomer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(Customer::className(), [<span class="string">'id'</span> =&gt; <span class="string">'customer_id'</span>])-&gt;alias(<span class="string">'c'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关联查询 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$order = Order::find()-&gt;joinWith(<span class="string">'customer'</span>)</span><br><span class="line">            -&gt;where([<span class="string">'filter1'</span>=&gt;$filter1, <span class="string">'filter2'</span>=&gt;$filter2])</span><br><span class="line">            -&gt;andWhere([<span class="string">'='</span>, <span class="string">'c.filter3'</span>, $filter3])</span><br><span class="line">            -&gt;andWhere([<span class="string">'&lt;='</span>, <span class="string">'cfilter4'</span>, $filter4])</span><br><span class="line">            -&gt;one();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Active Record&lt;/code&gt; 可以将相关数据集中进来， 使其可以通过原始数据轻松访问。 例如，客户数据与订单数据相关 因为一个客户可能已经存放了一个或多个订单。这种关系通过适当的声明， 你可以使用 &lt;code&gt;$customer-&amp;gt;orders&lt;/code&gt; 表达式访问客户的订单信息 这表达式将返回包含 &lt;code&gt;Order Active Record&lt;/code&gt; 实例的客户订单信息的数组。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;声明关联关系&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你必须先在 &lt;code&gt;Active Record&lt;/code&gt; 类中定义关联关系，才能使用 &lt;code&gt;Active Record&lt;/code&gt; 的关联数据。 简单地为每个需要定义关联关系声明一个 关联方法 即可，如下所示，&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>MySQL5.7.26错误问题 mysqld.exe: Error while setting value &#39;STRICT_TRANS_TABLES, NO_ZERO_IN_DATE, NO_ZERO_DATE, ERROR_FOR_DIVISION_BY_ZERO, NO_AUTO_CREATE_USER, NO_ENGINE_SUBSTITUTION&#39; to &#39;sql_mode&#39;</title>
    <link href="https://xinyufeng.net/2022/03/28/MySQL5-7-26%E9%94%99%E8%AF%AF%E9%97%AE%E9%A2%98-mysqld-exe-Error-while-setting-value-STRICT-TRANS-TABLES-NO-ZERO-IN-DATE-NO-ZERO-DATE-ERROR-FOR-DIVISION-BY-ZERO-NO-AUTO-CREATE-USER-NO-ENGINE-SUBSTITUTION-to-sql-mode/"/>
    <id>https://xinyufeng.net/2022/03/28/MySQL5-7-26错误问题-mysqld-exe-Error-while-setting-value-STRICT-TRANS-TABLES-NO-ZERO-IN-DATE-NO-ZERO-DATE-ERROR-FOR-DIVISION-BY-ZERO-NO-AUTO-CREATE-USER-NO-ENGINE-SUBSTITUTION-to-sql-mode/</id>
    <published>2022-03-28T01:56:34.000Z</published>
    <updated>2022-03-28T02:02:19.606Z</updated>
    
    <content type="html"><![CDATA[<p>这样的问题出现，是因为MySQL的配置文件<code>my.ini</code>中<code>sql_mode</code>的值，逗号后面加上了空格导致的无法启动，需要手动删除空格就可以了。</p><p><code>my.ini</code>原来部分代码：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tmp_table_size</span>=<span class="number">64</span>M</span><br><span class="line"><span class="attr">wait_timeout</span>=<span class="number">120</span></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES, NO_ZERO_IN_DATE, NO_ZERO_DATE, ERROR_FOR_DIVISION_BY_ZERO, NO_AUTO_CREATE_USER, NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><p><code>my.ini</code>修改后代码：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tmp_table_size</span>=<span class="number">64</span>M</span><br><span class="line"><span class="attr">wait_timeout</span>=<span class="number">120</span></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><p>重启即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这样的问题出现，是因为MySQL的配置文件&lt;code&gt;my.ini&lt;/code&gt;中&lt;code&gt;sql_mode&lt;/code&gt;的值，逗号后面加上了空格导致的无法启动，需要手动删除空格就可以了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;my.ini&lt;/code&gt;原来部分代码：&lt;/p&gt;
&lt;fi
      
    
    </summary>
    
      <category term="数据库" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL错误" scheme="https://xinyufeng.net/tags/MySQL%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>JS 倒计时定时器</title>
    <link href="https://xinyufeng.net/2022/03/04/JS-%E5%80%92%E8%AE%A1%E6%97%B6%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
    <id>https://xinyufeng.net/2022/03/04/JS-倒计时定时器/</id>
    <published>2022-03-04T01:38:20.000Z</published>
    <updated>2022-03-04T01:41:13.381Z</updated>
    
    <content type="html"><![CDATA[<p>JS 60秒倒计时代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>倒计时定时器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.main</span> &#123;</span></span><br><span class="line"><span class="undefined">        display: flex;</span></span><br><span class="line"><span class="undefined">        flex-direction: row;</span></span><br><span class="line"><span class="undefined">        justify-content: center;</span></span><br><span class="line"><span class="undefined">        align-items: center;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-id">#timer</span> &#123;</span></span><br><span class="line"><span class="undefined">        width: 100px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"timer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">id</span>=<span class="string">"startBtn"</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> startBtn = <span class="built_in">document</span>.getElementById(<span class="string">'startBtn'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> timerNode = <span class="built_in">document</span>.getElementById(<span class="string">'timer'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> senond = <span class="number">0</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            startBtn.style = <span class="string">"display:none"</span>;</span></span><br><span class="line"><span class="undefined">            senond = 60;</span></span><br><span class="line"><span class="undefined">            timerNode.innerText = senond;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> setTimer = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                    senond--;</span></span><br><span class="line"><span class="undefined">                    timerNode.innerText = senond;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(senond);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (senond &lt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="undefined">                        resolve(setTimer);</span></span><br><span class="line"><span class="javascript">                        startBtn.style = <span class="string">"display:block"</span>;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;, 1000);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="javascript">            promise.then(<span class="function">(<span class="params">setTimer</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="undefined">                clearInterval(setTimer);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        startBtn.addEventListener(<span class="string">'click'</span>, timer, <span class="literal">false</span>);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;JS 60秒倒计时代码&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
      <category term="前端开发" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="JavaScript" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/JavaScript/"/>
    
    
      <category term="JS技巧" scheme="https://xinyufeng.net/tags/JS%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>PHP GD库转换输出为base64</title>
    <link href="https://xinyufeng.net/2022/01/11/PHP-GD%E5%BA%93%E8%BD%AC%E6%8D%A2%E8%BE%93%E5%87%BA%E4%B8%BAbase64/"/>
    <id>https://xinyufeng.net/2022/01/11/PHP-GD库转换输出为base64/</id>
    <published>2022-01-11T05:12:56.000Z</published>
    <updated>2022-01-11T06:41:13.553Z</updated>
    
    <content type="html"><![CDATA[<p>使用GD库的 <code>imagejpeg()</code> / <code>imagepng()</code> 处理图片，它们直接写入所述图像数据，以输出流（或文件）。</p><p>如果你想获取图片文件内容则通过如下方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// $img = 要处理的图像资源;</span></span><br><span class="line">ob_start();<span class="comment">// 打开输出控制缓冲</span></span><br><span class="line">imagepng($img);<span class="comment">// 显示PNG图像</span></span><br><span class="line">$image_data = ob_get_contents();<span class="comment">// 返回输出缓冲区的内容</span></span><br><span class="line">imagedestroy($img);<span class="comment">// 释放与 image 关联的内存</span></span><br><span class="line">ob_end_clean();<span class="comment">// 清空（擦除）缓冲区并关闭输出缓冲</span></span><br></pre></td></tr></table></figure><p><code>$image_data</code>得到的数据就是图片文件的数据内容 或者 直接返回 <code>ob_end_clean()</code>是一样的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用GD库的 &lt;code&gt;imagejpeg()&lt;/code&gt; / &lt;code&gt;imagepng()&lt;/code&gt; 处理图片，它们直接写入所述图像数据，以输出流（或文件）。&lt;/p&gt;
&lt;p&gt;如果你想获取图片文件内容则通过如下方法：&lt;/p&gt;
&lt;figure class=&quot;hig
      
    
    </summary>
    
      <category term="后端开发" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="PHP" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/PHP/"/>
    
    
      <category term="GD库" scheme="https://xinyufeng.net/tags/GD%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>windows下本地搭建https服务器</title>
    <link href="https://xinyufeng.net/2021/11/30/windows%E4%B8%8B%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BAhttps%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://xinyufeng.net/2021/11/30/windows下本地搭建https服务器/</id>
    <published>2021-11-30T07:27:52.000Z</published>
    <updated>2021-12-01T01:31:10.663Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h2><ul><li>使用git的命令行工具或者<code>cmder</code></li><li>注意使用<code>cmd</code>命令行是不行的, <code>cmd</code>命令行并不能识别<code>openssl</code>命令</li></ul><p><strong>openssl genrsa 命令介绍</strong></p><p><code>openssl genrsa</code> 命令是会用来生成 RSA 私有秘钥，不会生成公钥，因为公钥提取自私钥。生成时是可以指定私钥<em>长度</em>和<em>密码保护</em>。<br>如果需要查看公钥或生成公钥，可以使用 <code>openssl rsa</code> 命令。</p><h2 id="创建私钥"><a href="#创建私钥" class="headerlink" title="创建私钥"></a>创建私钥</h2><blockquote><p>生成秘钥是生成证书的前提</p></blockquote><a id="more"></a><p>生成长度为 1024 的秘钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ openssl genrsa -out certificate.key 1024</span><br><span class="line">Generating RSA private key, 1024 bit long modulus (2 primes)</span><br><span class="line">...+++++</span><br><span class="line">...............................................+++++</span><br><span class="line">e is 65537 (0x010001)</span><br></pre></td></tr></table></figure><h2 id="创建证书请求"><a href="#创建证书请求" class="headerlink" title="创建证书请求"></a>创建证书请求</h2><p>需要输入一些列信息，最重要的是<code>Common Name</code>表示要使用https访问的域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ openssl req -new -out certificate.csr -key certificate.key</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [AU]:CN</span><br><span class="line">State or Province Name (full name) [Some-State]:ShanDong</span><br><span class="line">Locality Name (eg, city) []:QingDao</span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:</span><br><span class="line">Organizational Unit Name (eg, section) []:</span><br><span class="line">Common Name (e.g. server FQDN or YOUR name) []:chisheng.xin</span><br><span class="line">Email Address []:</span><br><span class="line"></span><br><span class="line">Please enter the following <span class="string">'extra'</span> attributes</span><br><span class="line">to be sent with your certificate request</span><br><span class="line">A challenge password []:123456</span><br><span class="line">An optional company name []:</span><br></pre></td></tr></table></figure><h2 id="签署服务器证书"><a href="#签署服务器证书" class="headerlink" title="签署服务器证书"></a>签署服务器证书</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ openssl x509 -req -in certificate.csr -out certificate.pem -signkey certificate.key -days 3650</span><br><span class="line">Signature ok</span><br><span class="line">subject=C = CN, ST = ShanDong, L = QingDao, O = Internet Widgits Pty Ltd, CN = chisheng.xin</span><br><span class="line">Getting Private key</span><br></pre></td></tr></table></figure><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><p>我这里使用的是PHPstudy配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen        443 ssl;</span><br><span class="line">ssl_certificate D:/phpstudy_pro/Extensions/Nginx1.15.11/conf/ssl/certificate.pem;</span><br><span class="line">ssl_certificate_key D:/phpstudy_pro/Extensions/Nginx1.15.11/conf/ssl/certificate.key;</span><br><span class="line">ssl_session_timeout 5m;</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">        server_name  chisheng.xin;</span><br><span class="line">        root   <span class="string">"D:/phpstudy_pro/WWW/chisheng.xin"</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">            index index.php index.html error/index.html;</span><br><span class="line">            error_page 400 /error/400.html;</span><br><span class="line">            error_page 403 /error/403.html;</span><br><span class="line">            error_page 404 /error/404.html;</span><br><span class="line">            error_page 500 /error/500.html;</span><br><span class="line">            error_page 501 /error/501.html;</span><br><span class="line">            error_page 502 /error/502.html;</span><br><span class="line">            error_page 503 /error/503.html;</span><br><span class="line">            error_page 504 /error/504.html;</span><br><span class="line">            error_page 505 /error/505.html;</span><br><span class="line">            error_page 506 /error/506.html;</span><br><span class="line">            error_page 507 /error/507.html;</span><br><span class="line">            error_page 509 /error/509.html;</span><br><span class="line">            error_page 510 /error/510.html;</span><br><span class="line">            include D:/phpstudy_pro/WWW/chisheng.xin/nginx.htaccess;</span><br><span class="line">            autoindex  off;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ \.php(.*)$ &#123;</span><br><span class="line">            fastcgi_pass   127.0.0.1:9004;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;</span><br><span class="line">            fastcgi_param  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            fastcgi_param  PATH_INFO  <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">            fastcgi_param  PATH_TRANSLATED  <span class="variable">$document_root</span><span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">            include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启Nginx</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用工具&quot;&gt;&lt;a href=&quot;#使用工具&quot; class=&quot;headerlink&quot; title=&quot;使用工具&quot;&gt;&lt;/a&gt;使用工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用git的命令行工具或者&lt;code&gt;cmder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;注意使用&lt;code&gt;cmd&lt;/code&gt;命令行是不行的, &lt;code&gt;cmd&lt;/code&gt;命令行并不能识别&lt;code&gt;openssl&lt;/code&gt;命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;openssl genrsa 命令介绍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;openssl genrsa&lt;/code&gt; 命令是会用来生成 RSA 私有秘钥，不会生成公钥，因为公钥提取自私钥。生成时是可以指定私钥&lt;em&gt;长度&lt;/em&gt;和&lt;em&gt;密码保护&lt;/em&gt;。&lt;br&gt;如果需要查看公钥或生成公钥，可以使用 &lt;code&gt;openssl rsa&lt;/code&gt; 命令。&lt;/p&gt;
&lt;h2 id=&quot;创建私钥&quot;&gt;&lt;a href=&quot;#创建私钥&quot; class=&quot;headerlink&quot; title=&quot;创建私钥&quot;&gt;&lt;/a&gt;创建私钥&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;生成秘钥是生成证书的前提&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="运维" scheme="https://xinyufeng.net/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="SSL证书" scheme="https://xinyufeng.net/tags/SSL%E8%AF%81%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 自定义省市区三级联动挂件</title>
    <link href="https://xinyufeng.net/2021/11/26/Yii2-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E6%8C%82%E4%BB%B6/"/>
    <id>https://xinyufeng.net/2021/11/26/Yii2-自定义省市区三级联动挂件/</id>
    <published>2021-11-26T08:38:48.000Z</published>
    <updated>2021-11-29T07:47:26.209Z</updated>
    
    <content type="html"><![CDATA[<p>废话不多说直接上车</p><ol><li>创建地区表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`region`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`region`</span>  (</span><br><span class="line">  <span class="string">`region_id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'地区ID号'</span>,</span><br><span class="line">  <span class="string">`parent_id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="keyword">COMMENT</span> <span class="string">'地区父级ID'</span>,</span><br><span class="line">  <span class="string">`region_name`</span> <span class="built_in">varchar</span>(<span class="number">120</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'地区名称'</span>,</span><br><span class="line">  <span class="string">`region_type`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">2</span> <span class="keyword">COMMENT</span> <span class="string">'地区级别'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`region_id`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`parent_id`</span>(<span class="string">`parent_id`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`region_name`</span>(<span class="string">`region_name`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`region_type`</span>(<span class="string">`region_type`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`agency_id`</span>(<span class="string">`agency_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> AUTO_INCREMENT = <span class="number">659009509</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8mb4 <span class="keyword">COLLATE</span> = utf8mb4_unicode_ci <span class="keyword">COMMENT</span> = <span class="string">'地区'</span> ROW_FORMAT = Dynamic;</span><br></pre></td></tr></table></figure><ol start="2"><li>创建 Region Model 文件</li></ol><p><code>/common/models/Region.php</code></p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">ArrayHelper</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Region</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;&#123;%region&#125;&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [[<span class="string">'region_name'</span>], <span class="string">'required'</span>],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'region_id'</span> =&gt; <span class="string">'地区ID'</span>,</span><br><span class="line">            <span class="string">'parent_id'</span> =&gt; <span class="string">'地区父级ID'</span>,</span><br><span class="line">            <span class="string">'region_name'</span> =&gt; <span class="string">'地区名称'</span>,</span><br><span class="line">            <span class="string">'region_type'</span> =&gt; <span class="string">'地区级别'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $parent_id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getRegion</span><span class="params">($parent_id=<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $regions = <span class="keyword">static</span>::find()-&gt;where([<span class="string">'parent_id'</span>=&gt;$parent_id])-&gt;asArray()-&gt;all();</span><br><span class="line">        <span class="keyword">return</span> ArrayHelper::map($regions, <span class="string">'region_id'</span>, <span class="string">'region_name'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>创建ajax异步获取地区数据链接方法</li></ol><p><code>/backend/controllers/common/AjaxController.php</code>，这个自行定义，只要可以调用就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">backend</span>\<span class="title">controllers</span>\<span class="title">common</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">backend</span>\<span class="title">controllers</span>\<span class="title">BaseController</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Region</span> <span class="title">as</span> <span class="title">RegionModel</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">Html</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Response</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ajax联动接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AjaxController</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//免认证方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">allowAction</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 地区联动查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionGetRegion</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $parent_id = Yii::$app-&gt;request-&gt;get(<span class="string">'parent_id'</span>, <span class="number">0</span>);</span><br><span class="line">        $regions = RegionModel::getRegion($parent_id);</span><br><span class="line"></span><br><span class="line">        $result = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">foreach</span>($regions <span class="keyword">as</span> $key =&gt; $val)&#123;</span><br><span class="line">            $result .= Html::tag(<span class="string">'option'</span>, $val, [<span class="string">'value'</span> =&gt; $key]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>创建地区三级联动挂件</li></ol><p><code>/common/widgets/Region.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">widgets</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">InvalidParamException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Widget</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">ArrayHelper</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">Html</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Region</span> <span class="keyword">extends</span> <span class="title">Widget</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $model = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 此属性不用处理</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $attribute;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 外层属性配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $options = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 省份配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $province = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 城市配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $city = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 县/区配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $district = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> mixed 数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $url;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;model) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InvalidParamException(<span class="string">'model不能为null!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;province) || <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;city)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InvalidParamException(<span class="string">'province和city不能为空！'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $cityId = Html::getInputId(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;city[<span class="string">'attribute'</span>]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>][<span class="string">'prompt'</span>])) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>][<span class="string">'prompt'</span>] = <span class="string">'选择城市'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $cityDefault = Html::renderSelectOptions(<span class="string">'city'</span>, [<span class="string">''</span> =&gt; <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>][<span class="string">'prompt'</span>]]);</span><br><span class="line"></span><br><span class="line">        $joinChar = strripos(<span class="keyword">$this</span>-&gt;url, <span class="string">'?'</span>) ? <span class="string">'&amp;'</span> : <span class="string">'?'</span>;</span><br><span class="line">        $url = <span class="keyword">$this</span>-&gt;url . $joinChar;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;district)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>][<span class="string">'prompt'</span>])) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>][<span class="string">'prompt'</span>] = <span class="string">'选择县/区'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $districtId = Html::getInputId(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;district[<span class="string">'attribute'</span>]);</span><br><span class="line">            $districtDefault = Html::renderSelectOptions(<span class="string">'district'</span>, [<span class="string">''</span> =&gt; <span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>][<span class="string">'prompt'</span>]]);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>] = ArrayHelper::merge(<span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>], [</span><br><span class="line">                <span class="string">'onchange'</span> =&gt; <span class="string">"</span></span><br><span class="line"><span class="string">                    if($(this).val() != '')&#123;</span></span><br><span class="line"><span class="string">                        $.get('&#123;$url&#125;parent_id='+$(this).val(), function(data) &#123;</span></span><br><span class="line"><span class="string">                            $('#&#123;$districtId&#125;').html('&#123;$districtDefault&#125;'+data);</span></span><br><span class="line"><span class="string">                        &#125;)</span></span><br><span class="line"><span class="string">                    &#125;else&#123;</span></span><br><span class="line"><span class="string">                        $('#&#123;$districtId&#125;').html('&#123;$districtDefault&#125;');</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                "</span></span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $provinceOnchangeHtml = <span class="string">"</span></span><br><span class="line"><span class="string">                if($(this).val()!='')&#123;</span></span><br><span class="line"><span class="string">                    $.get('&#123;$url&#125;parent_id='+$(this).val(), function(data) &#123;</span></span><br><span class="line"><span class="string">                        $('#&#123;$cityId&#125;').html('&#123;$cityDefault&#125;'+data);</span></span><br><span class="line"><span class="string">                    &#125;)</span></span><br><span class="line"><span class="string">                &#125;else&#123;</span></span><br><span class="line"><span class="string">                    $('#&#123;$cityId&#125;').html('&#123;$cityDefault&#125;');</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            "</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($districtId)) &#123;</span><br><span class="line">            $provinceOnchangeHtml .= <span class="string">"$('#&#123;$districtId&#125;').html('&#123;$districtDefault&#125;');"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;province[<span class="string">'options'</span>] = ArrayHelper::merge(<span class="keyword">$this</span>-&gt;province[<span class="string">'options'</span>], [</span><br><span class="line">            <span class="string">'onchange'</span> =&gt; $provinceOnchangeHtml</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $output[] = Html::activeDropDownList(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;province[<span class="string">'attribute'</span>], <span class="keyword">$this</span>-&gt;province[<span class="string">'items'</span>],</span><br><span class="line">            <span class="keyword">$this</span>-&gt;province[<span class="string">'options'</span>]);</span><br><span class="line">        $output[] = Html::activeDropDownList(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;city[<span class="string">'attribute'</span>], <span class="keyword">$this</span>-&gt;city[<span class="string">'items'</span>],</span><br><span class="line">            <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;district)) &#123;</span><br><span class="line">            $output[] = Html::activeDropDownList(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;district[<span class="string">'attribute'</span>], <span class="keyword">$this</span>-&gt;district[<span class="string">'items'</span>],</span><br><span class="line">                <span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Html::tag(<span class="string">'div'</span>, @implode(<span class="string">"\n"</span>, $output), <span class="keyword">$this</span>-&gt;options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>视图文件添加地区挂件</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Region</span> <span class="title">as</span> <span class="title">RegionModel</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">widgets</span>\<span class="title">Region</span> <span class="title">as</span> <span class="title">RegionWidget</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?</span>=$form-&gt;field($model, <span class="string">'city'</span>)-&gt;widget(RegionWidget::className(), [</span><br><span class="line">        <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'c-md-4'</span>],</span><br><span class="line">        <span class="string">'model'</span> =&gt; $model,</span><br><span class="line">        <span class="string">'url'</span> =&gt; Url::toRoute([<span class="string">'/common/ajax/get-region'</span>]),</span><br><span class="line">        <span class="string">'province'</span> =&gt; [</span><br><span class="line">            <span class="string">'attribute'</span> =&gt; <span class="string">'province'</span>,</span><br><span class="line">            <span class="string">'items'</span> =&gt; RegionModel::getRegion(),</span><br><span class="line">            <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'form-control c-md-3 inline'</span>, <span class="string">'prompt'</span>=&gt;<span class="string">'选择省份'</span>]</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">'city'</span> =&gt; [</span><br><span class="line">            <span class="string">'attribute'</span> =&gt; <span class="string">'city'</span>,</span><br><span class="line">            <span class="string">'items'</span> =&gt; RegionModel::getRegion($model[<span class="string">'province'</span>]),</span><br><span class="line">            <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'form-control c-md-3 inline'</span>, <span class="string">'prompt'</span>=&gt;<span class="string">'选择城市'</span>]</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">'district'</span> =&gt; [</span><br><span class="line">            <span class="string">'attribute'</span> =&gt; <span class="string">'district'</span>,</span><br><span class="line">            <span class="string">'items'</span> =&gt; RegionModel::getRegion($model[<span class="string">'city'</span>]),</span><br><span class="line">            <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'form-control c-md-3 inline'</span>, <span class="string">'prompt'</span>=&gt;<span class="string">'选择县/区'</span>]</span><br><span class="line">        ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Tip： </p><ol><li><code>Url::toRoute([&#39;/common/ajax/get-region&#39;])</code>生成的链接，调用是第3步的方法</li><li><code>&#39;attribute&#39; =&gt; &#39;province&#39;</code> 在<code>$model</code>模型添加 <code>province</code>字段</li><li><code>&#39;attribute&#39; =&gt; &#39;city&#39;</code> 在<code>$model</code>模型添加 <code>city</code>字段</li><li><code>&#39;attribute&#39; =&gt; &#39;district&#39;</code> 在<code>$model</code>模型添加 <code>district</code>字段</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;废话不多说直接上车&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建地区表结构&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`region`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`region`&lt;/span&gt;  (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`region_id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;UNSIGNED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;地区ID号&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`parent_id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;UNSIGNED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;地区父级ID&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`region_name`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; utf8mb4 &lt;span class=&quot;keyword&quot;&gt;COLLATE&lt;/span&gt; utf8mb4_unicode_ci &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;地区名称&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`region_type`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;tinyint&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;地区级别&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`region_id`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`parent_id`&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`parent_id`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`region_name`&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`region_name`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`region_type`&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`region_type`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`agency_id`&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`agency_id`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; AUTO_INCREMENT = &lt;span class=&quot;number&quot;&gt;659009509&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; = utf8mb4 &lt;span class=&quot;keyword&quot;&gt;COLLATE&lt;/span&gt; = utf8mb4_unicode_ci &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&#39;地区&#39;&lt;/span&gt; ROW_FORMAT = Dynamic;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;创建 Region Model 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;/common/models/Region.php&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 ActiveRecord多表关联和多表关联搜索的实现</title>
    <link href="https://xinyufeng.net/2021/11/23/Yii2-ActiveRecord%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E5%92%8C%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E6%90%9C%E7%B4%A2%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://xinyufeng.net/2021/11/23/Yii2-ActiveRecord多表关联和多表关联搜索的实现/</id>
    <published>2021-11-23T05:21:34.000Z</published>
    <updated>2021-11-23T05:56:03.132Z</updated>
    
    <content type="html"><![CDATA[<p>需求：假设我们有一张商品表goods和一张商品分类表categories，通过商品分类简称搜索商品列表</p><p>goods表AR</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Goods</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;&#123;%goods&#125;&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'id'</span> =&gt; <span class="string">'商品ID'</span>,</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="string">'商品标题'</span>,</span><br><span class="line">            <span class="string">'cid'</span> =&gt; <span class="string">'商品分类ID'</span>,</span><br><span class="line">            <span class="string">'created_at'</span> =&gt; <span class="string">'添加时间'</span>,</span><br><span class="line">            <span class="string">'updated_at'</span> =&gt; <span class="string">'修改时间'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 与商品分类表关联</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCategory</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(Category::className(), [<span class="string">'id'</span>=&gt;<span class="string">'cid'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>categories表AR</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Category</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;&#123;%categories&#125;&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'id'</span> =&gt; <span class="string">'商品分类ID'</span>,</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="string">'商品分类标题'</span>,</span><br><span class="line">            <span class="string">'short_title'</span> =&gt; <span class="string">'商品分类简称'</span>,</span><br><span class="line">            <span class="string">'created_at'</span> =&gt; <span class="string">'添加时间'</span>,</span><br><span class="line">            <span class="string">'updated_at'</span> =&gt; <span class="string">'修改时间'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>商品搜索模型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">search</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">data</span>\<span class="title">ActiveDataProvider</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Goods</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsSearch</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $title;<span class="comment">// 商品标题</span></span><br><span class="line">    <span class="keyword">public</span> $short_title;<span class="comment">// 商品分类简称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//检索规则</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [[<span class="string">'title'</span>, <span class="string">'short_title'</span>], <span class="string">'string'</span>],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//搜索函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span><span class="params">($params)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $query = Goods::find()-&gt;joinWith([<span class="string">'category'</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;load($params) &amp;&amp; <span class="keyword">$this</span>-&gt;validate()) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;title)) $query-&gt;andFilterWhere([<span class="string">'goods.title'</span> =&gt; <span class="keyword">$this</span>-&gt;title]);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;short_title)) $query-&gt;andFilterWhere([<span class="string">'category.short_title'</span> =&gt; <span class="keyword">$this</span>-&gt;status]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $dataProvider = <span class="keyword">new</span> ActiveDataProvider([</span><br><span class="line">            <span class="string">'query'</span> =&gt; $query,</span><br><span class="line">            <span class="string">'sort'</span> =&gt; [</span><br><span class="line">                <span class="string">'defaultOrder'</span> =&gt; [</span><br><span class="line">                    <span class="string">'id'</span> =&gt; SORT_DESC,</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">'pagination'</span> =&gt; [</span><br><span class="line">                <span class="string">'pageSize'</span> =&gt; <span class="number">15</span>,</span><br><span class="line">            ],</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $dataProvider;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需求：假设我们有一张商品表goods和一张商品分类表categories，通过商品分类简称搜索商品列表&lt;/p&gt;
&lt;p&gt;goods表AR&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;common&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;models&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Yii&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;yii&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;db&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;ActiveRecord&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Goods&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ActiveRecord&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * &amp;#123;&lt;span class=&quot;doctag&quot;&gt;@inheritdoc&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#123;%goods&amp;#125;&amp;#125;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * &amp;#123;&lt;span class=&quot;doctag&quot;&gt;@inheritdoc&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;attributeLabels&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;商品ID&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;title&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;商品标题&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;cid&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;商品分类ID&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;created_at&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;添加时间&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;updated_at&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;修改时间&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * 与商品分类表关联&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getCategory&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;hasOne(Category::className(), [&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;cid&#39;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 GridView 表格用法</title>
    <link href="https://xinyufeng.net/2021/11/16/Yii2-GridView-%E8%A1%A8%E6%A0%BC%E7%94%A8%E6%B3%95/"/>
    <id>https://xinyufeng.net/2021/11/16/Yii2-GridView-表格用法/</id>
    <published>2021-11-16T00:34:09.000Z</published>
    <updated>2021-11-17T03:21:42.982Z</updated>
    
    <content type="html"><![CDATA[<p>Yii2框架下展示列表数据通常用<code>Gridview</code>来实现，这里整理常用的小技巧，方便以后查询使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="string">'dataProvider'</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">'layout'</span> =&gt; <span class="string">"&#123;items&#125;\n&#123;summary&#125;\n&#123;pager&#125;"</span>,</span><br><span class="line">    <span class="string">'tableOptions'</span> =&gt; [<span class="string">'class'</span> =&gt; <span class="string">'table table-striped table-bordered table-hover'</span>],</span><br><span class="line">    <span class="string">'columns'</span> =&gt; [</span><br><span class="line">        </span><br><span class="line">    ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格整体配置"><a href="#表格整体配置" class="headerlink" title="表格整体配置"></a>表格整体配置</h2><h3 id="自定义行样式"><a href="#自定义行样式" class="headerlink" title="自定义行样式"></a>自定义行样式</h3><p>单数行为绿色背景，偶数行为红色背景</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="string">"dataProvider"</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">"rowOptions"</span> =&gt; <span class="function"><span class="keyword">function</span><span class="params">($model, $key, $index, $grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">"class"</span> =&gt; $index % <span class="number">2</span> == <span class="number">0</span> ? <span class="string">"red"</span> : <span class="string">"green"</span>];</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>red</code>和<code>green</code>需要有对应的样式实现</p><a id="more"></a><h3 id="禁止表头排序"><a href="#禁止表头排序" class="headerlink" title="禁止表头排序"></a>禁止表头排序</h3><p>需要<code>ActiveDataProvider</code>的设置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$dataProvider = <span class="keyword">new</span> ActiveDataProvider([ <span class="string">"query"</span> =&gt; $query, ]); </span><br><span class="line">$dataProvider-&gt;setSort(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure><h3 id="表格加表头"><a href="#表格加表头" class="headerlink" title="表格加表头"></a>表格加表头</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="string">"dataProvider"</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">'caption'</span> =&gt; <span class="string">'订单管理'</span>,</span><br><span class="line">    <span class="string">'captionOptions'</span> =&gt; [<span class="string">'style'</span> =&gt; <span class="string">'font-size: 18px; font-weight: bold; color: #000; text-align: center;'</span>],</span><br><span class="line">    </span><br><span class="line">    <span class="string">"rowOptions"</span> =&gt; <span class="function"><span class="keyword">function</span><span class="params">($model, $key, $index, $grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">"class"</span> =&gt; $index % <span class="number">2</span> == <span class="number">0</span> ? <span class="string">"red"</span> : <span class="string">"green"</span>];</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格列的配置"><a href="#表格列的配置" class="headerlink" title="表格列的配置"></a>表格列的配置</h2><p>列的展示放在 <code>columns</code> 数组中</p><h3 id="设定宽度"><a href="#设定宽度" class="headerlink" title="设定宽度"></a>设定宽度</h3><p>设置<code>title</code>列的宽度为100，通过配置项<code>headerOptions</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"title"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="string">"title"</span>,</span><br><span class="line">    <span class="string">"headerOptions"</span> =&gt; [<span class="string">"width"</span> =&gt; <span class="string">"100"</span>],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="html渲染"><a href="#html渲染" class="headerlink" title="html渲染"></a>html渲染</h3><p>输出的字符串还有html标签，例如<code>&lt;p&gt;Hello World&lt;/p</code>，我们想以<code>p</code>标签的形式展示<code>Hello World</code>，需要指定<code>format</code>为<code>raw</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"title"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">return</span> Html::encode($model-&gt;title); </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"format"</span> =&gt; <span class="string">"raw"</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="标题内容样式"><a href="#标题内容样式" class="headerlink" title="标题内容样式"></a>标题内容样式</h3><p>内容居中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">'attribute'</span> =&gt; <span class="string">'replay_url'</span>,</span><br><span class="line">    <span class="string">'headerOptions'</span> =&gt; [<span class="string">'style'</span> =&gt; <span class="string">'text-align:center;'</span>, <span class="string">'width'</span> =&gt; <span class="string">'200'</span>],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="字段内容样式"><a href="#字段内容样式" class="headerlink" title="字段内容样式"></a>字段内容样式</h3><p>内容换行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">'attribute'</span> =&gt; <span class="string">'replay_url'</span>,</span><br><span class="line">    <span class="string">'contentOptions'</span> =&gt; [<span class="string">'style'</span> =&gt; <span class="string">'white-space: normal;'</span>, <span class="string">'width'</span> =&gt; <span class="string">'200'</span>],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="字段不允许点击排序"><a href="#字段不允许点击排序" class="headerlink" title="字段不允许点击排序"></a>字段不允许点击排序</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">'attribute'</span> =&gt; <span class="string">'id'</span>,</span><br><span class="line">    <span class="string">'enableSorting'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="是否显示指定列"><a href="#是否显示指定列" class="headerlink" title="是否显示指定列"></a>是否显示指定列</h3><p>当<code>type</code>的值等于<code>1</code>的时候，<code>name</code>列才显示，否则该列不显示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"name"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; $model-&gt;name,</span><br><span class="line">    <span class="string">"visible"</span> =&gt; intval(Yii::$app-&gt;request-&gt;get(<span class="string">"type"</span>)) == <span class="number">1</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="链接可点击跳转"><a href="#链接可点击跳转" class="headerlink" title="链接可点击跳转"></a>链接可点击跳转</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"order_id"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Html::a($model-&gt;order_id, <span class="string">"/order/detail?id=&#123;$model-&gt;order_id&#125;"</span>, [<span class="string">"target"</span> =&gt; <span class="string">"_blank"</span>]);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"format"</span> =&gt; <span class="string">"raw"</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="显示图片"><a href="#显示图片" class="headerlink" title="显示图片"></a>显示图片</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"label"</span> =&gt; <span class="string">"商品图片"</span>,</span><br><span class="line">    <span class="string">"format"</span> =&gt; [</span><br><span class="line">        <span class="string">"image"</span>, </span><br><span class="line">        [</span><br><span class="line">            <span class="string">"width"</span>=&gt;<span class="string">"200"</span>,</span><br><span class="line">            <span class="string">"height"</span>=&gt;<span class="string">"200"</span></span><br><span class="line">        ]</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">return</span> $model-&gt;image; </span><br><span class="line">    &#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="自定义操作按钮"><a href="#自定义操作按钮" class="headerlink" title="自定义操作按钮"></a>自定义操作按钮</h3><p>通过设置<code>ActionColumn</code>类，修改配置项<code>template</code>，在buttons项增加<code>template</code>里增加的<code>log</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"class"</span> =&gt; <span class="string">"yii\grid\ActionColumn"</span>,</span><br><span class="line">    <span class="string">"template"</span> =&gt; <span class="string">"&#123;log&#125; &#123;view&#125; &#123;update&#125;"</span>,</span><br><span class="line">    <span class="string">"header"</span> =&gt; <span class="string">"操作"</span>,</span><br><span class="line">    <span class="string">"buttons"</span> =&gt; [</span><br><span class="line">        <span class="string">"log"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($url, $model, $key)</span> </span>&#123; </span><br><span class="line">            <span class="keyword">return</span> Html::a(<span class="string">"日志"</span>, $url, [<span class="string">"title"</span> =&gt; <span class="string">"查看日志"</span>] ); </span><br><span class="line">        &#125;,</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="操作按钮调用JS"><a href="#操作按钮调用JS" class="headerlink" title="操作按钮调用JS"></a>操作按钮调用JS</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"class"</span> =&gt; <span class="string">"yii\grid\ActionColumn"</span>,</span><br><span class="line">    <span class="string">"header"</span> =&gt; <span class="string">"操作"</span>,</span><br><span class="line">    <span class="string">"template"</span> =&gt; <span class="string">"&#123;view&#125; &#123;update&#125; &#123;update-status&#125;"</span>,</span><br><span class="line">    <span class="string">"buttons"</span> =&gt; [</span><br><span class="line">        <span class="string">"update-status"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($url, $model, $key)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Html::a(<span class="string">"更新状态"</span>, <span class="string">"javascript:;"</span>, [<span class="string">"onclick"</span>=&gt;<span class="string">"update_status(this, "</span>.$model-&gt;id.<span class="string">");"</span>]); &#125;,</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>需要在页面写js实现<code>update_status</code>方法</p><h3 id="自定义字段"><a href="#自定义字段" class="headerlink" title="自定义字段"></a>自定义字段</h3><p>在表格里增加一列且数据库中不存在对应的列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"消费金额"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 这里可以根据该表的其他字段进行关联获取</span></span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h2 id="实现批量删除"><a href="#实现批量删除" class="headerlink" title="实现批量删除"></a>实现批量删除</h2><ol><li><code>GridView</code>设置<code>options</code>时增加一个<code>id</code> 这里我们命名<code>grid</code></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="string">'dataProvider'</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">"options"</span> =&gt; [</span><br><span class="line">        <span class="comment">// ...其他设置项</span></span><br><span class="line">        <span class="string">"id"</span> =&gt; <span class="string">"grid"</span></span><br><span class="line">    ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>批量删除需要用到复选框，在<code>columns</code>增加选项复选框，<code>name</code>值设定为<code>id</code>方便对数据操作</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="string">'dataProvider'</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">"options"</span> =&gt; [</span><br><span class="line">        <span class="string">"id"</span> =&gt; <span class="string">"grid"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"columns"</span> =&gt; [</span><br><span class="line">        <span class="comment">// ......</span></span><br><span class="line">        [</span><br><span class="line">            <span class="string">"class"</span> =&gt; <span class="string">"yii\grid\CheckboxColumn"</span>,</span><br><span class="line">            <span class="string">"name"</span> =&gt; <span class="string">"id"</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment">// ......</span></span><br><span class="line">    ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>页面上增加一个批量删除按钮，这里增加了一个class<code>batch-del</code>,方便后面js实现点击效果</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= Html::a(<span class="string">"批量删除"</span>, <span class="string">"javascript:;"</span>, [<span class="string">"class"</span> =&gt; <span class="string">"btn btn-success batch-del"</span>]) <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>js实现按钮操作</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;registerJs(<span class="string">'</span></span><br><span class="line"><span class="string">$(".batch-del").on("click", function () &#123;</span></span><br><span class="line"><span class="string">    //注意这里的$("#grid")，要跟我们第一步设定的options id一致</span></span><br><span class="line"><span class="string">    var keys = $("#grid").yiiGridView("getSelectedRows");</span></span><br><span class="line"><span class="string">    console.log(keys);</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="format格式"><a href="#format格式" class="headerlink" title="format格式"></a><code>format</code>格式</h2><h3 id="视图中"><a href="#视图中" class="headerlink" title="视图中"></a>视图中</h3><ul><li>处理html标签</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'format'</span> =&gt; <span class="string">'raw'</span></span><br></pre></td></tr></table></figure><ul><li>处理时间</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'format'</span> =&gt; [<span class="string">'date'</span>, <span class="string">'php:Y-m-d H:i'</span>]</span><br></pre></td></tr></table></figure><ul><li>处理图片</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"format"</span> =&gt; [</span><br><span class="line">    <span class="string">"image"</span>, </span><br><span class="line">    [</span><br><span class="line">        <span class="string">"width"</span>=&gt;<span class="string">"200"</span>,</span><br><span class="line">        <span class="string">"height"</span>=&gt;<span class="string">"200"</span></span><br><span class="line">    ]</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="控制器中"><a href="#控制器中" class="headerlink" title="控制器中"></a>控制器中</h3><p><code>yii\i18n\Formatter</code></p><h4 id="常用的属性"><a href="#常用的属性" class="headerlink" title="常用的属性"></a>常用的属性</h4><ol><li><code>$dateFormat</code><br>日期格式：yyyy-MM-dd,或者 “short”, “medium”, “long”, or “full”</li><li><code>$datetimeFormat</code><br>具体时间格式：yyyy-MM-dd HH:mm:ss</li><li><code>$locale</code><br>区域位置，如果没有设置，将使用 yii\base\Application::$language,按照这一区域的习惯显示格式</li><li><code>$defaultTimeZone</code><br>时区，默认UTC</li><li>要使用formatter需要在config中的配置</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'formatter'</span> =&gt; [</span><br><span class="line">    <span class="string">'dateFormat'</span> =&gt; <span class="string">'yyyy-MM-dd'</span>,</span><br><span class="line">    <span class="string">'datetimeFormat'</span> =&gt; <span class="string">'yyyy-MM-dd HH:mm:ss'</span>,</span><br><span class="line">    <span class="string">'decimalSeparator'</span> =&gt; <span class="string">','</span>,</span><br><span class="line">    <span class="string">'thousandSeparator'</span> =&gt; <span class="string">' '</span>,</span><br><span class="line">    <span class="string">'currencyCode'</span> =&gt; <span class="string">'CNY'</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h4 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asRelativeTime(<span class="number">1463632983</span>).<span class="string">'&lt;br/&gt;'</span>; <span class="comment">// 几天前 几小时前</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asDatetime(<span class="number">1463606983</span>).<span class="string">'&lt;br&gt;'</span>;  <span class="comment">// 2015-6-16 11:51:43</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asDatetime(<span class="string">'now'</span>).<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="comment">// 也可处理null值的输出显示:</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asDate(<span class="keyword">null</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 输出: (未设置)  </span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asPercent(<span class="number">0.125</span>, <span class="number">2</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 输出: 12.50%</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTimestamp(<span class="string">'now'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//输出时间戳</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTime(<span class="number">1412599260</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 14:41:00</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTime(<span class="string">'2014-10-06 12:41:00'</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 14:41:00</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTime(<span class="string">'2014-10-06 14:41:00 CEST'</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 14:41:00</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asRaw(<span class="number">1463606983</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//简单输出输入值</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asText(<span class="string">'&lt;h3&gt;hello&lt;/h3&gt;'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//将字符串中html标签当做字符串输出</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asHtml(<span class="string">'&lt;h3&gt;hello&lt;/h3&gt;'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//作为Html的文档输出</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asNtext(<span class="string">"&lt;h3&gt;hello.\nword&lt;/h3&gt;"</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//在字符串中遇到\n可以将它作为换行符实现</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asEmail(<span class="string">'cebe@example.com'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">// 输出: &lt;a href="mailto:cebe@example.com"&gt;cebe@example.com&lt;/a&gt;</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asParagraphs(<span class="string">'hello'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">// 值会转换成HTML编码的文本段落，用&lt;p&gt;标签包裹；</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asUrl(<span class="string">'www.baidu.com'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//值会格式化成url的连接</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asImage(<span class="string">'my2.jpeg'</span>,[<span class="string">'alt'</span>=&gt;<span class="string">'图片无法显示'</span>]).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//图片的链接会转化成&lt;img src='my.jpg'/&gt;</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asBoolean(<span class="keyword">true</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//输出yes</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Yii2框架下展示列表数据通常用&lt;code&gt;Gridview&lt;/code&gt;来实现，这里整理常用的小技巧，方便以后查询使用&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?&lt;/span&gt;= GridView::widget([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;dataProvider&#39;&lt;/span&gt; =&amp;gt; $dataProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;layout&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;items&amp;#125;\n&amp;#123;summary&amp;#125;\n&amp;#123;pager&amp;#125;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;tableOptions&#39;&lt;/span&gt; =&amp;gt; [&lt;span class=&quot;string&quot;&gt;&#39;class&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;table table-striped table-bordered table-hover&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;columns&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]); &lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;表格整体配置&quot;&gt;&lt;a href=&quot;#表格整体配置&quot; class=&quot;headerlink&quot; title=&quot;表格整体配置&quot;&gt;&lt;/a&gt;表格整体配置&lt;/h2&gt;&lt;h3 id=&quot;自定义行样式&quot;&gt;&lt;a href=&quot;#自定义行样式&quot; class=&quot;headerlink&quot; title=&quot;自定义行样式&quot;&gt;&lt;/a&gt;自定义行样式&lt;/h3&gt;&lt;p&gt;单数行为绿色背景，偶数行为红色背景&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?&lt;/span&gt;= GridView::widget([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;dataProvider&quot;&lt;/span&gt; =&amp;gt; $dataProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;rowOptions&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($model, $key, $index, $grid)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&quot;class&quot;&lt;/span&gt; =&amp;gt; $index % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;green&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]); &lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;red&lt;/code&gt;和&lt;code&gt;green&lt;/code&gt;需要有对应的样式实现&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2如何在View中加入JS代码</title>
    <link href="https://xinyufeng.net/2021/11/12/Yii2%E5%A6%82%E4%BD%95%E5%9C%A8View%E4%B8%AD%E5%8A%A0%E5%85%A5JS%E4%BB%A3%E7%A0%81/"/>
    <id>https://xinyufeng.net/2021/11/12/Yii2如何在View中加入JS代码/</id>
    <published>2021-11-12T03:01:29.000Z</published>
    <updated>2021-11-17T02:33:38.490Z</updated>
    
    <content type="html"><![CDATA[<p>如果在view中直接添加js代码，如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">'js code'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>会提示没有<code>$ is not defined</code>错误，这是因为view中添加js代码的前面没有引用juqery.js，默认全局的jquery则是在文件尾添加。</p><p>解决方法：</p><a id="more"></a><ol><li>在js代码前引入js库</li></ol><p><strong>1.1 引入方式1</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>=Html::jsFile(<span class="string">'@web/jquery.js'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>1.2 引入方式2</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">$this</span>-&gt;registerJsFile(<span class="string">'@web/js/jquery.js'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>使用全局的js库</li></ol><p><strong>方法一</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$js = <span class="string">&lt;&lt;&lt;JS</span></span><br><span class="line"><span class="string">$(function()&#123;</span></span><br><span class="line"><span class="string">    alert('js code');</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">JS;</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;registerJs($js);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>方法二</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;registerJs(<span class="string">"</span></span><br><span class="line"><span class="string">$(function () &#123;</span></span><br><span class="line"><span class="string">// 想要写的js代码吧</span></span><br><span class="line"><span class="string">$......</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">"</span>, \yii\web\View::POS_END);</span><br></pre></td></tr></table></figure><p><code>$this</code>指<code>yii\web\View</code>对象,用于管理和渲染视图</p><ul><li>第一个参数：就是我们要写的js代码块</li><li>第二个参数：指定代码块插入在页面的具体位置<br><code>\yii\web\View::POS_END</code>意思就是页面底部<code>&lt;/body&gt;</code>之前插入</li><li>第三个参数：js代码块的一个id标示，不指定会默认生成</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果在view中直接添加js代码，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;string&quot;&gt;&#39;js code&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;会提示没有&lt;code&gt;$ is not defined&lt;/code&gt;错误，这是因为view中添加js代码的前面没有引用juqery.js，默认全局的jquery则是在文件尾添加。&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>JS实现复制到剪贴板功能</title>
    <link href="https://xinyufeng.net/2021/11/12/JS%E5%AE%9E%E7%8E%B0%E5%A4%8D%E5%88%B6%E5%88%B0%E5%89%AA%E8%B4%B4%E6%9D%BF%E5%8A%9F%E8%83%BD/"/>
    <id>https://xinyufeng.net/2021/11/12/JS实现复制到剪贴板功能/</id>
    <published>2021-11-12T02:46:30.000Z</published>
    <updated>2021-11-12T03:03:09.111Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原生JS实现"><a href="#原生JS实现" class="headerlink" title="原生JS实现"></a>原生JS实现</h2><p>原生JS，先使用 <code>select()</code> 选中<em>输入框</em>文本，然后使用 <code>document.execCommand(&quot;Copy&quot;)</code>复制到剪贴板</p><p><strong>前提条件</strong></p><ul><li><code>select()</code> 方法只对 <code>&lt;input&gt;</code> 和 <code>&lt;textarea&gt;</code> 有效</li><li>输入框不能有<code>disabled</code>属性</li><li>输入框不能有<code>hidden</code>属性</li><li>输入框的 <code>width</code> 和 <code>height</code> 不能为0</li></ul><p><strong>实现代码</strong></p><a id="more"></a><p>HTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"copyInput"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"需要复制的文本"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JS</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementById(<span class="string">"copyInput"</span>);</span><br><span class="line">ele.select();</span><br><span class="line"><span class="keyword">let</span> c = <span class="built_in">document</span>.execCommand(<span class="string">"Copy"</span>);</span><br><span class="line"><span class="keyword">if</span> (c) &#123;</span><br><span class="line">    alert(<span class="string">"复制链接成功！"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    alert(<span class="string">"复制失败！当前浏览器不支持此功能，请手动复制。"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原生JS实现&quot;&gt;&lt;a href=&quot;#原生JS实现&quot; class=&quot;headerlink&quot; title=&quot;原生JS实现&quot;&gt;&lt;/a&gt;原生JS实现&lt;/h2&gt;&lt;p&gt;原生JS，先使用 &lt;code&gt;select()&lt;/code&gt; 选中&lt;em&gt;输入框&lt;/em&gt;文本，然后使用 &lt;code&gt;document.execCommand(&amp;quot;Copy&amp;quot;)&lt;/code&gt;复制到剪贴板&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前提条件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select()&lt;/code&gt; 方法只对 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 有效&lt;/li&gt;
&lt;li&gt;输入框不能有&lt;code&gt;disabled&lt;/code&gt;属性&lt;/li&gt;
&lt;li&gt;输入框不能有&lt;code&gt;hidden&lt;/code&gt;属性&lt;/li&gt;
&lt;li&gt;输入框的 &lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;height&lt;/code&gt; 不能为0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实现代码&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端开发" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="JavaScript" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/JavaScript/"/>
    
    
      <category term="JS方法" scheme="https://xinyufeng.net/tags/JS%E6%96%B9%E6%B3%95/"/>
    
      <category term="JS技巧" scheme="https://xinyufeng.net/tags/JS%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2模型通过中间表关联</title>
    <link href="https://xinyufeng.net/2021/10/18/Yii2%E6%A8%A1%E5%9E%8B%E9%80%9A%E8%BF%87%E4%B8%AD%E9%97%B4%E8%A1%A8%E5%85%B3%E8%81%94/"/>
    <id>https://xinyufeng.net/2021/10/18/Yii2模型通过中间表关联/</id>
    <published>2021-10-18T10:54:12.000Z</published>
    <updated>2021-10-18T11:00:55.234Z</updated>
    
    <content type="html"><![CDATA[<p><code>Order</code> 模型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">extends</span> \<span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getItems</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(Item::className(), [<span class="string">'id'</span> =&gt; <span class="string">'item_id'</span>])</span><br><span class="line">            -&gt;viaTable(OrderItem::tableName(), [<span class="string">'order_id'</span> =&gt; <span class="string">'id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>OrderItem</code> 模型是 <code>Order</code> 与 <code>Item</code> 的中间表</p><p><code>order</code> 表的主键 <code>id</code> 与 <code>order-item</code> 表 <code>order_id</code> 关联</p><p><code>item</code> 表的主键 <code>id</code> 与 <code>order-item</code> 表 <code>order_id</code> 关联</p><p>通过Order模型获取关联的Item表数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$order = Order::find()-&gt;all();</span><br><span class="line">$order-&gt;items-&gt;item表的字段</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;Order&lt;/code&gt; 模型&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li
      
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Peak Xin</title>
  
  <subtitle>小峰的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xinyufeng.net/"/>
  <updated>2022-01-11T06:41:13.553Z</updated>
  <id>https://xinyufeng.net/</id>
  
  <author>
    <name>Peak Xin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP GD库转换输出为base64</title>
    <link href="https://xinyufeng.net/2022/01/11/PHP-GD%E5%BA%93%E8%BD%AC%E6%8D%A2%E8%BE%93%E5%87%BA%E4%B8%BAbase64/"/>
    <id>https://xinyufeng.net/2022/01/11/PHP-GD库转换输出为base64/</id>
    <published>2022-01-11T05:12:56.000Z</published>
    <updated>2022-01-11T06:41:13.553Z</updated>
    
    <content type="html"><![CDATA[<p>使用GD库的 <code>imagejpeg()</code> / <code>imagepng()</code> 处理图片，它们直接写入所述图像数据，以输出流（或文件）。</p><p>如果你想获取图片文件内容则通过如下方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// $img = 要处理的图像资源;</span></span><br><span class="line">ob_start();<span class="comment">// 打开输出控制缓冲</span></span><br><span class="line">imagepng($img);<span class="comment">// 显示PNG图像</span></span><br><span class="line">$image_data = ob_get_contents();<span class="comment">// 返回输出缓冲区的内容</span></span><br><span class="line">imagedestroy($img);<span class="comment">// 释放与 image 关联的内存</span></span><br><span class="line">ob_end_clean();<span class="comment">// 清空（擦除）缓冲区并关闭输出缓冲</span></span><br></pre></td></tr></table></figure><p><code>$image_data</code>得到的数据就是图片文件的数据内容 或者 直接返回 <code>ob_end_clean()</code>是一样的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用GD库的 &lt;code&gt;imagejpeg()&lt;/code&gt; / &lt;code&gt;imagepng()&lt;/code&gt; 处理图片，它们直接写入所述图像数据，以输出流（或文件）。&lt;/p&gt;
&lt;p&gt;如果你想获取图片文件内容则通过如下方法：&lt;/p&gt;
&lt;figure class=&quot;hig
      
    
    </summary>
    
      <category term="后端开发" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="PHP" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/PHP/"/>
    
    
      <category term="GD库" scheme="https://xinyufeng.net/tags/GD%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>windows下本地搭建https服务器</title>
    <link href="https://xinyufeng.net/2021/11/30/windows%E4%B8%8B%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BAhttps%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://xinyufeng.net/2021/11/30/windows下本地搭建https服务器/</id>
    <published>2021-11-30T07:27:52.000Z</published>
    <updated>2021-12-01T01:31:10.663Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h2><ul><li>使用git的命令行工具或者<code>cmder</code></li><li>注意使用<code>cmd</code>命令行是不行的, <code>cmd</code>命令行并不能识别<code>openssl</code>命令</li></ul><p><strong>openssl genrsa 命令介绍</strong></p><p><code>openssl genrsa</code> 命令是会用来生成 RSA 私有秘钥，不会生成公钥，因为公钥提取自私钥。生成时是可以指定私钥<em>长度</em>和<em>密码保护</em>。<br>如果需要查看公钥或生成公钥，可以使用 <code>openssl rsa</code> 命令。</p><h2 id="创建私钥"><a href="#创建私钥" class="headerlink" title="创建私钥"></a>创建私钥</h2><blockquote><p>生成秘钥是生成证书的前提</p></blockquote><a id="more"></a><p>生成长度为 1024 的秘钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ openssl genrsa -out certificate.key 1024</span><br><span class="line">Generating RSA private key, 1024 bit long modulus (2 primes)</span><br><span class="line">...+++++</span><br><span class="line">...............................................+++++</span><br><span class="line">e is 65537 (0x010001)</span><br></pre></td></tr></table></figure><h2 id="创建证书请求"><a href="#创建证书请求" class="headerlink" title="创建证书请求"></a>创建证书请求</h2><p>需要输入一些列信息，最重要的是<code>Common Name</code>表示要使用https访问的域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ openssl req -new -out certificate.csr -key certificate.key</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [AU]:CN</span><br><span class="line">State or Province Name (full name) [Some-State]:ShanDong</span><br><span class="line">Locality Name (eg, city) []:QingDao</span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:</span><br><span class="line">Organizational Unit Name (eg, section) []:</span><br><span class="line">Common Name (e.g. server FQDN or YOUR name) []:chisheng.xin</span><br><span class="line">Email Address []:</span><br><span class="line"></span><br><span class="line">Please enter the following <span class="string">'extra'</span> attributes</span><br><span class="line">to be sent with your certificate request</span><br><span class="line">A challenge password []:123456</span><br><span class="line">An optional company name []:</span><br></pre></td></tr></table></figure><h2 id="签署服务器证书"><a href="#签署服务器证书" class="headerlink" title="签署服务器证书"></a>签署服务器证书</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ openssl x509 -req -in certificate.csr -out certificate.pem -signkey certificate.key -days 3650</span><br><span class="line">Signature ok</span><br><span class="line">subject=C = CN, ST = ShanDong, L = QingDao, O = Internet Widgits Pty Ltd, CN = chisheng.xin</span><br><span class="line">Getting Private key</span><br></pre></td></tr></table></figure><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><p>我这里使用的是PHPstudy配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen        443 ssl;</span><br><span class="line">ssl_certificate D:/phpstudy_pro/Extensions/Nginx1.15.11/conf/ssl/certificate.pem;</span><br><span class="line">ssl_certificate_key D:/phpstudy_pro/Extensions/Nginx1.15.11/conf/ssl/certificate.key;</span><br><span class="line">ssl_session_timeout 5m;</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">        server_name  chisheng.xin;</span><br><span class="line">        root   <span class="string">"D:/phpstudy_pro/WWW/chisheng.xin"</span>;</span><br><span class="line">        location / &#123;</span><br><span class="line">            index index.php index.html error/index.html;</span><br><span class="line">            error_page 400 /error/400.html;</span><br><span class="line">            error_page 403 /error/403.html;</span><br><span class="line">            error_page 404 /error/404.html;</span><br><span class="line">            error_page 500 /error/500.html;</span><br><span class="line">            error_page 501 /error/501.html;</span><br><span class="line">            error_page 502 /error/502.html;</span><br><span class="line">            error_page 503 /error/503.html;</span><br><span class="line">            error_page 504 /error/504.html;</span><br><span class="line">            error_page 505 /error/505.html;</span><br><span class="line">            error_page 506 /error/506.html;</span><br><span class="line">            error_page 507 /error/507.html;</span><br><span class="line">            error_page 509 /error/509.html;</span><br><span class="line">            error_page 510 /error/510.html;</span><br><span class="line">            include D:/phpstudy_pro/WWW/chisheng.xin/nginx.htaccess;</span><br><span class="line">            autoindex  off;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ \.php(.*)$ &#123;</span><br><span class="line">            fastcgi_pass   127.0.0.1:9004;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;</span><br><span class="line">            fastcgi_param  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            fastcgi_param  PATH_INFO  <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">            fastcgi_param  PATH_TRANSLATED  <span class="variable">$document_root</span><span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">            include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启Nginx</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用工具&quot;&gt;&lt;a href=&quot;#使用工具&quot; class=&quot;headerlink&quot; title=&quot;使用工具&quot;&gt;&lt;/a&gt;使用工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用git的命令行工具或者&lt;code&gt;cmder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;注意使用&lt;code&gt;cmd&lt;/code&gt;命令行是不行的, &lt;code&gt;cmd&lt;/code&gt;命令行并不能识别&lt;code&gt;openssl&lt;/code&gt;命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;openssl genrsa 命令介绍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;openssl genrsa&lt;/code&gt; 命令是会用来生成 RSA 私有秘钥，不会生成公钥，因为公钥提取自私钥。生成时是可以指定私钥&lt;em&gt;长度&lt;/em&gt;和&lt;em&gt;密码保护&lt;/em&gt;。&lt;br&gt;如果需要查看公钥或生成公钥，可以使用 &lt;code&gt;openssl rsa&lt;/code&gt; 命令。&lt;/p&gt;
&lt;h2 id=&quot;创建私钥&quot;&gt;&lt;a href=&quot;#创建私钥&quot; class=&quot;headerlink&quot; title=&quot;创建私钥&quot;&gt;&lt;/a&gt;创建私钥&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;生成秘钥是生成证书的前提&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="运维" scheme="https://xinyufeng.net/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="SSL证书" scheme="https://xinyufeng.net/tags/SSL%E8%AF%81%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 自定义省市区三级联动挂件</title>
    <link href="https://xinyufeng.net/2021/11/26/Yii2-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E6%8C%82%E4%BB%B6/"/>
    <id>https://xinyufeng.net/2021/11/26/Yii2-自定义省市区三级联动挂件/</id>
    <published>2021-11-26T08:38:48.000Z</published>
    <updated>2021-11-29T07:47:26.209Z</updated>
    
    <content type="html"><![CDATA[<p>废话不多说直接上车</p><ol><li>创建地区表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`region`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`region`</span>  (</span><br><span class="line">  <span class="string">`region_id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'地区ID号'</span>,</span><br><span class="line">  <span class="string">`parent_id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="keyword">COMMENT</span> <span class="string">'地区父级ID'</span>,</span><br><span class="line">  <span class="string">`region_name`</span> <span class="built_in">varchar</span>(<span class="number">120</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'地区名称'</span>,</span><br><span class="line">  <span class="string">`region_type`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">2</span> <span class="keyword">COMMENT</span> <span class="string">'地区级别'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`region_id`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`parent_id`</span>(<span class="string">`parent_id`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`region_name`</span>(<span class="string">`region_name`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`region_type`</span>(<span class="string">`region_type`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">INDEX</span> <span class="string">`agency_id`</span>(<span class="string">`agency_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> AUTO_INCREMENT = <span class="number">659009509</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8mb4 <span class="keyword">COLLATE</span> = utf8mb4_unicode_ci <span class="keyword">COMMENT</span> = <span class="string">'地区'</span> ROW_FORMAT = Dynamic;</span><br></pre></td></tr></table></figure><ol start="2"><li>创建 Region Model 文件</li></ol><p><code>/common/models/Region.php</code></p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">ArrayHelper</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Region</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;&#123;%region&#125;&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [[<span class="string">'region_name'</span>], <span class="string">'required'</span>],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'region_id'</span> =&gt; <span class="string">'地区ID'</span>,</span><br><span class="line">            <span class="string">'parent_id'</span> =&gt; <span class="string">'地区父级ID'</span>,</span><br><span class="line">            <span class="string">'region_name'</span> =&gt; <span class="string">'地区名称'</span>,</span><br><span class="line">            <span class="string">'region_type'</span> =&gt; <span class="string">'地区级别'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $parent_id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getRegion</span><span class="params">($parent_id=<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $regions = <span class="keyword">static</span>::find()-&gt;where([<span class="string">'parent_id'</span>=&gt;$parent_id])-&gt;asArray()-&gt;all();</span><br><span class="line">        <span class="keyword">return</span> ArrayHelper::map($regions, <span class="string">'region_id'</span>, <span class="string">'region_name'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>创建ajax异步获取地区数据链接方法</li></ol><p><code>/backend/controllers/common/AjaxController.php</code>，这个自行定义，只要可以调用就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">backend</span>\<span class="title">controllers</span>\<span class="title">common</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">backend</span>\<span class="title">controllers</span>\<span class="title">BaseController</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Region</span> <span class="title">as</span> <span class="title">RegionModel</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">Html</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Response</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ajax联动接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AjaxController</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//免认证方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">allowAction</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 地区联动查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionGetRegion</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $parent_id = Yii::$app-&gt;request-&gt;get(<span class="string">'parent_id'</span>, <span class="number">0</span>);</span><br><span class="line">        $regions = RegionModel::getRegion($parent_id);</span><br><span class="line"></span><br><span class="line">        $result = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">foreach</span>($regions <span class="keyword">as</span> $key =&gt; $val)&#123;</span><br><span class="line">            $result .= Html::tag(<span class="string">'option'</span>, $val, [<span class="string">'value'</span> =&gt; $key]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>创建地区三级联动挂件</li></ol><p><code>/common/widgets/Region.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">widgets</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">InvalidParamException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Widget</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">ArrayHelper</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">Html</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Region</span> <span class="keyword">extends</span> <span class="title">Widget</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $model = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 此属性不用处理</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $attribute;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 外层属性配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $options = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 省份配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $province = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 城市配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $city = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array 县/区配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $district = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> mixed 数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $url;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;model) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InvalidParamException(<span class="string">'model不能为null!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;province) || <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;city)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InvalidParamException(<span class="string">'province和city不能为空！'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $cityId = Html::getInputId(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;city[<span class="string">'attribute'</span>]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>][<span class="string">'prompt'</span>])) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>][<span class="string">'prompt'</span>] = <span class="string">'选择城市'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $cityDefault = Html::renderSelectOptions(<span class="string">'city'</span>, [<span class="string">''</span> =&gt; <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>][<span class="string">'prompt'</span>]]);</span><br><span class="line"></span><br><span class="line">        $joinChar = strripos(<span class="keyword">$this</span>-&gt;url, <span class="string">'?'</span>) ? <span class="string">'&amp;'</span> : <span class="string">'?'</span>;</span><br><span class="line">        $url = <span class="keyword">$this</span>-&gt;url . $joinChar;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;district)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>][<span class="string">'prompt'</span>])) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>][<span class="string">'prompt'</span>] = <span class="string">'选择县/区'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $districtId = Html::getInputId(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;district[<span class="string">'attribute'</span>]);</span><br><span class="line">            $districtDefault = Html::renderSelectOptions(<span class="string">'district'</span>, [<span class="string">''</span> =&gt; <span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>][<span class="string">'prompt'</span>]]);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>] = ArrayHelper::merge(<span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>], [</span><br><span class="line">                <span class="string">'onchange'</span> =&gt; <span class="string">"</span></span><br><span class="line"><span class="string">                    if($(this).val() != '')&#123;</span></span><br><span class="line"><span class="string">                        $.get('&#123;$url&#125;parent_id='+$(this).val(), function(data) &#123;</span></span><br><span class="line"><span class="string">                            $('#&#123;$districtId&#125;').html('&#123;$districtDefault&#125;'+data);</span></span><br><span class="line"><span class="string">                        &#125;)</span></span><br><span class="line"><span class="string">                    &#125;else&#123;</span></span><br><span class="line"><span class="string">                        $('#&#123;$districtId&#125;').html('&#123;$districtDefault&#125;');</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                "</span></span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $provinceOnchangeHtml = <span class="string">"</span></span><br><span class="line"><span class="string">                if($(this).val()!='')&#123;</span></span><br><span class="line"><span class="string">                    $.get('&#123;$url&#125;parent_id='+$(this).val(), function(data) &#123;</span></span><br><span class="line"><span class="string">                        $('#&#123;$cityId&#125;').html('&#123;$cityDefault&#125;'+data);</span></span><br><span class="line"><span class="string">                    &#125;)</span></span><br><span class="line"><span class="string">                &#125;else&#123;</span></span><br><span class="line"><span class="string">                    $('#&#123;$cityId&#125;').html('&#123;$cityDefault&#125;');</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            "</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($districtId)) &#123;</span><br><span class="line">            $provinceOnchangeHtml .= <span class="string">"$('#&#123;$districtId&#125;').html('&#123;$districtDefault&#125;');"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;province[<span class="string">'options'</span>] = ArrayHelper::merge(<span class="keyword">$this</span>-&gt;province[<span class="string">'options'</span>], [</span><br><span class="line">            <span class="string">'onchange'</span> =&gt; $provinceOnchangeHtml</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $output[] = Html::activeDropDownList(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;province[<span class="string">'attribute'</span>], <span class="keyword">$this</span>-&gt;province[<span class="string">'items'</span>],</span><br><span class="line">            <span class="keyword">$this</span>-&gt;province[<span class="string">'options'</span>]);</span><br><span class="line">        $output[] = Html::activeDropDownList(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;city[<span class="string">'attribute'</span>], <span class="keyword">$this</span>-&gt;city[<span class="string">'items'</span>],</span><br><span class="line">            <span class="keyword">$this</span>-&gt;city[<span class="string">'options'</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;district)) &#123;</span><br><span class="line">            $output[] = Html::activeDropDownList(<span class="keyword">$this</span>-&gt;model, <span class="keyword">$this</span>-&gt;district[<span class="string">'attribute'</span>], <span class="keyword">$this</span>-&gt;district[<span class="string">'items'</span>],</span><br><span class="line">                <span class="keyword">$this</span>-&gt;district[<span class="string">'options'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Html::tag(<span class="string">'div'</span>, @implode(<span class="string">"\n"</span>, $output), <span class="keyword">$this</span>-&gt;options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>视图文件添加地区挂件</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Region</span> <span class="title">as</span> <span class="title">RegionModel</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">widgets</span>\<span class="title">Region</span> <span class="title">as</span> <span class="title">RegionWidget</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?</span>=$form-&gt;field($model, <span class="string">'city'</span>)-&gt;widget(RegionWidget::className(), [</span><br><span class="line">        <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'c-md-4'</span>],</span><br><span class="line">        <span class="string">'model'</span> =&gt; $model,</span><br><span class="line">        <span class="string">'url'</span> =&gt; Url::toRoute([<span class="string">'/common/ajax/get-region'</span>]),</span><br><span class="line">        <span class="string">'province'</span> =&gt; [</span><br><span class="line">            <span class="string">'attribute'</span> =&gt; <span class="string">'province'</span>,</span><br><span class="line">            <span class="string">'items'</span> =&gt; RegionModel::getRegion(),</span><br><span class="line">            <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'form-control c-md-3 inline'</span>, <span class="string">'prompt'</span>=&gt;<span class="string">'选择省份'</span>]</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">'city'</span> =&gt; [</span><br><span class="line">            <span class="string">'attribute'</span> =&gt; <span class="string">'city'</span>,</span><br><span class="line">            <span class="string">'items'</span> =&gt; RegionModel::getRegion($model[<span class="string">'province'</span>]),</span><br><span class="line">            <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'form-control c-md-3 inline'</span>, <span class="string">'prompt'</span>=&gt;<span class="string">'选择城市'</span>]</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">'district'</span> =&gt; [</span><br><span class="line">            <span class="string">'attribute'</span> =&gt; <span class="string">'district'</span>,</span><br><span class="line">            <span class="string">'items'</span> =&gt; RegionModel::getRegion($model[<span class="string">'city'</span>]),</span><br><span class="line">            <span class="string">'options'</span> =&gt; [<span class="string">'class'</span>=&gt;<span class="string">'form-control c-md-3 inline'</span>, <span class="string">'prompt'</span>=&gt;<span class="string">'选择县/区'</span>]</span><br><span class="line">        ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Tip： </p><ol><li><code>Url::toRoute([&#39;/common/ajax/get-region&#39;])</code>生成的链接，调用是第3步的方法</li><li><code>&#39;attribute&#39; =&gt; &#39;province&#39;</code> 在<code>$model</code>模型添加 <code>province</code>字段</li><li><code>&#39;attribute&#39; =&gt; &#39;city&#39;</code> 在<code>$model</code>模型添加 <code>city</code>字段</li><li><code>&#39;attribute&#39; =&gt; &#39;district&#39;</code> 在<code>$model</code>模型添加 <code>district</code>字段</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;废话不多说直接上车&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建地区表结构&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`region`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`region`&lt;/span&gt;  (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`region_id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;UNSIGNED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;地区ID号&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`parent_id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;UNSIGNED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;地区父级ID&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`region_name`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; utf8mb4 &lt;span class=&quot;keyword&quot;&gt;COLLATE&lt;/span&gt; utf8mb4_unicode_ci &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;地区名称&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`region_type`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;tinyint&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;地区级别&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`region_id`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`parent_id`&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`parent_id`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`region_name`&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`region_name`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`region_type`&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`region_type`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`agency_id`&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`agency_id`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; BTREE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; AUTO_INCREMENT = &lt;span class=&quot;number&quot;&gt;659009509&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; = utf8mb4 &lt;span class=&quot;keyword&quot;&gt;COLLATE&lt;/span&gt; = utf8mb4_unicode_ci &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&#39;地区&#39;&lt;/span&gt; ROW_FORMAT = Dynamic;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;创建 Region Model 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;/common/models/Region.php&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 ActiveRecord多表关联和多表关联搜索的实现</title>
    <link href="https://xinyufeng.net/2021/11/23/Yii2-ActiveRecord%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E5%92%8C%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E6%90%9C%E7%B4%A2%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://xinyufeng.net/2021/11/23/Yii2-ActiveRecord多表关联和多表关联搜索的实现/</id>
    <published>2021-11-23T05:21:34.000Z</published>
    <updated>2021-11-23T05:56:03.132Z</updated>
    
    <content type="html"><![CDATA[<p>需求：假设我们有一张商品表goods和一张商品分类表categories，通过商品分类简称搜索商品列表</p><p>goods表AR</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Goods</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;&#123;%goods&#125;&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'id'</span> =&gt; <span class="string">'商品ID'</span>,</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="string">'商品标题'</span>,</span><br><span class="line">            <span class="string">'cid'</span> =&gt; <span class="string">'商品分类ID'</span>,</span><br><span class="line">            <span class="string">'created_at'</span> =&gt; <span class="string">'添加时间'</span>,</span><br><span class="line">            <span class="string">'updated_at'</span> =&gt; <span class="string">'修改时间'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 与商品分类表关联</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCategory</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(Category::className(), [<span class="string">'id'</span>=&gt;<span class="string">'cid'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>categories表AR</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Category</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;&#123;%categories&#125;&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@inheritdoc</span>&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attributeLabels</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'id'</span> =&gt; <span class="string">'商品分类ID'</span>,</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="string">'商品分类标题'</span>,</span><br><span class="line">            <span class="string">'short_title'</span> =&gt; <span class="string">'商品分类简称'</span>,</span><br><span class="line">            <span class="string">'created_at'</span> =&gt; <span class="string">'添加时间'</span>,</span><br><span class="line">            <span class="string">'updated_at'</span> =&gt; <span class="string">'修改时间'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>商品搜索模型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">search</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">data</span>\<span class="title">ActiveDataProvider</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">common</span>\<span class="title">models</span>\<span class="title">Goods</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsSearch</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $title;<span class="comment">// 商品标题</span></span><br><span class="line">    <span class="keyword">public</span> $short_title;<span class="comment">// 商品分类简称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//检索规则</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [[<span class="string">'title'</span>, <span class="string">'short_title'</span>], <span class="string">'string'</span>],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//搜索函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span><span class="params">($params)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $query = Goods::find()-&gt;joinWith([<span class="string">'category'</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;load($params) &amp;&amp; <span class="keyword">$this</span>-&gt;validate()) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;title)) $query-&gt;andFilterWhere([<span class="string">'goods.title'</span> =&gt; <span class="keyword">$this</span>-&gt;title]);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;short_title)) $query-&gt;andFilterWhere([<span class="string">'category.short_title'</span> =&gt; <span class="keyword">$this</span>-&gt;status]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $dataProvider = <span class="keyword">new</span> ActiveDataProvider([</span><br><span class="line">            <span class="string">'query'</span> =&gt; $query,</span><br><span class="line">            <span class="string">'sort'</span> =&gt; [</span><br><span class="line">                <span class="string">'defaultOrder'</span> =&gt; [</span><br><span class="line">                    <span class="string">'id'</span> =&gt; SORT_DESC,</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">'pagination'</span> =&gt; [</span><br><span class="line">                <span class="string">'pageSize'</span> =&gt; <span class="number">15</span>,</span><br><span class="line">            ],</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $dataProvider;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需求：假设我们有一张商品表goods和一张商品分类表categories，通过商品分类简称搜索商品列表&lt;/p&gt;
&lt;p&gt;goods表AR&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;common&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;models&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Yii&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;yii&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;db&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;ActiveRecord&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Goods&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ActiveRecord&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * &amp;#123;&lt;span class=&quot;doctag&quot;&gt;@inheritdoc&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#123;%goods&amp;#125;&amp;#125;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * &amp;#123;&lt;span class=&quot;doctag&quot;&gt;@inheritdoc&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;attributeLabels&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;商品ID&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;title&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;商品标题&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;cid&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;商品分类ID&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;created_at&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;添加时间&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;updated_at&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;修改时间&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * 与商品分类表关联&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getCategory&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;hasOne(Category::className(), [&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;string&quot;&gt;&#39;cid&#39;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 GridView 表格用法</title>
    <link href="https://xinyufeng.net/2021/11/16/Yii2-GridView-%E8%A1%A8%E6%A0%BC%E7%94%A8%E6%B3%95/"/>
    <id>https://xinyufeng.net/2021/11/16/Yii2-GridView-表格用法/</id>
    <published>2021-11-16T00:34:09.000Z</published>
    <updated>2021-11-17T03:21:42.982Z</updated>
    
    <content type="html"><![CDATA[<p>Yii2框架下展示列表数据通常用<code>Gridview</code>来实现，这里整理常用的小技巧，方便以后查询使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="string">'dataProvider'</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">'layout'</span> =&gt; <span class="string">"&#123;items&#125;\n&#123;summary&#125;\n&#123;pager&#125;"</span>,</span><br><span class="line">    <span class="string">'tableOptions'</span> =&gt; [<span class="string">'class'</span> =&gt; <span class="string">'table table-striped table-bordered table-hover'</span>],</span><br><span class="line">    <span class="string">'columns'</span> =&gt; [</span><br><span class="line">        </span><br><span class="line">    ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格整体配置"><a href="#表格整体配置" class="headerlink" title="表格整体配置"></a>表格整体配置</h2><h3 id="自定义行样式"><a href="#自定义行样式" class="headerlink" title="自定义行样式"></a>自定义行样式</h3><p>单数行为绿色背景，偶数行为红色背景</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="string">"dataProvider"</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">"rowOptions"</span> =&gt; <span class="function"><span class="keyword">function</span><span class="params">($model, $key, $index, $grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">"class"</span> =&gt; $index % <span class="number">2</span> == <span class="number">0</span> ? <span class="string">"red"</span> : <span class="string">"green"</span>];</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>red</code>和<code>green</code>需要有对应的样式实现</p><a id="more"></a><h3 id="禁止表头排序"><a href="#禁止表头排序" class="headerlink" title="禁止表头排序"></a>禁止表头排序</h3><p>需要<code>ActiveDataProvider</code>的设置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$dataProvider = <span class="keyword">new</span> ActiveDataProvider([ <span class="string">"query"</span> =&gt; $query, ]); </span><br><span class="line">$dataProvider-&gt;setSort(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure><h3 id="表格加表头"><a href="#表格加表头" class="headerlink" title="表格加表头"></a>表格加表头</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="string">"dataProvider"</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">'caption'</span> =&gt; <span class="string">'订单管理'</span>,</span><br><span class="line">    <span class="string">'captionOptions'</span> =&gt; [<span class="string">'style'</span> =&gt; <span class="string">'font-size: 18px; font-weight: bold; color: #000; text-align: center;'</span>],</span><br><span class="line">    </span><br><span class="line">    <span class="string">"rowOptions"</span> =&gt; <span class="function"><span class="keyword">function</span><span class="params">($model, $key, $index, $grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">"class"</span> =&gt; $index % <span class="number">2</span> == <span class="number">0</span> ? <span class="string">"red"</span> : <span class="string">"green"</span>];</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格列的配置"><a href="#表格列的配置" class="headerlink" title="表格列的配置"></a>表格列的配置</h2><p>列的展示放在 <code>columns</code> 数组中</p><h3 id="设定宽度"><a href="#设定宽度" class="headerlink" title="设定宽度"></a>设定宽度</h3><p>设置<code>title</code>列的宽度为100，通过配置项<code>headerOptions</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"title"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="string">"title"</span>,</span><br><span class="line">    <span class="string">"headerOptions"</span> =&gt; [<span class="string">"width"</span> =&gt; <span class="string">"100"</span>],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="html渲染"><a href="#html渲染" class="headerlink" title="html渲染"></a>html渲染</h3><p>输出的字符串还有html标签，例如<code>&lt;p&gt;Hello World&lt;/p</code>，我们想以<code>p</code>标签的形式展示<code>Hello World</code>，需要指定<code>format</code>为<code>raw</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"title"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">return</span> Html::encode($model-&gt;title); </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"format"</span> =&gt; <span class="string">"raw"</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="标题内容样式"><a href="#标题内容样式" class="headerlink" title="标题内容样式"></a>标题内容样式</h3><p>内容居中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">'attribute'</span> =&gt; <span class="string">'replay_url'</span>,</span><br><span class="line">    <span class="string">'headerOptions'</span> =&gt; [<span class="string">'style'</span> =&gt; <span class="string">'text-align:center;'</span>, <span class="string">'width'</span> =&gt; <span class="string">'200'</span>],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="字段内容样式"><a href="#字段内容样式" class="headerlink" title="字段内容样式"></a>字段内容样式</h3><p>内容换行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">'attribute'</span> =&gt; <span class="string">'replay_url'</span>,</span><br><span class="line">    <span class="string">'contentOptions'</span> =&gt; [<span class="string">'style'</span> =&gt; <span class="string">'white-space: normal;'</span>, <span class="string">'width'</span> =&gt; <span class="string">'200'</span>],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="字段不允许点击排序"><a href="#字段不允许点击排序" class="headerlink" title="字段不允许点击排序"></a>字段不允许点击排序</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">'attribute'</span> =&gt; <span class="string">'id'</span>,</span><br><span class="line">    <span class="string">'enableSorting'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="是否显示指定列"><a href="#是否显示指定列" class="headerlink" title="是否显示指定列"></a>是否显示指定列</h3><p>当<code>type</code>的值等于<code>1</code>的时候，<code>name</code>列才显示，否则该列不显示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"name"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; $model-&gt;name,</span><br><span class="line">    <span class="string">"visible"</span> =&gt; intval(Yii::$app-&gt;request-&gt;get(<span class="string">"type"</span>)) == <span class="number">1</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="链接可点击跳转"><a href="#链接可点击跳转" class="headerlink" title="链接可点击跳转"></a>链接可点击跳转</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"order_id"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Html::a($model-&gt;order_id, <span class="string">"/order/detail?id=&#123;$model-&gt;order_id&#125;"</span>, [<span class="string">"target"</span> =&gt; <span class="string">"_blank"</span>]);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"format"</span> =&gt; <span class="string">"raw"</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="显示图片"><a href="#显示图片" class="headerlink" title="显示图片"></a>显示图片</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"label"</span> =&gt; <span class="string">"商品图片"</span>,</span><br><span class="line">    <span class="string">"format"</span> =&gt; [</span><br><span class="line">        <span class="string">"image"</span>, </span><br><span class="line">        [</span><br><span class="line">            <span class="string">"width"</span>=&gt;<span class="string">"200"</span>,</span><br><span class="line">            <span class="string">"height"</span>=&gt;<span class="string">"200"</span></span><br><span class="line">        ]</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">return</span> $model-&gt;image; </span><br><span class="line">    &#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="自定义操作按钮"><a href="#自定义操作按钮" class="headerlink" title="自定义操作按钮"></a>自定义操作按钮</h3><p>通过设置<code>ActionColumn</code>类，修改配置项<code>template</code>，在buttons项增加<code>template</code>里增加的<code>log</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"class"</span> =&gt; <span class="string">"yii\grid\ActionColumn"</span>,</span><br><span class="line">    <span class="string">"template"</span> =&gt; <span class="string">"&#123;log&#125; &#123;view&#125; &#123;update&#125;"</span>,</span><br><span class="line">    <span class="string">"header"</span> =&gt; <span class="string">"操作"</span>,</span><br><span class="line">    <span class="string">"buttons"</span> =&gt; [</span><br><span class="line">        <span class="string">"log"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($url, $model, $key)</span> </span>&#123; </span><br><span class="line">            <span class="keyword">return</span> Html::a(<span class="string">"日志"</span>, $url, [<span class="string">"title"</span> =&gt; <span class="string">"查看日志"</span>] ); </span><br><span class="line">        &#125;,</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="操作按钮调用JS"><a href="#操作按钮调用JS" class="headerlink" title="操作按钮调用JS"></a>操作按钮调用JS</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"class"</span> =&gt; <span class="string">"yii\grid\ActionColumn"</span>,</span><br><span class="line">    <span class="string">"header"</span> =&gt; <span class="string">"操作"</span>,</span><br><span class="line">    <span class="string">"template"</span> =&gt; <span class="string">"&#123;view&#125; &#123;update&#125; &#123;update-status&#125;"</span>,</span><br><span class="line">    <span class="string">"buttons"</span> =&gt; [</span><br><span class="line">        <span class="string">"update-status"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($url, $model, $key)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Html::a(<span class="string">"更新状态"</span>, <span class="string">"javascript:;"</span>, [<span class="string">"onclick"</span>=&gt;<span class="string">"update_status(this, "</span>.$model-&gt;id.<span class="string">");"</span>]); &#125;,</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>需要在页面写js实现<code>update_status</code>方法</p><h3 id="自定义字段"><a href="#自定义字段" class="headerlink" title="自定义字段"></a>自定义字段</h3><p>在表格里增加一列且数据库中不存在对应的列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    <span class="string">"attribute"</span> =&gt; <span class="string">"消费金额"</span>,</span><br><span class="line">    <span class="string">"value"</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 这里可以根据该表的其他字段进行关联获取</span></span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h2 id="实现批量删除"><a href="#实现批量删除" class="headerlink" title="实现批量删除"></a>实现批量删除</h2><ol><li><code>GridView</code>设置<code>options</code>时增加一个<code>id</code> 这里我们命名<code>grid</code></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="string">'dataProvider'</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">"options"</span> =&gt; [</span><br><span class="line">        <span class="comment">// ...其他设置项</span></span><br><span class="line">        <span class="string">"id"</span> =&gt; <span class="string">"grid"</span></span><br><span class="line">    ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>批量删除需要用到复选框，在<code>columns</code>增加选项复选框，<code>name</code>值设定为<code>id</code>方便对数据操作</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= GridView::widget([</span><br><span class="line">    <span class="string">'dataProvider'</span> =&gt; $dataProvider,</span><br><span class="line">    <span class="string">"options"</span> =&gt; [</span><br><span class="line">        <span class="string">"id"</span> =&gt; <span class="string">"grid"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"columns"</span> =&gt; [</span><br><span class="line">        <span class="comment">// ......</span></span><br><span class="line">        [</span><br><span class="line">            <span class="string">"class"</span> =&gt; <span class="string">"yii\grid\CheckboxColumn"</span>,</span><br><span class="line">            <span class="string">"name"</span> =&gt; <span class="string">"id"</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment">// ......</span></span><br><span class="line">    ],</span><br><span class="line">]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>页面上增加一个批量删除按钮，这里增加了一个class<code>batch-del</code>,方便后面js实现点击效果</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= Html::a(<span class="string">"批量删除"</span>, <span class="string">"javascript:;"</span>, [<span class="string">"class"</span> =&gt; <span class="string">"btn btn-success batch-del"</span>]) <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>js实现按钮操作</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;registerJs(<span class="string">'</span></span><br><span class="line"><span class="string">$(".batch-del").on("click", function () &#123;</span></span><br><span class="line"><span class="string">    //注意这里的$("#grid")，要跟我们第一步设定的options id一致</span></span><br><span class="line"><span class="string">    var keys = $("#grid").yiiGridView("getSelectedRows");</span></span><br><span class="line"><span class="string">    console.log(keys);</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="format格式"><a href="#format格式" class="headerlink" title="format格式"></a><code>format</code>格式</h2><h3 id="视图中"><a href="#视图中" class="headerlink" title="视图中"></a>视图中</h3><ul><li>处理html标签</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'format'</span> =&gt; <span class="string">'raw'</span></span><br></pre></td></tr></table></figure><ul><li>处理时间</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'format'</span> =&gt; [<span class="string">'date'</span>, <span class="string">'php:Y-m-d H:i'</span>]</span><br></pre></td></tr></table></figure><ul><li>处理图片</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"format"</span> =&gt; [</span><br><span class="line">    <span class="string">"image"</span>, </span><br><span class="line">    [</span><br><span class="line">        <span class="string">"width"</span>=&gt;<span class="string">"200"</span>,</span><br><span class="line">        <span class="string">"height"</span>=&gt;<span class="string">"200"</span></span><br><span class="line">    ]</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="控制器中"><a href="#控制器中" class="headerlink" title="控制器中"></a>控制器中</h3><p><code>yii\i18n\Formatter</code></p><h4 id="常用的属性"><a href="#常用的属性" class="headerlink" title="常用的属性"></a>常用的属性</h4><ol><li><code>$dateFormat</code><br>日期格式：yyyy-MM-dd,或者 “short”, “medium”, “long”, or “full”</li><li><code>$datetimeFormat</code><br>具体时间格式：yyyy-MM-dd HH:mm:ss</li><li><code>$locale</code><br>区域位置，如果没有设置，将使用 yii\base\Application::$language,按照这一区域的习惯显示格式</li><li><code>$defaultTimeZone</code><br>时区，默认UTC</li><li>要使用formatter需要在config中的配置</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'formatter'</span> =&gt; [</span><br><span class="line">    <span class="string">'dateFormat'</span> =&gt; <span class="string">'yyyy-MM-dd'</span>,</span><br><span class="line">    <span class="string">'datetimeFormat'</span> =&gt; <span class="string">'yyyy-MM-dd HH:mm:ss'</span>,</span><br><span class="line">    <span class="string">'decimalSeparator'</span> =&gt; <span class="string">','</span>,</span><br><span class="line">    <span class="string">'thousandSeparator'</span> =&gt; <span class="string">' '</span>,</span><br><span class="line">    <span class="string">'currencyCode'</span> =&gt; <span class="string">'CNY'</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h4 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asRelativeTime(<span class="number">1463632983</span>).<span class="string">'&lt;br/&gt;'</span>; <span class="comment">// 几天前 几小时前</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asDatetime(<span class="number">1463606983</span>).<span class="string">'&lt;br&gt;'</span>;  <span class="comment">// 2015-6-16 11:51:43</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asDatetime(<span class="string">'now'</span>).<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="comment">// 也可处理null值的输出显示:</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asDate(<span class="keyword">null</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 输出: (未设置)  </span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asPercent(<span class="number">0.125</span>, <span class="number">2</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 输出: 12.50%</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTimestamp(<span class="string">'now'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//输出时间戳</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTime(<span class="number">1412599260</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 14:41:00</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTime(<span class="string">'2014-10-06 12:41:00'</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 14:41:00</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asTime(<span class="string">'2014-10-06 14:41:00 CEST'</span>).<span class="string">'&lt;br&gt;'</span>; <span class="comment">// 14:41:00</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asRaw(<span class="number">1463606983</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//简单输出输入值</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asText(<span class="string">'&lt;h3&gt;hello&lt;/h3&gt;'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//将字符串中html标签当做字符串输出</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asHtml(<span class="string">'&lt;h3&gt;hello&lt;/h3&gt;'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//作为Html的文档输出</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asNtext(<span class="string">"&lt;h3&gt;hello.\nword&lt;/h3&gt;"</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//在字符串中遇到\n可以将它作为换行符实现</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asEmail(<span class="string">'cebe@example.com'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">// 输出: &lt;a href="mailto:cebe@example.com"&gt;cebe@example.com&lt;/a&gt;</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asParagraphs(<span class="string">'hello'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">// 值会转换成HTML编码的文本段落，用&lt;p&gt;标签包裹；</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asUrl(<span class="string">'www.baidu.com'</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//值会格式化成url的连接</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asImage(<span class="string">'my2.jpeg'</span>,[<span class="string">'alt'</span>=&gt;<span class="string">'图片无法显示'</span>]).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//图片的链接会转化成&lt;img src='my.jpg'/&gt;</span></span><br><span class="line"><span class="keyword">echo</span> Yii::$app-&gt;formatter-&gt;asBoolean(<span class="keyword">true</span>).<span class="string">'&lt;br&gt;'</span>;<span class="comment">//输出yes</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Yii2框架下展示列表数据通常用&lt;code&gt;Gridview&lt;/code&gt;来实现，这里整理常用的小技巧，方便以后查询使用&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?&lt;/span&gt;= GridView::widget([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;dataProvider&#39;&lt;/span&gt; =&amp;gt; $dataProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;layout&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;items&amp;#125;\n&amp;#123;summary&amp;#125;\n&amp;#123;pager&amp;#125;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;tableOptions&#39;&lt;/span&gt; =&amp;gt; [&lt;span class=&quot;string&quot;&gt;&#39;class&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;table table-striped table-bordered table-hover&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;columns&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]); &lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;表格整体配置&quot;&gt;&lt;a href=&quot;#表格整体配置&quot; class=&quot;headerlink&quot; title=&quot;表格整体配置&quot;&gt;&lt;/a&gt;表格整体配置&lt;/h2&gt;&lt;h3 id=&quot;自定义行样式&quot;&gt;&lt;a href=&quot;#自定义行样式&quot; class=&quot;headerlink&quot; title=&quot;自定义行样式&quot;&gt;&lt;/a&gt;自定义行样式&lt;/h3&gt;&lt;p&gt;单数行为绿色背景，偶数行为红色背景&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?&lt;/span&gt;= GridView::widget([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;dataProvider&quot;&lt;/span&gt; =&amp;gt; $dataProvider,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;rowOptions&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($model, $key, $index, $grid)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&quot;class&quot;&lt;/span&gt; =&amp;gt; $index % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;green&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]); &lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;red&lt;/code&gt;和&lt;code&gt;green&lt;/code&gt;需要有对应的样式实现&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2如何在View中加入JS代码</title>
    <link href="https://xinyufeng.net/2021/11/12/Yii2%E5%A6%82%E4%BD%95%E5%9C%A8View%E4%B8%AD%E5%8A%A0%E5%85%A5JS%E4%BB%A3%E7%A0%81/"/>
    <id>https://xinyufeng.net/2021/11/12/Yii2如何在View中加入JS代码/</id>
    <published>2021-11-12T03:01:29.000Z</published>
    <updated>2021-11-17T02:33:38.490Z</updated>
    
    <content type="html"><![CDATA[<p>如果在view中直接添加js代码，如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">'js code'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>会提示没有<code>$ is not defined</code>错误，这是因为view中添加js代码的前面没有引用juqery.js，默认全局的jquery则是在文件尾添加。</p><p>解决方法：</p><a id="more"></a><ol><li>在js代码前引入js库</li></ol><p><strong>1.1 引入方式1</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>=Html::jsFile(<span class="string">'@web/jquery.js'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>1.2 引入方式2</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">$this</span>-&gt;registerJsFile(<span class="string">'@web/js/jquery.js'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>使用全局的js库</li></ol><p><strong>方法一</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$js = <span class="string">&lt;&lt;&lt;JS</span></span><br><span class="line"><span class="string">$(function()&#123;</span></span><br><span class="line"><span class="string">    alert('js code');</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">JS;</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;registerJs($js);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>方法二</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;registerJs(<span class="string">"</span></span><br><span class="line"><span class="string">$(function () &#123;</span></span><br><span class="line"><span class="string">// 想要写的js代码吧</span></span><br><span class="line"><span class="string">$......</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">"</span>, \yii\web\View::POS_END);</span><br></pre></td></tr></table></figure><p><code>$this</code>指<code>yii\web\View</code>对象,用于管理和渲染视图</p><ul><li>第一个参数：就是我们要写的js代码块</li><li>第二个参数：指定代码块插入在页面的具体位置<br><code>\yii\web\View::POS_END</code>意思就是页面底部<code>&lt;/body&gt;</code>之前插入</li><li>第三个参数：js代码块的一个id标示，不指定会默认生成</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果在view中直接添加js代码，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;string&quot;&gt;&#39;js code&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;会提示没有&lt;code&gt;$ is not defined&lt;/code&gt;错误，这是因为view中添加js代码的前面没有引用juqery.js，默认全局的jquery则是在文件尾添加。&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>JS实现复制到剪贴板功能</title>
    <link href="https://xinyufeng.net/2021/11/12/JS%E5%AE%9E%E7%8E%B0%E5%A4%8D%E5%88%B6%E5%88%B0%E5%89%AA%E8%B4%B4%E6%9D%BF%E5%8A%9F%E8%83%BD/"/>
    <id>https://xinyufeng.net/2021/11/12/JS实现复制到剪贴板功能/</id>
    <published>2021-11-12T02:46:30.000Z</published>
    <updated>2021-11-12T03:03:09.111Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原生JS实现"><a href="#原生JS实现" class="headerlink" title="原生JS实现"></a>原生JS实现</h2><p>原生JS，先使用 <code>select()</code> 选中<em>输入框</em>文本，然后使用 <code>document.execCommand(&quot;Copy&quot;)</code>复制到剪贴板</p><p><strong>前提条件</strong></p><ul><li><code>select()</code> 方法只对 <code>&lt;input&gt;</code> 和 <code>&lt;textarea&gt;</code> 有效</li><li>输入框不能有<code>disabled</code>属性</li><li>输入框不能有<code>hidden</code>属性</li><li>输入框的 <code>width</code> 和 <code>height</code> 不能为0</li></ul><p><strong>实现代码</strong></p><a id="more"></a><p>HTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"copyInput"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"需要复制的文本"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JS</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementById(<span class="string">"copyInput"</span>);</span><br><span class="line">ele.select();</span><br><span class="line"><span class="keyword">let</span> c = <span class="built_in">document</span>.execCommand(<span class="string">"Copy"</span>);</span><br><span class="line"><span class="keyword">if</span> (c) &#123;</span><br><span class="line">    alert(<span class="string">"复制链接成功！"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    alert(<span class="string">"复制失败！当前浏览器不支持此功能，请手动复制。"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原生JS实现&quot;&gt;&lt;a href=&quot;#原生JS实现&quot; class=&quot;headerlink&quot; title=&quot;原生JS实现&quot;&gt;&lt;/a&gt;原生JS实现&lt;/h2&gt;&lt;p&gt;原生JS，先使用 &lt;code&gt;select()&lt;/code&gt; 选中&lt;em&gt;输入框&lt;/em&gt;文本，然后使用 &lt;code&gt;document.execCommand(&amp;quot;Copy&amp;quot;)&lt;/code&gt;复制到剪贴板&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前提条件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select()&lt;/code&gt; 方法只对 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 有效&lt;/li&gt;
&lt;li&gt;输入框不能有&lt;code&gt;disabled&lt;/code&gt;属性&lt;/li&gt;
&lt;li&gt;输入框不能有&lt;code&gt;hidden&lt;/code&gt;属性&lt;/li&gt;
&lt;li&gt;输入框的 &lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;height&lt;/code&gt; 不能为0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实现代码&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端开发" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="JavaScript" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/JavaScript/"/>
    
    
      <category term="JS方法" scheme="https://xinyufeng.net/tags/JS%E6%96%B9%E6%B3%95/"/>
    
      <category term="JS技巧" scheme="https://xinyufeng.net/tags/JS%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2模型通过中间表关联</title>
    <link href="https://xinyufeng.net/2021/10/18/Yii2%E6%A8%A1%E5%9E%8B%E9%80%9A%E8%BF%87%E4%B8%AD%E9%97%B4%E8%A1%A8%E5%85%B3%E8%81%94/"/>
    <id>https://xinyufeng.net/2021/10/18/Yii2模型通过中间表关联/</id>
    <published>2021-10-18T10:54:12.000Z</published>
    <updated>2021-10-18T11:00:55.234Z</updated>
    
    <content type="html"><![CDATA[<p><code>Order</code> 模型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span> <span class="keyword">extends</span> \<span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getItems</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(Item::className(), [<span class="string">'id'</span> =&gt; <span class="string">'item_id'</span>])</span><br><span class="line">            -&gt;viaTable(OrderItem::tableName(), [<span class="string">'order_id'</span> =&gt; <span class="string">'id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>OrderItem</code> 模型是 <code>Order</code> 与 <code>Item</code> 的中间表</p><p><code>order</code> 表的主键 <code>id</code> 与 <code>order-item</code> 表 <code>order_id</code> 关联</p><p><code>item</code> 表的主键 <code>id</code> 与 <code>order-item</code> 表 <code>order_id</code> 关联</p><p>通过Order模型获取关联的Item表数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$order = Order::find()-&gt;all();</span><br><span class="line">$order-&gt;items-&gt;item表的字段</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;Order&lt;/code&gt; 模型&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li
      
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2模型自动生成新增和修改时间</title>
    <link href="https://xinyufeng.net/2021/10/18/Yii2%E6%A8%A1%E5%9E%8B%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%96%B0%E5%A2%9E%E5%92%8C%E4%BF%AE%E6%94%B9%E6%97%B6%E9%97%B4/"/>
    <id>https://xinyufeng.net/2021/10/18/Yii2模型自动生成新增和修改时间/</id>
    <published>2021-10-18T10:50:09.000Z</published>
    <updated>2021-10-18T10:53:01.387Z</updated>
    
    <content type="html"><![CDATA[<p>使用 <code>timeStampBehavior</code></p><p>这个行为支持在 <code>Active Record</code> 存储时自动更新它的时间戳属性</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">models</span>\<span class="title">User</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">behaviors</span>\<span class="title">TimestampBehavior</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">behaviors</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            [</span><br><span class="line">                <span class="string">'class'</span> =&gt; TimestampBehavior::className(),</span><br><span class="line">                <span class="string">'attributes'</span> =&gt; [</span><br><span class="line">                    ActiveRecord::EVENT_BEFORE_INSERT =&gt; [<span class="string">'created_at'</span>, <span class="string">'updated_at'</span>],</span><br><span class="line">                    ActiveRecord::EVENT_BEFORE_UPDATE =&gt; [<span class="string">'updated_at'</span>],</span><br><span class="line">                ],</span><br><span class="line">                <span class="comment">// if you're using datetime instead of UNIX timestamp:</span></span><br><span class="line">                <span class="comment">// 'value' =&gt; new Expression('NOW()'),</span></span><br><span class="line">            ],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上指定的行为数组：</p><p>当记录插入时，行为将当前时间戳赋值给 <code>created_at</code> 和 <code>updated_at</code> 属性；<br>当记录更新时，行为将当前时间戳赋值给 <code>updated_at</code> 属性。</p><p><code>TimestampBehavior</code> 行为还提供了一个有用的方法 <code>touch()</code>， 这个方法能将当前时间戳赋值给指定属性并保存到数据库：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$user-&gt;touch(<span class="string">'login_time'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用 &lt;code&gt;timeStampBehavior&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个行为支持在 &lt;code&gt;Active Record&lt;/code&gt; 存储时自动更新它的时间戳属性&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Yii2.0框架数据库查询总结</title>
    <link href="https://xinyufeng.net/2021/10/09/Yii2-0%E6%A1%86%E6%9E%B6%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E6%80%BB%E7%BB%93/"/>
    <id>https://xinyufeng.net/2021/10/09/Yii2-0框架数据库查询总结/</id>
    <published>2021-10-09T01:26:38.000Z</published>
    <updated>2021-12-23T02:27:52.911Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">User::find()-&gt;all();    <span class="comment">// 返回所有数据；</span></span><br><span class="line"> </span><br><span class="line">User::findOne($id);   <span class="comment">// 返回 主键 id 为定值 的一条数据；</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;select([<span class="string">'id'</span>, <span class="string">'name'</span>])-&gt;one();      <span class="comment">// 返回 字段为id和name 的一条数据；</span></span><br><span class="line">User::find()-&gt;select(<span class="string">'id,name'</span>)-&gt;one();      <span class="comment">// 返回 字段为id和name 的一条数据；</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;select([<span class="string">'id'</span>, <span class="string">'name'</span>])-&gt;all();      <span class="comment">// 返回 字段为id和name 的所有数据；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;where([<span class="string">'age'</span> =&gt; <span class="string">'18'</span>])-&gt;one();      <span class="comment">// 返回 ['age' =&gt; '18'] 的一条数据；</span></span><br><span class="line">User::find()-&gt;where([<span class="string">'='</span>, <span class="string">'age'</span>, <span class="string">'18'</span>])-&gt;one();   <span class="comment">// 返回 ['age' =&gt; '18'] 的一条数据；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;where([<span class="string">'age'</span> =&gt; <span class="string">'18'</span>])-&gt;all();   <span class="comment">// 返回 ['age' =&gt; '18'] 的所有数据；</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;where([<span class="string">'in'</span>, <span class="string">'age'</span>, [<span class="string">'18'</span>, <span class="string">'19'</span>]])-&gt;all();   <span class="comment">// 返回 age 在18和19 的所有数据；</span></span><br><span class="line">User::find()-&gt;where([<span class="string">'age'</span>=&gt;[<span class="string">'18'</span>, <span class="string">'19'</span>]])-&gt;all();   <span class="comment">// 返回 age 在18和19 的所有数据；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;orderBy(<span class="string">'id DESC'</span>)-&gt;all();   <span class="comment">// 排序查询, DESC:降序,ASC:升序；</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;groupBy(<span class="string">'type'</span>)-&gt;all();   <span class="comment">// 根据 type 分组查询 的所有数据；</span></span><br><span class="line"> </span><br><span class="line">User::findBySql(<span class="string">'SELECT * FROM user'</span>)-&gt;all();  <span class="comment">// 用 sql 语句查询 user 表里面的所有数据；</span></span><br><span class="line"> </span><br><span class="line">User::findBySql(<span class="string">'SELECT * FROM user'</span>)-&gt;one();  <span class="comment">// 用 sql  语句查询 user 表里面的一条数据；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;andWhere([<span class="string">'sex'</span> =&gt; <span class="string">'男'</span>, <span class="string">'age'</span> =&gt; <span class="string">'24'</span>])-&gt;count(<span class="string">'id'</span>);   <span class="comment">// 统计符合条件的总条数；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;andFilterWhere([<span class="string">'like'</span>, <span class="string">'name'</span>, <span class="string">'腾哥'</span>])-&gt;all(); <span class="comment">// 用 like 查询数据，生成 name LIKE '%腾哥%'</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;andFilterWhere([<span class="string">'like'</span>, <span class="string">'name'</span>, <span class="string">'%腾哥'</span>, <span class="keyword">false</span>])-&gt;all(); <span class="comment">// 用 like 查询数据，生成 name LIKE '%腾哥'</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;andFilterWhere([<span class="string">'like'</span>, <span class="string">'name'</span>, <span class="string">'腾哥%'</span>, <span class="keyword">false</span>])-&gt;all(); <span class="comment">// 用 like 查询数据，生成 name LIKE '腾哥%'</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;one();    <span class="comment">// 返回一条数据；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;count();    <span class="comment">// 返回记录的数量；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;average();    <span class="comment">// 返回指定列的平均值；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;min();    <span class="comment">// 返回指定列的最小值 ；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;max();    <span class="comment">// 返回指定列的最大值 ；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;scalar();    <span class="comment">// 返回值的第一行第一列的查询结果；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;column();    <span class="comment">// 返回查询结果中的第一列的值；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;exists();    <span class="comment">// 返回一个值指示是否包含查询结果的数据行；</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;batch(<span class="number">10</span>);  <span class="comment">// 每次取 10 条数据</span></span><br><span class="line"> </span><br><span class="line">User::find()-&gt;each(<span class="number">10</span>);  <span class="comment">// 每次取 10 条数据， 迭代查询</span></span><br><span class="line"></span><br><span class="line">User::find()-&gt;indexBy(<span class="string">'id'</span>)-&gt;asArray()-&gt;all();    <span class="comment">// 返回所有数据数组并以ID字段为数组索引，其中ID必须是所查询的字段；</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="直接查询"><a href="#直接查询" class="headerlink" title="直接查询"></a>直接查询</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*createCommand(执行原生的SQL语句) */</span></span><br><span class="line">$sql = <span class="string">"SELECT u.account,i.* FROM user as u left join user_info as i on u.id=i.user_id"</span>; </span><br><span class="line">$rows = Yii::$app-&gt;db-&gt;createCommand($sql)-&gt;query(); </span><br><span class="line"><span class="comment">// 查询返回多行：</span></span><br><span class="line">$command = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT * FROM post'</span>); </span><br><span class="line">$posts = $command-&gt;queryAll();</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 返回单行</span></span><br><span class="line">$command = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT * FROM post WHERE id=1'</span>); </span><br><span class="line">$post = $command-&gt;queryOne();</span><br><span class="line">   </span><br><span class="line"><span class="comment">// 查询多行单值： </span></span><br><span class="line">$command = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT title FROM post'</span>); </span><br><span class="line">$titles = $command-&gt;queryColumn();</span><br><span class="line">   </span><br><span class="line"><span class="comment">// 查询标量值/计算值： </span></span><br><span class="line">$command = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT COUNT(*) FROM post'</span>); </span><br><span class="line">$postCount = $command-&gt;queryScalar();</span><br></pre></td></tr></table></figure><h2 id="参数绑定"><a href="#参数绑定" class="headerlink" title="参数绑定"></a>参数绑定</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$post = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT * FROM post WHERE id=:id AND status=:status'</span>)</span><br><span class="line">           -&gt;bindValue(<span class="string">':id'</span>, $_GET[<span class="string">'id'</span>])</span><br><span class="line">           -&gt;bindValue(<span class="string">':status'</span>, <span class="number">1</span>)</span><br><span class="line">           -&gt;queryOne();</span><br><span class="line"> </span><br><span class="line">$params = [<span class="string">':id'</span> =&gt; $_GET[<span class="string">'id'</span>], <span class="string">':status'</span> =&gt; <span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line">$post = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT * FROM post WHERE id=:id AND status=:status'</span>)</span><br><span class="line">           -&gt;bindValues($params)</span><br><span class="line">           -&gt;queryOne();</span><br><span class="line">            </span><br><span class="line">$post = Yii::$app-&gt;db-&gt;createCommand(<span class="string">'SELECT * FROM post WHERE id=:id AND status=:status'</span>, $params)</span><br></pre></td></tr></table></figure><h2 id="执行非查询语句"><a href="#执行非查询语句" class="headerlink" title="执行非查询语句"></a>执行非查询语句</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// INSERT (table name, column values)</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;insert(<span class="string">'user'</span>, [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'Sam'</span>,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="number">30</span>,</span><br><span class="line">])-&gt;execute();</span><br><span class="line"> </span><br><span class="line"><span class="comment">// UPDATE (table name, column values, condition)</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;update(<span class="string">'user'</span>, [<span class="string">'status'</span> =&gt; <span class="number">1</span>], <span class="string">'age &gt; 30'</span>)-&gt;execute();</span><br><span class="line"> </span><br><span class="line"><span class="comment">// DELETE (table name, condition)</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;delete(<span class="string">'user'</span>, <span class="string">'status = 0'</span>)-&gt;execute();</span><br><span class="line"> </span><br><span class="line"><span class="comment">// table name, column names, column values</span></span><br><span class="line">Yii::$app-&gt;db-&gt;createCommand()-&gt;batchInsert(<span class="string">'user'</span>, [<span class="string">'name'</span>, <span class="string">'age'</span>], [</span><br><span class="line">    [<span class="string">'Tom'</span>, <span class="number">30</span>],</span><br><span class="line">    [<span class="string">'Jane'</span>, <span class="number">20</span>],</span><br><span class="line">    [<span class="string">'Linda'</span>, <span class="number">25</span>],</span><br><span class="line">])-&gt;execute();</span><br></pre></td></tr></table></figure><h2 id="执行事务"><a href="#执行事务" class="headerlink" title="执行事务"></a>执行事务</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$db = Yii::$app-&gt;db;</span><br><span class="line">$transaction = $db-&gt;beginTransaction();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    $db-&gt;createCommand($sql1)-&gt;execute();</span><br><span class="line">    $db-&gt;createCommand($sql2)-&gt;execute();</span><br><span class="line">    <span class="comment">// ... executing other SQL statements ...</span></span><br><span class="line">     </span><br><span class="line">    $transaction-&gt;commit();</span><br><span class="line">     </span><br><span class="line">&#125; <span class="keyword">catch</span>(\<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line"> </span><br><span class="line">    $transaction-&gt;rollBack();</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">throw</span> $e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关联查询"><a href="#关联查询" class="headerlink" title="关联查询"></a>关联查询</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 客户表Model：CustomerModel</span></span><br><span class="line"><span class="comment"> * 订单表Model：OrdersModel</span></span><br><span class="line"><span class="comment"> * 国家表Model：CountrysModel</span></span><br><span class="line"><span class="comment"> * 首先要建立表与表之间的关系</span></span><br><span class="line"><span class="comment"> * 在CustomerModel中添加与订单的关系</span></span><br><span class="line"><span class="comment"> */</span>    </span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">CustomerModel</span> <span class="keyword">extends</span> \<span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">//客户和订单是一对多的关系所以用hasMany</span></span><br><span class="line">    <span class="comment">//此处OrdersModel在CustomerModel顶部别忘了加对应的命名空间</span></span><br><span class="line">    <span class="comment">//id对应的是OrdersModel的id字段，order_id对应CustomerModel的order_id字段</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getOrders</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(OrdersModel::className(), [<span class="string">'id'</span>=&gt;<span class="string">'order_id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">//客户和国家是一对一的关系所以用hasOne</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCountry</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(CountrysModel::className(), [<span class="string">'id'</span>=&gt;<span class="string">'Country_id'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">// 查询客户与他们的订单和国家</span></span><br><span class="line">CustomerModel::find()-&gt;with(<span class="string">'orders'</span>, <span class="string">'country'</span>)-&gt;all();</span><br><span class="line"><span class="comment">// 查询客户与他们的订单和订单的发货地址（注：orders 与 address都是关联关系）</span></span><br><span class="line">CustomerModel::find()-&gt;with(<span class="string">'orders.address'</span>)-&gt;all();</span><br><span class="line"><span class="comment">// 查询客户与他们的国家和状态为1的订单</span></span><br><span class="line">CustomerModel::find()-&gt;with([</span><br><span class="line">    <span class="string">'orders'</span> =&gt; <span class="function"><span class="keyword">function</span> <span class="params">($query)</span> </span>&#123;</span><br><span class="line">        $query-&gt;andWhere(<span class="string">'status = 1'</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'country'</span>,</span><br><span class="line">])-&gt;all();</span><br></pre></td></tr></table></figure><h2 id="查询条件不等于null-or-不能等空"><a href="#查询条件不等于null-or-不能等空" class="headerlink" title="查询条件不等于null or 不能等空"></a>查询条件不等于null or 不能等空</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$user = User::find()</span><br><span class="line">    -&gt;where([<span class="string">'age'</span> =&gt; $age])</span><br><span class="line">    -&gt;andFilterWhere([</span><br><span class="line">        <span class="string">'OR'</span>, </span><br><span class="line">        [<span class="string">'NOT'</span>, <span class="string">'avatar=""'</span>], </span><br><span class="line">        [<span class="string">'NOT'</span>, [<span class="string">'avatar'</span> =&gt; <span class="keyword">null</span>]]</span><br><span class="line">        ])</span><br><span class="line">    -&gt;one();</span><br></pre></td></tr></table></figure><h2 id="查询条件等于null-or-等空"><a href="#查询条件等于null-or-等空" class="headerlink" title="查询条件等于null or 等空"></a>查询条件等于null or 等空</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$user = User::find()</span><br><span class="line">    -&gt;where([<span class="string">'age'</span> =&gt; $age])</span><br><span class="line">    -&gt;andFilterWhere([</span><br><span class="line">        <span class="string">'OR'</span>, </span><br><span class="line">        [<span class="string">'='</span>, <span class="string">'avatar'</span>, <span class="string">''</span>],</span><br><span class="line">        [<span class="string">'IS'</span>, <span class="string">'avatar'</span>, <span class="keyword">new</span> \yii\db\Expression(<span class="string">'NULL'</span>)]</span><br><span class="line">        ])</span><br><span class="line">    -&gt;one();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基础查询&quot;&gt;&lt;a href=&quot;#基础查询&quot; class=&quot;headerlink&quot; title=&quot;基础查询&quot;&gt;&lt;/a&gt;基础查询&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;all();    &lt;span class=&quot;comment&quot;&gt;// 返回所有数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::findOne($id);   &lt;span class=&quot;comment&quot;&gt;// 返回 主键 id 为定值 的一条数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;select([&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;])-&amp;gt;one();      &lt;span class=&quot;comment&quot;&gt;// 返回 字段为id和name 的一条数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;select(&lt;span class=&quot;string&quot;&gt;&#39;id,name&#39;&lt;/span&gt;)-&amp;gt;one();      &lt;span class=&quot;comment&quot;&gt;// 返回 字段为id和name 的一条数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;select([&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;])-&amp;gt;all();      &lt;span class=&quot;comment&quot;&gt;// 返回 字段为id和name 的所有数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;where([&lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;18&#39;&lt;/span&gt;])-&amp;gt;one();      &lt;span class=&quot;comment&quot;&gt;// 返回 [&#39;age&#39; =&amp;gt; &#39;18&#39;] 的一条数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;where([&lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;18&#39;&lt;/span&gt;])-&amp;gt;one();   &lt;span class=&quot;comment&quot;&gt;// 返回 [&#39;age&#39; =&amp;gt; &#39;18&#39;] 的一条数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;where([&lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;18&#39;&lt;/span&gt;])-&amp;gt;all();   &lt;span class=&quot;comment&quot;&gt;// 返回 [&#39;age&#39; =&amp;gt; &#39;18&#39;] 的所有数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;where([&lt;span class=&quot;string&quot;&gt;&#39;in&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;18&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;19&#39;&lt;/span&gt;]])-&amp;gt;all();   &lt;span class=&quot;comment&quot;&gt;// 返回 age 在18和19 的所有数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;where([&lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt;=&amp;gt;[&lt;span class=&quot;string&quot;&gt;&#39;18&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;19&#39;&lt;/span&gt;]])-&amp;gt;all();   &lt;span class=&quot;comment&quot;&gt;// 返回 age 在18和19 的所有数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;orderBy(&lt;span class=&quot;string&quot;&gt;&#39;id DESC&#39;&lt;/span&gt;)-&amp;gt;all();   &lt;span class=&quot;comment&quot;&gt;// 排序查询, DESC:降序,ASC:升序；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;groupBy(&lt;span class=&quot;string&quot;&gt;&#39;type&#39;&lt;/span&gt;)-&amp;gt;all();   &lt;span class=&quot;comment&quot;&gt;// 根据 type 分组查询 的所有数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::findBySql(&lt;span class=&quot;string&quot;&gt;&#39;SELECT * FROM user&#39;&lt;/span&gt;)-&amp;gt;all();  &lt;span class=&quot;comment&quot;&gt;// 用 sql 语句查询 user 表里面的所有数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::findBySql(&lt;span class=&quot;string&quot;&gt;&#39;SELECT * FROM user&#39;&lt;/span&gt;)-&amp;gt;one();  &lt;span class=&quot;comment&quot;&gt;// 用 sql  语句查询 user 表里面的一条数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;andWhere([&lt;span class=&quot;string&quot;&gt;&#39;sex&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;男&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;24&#39;&lt;/span&gt;])-&amp;gt;count(&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;);   &lt;span class=&quot;comment&quot;&gt;// 统计符合条件的总条数；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;andFilterWhere([&lt;span class=&quot;string&quot;&gt;&#39;like&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;腾哥&#39;&lt;/span&gt;])-&amp;gt;all(); &lt;span class=&quot;comment&quot;&gt;// 用 like 查询数据，生成 name LIKE &#39;%腾哥%&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;andFilterWhere([&lt;span class=&quot;string&quot;&gt;&#39;like&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;%腾哥&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;])-&amp;gt;all(); &lt;span class=&quot;comment&quot;&gt;// 用 like 查询数据，生成 name LIKE &#39;%腾哥&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;andFilterWhere([&lt;span class=&quot;string&quot;&gt;&#39;like&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;腾哥%&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;])-&amp;gt;all(); &lt;span class=&quot;comment&quot;&gt;// 用 like 查询数据，生成 name LIKE &#39;腾哥%&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;one();    &lt;span class=&quot;comment&quot;&gt;// 返回一条数据；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;count();    &lt;span class=&quot;comment&quot;&gt;// 返回记录的数量；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;average();    &lt;span class=&quot;comment&quot;&gt;// 返回指定列的平均值；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;min();    &lt;span class=&quot;comment&quot;&gt;// 返回指定列的最小值 ；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;max();    &lt;span class=&quot;comment&quot;&gt;// 返回指定列的最大值 ；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;scalar();    &lt;span class=&quot;comment&quot;&gt;// 返回值的第一行第一列的查询结果；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;column();    &lt;span class=&quot;comment&quot;&gt;// 返回查询结果中的第一列的值；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;exists();    &lt;span class=&quot;comment&quot;&gt;// 返回一个值指示是否包含查询结果的数据行；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;batch(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// 每次取 10 条数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;each(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// 每次取 10 条数据， 迭代查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User::find()-&amp;gt;indexBy(&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;)-&amp;gt;asArray()-&amp;gt;all();    &lt;span class=&quot;comment&quot;&gt;// 返回所有数据数组并以ID字段为数组索引，其中ID必须是所查询的字段；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>使用Git替代由FTP上传更新代码</title>
    <link href="https://xinyufeng.net/2021/09/30/%E4%BD%BF%E7%94%A8Git%E6%9B%BF%E4%BB%A3%E7%94%B1FTP%E4%B8%8A%E4%BC%A0%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81/"/>
    <id>https://xinyufeng.net/2021/09/30/使用Git替代由FTP上传更新代码/</id>
    <published>2021-09-30T07:06:17.000Z</published>
    <updated>2021-09-30T07:20:14.284Z</updated>
    
    <content type="html"><![CDATA[<p>单位以前服务器代码更新使用的是FTP上传，这样无法保证服务器代码和仓库代码保持一致，忍不了了，果断改成git拉取</p><p>第一步，有代码的管理仓库</p><p>第二步，拉取服务器的代码到本地，然后再提交到代码仓库，保持当前服务器和代码库文件和文件内容一致</p><p>第三步，在服务器上安装git，并生成公钥</p><p>第四步，把服务器的公钥配置到代码库的部署公钥管理中</p><p>第五步，在服务器上代码根目录初始化git</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost project]<span class="comment"># git init</span></span><br><span class="line">Initialized empty Git repository <span class="keyword">in</span> /data/www/html/project/.git/</span><br></pre></td></tr></table></figure><p>第六步，添加远程代码库地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost project]<span class="comment"># git remote add origin git@gitee.com:xxxxx/project.git</span></span><br></pre></td></tr></table></figure><p>第七步，拉取代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost project]<span class="comment"># git pull</span></span><br><span class="line">remote: Enumerating objects: 894, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (894/894), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (824/824), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 4211 (delta 380), reused 370 (delta 55), pack-reused 3317</span><br><span class="line">Receiving objects: 100% (4211/4211), 42.83 MiB | 9.86 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (1953/1953), <span class="keyword">done</span>.</span><br><span class="line">From gitee.com:xxxxx/project</span><br><span class="line"> * [new branch]      master     -&gt; origin/master</span><br><span class="line">You asked me to pull without telling me <span class="built_in">which</span> branch you</span><br><span class="line">want to merge with, and <span class="string">'branch.master.merge'</span> <span class="keyword">in</span></span><br><span class="line">your configuration file does not tell me, either. Please</span><br><span class="line">specify <span class="built_in">which</span> branch you want to use on the <span class="built_in">command</span> line and</span><br><span class="line">try again (e.g. <span class="string">'git pull &lt;repository&gt; &lt;refspec&gt;'</span>).</span><br><span class="line">See git-pull(1) <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">If you often merge with the same branch, you may want to</span><br><span class="line">use something like the following <span class="keyword">in</span> your configuration file:</span><br><span class="line"></span><br><span class="line">    [branch <span class="string">"master"</span>]</span><br><span class="line">    remote = &lt;nickname&gt;</span><br><span class="line">    merge = &lt;remote-ref&gt;</span><br><span class="line"></span><br><span class="line">    [remote <span class="string">"&lt;nickname&gt;"</span>]</span><br><span class="line">    url = &lt;url&gt;</span><br><span class="line">    fetch = &lt;refspec&gt;</span><br><span class="line"></span><br><span class="line">See git-config(1) <span class="keyword">for</span> details.</span><br><span class="line">You have new mail <span class="keyword">in</span> /var/spool/mail/root</span><br></pre></td></tr></table></figure><p>第八步，本地关联远程分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost project]<span class="comment"># git branch --set-upstream master origin/master</span></span><br><span class="line">Branch master <span class="built_in">set</span> up to track remote branch master from origin.</span><br></pre></td></tr></table></figure><p>这样就可以了，然后在执行 <code>git pull</code> 看一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost project]<span class="comment"># git pull</span></span><br><span class="line">Already up-to-date.</span><br></pre></td></tr></table></figure><p>更新已完成，这样更新代码是不是很爽呢O(∩_∩)O哈哈~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单位以前服务器代码更新使用的是FTP上传，这样无法保证服务器代码和仓库代码保持一致，忍不了了，果断改成git拉取&lt;/p&gt;
&lt;p&gt;第一步，有代码的管理仓库&lt;/p&gt;
&lt;p&gt;第二步，拉取服务器的代码到本地，然后再提交到代码仓库，保持当前服务器和代码库文件和文件内容一致&lt;/p&gt;
&lt;p&gt;第三步，在服务器上安装git，并生成公钥&lt;/p&gt;
&lt;p&gt;第四步，把服务器的公钥配置到代码库的部署公钥管理中&lt;/p&gt;
&lt;p&gt;第五步，在服务器上代码根目录初始化git&lt;/p&gt;
    
    </summary>
    
      <category term="版本管理" scheme="https://xinyufeng.net/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Git" scheme="https://xinyufeng.net/tags/Git/"/>
    
      <category term="FTP" scheme="https://xinyufeng.net/tags/FTP/"/>
    
  </entry>
  
  <entry>
    <title>Yii2.0框架模型添加/修改/删除数据操作示例</title>
    <link href="https://xinyufeng.net/2021/09/15/Yii2-0%E6%A1%86%E6%9E%B6%E6%A8%A1%E5%9E%8B%E6%B7%BB%E5%8A%A0-%E4%BF%AE%E6%94%B9-%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B/"/>
    <id>https://xinyufeng.net/2021/09/15/Yii2-0框架模型添加-修改-删除数据操作示例/</id>
    <published>2021-09-15T07:40:18.000Z</published>
    <updated>2022-01-05T05:59:24.245Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这篇文章主要介绍了Yii2.0框架模型添加/修改/删除数据操作,结合实例形式分析了Yii2.0使用模型操作数据的添加、修改、删除相关实现技巧,需要的朋友可以参考下</p></blockquote><p>以下实例以模型 User 为例：</p><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><ol><li>new一个模型</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$user = <span class="keyword">new</span> User();</span><br></pre></td></tr></table></figure><a id="more"></a><ol start="2"><li>模型属性赋值</li></ol><p>方式一</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$user-&gt;name = <span class="string">'Peak'</span>;</span><br><span class="line">$user-&gt;age = <span class="string">'18'</span>;</span><br></pre></td></tr></table></figure><p>方式二</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$data = [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'Peak'</span>,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="number">18</span></span><br><span class="line">];</span><br><span class="line">$user-&gt;attributes = $data;</span><br></pre></td></tr></table></figure><p>方式三</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$data = [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'Peak'</span>,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="number">18</span></span><br><span class="line">];</span><br><span class="line">$user-&gt;setAttributes($data);</span><br></pre></td></tr></table></figure><p>方式四</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$data = [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'Peak'</span>,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="number">18</span></span><br><span class="line">];</span><br><span class="line">$user-&gt;load($data, <span class="string">''</span>);</span><br><span class="line"><span class="keyword">if</span> ($user-&gt;validate()) &#123;<span class="comment">// 数据校验</span></span><br><span class="line">    $user-&gt;save();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>数据保存</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$user-&gt;save();<span class="comment">// 添加数据</span></span><br><span class="line">$user-&gt;insert();<span class="comment">// 添加数据</span></span><br><span class="line">$id = $user-&gt;attributes[<span class="string">'id'</span>];<span class="comment">// 获取当前添加数据后的自增id</span></span><br></pre></td></tr></table></figure><p><strong>Tip</strong></p><p>对<code>load()</code>方法解读：</p><p>通过查看<code>load()</code>方法可知，<code>load()</code>方法有两个参数，第一个参数 <code>$data</code> 是要填充的数据，第二个参数 <code>$formName</code> 是选择指定的模型</p><p>如果第二个参数不传，<code>$formName</code> 会默认为<code>null</code>，会默认取当前模型<code>$this-&gt;formName()</code></p><p>如果指定了模型，会将模型名称作为<code>key</code>值，通过 <code>$data[$formName]</code> 取值，也就是这时候应该传的 <code>$data</code> 格式是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$data = [</span><br><span class="line">    <span class="string">'User'</span> =&gt; [</span><br><span class="line">        <span class="string">'name'</span> =&gt; <span class="string">'Peak'</span>,</span><br><span class="line">        <span class="string">'age'</span> =&gt; <span class="number">18</span></span><br><span class="line">    ]</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>如果 $formName 传空字符串，则 $data 传递参数格式为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$data = [</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'Peak'</span>,</span><br><span class="line">    <span class="string">'age'</span> =&gt; <span class="number">18</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><p>方法一</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$user = $User::findOne($id);</span><br><span class="line">$user-&gt;name = <span class="string">'Peak2'</span>;</span><br><span class="line">$data = $user-&gt;update();<span class="comment">// 修改</span></span><br><span class="line">$data = $user-&gt;save();<span class="comment">// 修改</span></span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将值进行 累加 或者 累减</span></span><br><span class="line"><span class="comment">// $count = 1, 就是加一</span></span><br><span class="line"><span class="comment">// $count = -1, 就是减一</span></span><br><span class="line">$data = Uesr::updateAllCounters([<span class="string">'sort'</span> =&gt; $count], [<span class="string">'id'</span> =&gt; $id]);<span class="comment">// 参数1为要修改的字段，参数2为修改条件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数都是固定值</span></span><br></pre></td></tr></table></figure><p>方法三</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数都是固定值</span></span><br><span class="line">Uesr::updateAll([<span class="string">'status'</span> =&gt; <span class="number">1</span>],[<span class="string">'status'</span> =&gt; <span class="number">0</span>,<span class="string">'flag'</span> =&gt; <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数有范围值</span></span><br><span class="line">Uesr::updateAll([<span class="string">'status'</span> =&gt; <span class="number">1</span>],[<span class="string">'and'</span>, [<span class="string">'status'</span> =&gt; <span class="number">0</span>],[<span class="string">'&lt;&gt;'</span>, <span class="string">'flag'</span>, <span class="number">1</span>]]);</span><br></pre></td></tr></table></figure><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p>方法一</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除数据</span></span><br><span class="line">$user = User::find()-&gt;where([<span class="string">'id'</span> =&gt; <span class="number">1</span>])-&gt;one();<span class="comment">// 获取id为1的数据</span></span><br><span class="line">$user-&gt;delete();<span class="comment">//删除数据</span></span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$uer = User::find()-&gt;where([<span class="string">'id'</span> =&gt; <span class="number">2</span>])-&gt;all();<span class="comment">// 获取id为2的数据</span></span><br><span class="line">$data = $user[<span class="number">0</span>]-&gt;delete();<span class="comment">//删除数据</span></span><br></pre></td></tr></table></figure><p>方法三</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$user = User::deleteAll(<span class="string">'id=2'</span>);<span class="comment">//删除id为2的数据</span></span><br></pre></td></tr></table></figure><p>方法四</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多个条件删除</span></span><br><span class="line">$data = User::deleteAll(<span class="string">'id&gt;:id AND num&lt;:num'</span>, [<span class="string">':id'</span> =&gt; <span class="number">2</span>,<span class="string">':num'</span> =&gt; <span class="number">100</span>]);</span><br></pre></td></tr></table></figure><p>方法五</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除所有数据</span></span><br><span class="line">$user = User::deleteAll();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这篇文章主要介绍了Yii2.0框架模型添加/修改/删除数据操作,结合实例形式分析了Yii2.0使用模型操作数据的添加、修改、删除相关实现技巧,需要的朋友可以参考下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下实例以模型 User 为例：&lt;/p&gt;
&lt;h2 id=&quot;添加数据&quot;&gt;&lt;a href=&quot;#添加数据&quot; class=&quot;headerlink&quot; title=&quot;添加数据&quot;&gt;&lt;/a&gt;添加数据&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;new一个模型&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$user = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>2021-08-13之后 Github新安全提交措施处理</title>
    <link href="https://xinyufeng.net/2021/09/01/2021-08-13%E4%B9%8B%E5%90%8E-Github%E6%96%B0%E5%AE%89%E5%85%A8%E6%8F%90%E4%BA%A4%E6%8E%AA%E6%96%BD%E5%A4%84%E7%90%86/"/>
    <id>https://xinyufeng.net/2021/09/01/2021-08-13之后-Github新安全提交措施处理/</id>
    <published>2021-09-01T07:29:37.000Z</published>
    <updated>2021-09-15T07:39:12.900Z</updated>
    
    <content type="html"><![CDATA[<p>往GitHub仓库 <code>push</code> 代码时，一直报如下错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.</span><br><span class="line">remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.</span><br><span class="line">fatal: unable to access &apos;https://github.com/&lt;user&gt;/&lt;repo&gt;/&apos;: The requested URL returned error: 403</span><br></pre></td></tr></table></figure><p>原来在2021年8月13日之后，如果你还用账户密码来操作 Github 上的仓库，就会收到以上警告</p><p>现在提交GitHub仓库代码必须使用个人访问令牌（personal access token），就是把你的密码替换成token</p><p>至于为什么要改成使用token，肯定是为了安全角度考虑，具体说明参考官网文档<a href="https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations" target="_blank" rel="noopener">https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations</a></p><a id="more"></a><p>获取Token步骤</p><ol><li><p>在个人设置页面找到<a href="https://github.com/settings/profile" target="_blank" rel="noopener">Settings</a></p></li><li><p>选择开发者设置<a href="https://github.com/settings/apps" target="_blank" rel="noopener">Developer setting</a></p></li><li><p>选择个人访问令牌<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">Personal access tokens</a>，然后选中生成令牌「Generate new token」</p></li><li><p>设置<code>token</code>的有效期，访问权限等</p><ul><li>选择要授予此令牌<code>token</code>的范围或权限</li><li>要使用<code>token</code>从命令行访问仓库，请选择repo</li><li>要使用<code>token</code>从命令行删除仓库，请选择<code>delete_repo</code></li><li>其他根据需要进行勾选</li></ul></li><li><p>生成令牌 「Generate token」</p></li></ol><blockquote><p>注意：记得把你的<code>token</code>保存下来，因为你再次刷新网页的时候，你已经没有办法看到它了。</p></blockquote><ol start="6"><li>之后用自己生成的<code>token</code>登录，把上面生成的<code>token</code>粘贴到输入密码的位置，然后成功<code>push</code>代码</li></ol><p>也可以 把<code>token</code>直接添加远程仓库链接中，这样就可以避免同一个仓库每次提交代码都要输入<code>token</code>了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin https://&lt;your_token&gt;@github.com/&lt;USERNAME&gt;/&lt;REPO&gt;.git</span><br></pre></td></tr></table></figure><p><code>&lt;your_token&gt;</code>：换成你自己得到的token<br><code>&lt;USERNAME&gt;</code>：是你自己github的用户名<br><code>&lt;REPO&gt;</code>：是你的仓库名称 </p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin https://ghp_xxxxxxx@github.com/username/pero.git</span><br></pre></td></tr></table></figure><p>这样再使用终端 <code>git push</code> 就成功啦</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;往GitHub仓库 &lt;code&gt;push&lt;/code&gt; 代码时，一直报如下错误&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fatal: unable to access &amp;apos;https://github.com/&amp;lt;user&amp;gt;/&amp;lt;repo&amp;gt;/&amp;apos;: The requested URL returned error: 403&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原来在2021年8月13日之后，如果你还用账户密码来操作 Github 上的仓库，就会收到以上警告&lt;/p&gt;
&lt;p&gt;现在提交GitHub仓库代码必须使用个人访问令牌（personal access token），就是把你的密码替换成token&lt;/p&gt;
&lt;p&gt;至于为什么要改成使用token，肯定是为了安全角度考虑，具体说明参考官网文档&lt;a href=&quot;https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="版本管理" scheme="https://xinyufeng.net/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="GitHub" scheme="https://xinyufeng.net/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>视频地址加密——blob:http 地址的原理及生成方法</title>
    <link href="https://xinyufeng.net/2021/09/01/%E8%A7%86%E9%A2%91%E5%9C%B0%E5%9D%80%E5%8A%A0%E5%AF%86%E2%80%94%E2%80%94blob-http-%E5%9C%B0%E5%9D%80%E7%9A%84%E5%8E%9F%E7%90%86%E5%8F%8A%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/"/>
    <id>https://xinyufeng.net/2021/09/01/视频地址加密——blob-http-地址的原理及生成方法/</id>
    <published>2021-09-01T05:41:38.000Z</published>
    <updated>2021-09-01T06:11:27.553Z</updated>
    
    <content type="html"><![CDATA[<p>我们观看视频网站的时候，发现<code>video</code>标签中的<code>src</code>属性值为<code>blob:http</code>，并不是视频的链接地址。</p><p><code>blob</code>是H5的<code>Blob</code>对象数据，具体请看<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Blob" target="_blank" rel="noopener">文档</a>，我们可以使用<code>Blob</code>对象隐藏真实的资源路径，在一定程度上可以起数据的加密作用，更多的是为了干扰爬虫。</p><p>比如日常使用的一些音频，视频，图片，我们都可以使用其 <code>Blob</code> 二进制数据流来表征数据，而非使用 <code>uri</code>，就像经常用到的 <code>image</code> <code>src</code> 的 <code>dataUrl</code>。</p><p><strong>要使用 blob 来表征数据资源，需做到以下两点：</strong></p><a id="more"></a><ol><li>服务端返回的为资源的二进制数据</li><li>前端接收到二进制数据后，使用 URL.createObjectURL(blobData) 方法将服务端返回的二进制数据转换为 <code>blob</code> 的 <code>url</code> 资源挂载到相应的资源对象</li></ol><p><strong>实例：</strong></p><p>对 <code>video.mp4</code> 资源加密，不使用静态 <code>url</code> 进行加载，使用 <code>blob</code> <code>url</code> 进行加密。</p><p>服务端 blob.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回二进制流数据</span></span><br><span class="line">$file_path = <span class="string">'D://video.mp4'</span>;<span class="comment">// 文件地址</span></span><br><span class="line">$file_size = filesize($file_path);<span class="comment">// 文件大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*建议使用 file_get_contents() 读取文件内容，性能比 fread() 好*/</span></span><br><span class="line"><span class="comment">//$oct_data = fread(fopen($file_path, "r"), $file_size);// 读取文件内容</span></span><br><span class="line">$oct_data = file_get_contents($file_path);<span class="comment">// 读取文件内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line">header(<span class="string">"Content-type: video/mpeg4;charset=UTF-8"</span>);</span><br><span class="line">header(<span class="string">"Content-Length: "</span> . $file_size);</span><br><span class="line"><span class="keyword">echo</span> $oct_data;</span><br></pre></td></tr></table></figure><p>前端 video.html</p><p>源生写法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Blob Url<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"video"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//创建XMLHttpRequest对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">    <span class="comment">//配置请求方式、请求地址以及是否同步</span></span></span><br><span class="line"><span class="javascript">    xhr.open(<span class="string">'POST'</span>, <span class="string">'/blob.php'</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//设置请求结果类型为blob</span></span></span><br><span class="line"><span class="javascript">    xhr.responseType = <span class="string">'blob'</span>;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//请求成功回调函数</span></span></span><br><span class="line"><span class="javascript">    xhr.onload = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="keyword">this</span>.status == <span class="number">200</span>) &#123;<span class="comment">//请求成功</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//获取blob对象</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> blob = <span class="keyword">this</span>.response;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//获取blob对象地址，并把值赋给容器</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"video"</span>).src = URL.createObjectURL(blob);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">    xhr.send();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JQuery ajax写法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Blob Url<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"video"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcdn.net/ajax/libs/jquery/3.1.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">        type: <span class="string">"POST"</span>,</span></span><br><span class="line"><span class="javascript">        url: <span class="string">'/blob.php'</span>,</span></span><br><span class="line"><span class="javascript">        xhr: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">          xhr.responseType = <span class="string">'blob'</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> xhr;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#video'</span>).attr(<span class="string">'src'</span>, URL.createObjectURL(data));</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">'error'</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"video"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">src</span>=<span class="string">"blob:http://localhost/a55765bd-d3e8-4a05-a424-aea7b4ff6cc7"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样真是的视频资源静态地址就可以被隐藏掉了。</p><p>我们只是实例讲解下如何生成 blob 资源地址，生产中是很少会将一个资源以二进制流的方式返回给前端进行 Blob “加密”的，因为服务端需要将相应的资源打开读取，会消耗对应的内存，比如一个视频如果50M，那我们服务端返回其二进制数据时，就要消耗 50M 的服务器内存将文件载入，然后返回给前端，这代价略大，而且网络传输相应速度也不允许，如果返回个 500M 的二进制数据，估计就会有很大的卡顿了。</p><p>生产场景往往是对切片格式的视频 m3u8 地址进行 blob 格式处理，其实并不是为了加密，因为浏览器还是会解析 blob 并去 get 请求对应的 m3u8 地址，使用 blob uri 的好处在于可以在一定层度上干扰爬虫。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们观看视频网站的时候，发现&lt;code&gt;video&lt;/code&gt;标签中的&lt;code&gt;src&lt;/code&gt;属性值为&lt;code&gt;blob:http&lt;/code&gt;，并不是视频的链接地址。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;blob&lt;/code&gt;是H5的&lt;code&gt;Blob&lt;/code&gt;对象数据，具体请看&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Blob&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文档&lt;/a&gt;，我们可以使用&lt;code&gt;Blob&lt;/code&gt;对象隐藏真实的资源路径，在一定程度上可以起数据的加密作用，更多的是为了干扰爬虫。&lt;/p&gt;
&lt;p&gt;比如日常使用的一些音频，视频，图片，我们都可以使用其 &lt;code&gt;Blob&lt;/code&gt; 二进制数据流来表征数据，而非使用 &lt;code&gt;uri&lt;/code&gt;，就像经常用到的 &lt;code&gt;image&lt;/code&gt; &lt;code&gt;src&lt;/code&gt; 的 &lt;code&gt;dataUrl&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要使用 blob 来表征数据资源，需做到以下两点：&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端开发" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="JavaScript" scheme="https://xinyufeng.net/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/JavaScript/"/>
    
    
      <category term="Blob" scheme="https://xinyufeng.net/tags/Blob/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 数据库保留最近7天数据备份</title>
    <link href="https://xinyufeng.net/2021/08/05/MySQL-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%9D%E7%95%99%E6%9C%80%E8%BF%917%E5%A4%A9%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/"/>
    <id>https://xinyufeng.net/2021/08/05/MySQL-数据库保留最近7天数据备份/</id>
    <published>2021-08-05T07:45:18.000Z</published>
    <updated>2021-08-05T08:07:30.318Z</updated>
    
    <content type="html"><![CDATA[<p>为了防止数据丢失，我们会对数据库进行备份，下面介绍在Linux系统下如何定时备份数据库并保留最近7天的数据备份</p><p>参数准备：</p><ul><li>host:<code>127.0.0.1</code></li><li>数据库用户名:<code>root</code></li><li>数据库密码:<code>123456</code></li><li>数据库名称:<code>test</code></li><li>数据库备份目录：<code>/sqlbackup</code></li><li>数据库备份格式：<code>test_年月日_时分秒.sql</code></li></ul><p>首先写一个命令脚本 <code>data_backup.sh</code></p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"><span class="comment"># 数据库备份</span></span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除七天前的数据备份</span></span><br><span class="line">find /sqlbackup -mtime +7 -name <span class="string">"test*.sql"</span> -<span class="built_in">exec</span> rm &#123;&#125; \;</span><br><span class="line"><span class="comment"># 数据库备份</span></span><br><span class="line">/usr/<span class="built_in">local</span>/mysql/bin/mysqldump  -h127.0.0.1 -uroot -p123456 <span class="built_in">test</span>  &gt; /sqlbackup/test_$(date +%Y%m%d_%H%M%S).sql</span><br></pre></td></tr></table></figure><p>脚步我们暂时放在<code>/</code>目录</p><p>然后写定时任务</p><p>如果是用root用户执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br></pre></td></tr></table></figure><p>如果是用www用户执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -uwww -e</span></span><br></pre></td></tr></table></figure><p>每天凌晨0点执行一次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 * * * /data_backup.sh &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了防止数据丢失，我们会对数据库进行备份，下面介绍在Linux系统下如何定时备份数据库并保留最近7天的数据备份&lt;/p&gt;
&lt;p&gt;参数准备：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;host:&lt;code&gt;127.0.0.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;数据库用户名:&lt;code&gt;root&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;数据库密码:&lt;code&gt;123456&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;数据库名称:&lt;code&gt;test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;数据库备份目录：&lt;code&gt;/sqlbackup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;数据库备份格式：&lt;code&gt;test_年月日_时分秒.sql&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先写一个命令脚本 &lt;code&gt;data_backup.sh&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL语句" scheme="https://xinyufeng.net/tags/MySQL%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>Linux服务器性能查看常用命令</title>
    <link href="https://xinyufeng.net/2021/08/03/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E6%9F%A5%E7%9C%8B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://xinyufeng.net/2021/08/03/Linux服务器性能查看常用命令/</id>
    <published>2021-08-03T06:43:41.000Z</published>
    <updated>2021-08-03T06:59:57.707Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实时显示系统中各个进程的资源占用状况"><a href="#实时显示系统中各个进程的资源占用状况" class="headerlink" title="实时显示系统中各个进程的资源占用状况"></a>实时显示系统中各个进程的资源占用状况</h2><p>top命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器</p><p><a href="https://www.runoob.com/linux/linux-comm-top.html" target="_blank" rel="noopener">详情</a></p><a id="more"></a><h2 id="显示系统内存的使用情况"><a href="#显示系统内存的使用情况" class="headerlink" title="显示系统内存的使用情况"></a>显示系统内存的使用情况</h2><p>free 命令显示系统内存的使用情况，包括物理内存、交换内存(swap)和内核缓冲区内存</p><p><a href="https://www.runoob.com/linux/linux-comm-free.html" target="_blank" rel="noopener">详情</a></p><h2 id="显示目前文件系统磁盘使用情况统计"><a href="#显示目前文件系统磁盘使用情况统计" class="headerlink" title="显示目前文件系统磁盘使用情况统计"></a>显示目前文件系统磁盘使用情况统计</h2><p>Linux df（英文全拼：disk free） 命令用于显示目前在 Linux 系统上的文件系统磁盘使用情况统计。</p><p><a href="https://www.runoob.com/linux/linux-comm-df.html" target="_blank" rel="noopener">详情</a></p><h2 id="展现给定时间间隔的服务器的状态值"><a href="#展现给定时间间隔的服务器的状态值" class="headerlink" title="展现给定时间间隔的服务器的状态值"></a>展现给定时间间隔的服务器的状态值</h2><p>vmstat命令是最常见的Linux/Unix监控工具，可以展现给定时间间隔的服务器的状态值,包括服务器的CPU使用率，内存使用，虚拟内存交换情况,IO读写情况。</p><h2 id="获取主机运行时间和查询系统负载信息"><a href="#获取主机运行时间和查询系统负载信息" class="headerlink" title="获取主机运行时间和查询系统负载信息"></a>获取主机运行时间和查询系统负载信息</h2><p>uptime命令主要用于获取主机运行时间和查询linux系统负载等信息</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;实时显示系统中各个进程的资源占用状况&quot;&gt;&lt;a href=&quot;#实时显示系统中各个进程的资源占用状况&quot; class=&quot;headerlink&quot; title=&quot;实时显示系统中各个进程的资源占用状况&quot;&gt;&lt;/a&gt;实时显示系统中各个进程的资源占用状况&lt;/h2&gt;&lt;p&gt;top命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.runoob.com/linux/linux-comm-top.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;详情&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="运维" scheme="https://xinyufeng.net/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux命令" scheme="https://xinyufeng.net/tags/Linux%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP 数据库无法连接 Could not connect: No such file or directory</title>
    <link href="https://xinyufeng.net/2021/08/03/ThinkPHP-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5-Could-not-connect-No-such-file-or-directory/"/>
    <id>https://xinyufeng.net/2021/08/03/ThinkPHP-数据库无法连接-Could-not-connect-No-such-file-or-directory/</id>
    <published>2021-08-03T06:33:08.000Z</published>
    <updated>2021-08-03T06:40:37.973Z</updated>
    
    <content type="html"><![CDATA[<p>使用ThinkPHP框架数据库无法连接，报错<code>Could not connect: No such file or directory</code>，原因是<code>/tmp/</code>目录下没有<code>mysql.sock</code>文件。</p><p>解决方法：</p><p>先找到mysql的<code>mysql.sock</code>文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find / -name mysql.sock</span></span><br><span class="line">/var/lib/mysql/mysql.sock</span><br></pre></td></tr></table></figure></p><p>创建软连接<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用ThinkPHP框架数据库无法连接，报错&lt;code&gt;Could not connect: No such file or directory&lt;/code&gt;，原因是&lt;code&gt;/tmp/&lt;/code&gt;目录下没有&lt;code&gt;mysql.sock&lt;/code&gt;文件。&lt;/p&gt;

      
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="ThinkPHP" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/ThinkPHP/"/>
    
    
      <category term="数据库操作" scheme="https://xinyufeng.net/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>解决PHP报错 cURL error 60: SSL certificate problem: unable to get local issuer certifica</title>
    <link href="https://xinyufeng.net/2021/07/29/%E8%A7%A3%E5%86%B3PHP%E6%8A%A5%E9%94%99-cURL-error-60-SSL-certificate-problem-unable-to-get-local-issuer-certifica/"/>
    <id>https://xinyufeng.net/2021/07/29/解决PHP报错-cURL-error-60-SSL-certificate-problem-unable-to-get-local-issuer-certifica/</id>
    <published>2021-07-29T07:11:15.000Z</published>
    <updated>2021-07-29T07:22:32.064Z</updated>
    
    <content type="html"><![CDATA[<p>PHP程序在调用<code>https</code>链接时报错”cURL error 60: SSL certificate problem: unable to get local issuer<br>  certifica”，这是因为没有配置信任的服务器HTTPS验证。默认情况下，cURL被设为不信任任何CAS，因此浏览器无法通过HTTPS访问你服务器</p><p>解决方法：</p><a id="more"></a><p>下载cacert.pem文件</p><p><a href="https://curl.se/docs/caextract.html" target="_blank" rel="noopener">https://curl.se/docs/caextract.html</a></p><p>下载后的文件放到php的<code>extras/ssl</code>目录下</p><p>我这里是Windows系统PHPStudy集成工具</p><p><code>D:\phpstudy_pro\Extensions\php\php7.2.9nts\extras\ssl</code></p><p>修改php.ini</p><p><code>D:\phpstudy_pro\Extensions\php\php7.2.9nts\php.ini</code></p><p>添加或修改</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"><span class="comment">; php.ini Options  ;</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">curl.cainfo</span> = <span class="string">"D:\phpstudy_pro\Extensions\php\php7.2.9nts\extras\ssl\cacert.pem"</span></span><br></pre></td></tr></table></figure><p>且需要打开<code>php_openssl</code>扩展</p><p>重启环境</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP程序在调用&lt;code&gt;https&lt;/code&gt;链接时报错”cURL error 60: SSL certificate problem: unable to get local issuer&lt;br&gt;  certifica”，这是因为没有配置信任的服务器HTTPS验证。默认情况下，cURL被设为不信任任何CAS，因此浏览器无法通过HTTPS访问你服务器&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
    
    </summary>
    
      <category term="后端开发" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="PHP" scheme="https://xinyufeng.net/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/PHP/"/>
    
    
      <category term="PHP报错" scheme="https://xinyufeng.net/tags/PHP%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>Yii2 form 表单用法</title>
    <link href="https://xinyufeng.net/2021/06/23/Yii2-form-%E8%A1%A8%E5%8D%95%E7%94%A8%E6%B3%95/"/>
    <id>https://xinyufeng.net/2021/06/23/Yii2-form-表单用法/</id>
    <published>2021-06-23T00:44:01.000Z</published>
    <updated>2021-10-21T00:14:14.355Z</updated>
    
    <content type="html"><![CDATA[<h2 id="表单的创建"><a href="#表单的创建" class="headerlink" title="表单的创建"></a>表单的创建</h2><ul><li>在Yii中主要通过 <code>yii\widgets\ActiveForm</code>类来创建表单</li><li><code>ActiveForm::begin()</code>不仅创建了一个表单实例，同时也标志着表单的开始</li><li>放在 <code>ActiveForm::begin()</code> 和 <code>ActiveForm::end()</code> 之间的所有内容都被包裹在 <code>html</code> 的 <code>form</code> 标签中</li><li>中间是通过调用 <code>ActiveForm::field()</code> 方法来创建一个 <code>ActiveForm</code> 实例，这个实例会创建表单元素与元素的标签，以及对应的 <code>js</code> 验证</li><li><code>ActiveField</code> 有一个对应的模型和属性， <code>input</code> 输入框的 <code>name</code> 属性会自动的根据属性名来创建，同时，还会用属性的验证规则来验证用户输入的数据</li></ul><p><strong>e.g.</strong></p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $form = ActiveForm::begin(); <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'name'</span>)-&gt;textInput([<span class="string">'autofocus'</span> =&gt; <span class="keyword">true</span>]) <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> ActiveForm::end(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解析后的标签为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"w0"</span> <span class="attr">action</span>=<span class="string">"/xx/xx/xx"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"contactform-name"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"ContactForm[name]"</span> <span class="attr">autofocus</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>还会自动添加 <code>js</code> 验证，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">jQuery(<span class="string">'#contactform-name'</span>).yiiActiveForm([&#123;</span><br><span class="line">　　<span class="string">"id"</span> : <span class="string">"contactform-name"</span>,</span><br><span class="line">　　<span class="string">"name"</span> : <span class="string">"name"</span>,</span><br><span class="line">　　<span class="string">"container"</span> : <span class="string">".field-contactform-name"</span>,</span><br><span class="line">　　<span class="string">"input"</span> : <span class="string">"#contactform-name"</span>,</span><br><span class="line">　　<span class="string">"error"</span> : <span class="string">".help-block.help-block-error"</span>,</span><br><span class="line">　　<span class="string">"validate"</span> : <span class="function"><span class="keyword">function</span>(<span class="params">attribute,value,messages,deferred,$form</span>)</span>&#123;</span><br><span class="line">　　yii.validation.required(value,messages,&#123;</span><br><span class="line">　　　　<span class="string">"messages"</span> : <span class="string">"Name 不能为空"</span>,</span><br><span class="line">　　&#125;);</span><br><span class="line">&#125;])</span><br></pre></td></tr></table></figure><h2 id="ActiveField-对象的使用"><a href="#ActiveField-对象的使用" class="headerlink" title="ActiveField 对象的使用"></a>ActiveField 对象的使用</h2><blockquote><p>参考类参考手册 <code>yii\widgets\ActiveField</code> 中的方法</p></blockquote><h3 id="自定义表单action链接和method"><a href="#自定义表单action链接和method" class="headerlink" title="自定义表单action链接和method"></a>自定义表单<code>action</code>链接和<code>method</code></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $form = ActiveForm::begin([<span class="string">'action'</span>=&gt;[<span class="string">'test/getpost'</span>], <span class="string">'method'</span>=&gt;<span class="string">'post'</span>,]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本输入框"><a href="#文本输入框" class="headerlink" title="文本输入框"></a>文本输入框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'password'</span>)-&gt;textInput(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>限制输入长度</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'username'</span>)-&gt;textInput([<span class="string">'maxlength'</span>=&gt;<span class="number">20</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>关闭输入自动完成功能</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'username'</span>)-&gt;textInput([<span class="string">'autocomplete'</span>=&gt;<span class="string">'off'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>输入框只读</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'username'</span>)-&gt;textInput([<span class="string">'readonly'</span>=&gt;<span class="keyword">true</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="密码输入框"><a href="#密码输入框" class="headerlink" title="密码输入框"></a>密码输入框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'password'</span>)-&gt;passwordInput(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'sex'</span>)-&gt;radioList([<span class="string">'1'</span>=&gt;<span class="string">'男'</span>, <span class="string">'0'</span>=&gt;<span class="string">'女'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'hobby'</span>)-&gt;checkboxList([<span class="string">'0'</span>=&gt;<span class="string">'篮球'</span>,<span class="string">'1'</span>=&gt;<span class="string">'足球'</span>,<span class="string">'2'</span>=&gt;<span class="string">'羽毛球'</span>,<span class="string">'3'</span>=&gt;<span class="string">'乒乓球'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="下拉框"><a href="#下拉框" class="headerlink" title="下拉框"></a>下拉框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'edu'</span>)-&gt;dropDownList([<span class="string">'1'</span>=&gt;<span class="string">'大学'</span>,<span class="string">'2'</span>=&gt;<span class="string">'高中'</span>,<span class="string">'3'</span>=&gt;<span class="string">'初中'</span>], [<span class="string">'prompt'</span>=&gt;<span class="string">'请选择'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="隐藏域"><a href="#隐藏域" class="headerlink" title="隐藏域"></a>隐藏域</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'userid'</span>)-&gt;hiddenInput([<span class="string">'value'</span>=&gt;<span class="number">3</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'info'</span>)-&gt;textarea([<span class="string">'rows'</span>=&gt;<span class="number">3</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'file'</span>)-&gt;fileInput(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="提示文字"><a href="#提示文字" class="headerlink" title="提示文字"></a>提示文字</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'username'</span>)-&gt;textInput()-&gt;hint(<span class="string">'Please enter your name'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>设置文字样式</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'username'</span>)-&gt;textInput()-&gt;hint(<span class="string">'Please enter your name'</span>, [<span class="string">'style'</span>=&gt;<span class="string">'color:red;'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="html5的邮箱输入框"><a href="#html5的邮箱输入框" class="headerlink" title="html5的邮箱输入框"></a>html5的邮箱输入框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'email'</span>)-&gt;input(<span class="string">'email'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="自定义输入框的显示标签名"><a href="#自定义输入框的显示标签名" class="headerlink" title="自定义输入框的显示标签名"></a>自定义输入框的显示标签名</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'name'</span>)-&gt;label(<span class="string">'姓名'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="额外标签的处理-即与模型对象没有关系的额外-HTML-标签"><a href="#额外标签的处理-即与模型对象没有关系的额外-HTML-标签" class="headerlink" title="额外标签的处理,即与模型对象没有关系的额外 HTML 标签"></a>额外标签的处理,即与模型对象没有关系的额外 HTML 标签</h2><blockquote><p>e.g.<code>submit</code>，<code>button</code>, <code>p</code> 等</p></blockquote><p>使用 <code>yii\helpers\Html</code> 帮助类中的方法来添加到表单中</p><h3 id="纯文本-："><a href="#纯文本-：" class="headerlink" title="纯文本 ："></a>纯文本 ：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= <span class="string">'&lt;p class="username"&gt;'</span>.$user-&gt;name.<span class="string">'&lt;/p&gt;'</span> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Html-帮助类"><a href="#Html-帮助类" class="headerlink" title="Html 帮助类"></a>Html 帮助类</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= Html::tag(<span class="string">'p'</span>,Html::encode($user-&gt;name),[<span class="string">'class'</span>=&gt;<span class="string">'username'</span>]) <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="提交按钮"><a href="#提交按钮" class="headerlink" title="提交按钮"></a>提交按钮</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= Html::submitButton(<span class="string">'提交'</span>, [<span class="string">'class'</span>=&gt;<span class="string">'btn btn-primary'</span>, <span class="string">'name'</span> =&gt;<span class="string">'submit-button'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="重置按钮"><a href="#重置按钮" class="headerlink" title="重置按钮"></a>重置按钮</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= Html::resetButton(<span class="string">'重置'</span>, [<span class="string">'class'</span>=&gt;<span class="string">'btn btn-primary'</span>,<span class="string">'name'</span> =&gt;<span class="string">'submit-button'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="块儿赋值"><a href="#块儿赋值" class="headerlink" title="块儿赋值"></a>块儿赋值</h2><ul><li><code>input</code> 中的 <code>name</code> ,实际是以对象名来命名的一个数组，数组的键对应模型的属性 （e.g. <code>name=&quot;ContactForm[name]&quot;</code>）</li><li><code>model</code> 执行 <code>load()</code> 方法，就是对每个属性执行这样一句赋值：<code>$model-&gt;name = isset($ContactForm[&#39;name&#39;]) ? $ContactForm[name] : null;</code></li><li>块赋值就是用这一句代码将用户所有的输入数据填充到模型中去</li></ul><h2 id="dropDownList-的高级用法"><a href="#dropDownList-的高级用法" class="headerlink" title="dropDownList 的高级用法"></a>dropDownList 的高级用法</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $form-&gt;field($model, <span class="string">'status'</span>)-&gt;dropDownList($allStatus,[<span class="string">'options'</span> =&gt; [$needSelected =&gt; [<span class="string">'selected'</span> =&gt; <span class="string">'selected'</span>]],[<span class="string">'prompt'</span>=&gt;<span class="string">'请选择状态'</span>]) <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>$allStatus</code> 是一个 <code>[1=&gt;&#39;已发布&#39;]</code> 形式的关联数组</li><li><code>$needSelected</code> 为需要默认选中的值，其值满足 <code>$allStatus</code> 中 <code>key</code> 值中的一个</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;表单的创建&quot;&gt;&lt;a href=&quot;#表单的创建&quot; class=&quot;headerlink&quot; title=&quot;表单的创建&quot;&gt;&lt;/a&gt;表单的创建&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在Yii中主要通过 &lt;code&gt;yii\widgets\ActiveForm&lt;/code&gt;类来创建表单&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ActiveForm::begin()&lt;/code&gt;不仅创建了一个表单实例，同时也标志着表单的开始&lt;/li&gt;
&lt;li&gt;放在 &lt;code&gt;ActiveForm::begin()&lt;/code&gt; 和 &lt;code&gt;ActiveForm::end()&lt;/code&gt; 之间的所有内容都被包裹在 &lt;code&gt;html&lt;/code&gt; 的 &lt;code&gt;form&lt;/code&gt; 标签中&lt;/li&gt;
&lt;li&gt;中间是通过调用 &lt;code&gt;ActiveForm::field()&lt;/code&gt; 方法来创建一个 &lt;code&gt;ActiveForm&lt;/code&gt; 实例，这个实例会创建表单元素与元素的标签，以及对应的 &lt;code&gt;js&lt;/code&gt; 验证&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ActiveField&lt;/code&gt; 有一个对应的模型和属性， &lt;code&gt;input&lt;/code&gt; 输入框的 &lt;code&gt;name&lt;/code&gt; 属性会自动的根据属性名来创建，同时，还会用属性的验证规则来验证用户输入的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;e.g.&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP框架" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Yii" scheme="https://xinyufeng.net/categories/PHP%E6%A1%86%E6%9E%B6/Yii/"/>
    
    
      <category term="Yii技巧" scheme="https://xinyufeng.net/tags/Yii%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>如何关闭MySQL日志，删除mysql-bin.0000*日志文件</title>
    <link href="https://xinyufeng.net/2021/06/02/%E5%A6%82%E4%BD%95%E5%85%B3%E9%97%ADMySQL%E6%97%A5%E5%BF%97%EF%BC%8C%E5%88%A0%E9%99%A4mysql-bin-0000-%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6/"/>
    <id>https://xinyufeng.net/2021/06/02/如何关闭MySQL日志，删除mysql-bin-0000-日志文件/</id>
    <published>2021-06-02T10:42:32.000Z</published>
    <updated>2021-06-02T10:47:29.377Z</updated>
    
    <content type="html"><![CDATA[<p>LNMP一键安装包安装的MySQL默认是开启了二进制日志文件的，如果数据操作比较频繁就会产生大量的日志，在<code>/usr/local/mysql/var/</code>下面产生<code>mysql-bin.0000*</code> 类似的文件，而且一般都在几十MB到几个GB，更甚会吃掉整个硬盘空间，从来导致mysql无法启动或报错。</p><p>如何关闭MySQL的日志功能：</p><a id="more"></a><ol><li>删除日志：</li></ol><p>执行：<code>/usr/local/mysql/bin/mysql -u root -p</code></p><p>输入密码登录后再执行：<code>reset master;</code></p><p>注意别漏了后面的分号; 回车后会显示<code>&quot;Query OK, 234 rows affected (12.3 sec)&quot;</code>，说明已经成功，再输入：<code>quit</code> 退出mysql命令模式。</p><ol start="2"><li>彻底禁用MySQL日志：</li></ol><p>修改<code>/etc/my.cnf</code> 文件，找到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog_format=mixed</span><br></pre></td></tr></table></figure></p><p>再这两行前面加上<code>#</code>，将其注释掉，再执行<code>/etc/init.d/mysql restart</code>即可。</p><p>如果实在想保留日志，可以在<code>/etc/my.cnf</code>里<code>[mysqld]</code>部分中加入<code>expire_logs_days = 10</code> 然后重启mysql，这样10天就会自动清理日志。</p><p>本文以LNMP一件安装包安装的环境为例除MySQL重启命令和配置文件路径可能略有不同，其他一样。</p><p>如果VPS或服务器上一点空间都没有启动不了的话可以<code>mysql-bin.0000*</code>删除，然后清空<code>mysql-bin.index</code>文件里的内容，再重启mysql，这样虽然也可以清理日志，但是有一定的分析，如采用此方法建议先备份日志及数据库文件。</p><p>本文链接地址：<a href="https://www.vpser.net/manage/delete-mysql-mysql-bin-0000-logs.html" target="_blank" rel="noopener">https://www.vpser.net/manage/delete-mysql-mysql-bin-0000-logs.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;LNMP一键安装包安装的MySQL默认是开启了二进制日志文件的，如果数据操作比较频繁就会产生大量的日志，在&lt;code&gt;/usr/local/mysql/var/&lt;/code&gt;下面产生&lt;code&gt;mysql-bin.0000*&lt;/code&gt; 类似的文件，而且一般都在几十MB到几个GB，更甚会吃掉整个硬盘空间，从来导致mysql无法启动或报错。&lt;/p&gt;
&lt;p&gt;如何关闭MySQL的日志功能：&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://xinyufeng.net/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL配置" scheme="https://xinyufeng.net/tags/MySQL%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
</feed>
